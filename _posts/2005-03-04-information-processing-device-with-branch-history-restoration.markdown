---

title: Information processing device with branch history restoration
abstract: The information processing device of the present invention stores the branch history information of a fetched instruction. When branch prediction fails, BHR information used for the branch prediction is restored using this stored branch history information. Thus, even when branch prediction fails, BHR information can be accurately restored. Accordingly, prediction accuracy can be improved.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07647488&OS=07647488&RS=07647488
owner: Fujitsu Limited
number: 07647488
owner_city: Kawasaki
owner_country: JP
publication_date: 20050304
---
This application is a continuation of an International Application No. PCT JP2003 000901 which was filed on Jan. 30 2003.

The present invention relates to an information processing device for performing a pipeline process and more particularly to a technology for pipeline control in branch prediction.

In an information processing device which is represented by a microprocessor whose high integration and high clock advance with the progress of a semiconductor technology recently a pipeline technology for dividing a process when executing one instruction into a plurality of stages and operating the process mechanism of each stage independently and in parallel has been used in order to improve the execution speed of an instruction. In many of the information processing devices a method provided with a plurality of such pipelines called super scalar is adopted and instructions are speculatively executed by a plurality of pipelines.

When performing a pipeline process several instructions are simultaneously executed like an assembly line operation. Therefore if an instruction is branched in another part of memory by a branch instruction subsequent instructions whose processes are already started must be all discarded and process efficiency degrades. In order to prevent this branch prediction is conducted in the information processing device. In branch prediction it is predicted whether a branch instruction branches. If it is likely to branch a branch destination instruction is inputted to a pipeline.

For such a branch prediction method a method for recording branch histories in advance and predicting whether an instruction branches based on this history is used.

In this method branch intensity is determined referring to a storage area on which is recorded branch prediction information based on a branch history called a branch history table BHT and branch prediction is conducted. In this case a method for using the combination of values hereinafter called BHR information in an address at the time of instruction fetch hereinafter called FPC and a global history register hereinafter called a branch history register BHR is popular as a tag for retrieving data from a BHT.

In a BHT is a table for recording a tag which is not shown in based on fetched addresses and BHR information and two bit branch prediction information based on whether branch is conducted in the branch information of an address corresponding to the tag. A BHR is a plural bit of register in five bit for recording what branch prediction is conducted in a plurality of branch instruction executed close at hand in five .

When conducting branch prediction in the information processing device a tag is generated from a fetched program counter value FPC and BHR information in the BHR at that time. The BHT is retrieved using this tag and branch prediction is conducted based on branch prediction information read from the BHT.

The BHT stores one of strongly not taken weakly not taken strongly taken and weakly taken as branch prediction information. Then if the branch prediction information read from the BHT is either strongly not taken or weakly not taken it is predicted to be not taken and if it is either strongly taken or weakly taken it is predicted to be taken . The branch prediction information in the BHT continues to be successively updated based on whether branch is actually conducted. In the following description if a branch instruction is branched or predicted to be branched it is called taken and if the branch instruction is not branched or predicted not to be branched it is called not taken .

When the result of the branch prediction is obtained in the BHR the contents are shifted to the left by one bit and the prediction result is set in the right most bit. For example branch taken is predicted 1 is set and if non branch not taken is predicted 0 is set. In the following description if 1 is set in the right most bit of BHR and shifted it is called 1 shift and if 0 is set and shifted it is called 0 shift .

If branch prediction fails when a branch prediction method for advancing a process while predicting whether a branch instruction is branched when fetching an instruction is applied to a pipeline a stage not related to the current process occurs in each slot of the pipeline that is a pipeline bubble occurs and performance greatly degrades.

Since in branch prediction performance penalty due to failed prediction is heavy in order to improve performance prediction accuracy must be improved. In order to improve prediction accuracy it is also important how to restore a state before branch prediction when failing in branch prediction.

For a branch prediction technology a variety of proposals have been made which includes a method disclosed by Japanese Patent Application No. H6 301534 Information Processing Device .

Japanese Patent Application No. H6 301534 discloses a configuration with two execution pipelines of one for executing instructions before a branch instruction and the other for executing instructions after a branch instruction ahead. When failing in branch prediction a state can be restored by switching pipelines.

As one using a branch history Japanese Patent Application No. 2001 243069 Branch Prediction Device and Method discloses a method for bypassing the state transition of branch prediction to the branch prediction state of the same branch instruction on a pipeline in order to cope with the fact that the state transition of branch prediction information diverts from an actual branch operation.

In the method using a branch history conventionally in the information processing device with a shallow pipeline structure one cycle covers until a subsequent fetch is conducted after the BHT is retrieved and branch prediction is conducted. Therefore the update control of FPC and BHR information was easy. However recently it has become popular to improve performance by the use of an operation clock with a high frequency and in order to improve performance a control configuration with a deep pipeline has been used. Therefore in such an information processing device branch prediction is conducted across several cycles when fetching an instruction.

In the case of a deep pipeline in the information processing device for conducting branch prediction by retrieving data from the BHT using an instruction fetch address FPC and a value in the BHR sometimes branch prediction is conducted a specific number of cycles later after starting an instruction fetch. In this case when branch prediction fails it is necessary to re fetch after restoring the branch instruction to a state immediately after the failed branch prediction. For that purpose information about a branch instruction must be stored in a branch instruction reservation station in advance and when the failed branch prediction is determined the branch instruction must be returned to the state where the fetch is conducted and re fetched using the information stored in the reservation station.

In this case BHR information must also be restored to the value used when fetching a branch instruction whose update control is not performed in each pipeline. However if a pipeline is deep and fetch covers several cycles as the BHR information the pipeline states at the time of fetch cannot be all restored and as the reproduction process of the BHR information the BHR information is restored using the BHR information in the case where the branch prediction has failed is used without nay modifications.

However in this case since the BHR information in the case where fetching a branch instruction cannot be accurately restored prediction accuracy degrades which is a problem.

The information processing device of the present invention presumes one requiring a plurality of cycles to control branch prediction and comprises a branch history information storage unit and a BHR reconstruction unit.

The branch history information storage unit stores the branch history information of fetched instructions.

When the branch prediction of the branch instruction fails the BHR reconstruction unit restores the BHR information used for branch prediction using the branch history information stored in the branch history information storage unit.

Thus even if branch prediction fails BHR information can be accurately restored. Accordingly prediction accuracy can be improved.

By making branch history information contain information based on BHR information for the plurality of cycles such as BHR information used to predict the branch of the fetched instruction and difference information between the BHR information and other BHR information accurate branch prediction control can also be realized by a simple configuration and simple control.

In the information processing device in the preferred embodiment comprises a BHR a BHT a branch history brhis primary instruction cache a branch prediction control unit an instruction decoding unit a branch instruction dedicated reservation station a BHR reconstruction unit an integer dedicated reservation station a floating point operation dedicated reservation station a LOAD STORE instruction dedicated reservation station an integer operator a floating point operator and primary data cache .

The BHR is a ten bit global history register. If a plurality of branch instructions executed close at hand in this preferred embodiment ten is taken the BHR stores branch histories recorded as 1 and if the branch history is not taken the BHR stores branch histories recorded as 0 . In the information processing device in this preferred embodiment this BHR stores a plurality of segments of BHR information.

The BHT is a table for recording a tag which is not shown in generated from a fetched address or the like and two bit branch prediction information based on whether branch is actually conducted at an address corresponding to the tag. In this preferred embodiment the BHT has a configuration of two bits 16 k address. The brhis is a table with information about branch instructions previously not executed and records information such as whether the instruction code of a referenced address is a branch instruction the target address what attribute the branch instruction has in the case of a branch instruction and the like. The brhis stores a tag generated from the address. When a tag generated from a fetched address is compared with a tag stored in the brhis tag match it is hit and information is read from the brhis the branch prediction control unit determines that the fetch instruction code is a branch instruction. The primary instruction cache is primary instruction cache memory and the instruction decoding unit reads an instruction code to decode from this primary instruction cache .

The branch prediction control unit takes charge of a branch prediction process. The branch prediction control unit checks whether an instruction referenced by an FPC based on the result of the tag match with the brhis by the FPC and also predicts whether the branch instruction is taken or not taken based on the FPC and branch prediction information read from the BHT according to BHR information stored in the BHR at that time. Based on the result of the branch prediction the BHR information in the BHR is also updated.

An instruction fetch control unit generates a fetch address based on the branch prediction result by the branch prediction control unit or the like. Using this fetch address the BHT brhis and primary instruction cache are referenced. The instruction decoding unit reads a fetched instruction code from the primary instruction cache decodes it and distributes the fetched instruction to one of the integer instruction dedicated reservation station floating point operation dedicated reservation station and LOAD STORE instruction dedicated reservation station based on the result. The branch instruction dedicated reservation station monitors a condition code register indicating a variety of states which become the branch conditions of a conditional branch instruction and determines whether the result of branch prediction conducted by the branch prediction control unit fails. If the branch prediction fails the branch instruction dedicated reservation station notifies the instruction fetch control unit and BHR reconstruction unit of the failure through a reproduction path and also transmits branch history information to the instruction fetch control unit and BHR reconstruction unit to restore the BHR information.

Upon receipt of the prediction failure notice from the branch instruction dedicated reservation station the BHR reconstruction unit restores the BHR information to the state in the case where the failed branch instruction is fetched based on the branch history information. The operation of this BHR reconstruction unit is described in detail later.

The integer instruction dedicated reservation station and floating point operation dedicated reservation station are reservation stations for an integer operation instruction and a floating point operation instruction respectively. The integer instruction dedicated reservation station and floating point operation dedicated reservation station store instructions distributed by the instruction decoding unit and transmit them to the integer operator and floating point operator respectively after changing their order or the like. The LOAD STORE instruction dedicated reservation station is a reservation station for LOAD STORE instructions to memory and accesses the primary data cache based on an instruction inputted by the instruction decoding unit .

The integer operator executes integer operation instructions and the floating point operator executes floating point operation instructions. The primary data cache is primary data cache memory and the LOAD STORE instruction dedicated reservation station accesses this primary data cache for a LOAD STORE instruction.

The instruction code read from the primary instruction cache is decoded by the instruction decoding unit based on an address indicated by the instruction fetch control unit at the time of fetch. The branch prediction control unit also refers to the BHT and brhis using BHR information stored in the BHR at that time and a FPC and conducts branch prediction. The BHR information used the branch prediction is transferred to the instruction decoding unit and branch instruction dedicated reservation station in that order together with its difference information and the like as the stage of a pipeline advances. Then if in the branch instruction dedicated reservation station it is determined that the branch prediction fails and re fetch is conducted the branch instruction dedicated reservation station transmits corresponding branch history information to the BHR reconstruction unit . Then the BHR reconstruction unit restores the BHR information to the state where the branch of this branch instruction is accurately predicted based on this branch history information.

In the information processing device in this preferred embodiment as shown in branch history information indicating BHR information in the case where the instruction of a pipeline is fetched for each pipeline is transferred from the branch prediction control unit to the instruction fetch control unit the instruction decoding unit and the branch instruction dedicated reservation station in that order. The branch instruction dedicated reservation station stores the branch history information of a plurality of instructions and if the branch instruction dedicated reservation station determines that the branch prediction of a branch instruction fails the branch history information of the branch instruction is transmitted to the BHR reconstruction unit together with a branch prediction failure notice. Then the BHR reconstruction unit restores BHR information for n cycles based on this branch history information and returns it to the BHR . When re fetching branch prediction is conducted based on this restored BHR information. In this case this value n is determined based on the structure of a pipeline the number of stages required for instruction fetch and the like.

As branch history information a variety of things can be considered. For example after fetching an instruction code all BHR information for n cycles can be possessed as branch history information. Alternatively both BHR information fetched as shown in and the difference information between this BHR information and BHR information for n subsequent cycles can be possessed as branch history information.

Since in the case of a configuration with the difference information as shown in hardware resources can be saved in the following description this configuration is used.

The information processing device in this preferred embodiment is assumed to be provided with a pipeline structure with the following three stages in the instruction fetch part.

At a stage U the tag match of the brhis is performed and branch prediction by the BHT is conducted based on the tag match information.

As described above in the pipeline of this preferred embodiment at stage A the BHT is referenced using BHT information and at stage U after three cycles the result of branch prediction is determined. Therefore the BHR is configured to store BHR information for three cycles BHR BHR and BHR and their difference information.

Although a variety of things can be considered as the update conditions of BHR information in this example the BHR information is updated on the following conditions.

Since the dependence relationship in BHR information between pipelines is complex the BHR stores BHR information for three cycles BHR BHR and BHR and updates and uses the BHR information used when fetching is toured like BHR BHR BHR BHR. BHR information to be used is pointed by a pointer and this pointer is incremented every fetch.

The BHR has the following three segments of difference information BHR RESTORE BHR RESTORE and BHR RESTORE for the three segments of BHR information and the three segments of difference information are also updated when the BHR information is updated.

Firstly the update operation of BHR information in the case where branch prediction succeeds is described.

In the case of the pipeline structure of this preferred embodiment since it takes two cycles until the result of branch prediction is determined after the BHT is referenced using BHR information the BHT is retrieved using BHR information in two cycles before the result of the branch prediction is determined. Then if the result of the branch prediction is taken a two cycle bubble occurs when starting fetching a subsequent branch destination address. If the result of the branch prediction is not taken only BHR information referenced when fetching is updated and at the time of branch and re fetch all segments of BHR information are simultaneously updated.

In it is assumed that firstly in cycle the instruction I is fetched and this branch instruction I is predicted to be not taken in cycle as a result of the reference to the BHT by the value 0001 of the BHR. During this period the branch instructions I and I are fetched in cycles and respectively and also the BHT is referenced using the value 0001 of the BHR and the value 0001 of the BHR respectively.

If the result of the branch prediction is not taken prediction is continued without any modifications after the prediction results of the instructions I and I are determined since there is no need for re fetch. However if the result of the branch prediction is taken since a branch destination instruction must be fetched re fetch is conducted instructions after that are nullified and a pipeline bubble occurs. In the branch prediction result of the instruction I is determined to be taken in cycle and subsequent instructions I and I become bubbles.

Then instructions I I and I are fetched in that order according to the branch destination of the branch instruction I. However in this case BHR information for the instructions I I and I are obtained by shifting and setting the prediction result taken of the instructions I to 1 based on the BHR information BHR 0001 for the instruction I.

Since in the information processing of this preferred embodiment a cycle using BHR information and a cycle determining a branch prediction result are different the BHR information can be accurately restored even if the result of the branch prediction is taken .

The BHR information used when fetching is transmitted from the instruction fetch control unit to the branch instruction dedicated reservation station through the instruction decoding unit together with other information needed when re fetching difference information or the like.

By determining the state of a condition code register referenced by a branch instruction it is determined whether the branch instruction is actually branched. The branch instruction dedicated reservation station determines whether a branch direction by branch prediction and an actual branch direction are matched based on the state of the condition code register. If they are not matched the branch instruction dedicated reservation station transmits a re fetch starting address branch history information and the like to the instruction fetch control unit together with a re fetch request. Of these segments of information the branch history information is used to restore BHR information at the time of fetch.

In it is assumed that although the instruction I is predicted to be not taken it is actually taken judging from the state of a condition code register.

The branch prediction of the instruction I fetched at the stage A of cycle is conducted before the stage U of cycle . In this example since it is predicted to be not taken the instructions I and I continues to be processed without being discarded.

When the branch conditions of the instruction I are determined and it is detected that branch prediction fails from the state of the condition code register the branch instruction dedicated reservation station notifies the instruction fetch control unit and BHR reconstruction unit of the branch prediction failure. The BHR reconstruction unit restores BHR information according to which the instruction I is predicted to be taken according to branch history information and generates BHR information to be used to fetch branch destination instructions I I and I.

The BHR information of the instruction I restores BHR information BHR 0001 used in the instruction I using BHR information BHR 0001 used in the instruction I and difference information and restores BHR information BHR 0010 used in the instruction I using this BHR information used in the instruction I and difference information. To this BHR information used in the instruction I 1 shift is applied as if the instruction I were predicted to be taken and BHR information to be used in the instructions I I and I is generated. In BHR 0010 is restored by applying difference information P REIFCH BHR RESTORE BHR RESTORE 01 to the BHR information BHR 0001 used in the instruction I and by applying difference information P REIFCH BHR RESTORE BHR RESTORE 00 to this BHR 0010 is restored. Then 1 shift is applied to this BHR 0010 and BHR information BHR 0101 BHR 0101 BHR 0101 is generated. The P REIFCH BHR RESTORE and P REIFCH BHR RESTORE are described later.

Next the restoration of BHR information in the case where although a branch instruction is predicted to be taken it is actually not taken is described.

If a branch instruction is actually not taken although it is predicted to be taken a re fetch starting position differs between when carry occurs and when no carry occurs.

In the information processing device of this preferred embodiment instruction codes are fetched in units of a specific number. If a branch instruction to predict is the last instruction of this fetch order if a target branch instruction is a delay branch instruction it is an instruction shifted forward by the delay carry occurs and the re fetch starting position is shifted. Therefore the restoration of BHR information must also be divided into when carry occurs and when no carry occurs.

In the instruction I is actually not taken although it is predicted to be taken . In this case no carry occurs and the instructions I through I are re fetched.

In the instruction I is actually not taken although it is predicted to be taken . In this case carry occurs and the instructions I through I following the instruction I are re fetched. In the case of a delay branch instruction if an instruction located forward for the delay is actually not taken although it is predicted to be taken carry occurs. In if the instruction I or I is actually not taken although it is predicted to be taken carry occurs.

When the branch conditions of the instruction I are determined and it is detected that branch prediction fails and the instruction I is actually not taken based on the state of the condition code register the branch instruction dedicated reservation station notifies the instruction fetch control unit and BHR reconstruction unit of the branch prediction failure and makes them re fetch from the instruction I.

If no carry occurs as indicated by meshing in the BHR information used in the instruction I is restored in the first place. Therefore when the branch instruction dedicated reservation station determines that branch prediction fails the BHR reconstruction unit restores the BHR information BHR 0010 used in the instruction I by applying difference information P REIFCH BHR RESTORE to the BHR information BHR 0001 used in the instruction I in the branch history information and restores the BHR information BHR 0010 used in the instruction I by applying difference information P REIFCH BHR RESTORE 00 to this. Then re fetch is conducted from the position of the instruction I. Since the instruction I is predicted to be taken BHR information 0101 is obtained by applying 1 shift to the BHR information BHR 0010 used in the instruction I and is used in the instructions I I and I as BHR information BHR BHR and BHR.

When the branch conditions of the instruction I are determined and it is detected that branch prediction fails and the instruction I is actually not taken based on the state of the condition code register the branch instruction dedicated reservation station notifies the instruction fetch control unit and BHR reconstruction unit of the branch prediction failure and makes them to re fetch from the instruction I.

If carry occurs BHR information used in the instructions I I and I which are indicated by meshing in is restored. When the branch instruction dedicated reservation station receives a prediction failure notice the BHR reconstruction unit restores the BHR information BHR 0010 used in the instruction I using the BHR information BHR 0001 used in the instruction I in the branch history information and difference information P REIFCH BHR RESTORE 10 and restores the BHR information BHR 0010 used in the instruction I by applying difference information P REIFCH BHR RESTORE 00 .

Then BHR information 0101 is obtained by applying 1 shift to the BHR 0010 used in the instruction I since the instruction I is predicted to be taken and is used in the instructions I I and I as BHR information. However since the instruction I is not taken the BHR information of the instruction I becomes BHR 0100 when difference information P REIFCH BHR RESTORE 01 fixed value is applied to the BHR information BHR 0010.

In the BHR information storage registers store three segments of BHR information BHR BHR and BHR respectively. The difference information storage registers are two bit registers for storing the above mentioned difference information BHR RESTORE BHR RESTORE and BHR RESTORE respectively and these values can be calculated by the operator using the value of BHR information in the BHR information storage register . The BHR information BHR BHR and BHR in the BHR information storage registers is used in order of BHR BHR BHR BHR and so on.

A counter indicates which is the latest value BHR BHR or BHR that is in which BHR information storage register the latest BHR information is stored or and changes like BHR BHR BHR BHR every time the BHR information is updated. A counter indicates using which BHR information fetch is conducted BHR BHR or BHR and changes like BHR BHR BHR BHR every fetch.

A BHR update circuit generates updated BHR information from the latest BHR information when BHR information is updated and transmits it to a corresponding BHR information storage register . A selector selects one that stores the latest BHR information indicated by the counter from the BHR information storage registers and outputs the stored contents to the BHR update circuit .

A selector selects one that stores BHR information to be used for fetch indicated by the counter from the BHR information storage registers . The BHT is referenced by using this BHR information.

The IBR BHR in the instruction fetch control unit is a buffer for storing ibr bhr information transmitted from the instruction fetch control unit to the branch instruction dedicated reservation station through the instruction decoding unit and stores BHR information used for reference to BHT and its difference information with other BHR information.

The ibr bhr information is composed of P REFIDCH BHR indicating BHR information used to reference to the BHT when fetching a branch instruction and difference information P REIFCH BHR RESTORE P REIFCH BHR RESTORE and P REIFCH BHR RESTORE between the BHR information and two other segments of BHR information. As to the relationship between P REFIDCH BHR and the difference information P REIFCH BHR RESTORE indicates the difference between P REFIDCH BHR and subsequent BHR information and P REIFCH BHR RESTORE indicates the difference information between the subsequent BHR information and subsequent BHR information after the subsequent BHR information. For example if P REFIDCH BHR is for BHR BHR RESTORE indicating the difference information between BHR and BHR becomes P REIFCH BHR RESTORE and BHR RESTORE indicating the difference between BHR and BHR becomes P REIFCH BHR RESTORE. P REIFCH BHR RESTORE is used only when carry occurs and is a fixed value 01 .

Buffers buffer the value of the counter . A counter value indicating a BHR information storage register that stores BHR information used for reference to the BHT at stage A is stored by the buffers up to stages T U and M and at stage M it instructs a selector to select BHR BHR in the BHR information storage register and its difference information.

An instruction is fetched. When the instruction reaches stage M the BHR information used for reference to the BHT is selected by the selector together with the difference information and is stored in the IBR BHR . ibr bhr information in the IBR BHR is transmitted to the branch instruction dedicated reservation station through the instruction decoding unit . When the branch instruction dedicated reservation station determines that branch prediction fails branch history information including the ibr bhr information is transmitted to the BHR reconstruction unit together with a branch prediction failure notice. The BHR reconstruction unit restores the branch history information.

The BHR reconstruction unit comprises a branch failure type determination circuit and a BHR restoration multiplexer .

The branch failure type determination circuit determines the type of branch failure based on branch instruction type information indicating the type of a branch instruction conditional branch non conditional branch instruction etc. and type of prediction failure prediction failure of branch direction failure of branch address etc. that are transmitted together with the branch history information and notifies the BHR restoration multiplexer of the type of branch failure. The BHR restoration multiplexer restores the BHR information using the BHR information and difference information in the branch history information according to the type notified by the branch failure type determination circuit .

Branch instruction type information b inputted to the branch failure type determination circuit includes p tiar match p pred taken p taken p always p has no taken and p iar carry.

P tiar match is information indicating whether a target address which is a branch destination is as predicted. P pred taken is information indicating whether a branch instruction is predicted to be taken . P taken is information indicating that the branch instruction is actually taken . P always is information indicating whether the branch instruction is non conditional branch instruction. P has not taken is information indicating whether a branch instruction has one not taken before it in the same slot. p iar carry is one bit information indicating whether carry occurs when re fetching.

The branch failure type determination circuit selects and determines one type of branch failure from the following five types based on the above mentioned information.

The above mentioned type determination is made by the following logical expressions. In the following expressions and mean AND OR and negative respectively. p taken miss represents p tiar match p pred taken p taken p pred taken p taken and p taken miss represents p pred taken p taken.

The BHR restoration multiplexer restores BHR information using ten bit P REFIDCH BHR indicating BHR information used for the branch prediction of the instruction two bit difference information P REIFCH BHR RESTORE P REIFCH BHR RESTORE and P REIFCH BHR RESTORE based on the type determination result from the branch failure type determination circuit .

If the branch failure type determination circuit notifies the BHR restoration multiplexer that the branch failure type is 1 the BHR restoration multiplexer shifts P REFIDCH BHR b using a shifter based on P REIFCH BHR RESTORE c and selects a value obtained by applying 1 shift to a value shifted using a shifter that is obtained by shifting it using a shifter based on P REIFCH BHR RESTORE d using a selector .

Then the BHR restoration multiplexer outputs restored BHR information P REFIDCH BHR A P REFIDCH BHR B and P REFIDCH BHR C through the buffers and respectively. If the branch failure type determination circuit notifies the BHR restoration multiplexer that the branch failure type is 2 the BHR restoration multiplexer selects a value obtained by applying O shift to the output of the shifter using a shifter using the selector and outputs restored BHR information P REFIDCH BHR A P REFIDCH BHR B and P REFIDCH BHR C through the buffers and respectively. If the branch failure type determination circuit notifies the BHR restoration multiplexer that the branch failure type is 3 the BHR restoration multiplexer selects the output of the shifter using the selector and outputs restored BHR information P REFIDCH BHR A P REFIDCH BHR B and P REFIDCH BHR C .

If the branch failure type determination circuit notifies the BHR restoration multiplexer that the branch failure type is 4 the BHR restoration multiplexer selects P REFIDCH BHR b using a selector and outputs it as restored BHR information BHR P REFIDCH BHR d . The BHR restoration multiplexer also selects the output of the shifter using a selector and outputs it as restored BHR information BHR P REFIDCH BHR e . The BHR restoration multiplexer also selects the output of the shifter using a selector and outputs it as restored BHR information BHR P REFIDCH BHR f . If the branch failure type determination circuit notifies the BHR restoration multiplexer that the branch failure type is 5 the BHR restoration multiplexer selects the output of the shifter using a selector and outputs it as restored BHR information P REFIDCH BHR d . The BHR restoration multiplexer also selects the output of the shifter using a selector and outputs it as restored BHR information P REFIDCH BHR e . The BHR restoration multiplexer also selects the output of the shifter using a selector and outputs it as restored BHR information P REFIDCH BHR f .

When re fetching the BHR reconstruction unit restores BHR BHR and BHR using branch history information. How to restore BHR information when re fetching due to a branch failure is described by dividing it into when a branch instruction is actually taken although it is predicted to be not taken and when a branch instruction is actually not taken although it is predicted to be taken .

 1 In case a branch instruction is actually taken although it is predicted to be not taken and in case a branch destination address is wrong although a branch instruction is predicted to be taken and is actually taken .

Difference information P REIFCH BHR RESTORE 1 0 and P REIFCH BHR RESTORE 1 0 are applied to the BHR information P REFIDCH BHR 9 0 used to refer to a BHT in that order. Furthermore BHR generated by applying 1 shift to their results are used as BHR BHR and BHR. 00 is also written into difference information BHR RESTORE BHR RESTORE and BHR RESTORE.

 1 2 In Case the Failed Branch Instruction is a Non Conditional One Corresponding to Type 2 Shown in 

P REIFCH BHR RESTORE 1 0 P REIFCH BHR RESTORE 1 0 are applied to P REFIDCH BHR 9 0 in that order. Hen if p has not taken is true in case a branch instruction has one not taken before it in the slot BHR generated without any process after applying 0 shift to their results are used as BHR BHR and BHR. If p has not taken is not true BHR generated without any process are used as BHR BHR and BHR. 00 is written into difference information BHR RESTORE BHR RESTORE and BHR RESTORE.

 2 1 In Case the Failed Branch Instruction is not the Last One in a Fetch Unit and No Carry Occurs Corresponding to Type 4 Shown in 

P REIFCH BHR 9 0 is written into a BHRX BHR BHR 1 2 used by the branch instruction a value obtained by applying P REIFCH BHR RESTORE 1 0 to P REIFCH BHR 9 0 is written into a BHR X 1 in case X 2 X 1 0 and a value obtained by applying P REIFCH BHR RESTORE 1 0 to the BHR X 1 is written into a BHR X 2 in case X 1 X 2 0 in case X 2 X 2 1 . 00 is also written into difference information BHR RESTORE BHR RESTORE and BHR RESTORE.

 2 2 In Case the Failed Branch Instruction is the Last One in a Fetch Unit and Carry Occurs Corresponding to Type 5 Shown in 

A value obtained by applying P REIFCH BHR RESTORE 1 0 to P REIFCH BHR 9 0 is written into a BHRX BHR BHR 1 2 used by the branch instruction a value obtained by P REIFCH BHR RESWTORE 1 0 to P REIFCH BHR 9 0 is written into a BHR X 1 in case X 2 X 1 0 and a value obtained by applying P REIFCH BHR RESTORE 1 0 to the BHR X 1 is written into BHR. 00 is also written into difference information BHR RESTORE BHR RESTORE and BHR RESTORE.

It is assumed that during this period an address following 1 is fetched in 2 and that this instruction is predicted to be taken . If a branch instruction is predicted to be taken three segments of BHR information are all rewritten based on BHR which is the BHR information used in 2 . The BHR which is the BHR information used in 2 and difference information BHR RESTORE and BHR RESTORE are transmitted from the instruction fetch control unit to the instruction decoding unit as ibr bhr information.

Before the branch instruction is predicted to be taken in 2 3 and 4 are fetched. However when it is predicted to be taken these are discarded and neither the update of BHR information nor registration of ibr bhr information is conducted.

Then a branch destination instruction 5 is fetched based on the result of the branch prediction of 2 . In this fetch of 5 BHR obtained by applying 1 shift to the BHR used in 2 is used.

In in 1 and 2 the same process as shown in is performed before the result of the branch prediction is detected. When it is detected that the taken prediction of 2 fails from the state of the condition code register re fetch is conducted from an actual branch destination 3 .

In this case BHR information restores BHR based on P REIFCH BHR in ibr bhr information transmitted to the instruction decoding unit in 2 restores BHR by applying P REIFCH BHR RESTORE BHR RESTORE to this and restores BHR by further applying P REIFCH BHR RESTORE BHR RESTORE to this. If carry occurs BHR information restores BHR by applying P REIFCH BHR RESTORE BHR RESTORE to P REIFCH BHR restores BHR by applying P REIFCH BHR RESTORE BHR RESTORE to this and restores BHR by further applying P REIFCH BHR RESTORE fixed value to this.

As described above in the information of this preferred embodiment even if branch prediction fails BHR information can be accurately restored. Accordingly highly accurate branch prediction can be realized. The restoration of BHR information can be realized without using a complex circuit configuration and control.

In the information processing device of this preferred embodiment as shown in BHR information conducts branch prediction within the information processing device using the branch history of this branch prediction. However the present invention can be applied to only such BHR information and it can also be applied to any BHR information in another form for example in which embedded prediction contents can be counted in a method for conducting branch prediction when compiling and embedding its result in an instruction code.

According to the present invention since even an information processing device with a deep pipeline structure accompanying a high clock which requires several cycles for branch prediction control can perform accurate branch prediction control prediction accuracy can be improved.

Accurate branch prediction control can be realized while maintaining easy control and a simple configuration.

