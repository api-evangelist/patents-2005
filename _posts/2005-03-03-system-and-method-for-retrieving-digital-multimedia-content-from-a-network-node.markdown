---

title: System and method for retrieving digital multimedia content from a network node
abstract: A scheme for retrieving digital multimedia content from a network node. An RTSP SET_PARAMETER message is provided to the network node by a client application executing on a digital multimedia device, wherein the message contains at least one of a playlist identifier, a media clip index and an indication of an activation time. Responsive to the message, content from a particular content source identified by the playlist identifier, the media clip index, or both, is streamed to the digital multimedia device at a time determined responsive to the activation time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07934010&OS=07934010&RS=07934010
owner: Alcatel-Lucent USA Inc.
number: 07934010
owner_city: Murray Hill
owner_country: US
publication_date: 20050303
---
The present invention generally relates to media streaming over a network. More particularly and not by way of any limitation the present invention is directed to a system and method for retrieving digital multimedia content from a network node in a client server architecture.

With today s widespread use of the Internet as a major communication medium computer networks are increasingly being used to transmit multimedia data e.g. audio full motion video pictures et cetera . In the network based context one simple model of producing the information involves a client device requesting the downloading of the multimedia data from a server. Once downloaded the client may then consume or present the information. This model is relatively easy to implement however it is non optimal in that the client is required to wait for the downloading to complete before the presentation can begin. This delay can be considerable where large blocks of multimedia data are involved.

A more sophisticated model of producing information involves a content server at one network site streaming the multimedia information over the network to a client at another site. Streaming is a process in which packets sent over an Internet Protocol IP based network are used to present material continuously to a recipient client as it arrives in substantially real time as perceived by the user. As such the client does not have to download and store a large file before displaying the material. That is the client begins to present the information as it arrives i.e. just in time rendering rather than waiting for the entire data set to arrive before beginning presentation. Accordingly at the client device received data is buffered into a cache memory and continuously processed as soon as or soon after being received by the client for real time presentation of multimedia content.

Most streaming sessions include either live or video on demand VOD sources and are typically associated with a single content source i.e. a single VOD file or a single live source e.g. a video camera . However by adding the ability to combine sources into a single streaming session much richer applications can be built based on multimedia streaming.

A playlist in its simplest form is just a list of media which could be used to simply manage playback of local content i.e. audio files or to control the streaming media sessions. When used in the context of multimedia streaming playlists provide an extensible dynamic method for delivering customizable audio and video content to users via streaming. A playlist represents a list of the media items that a server can stream to a client which can include a mixture of program content and advertisements ads for example. Also a playlist can be used to play several short clips or to provide a user with long blocks of programming.

In a client server streaming architecture two types of playlists may be provided client side playlists and server side playlists. The main difference between the two types of playlists is that when the client side playlists are used a client player application has control of the streaming experience whereas when server side playlists are used a streaming server has control of the streaming experience. Server side playlists provide the ability for the streaming server to combine streams from multiple sources in sequence and stream to a client in a single session. The client need not and may not even be aware that there are multiple media sources. This is useful for providing ad insertion capability or for applications where uninterrupted streaming from multiple sources is desired i.e. where the client doesn t have to explicitly request streaming from each new source.

One of the issues when utilizing server side playlists is to support dynamic playlist navigation which is advantageous in providing the end user with a compelling and useful user experience. Additionally the playlist navigation functionality must be accomplished with minimal impact on the client device application due to significant client device resource constraints. Existing server side playlist schemes however are deficient in that they do not support client side navigational control of playlist seeking.

In one aspect the present invention is directed to a method for retrieving digital multimedia content from a network node comprising generating a Real Time Streaming Protocol RTSP SET PARAMETER message to the network node by a client application executing on a digital multimedia device the message containing at least one of a playlist identifier a media clip index and a clip offset as well as an indication of an activation time and transferring digital multimedia content to the digital multimedia device by the network node from a particular content source identified by at least one of the playlist identifier and the media clip index the transferring commencing at a time determined responsive to the indication of the activation time.

In another aspect the present invention is directed to a system for retrieving digital multimedia content from a network node comprising means associated with a client application executing on a digital multimedia device for generating an RTSP SET PARAMETER message to the network node the message containing at least one of a playlist identifier a media clip index and a clip offset as well as an indication of an activation time and means for transferring digital multimedia content to the digital multimedia device by the network node from a particular content source identified by at least one of the playlist identifier and the media clip index the transferring commencing at a time determined responsive to the indication of the activation time.

In yet another aspect the present invention is directed to a digital multimedia device operable to retrieve digital multimedia content from a network node comprising logic for generating an RTSP SET PARAMETER message to the network node by a client application executing on the digital multimedia device the message containing at least one of a playlist identifier a media clip index and a clip offset as well as an indication of an activation time and a player engine operable to play back streaming content from a particular content source identified by at least one of the playlist identifier and the media clip index the streaming content commencing at a time determined responsive to the indication of the activation time.

In a further aspect the present invention is directed to a network node operable to stream digital multimedia content to a digital multimedia device comprising a depository of digital multimedia content organized into an arbitrary number of playlists each playlist including at least one media clip logic for processing an RTSP SET PARAMETER message transmitted to the network node by a client application executing on the digital multimedia device the message containing at least one of a playlist identifier a media clip index and a clip offset as well as an indication of an activation time and logic for streaming content to the digital multimedia device from a particular content source identified by at least one of the playlist identifier and the media clip index the streaming content commencing at a time determined responsive to the indication of the activation time.

Embodiments of the invention will now be described with reference to various examples of how the invention can best be made and used. Like reference numerals are used throughout the description and several views of the drawings to indicate like or corresponding parts wherein the various elements are not necessarily drawn to scale. Referring now to the drawings and more particularly to depicted therein is an exemplary network environment in which an embodiment of the present invention may be practiced. Reference numerals A and B are illustrative of a network infrastructure that can include among others any wireline wireless satellite or cable network arrangement or a combination thereof that can support transfer of digital multimedia content from a server node to various client devices capable of accepting such content over a client server network architecture. In one implementation network A may comprise a public packet switched network such as the Internet that is accessible via suitable access means including both narrowband e.g. dial up and broadband e.g. cable digital subscriber line or DSL etc. access mechanisms. Alternatively network A may be implemented as a private enterprise level intranet. Wireless network B may be implemented as a wireless packet data service network such as the General Packet Radio Service GPRS network that provides a packet radio access for mobile devices using the cellular infrastructure of a Global System for Mobile Communications GSM based carrier network. In still further implementations the wireless network B may comprise any known or heretofore unknown 3Generation Partnership Project i.e. 3GPP 3GPP2 etc. network operable to serve Internet Protocol IP capable handheld devices e.g. a mobile client device using appropriate wireless infrastructure that includes among others short range wireless fidelity WiFi access points APs or hot spots. As will be seen hereinbelow the embodiments of the present patent application for retrieving server based digital multimedia content by a client device will be described regardless of any particular wireless or wireline network implementation of the networks A B.

Although the server node is illustrated as a single node coupled to the network A its functionality may be distributed among a plurality of nodes depending on the underlying streaming media architecture. Exemplary client devices can be thick or thin clients with varying levels of processing power operable execute appropriate streaming client applications that can include Java applications plug ins etc. Client devices may comprise portable computers laptops handheld computers desktop computers generically represented as computers network aware audio video A V devices such as digital music players digital video players etc. generally represented as A V components or specialized multimedia devices such as iPod devices and the like. Further as alluded to before client devices can also include mobile client devices e.g. device that are capable of accepting and playing digital multimedia content.

The playlist records contain information about each playlist available in the database wherein the playlists are typically comprised of collections of media clips that may or may not be in any particular order. Users may choose to combine media by genre mood artists directors producers audience or any other meaningful arrangement. While the playlists on the server will usually only include media clips contained in its own music database it is also possible that the playlist records may include multimedia clips or playlists stored on other servers depending upon the implementation of the server side media management system .

By way of example a server streaming module SM associated content database and a local content manager LCM are representative of a media server for streaming digital multimedia to the client player engine via a real time media delivery path that is effectuated via a transport protocol such as Real time Transport Protocol RTP . Streaming events are notified to the server AM by the streaming module via path and streaming session status updates are provided by the server AM module to the web server via path . The web server is operable to interact with the LCM via a path with regard to playlist and media content management and playlist identifiers e.g. Uniform Resource Locators or URLs .

As alluded to hereinabove control over the delivery of data with real time properties i.e. digital multimedia in the client server arrangement may be effectuated by an application level text based protocol such as RTSP which is operable to control multiple data delivery sessions provide a means for choosing delivery channels such as User Datagram Protocol UDP channels multicast UDP channels etc. as well as provide a means for choosing data delivery mechanisms based upon RTP. Since the teachings of the present patent disclosure are particularly exemplified within the context of RTSP messaging a brief description thereof is set forth immediately below.

RTSP establishes and controls one or more time synchronized streams of continuous media such as audio and video wherein the set of streams to be controlled is defined by a presentation description. There is no notion of an RTSP connection instead a server maintains a session typically labeled by an identifier. In general an RTSP session is not tied to a transport level connection such as the Transmission Control Protocol TCP . During an RTSP session an RTSP client application may open and close a number of TCP transport connections to the server to issue RTSP requests. Alternatively it may use a connectionless transport protocol such as UDP.

A presentation is a set of one or more streams presented to the client as a complete media feed using presentation description information. In most cases within the RTSP context this implies aggregate control of those streams but not necessarily so. A presentation description contains information about one or more media streams within a presentation such as the set of encodings network addresses and other information about the content. Other Internet Engineering Task Force IETF protocols such as SDP use the term session to describe a live presentation. The presentation description may take several different formats including but not limited to the SDP based session description format alluded to hereinabove.

The streams controlled by RTSP may use RTP for data delivery but the operation of RTSP does not depend on the transport mechanism used to carry continuous media. RTSP s syntax and operation are similar to that of the more familiar Hypertext Transfer Protocol HTTP although several important distinctions between the two exist. For example both an RTSP server and client can issue requests whereas HTTP is an asymmetric protocol in which the client issues requests and the server responds. Also with respect to RTSP data is typically carried out of band by a different protocol e.g. RTP . The following operations are supported by RTSP i retrieval of media from a media server ii invitation of a media server to a conference and iii addition of media to an existing presentation.

In terms of overall operation each presentation and media stream may be identified by an RTSP URL. For example the RTSP UUL 

Each of these methods whether applied on a single stream or a group of streams i.e. a presentation is typically provided with a number of header fields that are used for further defining the RTSP transactions in a client server arrangement. Additional details regarding these and related RTSP requirements may be found in IETF Request for Comments RFC 2326 Real Time Streaming Protocol RTSP by Schulzrinne et al. dated April 1998 which is incorporated by reference herein.

It should be appreciated that RTSP is versatile enough to provide for extensions either by way of extending existing methods with new parameters or by defining new methods that are designed to impart enhanced functionality. As will be seen below the present patent disclosure provides anew scheme that enables increased playlist seeking capabilities with respect to server side playlists within a client server arrangement such as e.g. the arrangement described above by incorporating additional parameters in appropriate RTSP headers.

Referring now to shown therein is a flowchart of one aspect of operation with respect to the client server arrangement shown in . The web server is operable to generate initial playlists possibly when users register for the service block . In one implementation the initial playlist may simply be a default playlist that gets customized later. The client application makes a request to the web server to access a particular playlist block whereupon the server makes a request to a CreateMetafile service on the server application module for an SDP file with respect to a specific playlist block . The CreateMetafile service thereafter propagates the request to LCM for the SDP file block . Those skilled in the art should appreciate that the SDP file contains data that would have been obtained via an RTSP DESCRIBE request as well as additional information so the client application does not have to issue a separate RTSP DESCRIBE request. Responsive to the SDP file LCM opens the playlist file and appropriate media file s generates the SDP information and returns it to the CreateMetafile service block which passes the SDP file to the requesting web server block . Subsequently the web server returns the playlist generated previously and the corresponding SDP file to the client application executing on the digital multimedia device block . The client application passes the SDP file to the player engine which establishes a streaming session with the streaming module for accepting the delivery of selected media block . Where audio files are involved for example they may be encoded in a number of ways such as Advanced Audio Coding AAC Windows Media Audio WMA MP3 etc.

In a further variation LCM might not be involved in generating an SDP file. Instead the CreateMetafile service makes a request directly to a streaming server via RTSP DESCRIBE to receive a base SDP description. Thereafter the CreateMetafile service modifies the received SDP description to make it appropriate for client consumption. Additionally the playlist file is not necessarily delivered to the client application along with the SDP file in all cases. In one embodiment where the client application understands the syntax of the playlist file a playlist may be provided in addition to the SDP file thereby allowing a much richer user experience and interaction with the client. In the case where the client may be totally unaware of playlists altogether it would receive only an SDP file.

As pointed out previously the digital multimedia content associated with a server side network node may be organized into an arbitrary number of playlists each including a number of media items or clips wherein a media clip index determines the arrangement of the individual media items within a playlist. In a typical service scenario users are able to subscribe to access a channel for playback. Initially the user can select a channel according to categories such as mood or genre. Through periodic user feedback the user s preferences may be updated and the channel becomes customized for each particular user.

During normal playback the server side network node i.e. the streaming module integrated or associated with a web server is operable to seamlessly open each successive content source file in the playlist and continue streaming without interruption which is seen by the player engine as a continuous RTP session. Referring to shown therein is a flowchart of an exemplary SET PARAMETER system and method for switching to a server side playlist content source according to an embodiment of the present invention. A client application requests a new playlist after a specified amount of time upon providing periodic user feedback block . The network node returns a new playlist metadata file and associated URL block similar to the some of the operational aspects described above in reference to . Thereafter the client application is operable to call a suitable application programming interface API e.g. a SWITCH playlist API on the player engine and pass the playlist URL to it in order to request streaming from the new playlist block . In response the player engine transmits an RTSP SET PARAMETER message the network node s streaming module wherein the message includes the playlist URL an optional media clip index and a clip offset as well as an indication as to when switching should be activated i.e. activation time or effective time block . The streaming module includes logic for returning a Normal Play Time NPT value determined based on the parameters received in the SET PARAMETER message wherein NPT value provides the time at which the switch to streaming from the new media source will occur block . Upon receipt of the NPT value the player engine passes it to the client player application so that the application can update the display appropriately block .

While streaming from the current media clip is continuing a SWITCH message is generated by the client player application which includes the new content source parameters as described above. Responsive thereto an RTSP SET PARAMETER message is propagated by the player engine to the streaming module of the network node to indicate dynamic playlist updating or switching. Depending on specific implementational details streaming from the current clip can continue until the end or may be terminated substantially immediately upon receiving another RTSP SET PARAMETER message with a parameter from the player engine . As illustrated in the current clip is indicated to continue to play until the clip boundary is reached block . In the meantime a response message including an NPT value is generated by the network node in response to the first SET PARAMETER request which is passed to the player application as a RETURN message that includes the requested playlist s URL clip index as well as the NPT value.

Upon reaching the boundary of the current clip a CLIP END event is notified to the server application module . Subsequently an event notifying the termination of the previous playlist is propagated. Events and notify that streaming from a new content source i.e. the requested playlist and the particular media clip therein is commenced. An RTSP SET PARAMETER request from the stream module to the player engine and a subsequent CALLBACK message from the player engine to the player application are provided for effectuating clip transition notification. Upon reaching the end of the new media clip as indicated by CLIP END the streaming module continues to stream from the next clip in the new playlist. This process continues until the playlist is ended as indicated by PLAYLIST END . As the streaming session is terminated a STREAM TERMINATED event is notified accordingly.

Those skilled in the art will recognize that the SET PARAMETER requests to effectuate dynamic switching may contain an indication to skip to a new clip in the current playlist switch to a new playlist or skip to a specific clip in a new playlist or to an offset within a clip. As seen in the foregoing discussion the behavior of the server node s streaming module is governed by the presence of various appropriate header parameters in the RTSP request. The playlist URL header indicates the URL from which to stream and according to one implementation it may be required in all requests to ensure synchronicity between the server and the corresponding client regardless of whether the request is to skip to a new clip within the same playlist. If the clip index header is missing a default treatment may be provided such that the streaming module switches to the first clip of the requested playlist. As to the activation time indication possible values may be NOW switch immediately END OF CLIP at the end of the current clip or END OF PLAYLIST at the end of the current playlist . In yet another implementation the activation time may assume any value based on a clock.

In a further implementation if the streaming module receives successive playlist update requests that do not get fulfilled immediately the last request received is the one that gets executed. That is any prior requests that have not been fulfilled will be overridden. In an exemplary scenario consider that the streaming module is streaming clip C from playlist P and it receives a playlist update request for P to take effect when C is done. But before C has completed the streaming module receives another request to skip back to clip C in playlist P immediately. Since the first request has not yet been satisfied the second request overrides the previous playlist update request which would take effect only after streaming from C is done . Thus the streaming module immediately switches to playlist P and starts streaming from clip C.

In a still further example consider that the streaming module is streaming from clip C from playlist P and it receives a playlist update request for P. But before C is done the streaming module receives another request to update to playlist P. Both of these requests are to take effect at the end of the current clip i.e. C in playlist P. Since the former request to switch to playlist P has not yet been satisfies the streaming module will start streaming from the first clip C in playlist P when clip C in playlist P is completed.

Based on the foregoing Detailed Description it should be appreciated that the present patent disclosure advantageously provides the ability for a streaming client application to request a streaming server node to dynamically navigate within or across a playlist boundary either in the form of skipping to a media source within the same playlist or from another playlist file or to an offset within a clip. Further such navigation is possible in an exemplary client server network arrangement regardless of the underlying streaming architecture e.g. RealMedia Windows Media QuickTime et cetera . Moreover it should be recognized that the teachings of the present disclosure may be practiced in conjunction with other client server protocols such as Session Initiation Protocol SIP H.323 etc.

Although the invention has been described with reference to certain exemplary embodiments it is to be understood that the forms of the invention shown and described are to be treated as exemplary embodiments only. Accordingly various changes substitutions and modifications can be realized without departing from the spirit and scope of the invention as defined by the appended claims.

