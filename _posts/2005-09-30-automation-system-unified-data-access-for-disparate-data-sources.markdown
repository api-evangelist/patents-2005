---

title: Automation system unified data access for disparate data sources
abstract: Historical and real-time data access is leveraged to provide unified data access for interacting with manufacturing process entities such as, for example, process overview displays, charting systems, reporting systems, logging systems, and/or recipe systems and the like. The unified data, for example, allows for playback of historical process overviews for a user selected period of time. In one instance, a “VCR like” user interface can be employed to allow ‘rewinding’ and ‘replaying’ of a historical process overview. This facilitates in proper monitoring and/or troubleshooting of manufacturing processes. The unified availability of past and current data also enables reporting systems to provide “living” reports that automatically update with real-time data. This can allow for efficient comparison of current data with historical data for a given manufacturing process.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07650198&OS=07650198&RS=07650198
owner: Rockwell Automation Technologies, Inc.
number: 07650198
owner_city: Mayfield Heights
owner_country: US
publication_date: 20050930
---
The subject matter herein relates generally to industrial automation and more particularly to systems and methods for providing unified data access for disparate data servers associated with manufacturing process data.

During the early industrial revolution machines were integrated into the work environment to speed up the manufacturing of goods. The utilization of machines allowed production numbers to increase well beyond what human labor alone would allow. This caused an exponential growth period for most companies as the drastically lower price of goods initiated by the lower cost of production increased sales dramatically. Soon most manufacturers were clamoring to have their factories modernized as well. For some of the manufacturers simple steam driven power sources utilizing leather belts enabled them to increase production and minimize human labor. However a great deal of the manufacturing still required great dexterity and thus human labor remained invaluable for those types of processes.

Eventually however more complex manufacturing machines were created that required complex control systems to operate. These were burdensome to maintain and control but they gave their owners the ability to replace human labor with more efficient machines. The complexity of the controls eventually drove the manufacturers to employ computers to facilitate in controlling and monitoring these complex systems. And in order to control the complex control systems human interfaces were developed to allow the human labor force to interact with the machines.

Human machine interfaces HMIs or simply user interfaces are important to the successful operation and maintenance of industrial automation devices and equipment. User interfaces provide the essential communication link between operators and automation devices. This link allows operators to among other things setup devices monitor device status during operation as well as analyze device health. Without such user interfaces high level industrial automation would be difficult if not impossible to achieve.

These types of interfaces allow operators i.e. users to easily interact with manufacturing processes on a real time data basis. To review historical data the user must select a different display that typically generates a chart type display of the historical data. Often this includes an x y Cartesian charting system that the user must interpret to determine what a like parameter value is for a current display. If the display can only display one format at a time the user must constantly switch back and forth between the displays often losing track of the desired data point. This type of interfacing creates substantial hardships when attempting to troubleshoot a manufacturing process when problems occur.

The following presents a simplified summary of the subject matter in order to provide a basic understanding of some aspects of subject matter embodiments. This summary is not an extensive overview of the subject matter. It is not intended to identify key critical elements of the embodiments or to delineate the scope of the subject matter. Its sole purpose is to present some concepts of the subject matter in a simplified form as a prelude to the more detailed description that is presented later.

The subject matter relates generally to industrial automation and more particularly to systems and methods for providing unified data access for disparate data sources associated with a manufacturing process. Historical and real time data access is leveraged to provide unified data access for interacting with manufacturing process entities such as for example process overview displays charting systems reporting systems logging systems and or recipe systems and the like. The unified data for example allows for playback of historical process overviews for a user selected period of time. In one instance a VCR like user interface can be employed to allow rewinding and replaying of a historical process overview. This facilitates in proper monitoring and or troubleshooting of manufacturing processes. The unified availability of past and current data also enables reporting systems to provide living reports that automatically update with real time data. This can allow for efficient comparison of current data with historical data for a given process. By providing unified data reports charts overviews and the like for example can be employed to significantly enhance their diagnostic capabilities by providing both historic and real time data in substantially similar formats. This allows users to quickly ascertain differences between historic and current data without requiring them to decipher raw data and or to interpret differing data formats substantially increasing diagnostic accuracy and efficiency.

To the accomplishment of the foregoing and related ends certain illustrative aspects of embodiments are described herein in connection with the following description and the annexed drawings. These aspects are indicative however of but a few of the various ways in which the principles of the subject matter may be employed and the subject matter is intended to include all such aspects and their equivalents. Other advantages and novel features of the subject matter may become apparent from the following detailed description when considered in conjunction with the drawings.

The subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the subject matter. It may be evident however that subject matter embodiments may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate describing the embodiments.

As used in this application the term component is intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a computer component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof. The term article of manufacture or alternatively computer program product as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the subject matter.

Systems and methods are provided that allow for unifying the access to disparate historical and or real time data servers for manufacturing process data. Systems and subsystems associated with manufacturing processes can obtain both historical and real time data from a unified data access UDA system that allows seamless access to either type of data from the calling application and or system subsystem. The UDA system abstracts the differences between the disparate data sources via a single component that provides the seamless access to manufacturing process data real time and or historical . This allows manufacturing process related systems subsystems to now employ both historical and real time data in their applications without complicated reconfigurations of displays and the like. For example a manufacturing process overview display can now be utilized to show not only real time data but historical data as well utilizing substantially the same display format allowing for easier interpretation by a user when maintaining and or troubleshooting a manufacturing process.

In a block diagram of a unified data access system in accordance with an aspect of an embodiment is shown. The unified data access system is comprised of a unified data access component that receives an input and provides an output . The input typically consists of data that is retrieved from disparate data sources such as for example historical data sources and or real time data sources in response to a data request. The historical data sources can include but are not limited to data servers databases and or data files and the like. The real time data sources can include but are not limited to manufacturing processes and or buffered process data e.g. current data in random access memory RAM and the like . The disparate data sources can be remote and or local to the unified data access component . The unified data access component retrieves the disparate data by employing different data access protocols for each data type. The unified data retrieved from the disparate data sources is then provided as an output . This is accomplished by providing a unified data access interface that can be easily interfaced with existing manufacturing process applications systems and or subsystems and the like. This allows manufacturing process related entities to employ the unified data to facilitate information dissemination in a more user friendly manner e.g. utilizing similar display formats for historical and real time data etc. 

Turning to another block diagram of a unified data access system in accordance with an aspect of an embodiment is depicted. The unified data access system is comprised of a unified data access component that retrieves historical process data and or real time process data and provides unified process data . The unified data access component is comprised of a data retrieval component and a unified data component . The data retrieval component retrieves the historical process data and or the real time process data from disparate data sources based on a data request. The unified data component obtains the historical process data and or the real time process data from the data retrieval component and unifies the data to provide the unified process data .

The unified process data can be employed and or used in conjunction with manufacturing process related entities such as for example data logging systems reporting systems charting systems process overview displays statistical analysis systems and or recipe systems and the like. This substantially increases the utility of these systems and provides features that are not possible without utilizing the systems and methods herein. For example comparative data can now be easily disseminated to users because both current real time and historical data are readily available from a single source without requiring substantial reconfiguration of the dissemination method e.g. a process overview display format can be modified to show current and historical data for a given time e.g. comparing data obtained 24 hours apart comparing data obtained the same day of the week from a prior week etc. a report can show historical and live real time data on the same report for easy comparison etc. .

Looking at yet another block diagram of a unified data access system in accordance with an aspect of an embodiment is illustrated. The unified data access system is comprised of a unified data access component that retrieves historical process data and or real time process data and provides unified process data . The unified data access component is comprised of a data retrieval component and a unified data component . The data retrieval component retrieves the historical process data and or the real time process data from disparate data sources based on data parameters that formulate a data request from the unified data component . The unified data component then obtains the historical process data and or the real time process data from the data retrieval component and unifies the data to provide the unified process data in response to the data parameters . In a typical instance of the unified data access system the data parameters and the unified process data are received and transmitted via a unified data access interface e.g. UDA application programming interface API .

The data parameters can include but are not limited to specific data type requests data requests for a specific time period data related to a specific manufacturing process function and or data related to a specific time of the day week month year etc and the like. This allows data requests such as for example display historical data process overview from around 12pm yesterday and the like. The historical process overview can then be replayed for the operator i.e. user of the manufacturing process overview display. The unified data access system also illustrates optional data request sources for the data parameters . Thus the data request can come from such optional sources as for example a user manufacturing related systems subsystems and or manufacturing process related entity and the like. In this UDA subsystem the optional manufacturing process related entity is requesting data as well as receiving the unified process data . Thus in some instances the recipient of the unified process data can base a data request in whole or in part on the received unified process data . In other instances the recipient of the unified process data can request data without basing it in whole or in part on the received unified process data .

In the UDA subsystem the optional manufacturing related systems subsystems represent manufacturing process related entities that are not receiving the unified process data . In this example the manufacturing related systems subsystems are comprised of a manufacturing process system a manufacturing report system a manufacturing chart system and other system . Other system represents additional systems that are not expressly called out but can still facilitate in requesting data from the UDA system . For example manufacturing process system can be an auxiliary system to the manufacturing process related entity that can be employed to facilitate in retrieving data parameters even though the manufacturing process system is not the recipient of the requested data. Likewise for example the manufacturing report system and or the manufacturing chart system can be employed to generate the data parameters to facilitate in reviewing troubleshooting data on a process overview display that employs the unified process data . The data parameters can be obtained from any combination of user manufacturing related systems subsystem and manufacturing process related entity . This substantially facilitates current techniques employed in manufacturing processes.

Currently manufacturing control and monitoring systems can separately access real time i.e. live and historical data. For example HMI displays can only show the current state of process variables to an operator. If displaying historical trend objects is desired they can only be displayed by utilizing separate means that independently retrieve historical data from a persistent store such as a database or log file. For example trend object users can pan backwards in time in a line graph plotting some process variable against time to instances of the process variable that were captured and stored at some point in history e.g. last week . They cannot however view this data on a current overview process display. Thus HMI displays themselves typically in the form of process overviews or machine detail displays can only show real time or last known values to an operator. Apart from historical trend objects there is no way for a user to view the state of all the other objects in an HMI display e.g. tank levels numeric display objects etc. as they may have existed at some point in history i.e. when populated with historical data .

If operators could record and playback HMI displays with historical data they could among other things determine what state their process was in prior to some problem occurring or look at process variables when a process was running properly and compare them to a malfunctioning system . All of this would be possible without having to browse through tables of logged data. For example it can be done simply by scrolling back in time within an operator display.

Referring to an illustration of an example application of a unified data access means in accordance with an aspect of an embodiment is shown. This instance of the systems and methods disclosed herein provides a system and method for unifying the access to disparate historical and or real time data servers e.g. logged process data and control devices respectively in an HMI system by introducing a unified data access UDA API that abstracts the differences between the OLE for Process Control OPC Data Access OPC DA and the OPC Historical Data Access OPC HDA Application Programming Interfaces API s into a single API that allows seamless access to either type real time or historical of data from the calling application e.g. HMI .

The calling application HMI report engine recipe system etc. binds to the UDA API by supplying a bind context which data it would like to obtain a maximum update rate and a starting time if none is specified the system can select a default such as for example real time data . With this information the UDA API connects to either or both of the OPC DA API and OPC HDA API interfaces using each API s specifics and returns a collection of data returned by these servers to the calling application . In the case of real time data the UDA API can continue to update the calling application whenever new updates arrive from the underlying OPC DA system. If the user wishes to view an HMI display with historical data they can for example simply press a VCR style back button on the display and or specify a start time and the UDA API can request this data from the OPC HDA API . If data records exist in the logged data that match the start time specified these records can be returned to the calling application HMI via the UDA API .

Looking at a block diagram of an industrial automation system in accordance with an aspect of an embodiment is shown. The industrial automation system is comprised of one or more automation device s AUTOMATION DEVICEthrough AUTOMATION DEVICE where N is an integer from one to infinity data storage and interface . Automation device s can include any one of a plurality of industrial processes and machines such as programmable logic controllers PLCs pumps providing fluid transport and other processes fans conveyor systems compressors gear boxes motion control and detection devices sensors screw pumps and mixers as well as hydraulic and pneumatic machines driven by motors. Such motors can be combined with other components such as valves pumps furnaces heaters chillers conveyor rollers fans compressors gearboxes and the like as well as with appropriate motor drives to form industrial machines and actuators. For example an electric motor could be combined with a motor drive providing variable electrical power to the motor as well as with a pump whereby the motor rotates the pump shaft to create a controllable pumping system.

Data storage provides a storage location for housing data relating to automation device s including but not limited to device description location and mechanical condition energy or fuel consumption completed cycles horsepower average RPM efficiency rating as well as data from sensors regarding device health and or performance. The data storage can be integrated or federated and linked by a communication system. Interface is operable to connect users with a network of automation devices and or data storage via a wire e.g. twisted pair coaxial cable optical fiber Ethernet USB Universal Serial Bus FireWire or wirelessly e.g. using IEEE 802.11a and or IEEE 802.11b standards Bluetooth technology satellite . Interface facilitates monitoring extracting transmitting and otherwise interacting with automated device s and associated data.

As shown in a user such as for example a device operator can connect to data storage and automation devices over a local area network LAN utilizing a variety of LAN technologies including Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 physical connection topologies such as bus tree ring and star and the like. However communications between networked devices such as automation devices data storage and interface need not be limited to those devices connected locally to a network. Local networked devices can also communicate to and from remote devices.

Turning to another block diagram of an industrial automation system in accordance with an aspect of an embodiment is depicted. is substantially the same as system except that a user employs interface to interact with automation devices and data storage remotely over a wide area network WAN . WANs are communication networks that span a large geographic area e.g. nationwide worldwide and generally consist of the several interconnected local area networks LANs and metropolitan area networks MANs . The largest WAN in existence today is the Internet. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks T networks and Digital Subscriber Lines DSL .

In view of the exemplary systems shown and described above methodologies that may be implemented in accordance with the embodiments will be better appreciated with reference to the flow charts of . While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks it is to be understood and appreciated that the embodiments are not limited by the order of the blocks as some blocks may in accordance with an embodiment occur in different orders and or concurrently with other blocks from that shown and described herein. Moreover not all illustrated blocks may be required to implement the methodologies in accordance with the embodiments.

The embodiments may be described in the general context of computer executable instructions such as program modules executed by one or more components. Generally program modules include routines programs objects data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various instances of the embodiments.

Additionally it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers. The term article of manufacture as used is intended to encompass a computer program accessible from any computer readable device carrier or media.

In a flow diagram of a method of providing unified data access for a manufacturing process in accordance with an aspect of an embodiment is shown. The method starts by obtaining historical and or real time manufacturing process data in response to a manufacturing process related query and or a display data request . The historical data can be obtained from for example data servers databases and or data files and the like. The real time data can be obtained from for example manufacturing processes and or buffered process data e.g. current data in random access memory RAM and the like . Requests can come from for example process overview displays charting systems reporting systems logging systems and or recipe systems and the like. A unified historical and real time data access is then provided to a manufacturing process related entity ending the flow . For example this can be accomplished by employing a unified data access UDA application programming interface API that abstracts the differences between the OLE for Process Control OPC Data Access OPC DA and the OPC Historical Data Access OPC HDA API s into a single API that allows seamless access to either type real time and or historical of data from the calling application i.e. manufacturing process related entity .

Looking at a flow diagram of a method of providing unified data access for a manufacturing process overview display in accordance with an aspect of an embodiment is depicted. The method starts by interfacing with a user via a process overview display to obtain a desired historical time period for a manufacturing process . The time period can be an approximation such as for example around 12pm yesterday and the like as well as a specific time period for example from 1pm to 3pm on Tuesday of last week. The time period can also for example include only a start time such as start playback at 4pm two days ago and the like. Historical data relating to the selected time period is then obtained via a unified historical and real time data source . This can be accomplished for example via utilization of a unified data access API described supra. A process overview display for the selected time period is then replayed for the user via employment of the historical data ending the flow . In one instance the manufacturing process overview display employs VCR like controls to facilitate in playing back the historical data on the process overview. This allows a user to easily rewind fast forward pause or stop and the like to find selected time periods to review.

Turning to a flow diagram of a method of generating a living report utilizing unified data access for a manufacturing process in accordance with an aspect of an embodiment is illustrated. The method starts by obtaining historical and or real time manufacturing process data from a unified data source in response to a manufacturing process related report query . The historical data can be obtained from for example data servers databases and or data files and the like. The real time data can be obtained from for example manufacturing processes and or buffered process data e.g. current data in random access memory RAM and the like . The unified data source can be for example a unified data access API described supra. A manufacturing process related report is then generated utilizing the historical data and at least one real time data stream ending the flow . The generated report includes a continuously updated real time data component. This effectively produces a living report that is always current. This allows for example a constant comparison of historical data with current data. In one instance the report is an Internet web page that indicates both historical and current data for at least one data parameter of a manufacturing process.

In order to provide additional context for implementing various aspects of the embodiments and the following discussion is intended to provide a brief general description of a suitable computing environment in which the various aspects of the embodiments can be implemented. While the embodiments have been described above in the general context of computer executable instructions of a computer program that runs on a local computer and or remote computer those skilled in the art will recognize that the embodiments can also be implemented in combination with other program modules. Generally program modules include routines programs components data structures etc. that perform particular tasks and or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations including single processor or multi processor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based and or programmable consumer electronics and the like each of which can operatively communicate with one or more associated devices. The illustrated aspects of the embodiments can also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. However some if not all aspects of the embodiments can be practiced on stand alone computers. In a distributed computing environment program modules can be located in local and or remote memory storage devices.

As used in this application the term component is intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to a process running on a processor a processor an object an executable a thread of execution a program and a computer. By way of illustration an application running on a server and or the server can be a component. In addition a component can include one or more subcomponents.

With reference to an exemplary environment for implementing various aspects of the invention includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 11 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI.

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that the present invention can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like monitors speakers and printers among other output devices that require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems and DSL modems ISDN adapters and Ethernet cards.

In one instance of an embodiment a data packet transmitted between two or more computer components that facilitates monitoring and or control of a manufacturing process is comprised of at least in part information relating to a unified data access system that provides at least in part retrieval of historical process data and or real time process data related to at least one manufacturing process.

It is to be appreciated that the systems and or methods of the embodiments can be utilized in unified data access facilitating computer components and non computer related components alike. Further those skilled in the art will recognize that the systems and or methods of the embodiments are employable in a vast array of electronic related technologies including but not limited to computers servers and or handheld electronic devices and the like.

What has been described above includes examples of the embodiments. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the embodiments but one of ordinary skill in the art may recognize that many further combinations and permutations of the embodiments are possible. Accordingly the subject matter is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

