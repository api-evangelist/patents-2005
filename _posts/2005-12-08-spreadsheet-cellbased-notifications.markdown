---

title: Spreadsheet cell-based notifications
abstract: A workflow includes an activity that takes advantage of spreadsheet calculations. For a spreadsheet activity, calculation and extraction of values from a spreadsheet is performed. Thus, spreadsheet calculations are integrated into workflows without user intervention. After the workflow is complete, or after a spreadsheet activity is calculated, or upon a threshold or condition being met, a user or system may be notified (e.g., by email, instant message, etc.). Values from previous activities in the workflow may be obtained and provided to the spreadsheet (e.g., cell values are set, modified, or adjusted). The spreadsheet may then be recalculated using these obtained values. Moreover, values from the spreadsheet may be used in subsequent parts of the workflow. Also, any number of spreadsheet activities may be incorporated into a workflow, and one spreadsheet activity may provide values to a second spreadsheet activity in the workflow.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501463&OS=09501463&RS=09501463
owner: Microsoft Technology Licensing, LLC
number: 09501463
owner_city: Redmond
owner_country: US
publication_date: 20051208
---
Spreadsheet software such as MICROSOFT s EXCEL software operates to simulate paper spreadsheets also sometimes called worksheets or workbooks in which columns of numbers are operated upon mathematically e.g. summed multiplied etc. for budgets plans models and other tasks. A typical spreadsheet software user interface appears on screen as a matrix of rows and columns the intersections of which are called cells. The cells can be filled with labels numeric values or formulas. Labels are descriptive text such as Rent and Gross Sales. Values are the actual numeric data and formulas command the spreadsheet to perform specific calculations based on the values for example the formula SUM CELLS A TO A may cause the spreadsheet software to sum the cells found at column A rows 5 to 10. Formulas allow interrelationships of cells and they are easy to create. For instance one may merely point to a cell and click and then press a key etc. of any arithmetic operation intended to affect the cell. For example the creation of a formula might be the contents of this cell PLUS the contents of this cell DIVIDED BY the contents of the next cell over to the left. 

After numbers are added or changed the formulas generally recalculate the data automatically or at the initiation of the user e.g. with the press of a key. This can create a recalculation ripple effect throughout multiple cells. Since the contents of any cell can be calculated with or copied to any other cell a total of one column can be used as a detail item in another column. For example the total from a column of expense items can be carried over to a summary column showing all expenses. If the contents of a cell in the detail column changes its column total changes which is then copied to the summary column and the summary total changes.

Such a ripple effect lets a user create a plan or model plug in different assumptions about the model i.e. change parameters and immediately see the impact on the bottom line. This what if capability makes the spreadsheet indispensable for budgets plans and other equation based tasks. The what if capability thus allows users to change underlying parameters such as interest rate of a mathematical model such as growth of bank account over time. The what if similarly allows a user to change underlying facts such as starting bank account balance the formulas interrelating the cells such as calculating interest with or without a formula that compounds interest and even the names of the cells to address different mathematical scenarios.

Thus spreadsheets include business logic in the form of models and calculations as well as data. A workflow is a set of relationships between the activities in a project from start to finish. Activities are related by different types of trigger relation. Activities may be triggered by external events or by other activities. There are many business workflow scenarios that may be suited for calculation and extraction of values from database workbooks such as MICROSOFT EXCEL workbooks. Workflow processes are often asynchronous to user intervention and thus need to work on server automated systems. Software driven workflows usually have the need to work asynchronously without user intervention. Spreadsheet calculations have not been capable of being called in an automated workflow.

Moreover significant critical data resides in spreadsheets today. This data may either be a result of calculations queried from an external source typed in or combination of these. It is often desirable to track specific values in a spreadsheet over time and act based on changes in the values. Today this requires opening the spreadsheet periodically or keeping it open and refreshing the calculations to update any external data queries or volatile formulas and then visually checking the values of interest. If the values have not changed or have not met a threshold that would require action the time the user spent opening and refreshing the spreadsheet is wasted. Moreover even if the threshold is met the user s time is wasted while waiting to refresh and calculate the spreadsheet. Attention is also a valuable resource that is wasted because the process requires periodic polling.

A workflow includes an activity that takes advantage of spreadsheet calculations. For a spreadsheet activity setting of values into a spreadsheet calculation and extraction of values from the spreadsheet is performed. Thus spreadsheet calculations are integrated into workflows without user intervention. For example spreadsheet calculations are called as a step in an automated workflow. The spreadsheet file is recalculated during the workflow. After the workflow is complete or after a spreadsheet activity is calculated or upon a trigger being activated or a threshold or condition being met notification may be sent e.g. notifying a user may by email instant message etc. or notifying a software system that may take action based on the notification . The notification may comprise content including a calculated workbook a uniform resource locator URL of a workbook a value of a cell that triggered the notification and or predetermined values.

Values from previous activities in the workflow may be obtained and provided to the spreadsheet e.g. cell values are set modified or adjusted . The spreadsheet may then be recalculated using these obtained values. Moreover values from the spreadsheet may be used in subsequent parts of the workflow. Also any number of spreadsheet activities may be incorporated into a workflow and one spreadsheet activity may provide values to a second spreadsheet activity in the workflow.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Referring now to the drawings in which like numerals represent like elements various aspects of the present invention will be described. In particular and the corresponding discussion are intended to provide a brief general description of a suitable computing environment in which embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute on server and personal computer systems those skilled in the art will recognize that the invention may also be implemented in combination with other types of computer systems and program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative computer architecture for a computer utilized in the various embodiments of the invention will be described. The computer architecture shown in illustrates a conventional desktop or laptop computer including a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application programs and other program modules which will be described in greater detail below.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments of the invention the computer may operate in a networked environment using logical connections to remote computers through a network such as the Internet. The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly an input output controller may provide output to a display screen a printer or other type of output device.

A number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer. The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store a spreadsheet application program . Moreover the spreadsheet application program may be operative to generate access and modify for example a workbook .

According to one embodiment of the invention the spreadsheet application program comprises the EXCEL spreadsheet application program from MICROSOFT CORPORATION. It should be appreciated however that other spreadsheet application programs from other manufacturers may be utilized to embody the various aspects described or contemplated herein.

The workbook is a file that is created by a spreadsheet program that contains one or more worksheets a worksheet may also be referred to herein as a spreadsheet . A worksheet is a single page organized into rows and columns within the spreadsheet program and appearing on screen. Through the use of these features a user can create models of financial and numerical problems and solutions. Alternately for example a workbook may be created programmatically e.g. if the file format is public such as an extensible markup language XML file format.

A spreadsheet document may be displayed. A user of the computer may interact with a display of the spreadsheet. The user may also be permitted to request that the spreadsheet file be opened in the spreadsheet application program . In response to such a request the spreadsheet application will be launched and the spreadsheet file will be loaded by the spreadsheet application program .

Referring now to a network architecture diagram will be described that illustrates an operating environment for the various embodiments of the invention. As shown in the computer is connected to a network . Also connected to the network is a server . The server comprises a server computer which may contain some or all the conventional computing components described above with respect to . The server can receive and respond to requests for documents stored at or accessible to the server e.g. at a data source a database or other storage device.

An interface may be provided to a user of the computer to interact with a spreadsheet or workbook accessible via the network . A server application programming interface API may be provided such that the API is operative to enable communication with a spreadsheet calculation server . The spreadsheet calculation server is operative to execute a spreadsheet calculation server program . The spreadsheet calculation server program comprises an executable program for retrieving and calculating spreadsheets such as the workbook stored in the database for example.

In a workflow when there is a human intervention step the user may use a spreadsheet application but not necessarily a separate copy of the workbook . Sometimes there may be a separate copy e.g. the server sends an email including the copy and sometimes the user may use the application to view the server workbook . Moreover it is contemplated that the workbook may reside anywhere such as on a filesystem and not in a database. It should be appreciated that in the embodiments of the invention described herein the spreadsheet calculation server program comprises a calculation server such as the EXCEL CALCULATION SERVER program from MICROSOFT CORPORATION. However other programs for calculating a spreadsheet on a server computer may be utilized. It should also be appreciated that the calculation server may include many of the conventional hardware and software components discussed above with respect to .

A workflow comprises activities. Conventionally each activity is strung together to create a workflow that is a sequential process through which actions occur. A spreadsheet has volatile data that may change over time. It is desirable to extend the workflow to expose spreadsheet calculation activity as part of the workflow process.

Values from previous activities in the workflow may be obtained and provided to the spreadsheet e.g. cell values are set modified or adjusted . The spreadsheet may then be recalculated using these obtained values. As shown in for example values from activities and or may be provided to activity which uses these values in its spreadsheet calculation.

Moreover values from the spreadsheet may be used in subsequent parts of the workflow. As shown in for example values determined at spreadsheet activity may be provided to activities and or for use in these activities. It is contemplated that any number of spreadsheet activities may be incorporated into a workflow and that a first spreadsheet activity may provide values to a second spreadsheet activity or any other activity in the workflow. After a spreadsheet activity is calculated or upon a trigger being activated or a condition or threshold being met for example the user may be notified e.g. by email or a software system may be notified. The notification may comprise content including a calculated workbook a uniform resource locator URL of a workbook a value of a cell that triggered the notification and or predetermined values. The notification process may itself be considered to be an activity. In such an embodiment the notification activity may be triggered or otherwise activated or called based upon the results of a spreadsheet activity.

A notification may be set up based on values in spreadsheets cells meeting certain thresholds or conditions. Thus a user may be notified e.g. by email or a software system may be notified when a spreadsheet cell changes for example. A spreadsheet may be refreshed and calculated at a particular time a predetermined interval or driven off a trigger for example. The specific cells are evaluated against the pre configured thresholds. If the thresholds are met a notification is desirably triggered either in the form of an email an instant message or a call into a web service or an object model a programmatic call etc. The user receiving the email can take action knowing that the threshold has been met. Similarly a software system receiving the notification may take action based on the notification. In the cases for which the threshold has not been met there is no time wasted by the user as the operation was done by the system without user intervention. As an alternative to basing notification on one or more cell values notification may be based on the fact that the workbook was calculated or may be based on the status of the workflow.

An example trigger type is the creation or editing of a spreadsheet file. For example suppose a user submits a new expense report spreadsheet file into an expense report document library. As a result a workflow fires and a notification is sent to a manager for example if the expense report total is above some threshold.

Desirably a user interface is provided so that a user may identify specific cells in the spreadsheet that he wants to track and the user may define the threshold and action to take email etc. . The user may also designate on which schedule or event to refresh and calculate the spreadsheet and evaluate the values being tracked.

For example suppose a spreadsheet is provided that calculates warehouse inventory based on data coming from a back end system and forecasting calculations in the workbook. Instead of coming into work every morning and loading the workbook refreshing the data and checking the numbers a user may be able to setup a system such as EXCEL CALCULATION SERVER to refresh the workbook every morning and check the inventory numbers against a predefined threshold e.g. value or formula . During all the days that inventory is still in check the user does not need to open the spreadsheet and spend the time to manually load refresh recalculate and check the values. When the threshold is met the user will receive an email notification from EXCEL CALCULATION SERVER. Alternatively for example an automatic inventory replenishing system will get a notification to restock. It is contemplated that notification may be provided when the workflow completes.

At step a workflow is initiated e.g. by a user an application or process. For example the creation or editing of a spreadsheet may initiate the workflow. A form may be provided to the user at step via a user interface for example. The form may be generated and provided locally or at a server over a network for example or partially locally and partially remotely. The user may enter information about the execution e.g. parameters values into a few cells save path or options output format notification delivery method etc. at step . This information may be stored locally and or remotely e.g. at a server over a network etc. . The workflow is then started at step .

At step activities in the workflow are processed and performed e.g. in a sequential order. At step a spreadsheet activity in the workflow is called. At step values received from the user at step or from preceding activities in the workflow for example are set into the spreadsheet. The workflow automatically calculates the spreadsheet values at step . The workflow activity may be calculated using an input parameter setting a single scalar output value and an optional save as along with a snapshot capability for example. It is contemplated that processing and calculations for example may be performed locally and or remotely e.g. at a server over a network etc. . In an embodiment the spreadsheet activity is a workflow activity provided by EXCEL CALCULATION SERVER that loads parameterizes and executes an EXCEL workbook returning the result of the workbook to the workflow for further manipulation.

More particularly the workflow activity may be loaded parameterized and executed using a spreadsheet program such as EXCEL CALCULATION SERVER. Thus a workflow loads the activity enables setting of input parameters and calculates the spreadsheet including refreshing external data. The execution activity performs actions in the spreadsheet when called such as opening the spreadsheet setting parameters and values and calculating refreshing or recalculating the spreadsheet. Based on the values it is determined if any notifications should be made. This may be implemented in a programmatic trigger for example or a workflow.

After the spreadsheet values are calculated a notification activity may be begun. For example it is determined at step whether a threshold or condition has been met. For example a cell value may be compared to a threshold value. It is noted that a threshold value may come from or be based upon a cell. If the threshold or condition has been met then notification is provided at step . Notification is not provided if the threshold or condition has not been met. Alternately for example notification may be provided if an activity in the workflow has concluded for example.

The activity can then expose an output value or can save the calculation at a predetermined location at step . Moreover the results of the spreadsheet calculations may be provided to the workflow for further use and manipulation at step . It is noted that the determination of whether a threshold or condition has been met may be performed elsewhere in the example process such as after step or after step for example. In an example embodiment notification is provided when the workflow completes.

In an example embodiment a calculation is performed and the result is saved. Assume a user would like a complex model calculated with specific values and that such a model would take a long time to calculate tying up the client machine. The user can manually initiate the calculation workflow. A form is provided where she parameterizes a few cells and sets the result file name and starts the workflow. The user may also designate in the form whether or not she wants a notification. When the file is ready an email notification is sent to the user the file can be attached or a URL can be sent or the values of the cells that triggered the notification may be attached to the notification for example.

In another example embodiment a calculation may be scheduled e.g. for subsequent offline view. For example suppose a user wants to calculate a spreadsheet workbook every morning to reflect last night s inventory numbers. The spreadsheet workbook may be sent in email to the user. The user schedules a calculation workflow to start on this file every morning at 4 am. Every morning an updated version of the spreadsheet workbook is sent in email to the user. This can either be a snapshot of the spreadsheet workbook or the complete spreadsheet workbook depending on the settings.

A workflow can be built to open a spreadsheet read an output value and update a property in the file s document library for example. Suppose a document library contains a team s expense reports and all the reports have the total expense in cell Sheet B. The library has a Total Expense column. Whenever a new expense report file is dropped in the library a workflow fires reads cell Sheet B and updates the Total Expense property of the file so that the value shows up in document library doclib views.

An example involving cell notification is provided. Suppose a user needs to audit any submitted expense report over 1000. To achieve this he navigates to the doclib where the expense application drops new expense reports and selects Modify settings and columns and in the following page he clicks Add a workflow . The user associates a Cell notification workflow with the doclib to be initiated every time a document changes in the doclib. The user adds the expense total cell name the condition and value 1000 and his email alias as parameters. Now every time an expense report lands in the doclib the workflow kicks in the condition is checked and the user receives an email if the condition is met. Cell notification may be initiated based on a change or as scheduled for example.

There are multiple implementation techniques e.g. an appropriate API tool kit driver code operating system control standalone or downloadable software object etc. which enables applications and services to use the systems and methods for providing and enabling the functionality. Various implementations described herein may have aspects that are wholly in hardware partly in hardware and partly in software as well as in software.

As mentioned above while exemplary embodiments have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any computing device or system that uses workflows. For instance the algorithm s and hardware implementations of the invention may be applied to the operating system of a computing device provided as a separate object on the device as part of another object as a reusable control as a downloadable object from a server as a middle man between a device or object and the network as a distributed object as hardware in memory a combination of any of the foregoing etc. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code and nomenclature that achieves the same similar or equivalent functionality achieved by the various embodiments.

As mentioned the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers the computing device generally includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the aspects described herein are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer etc. the machine becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality. Additionally any storage techniques may invariably be a combination of hardware and software.

While preferred embodiments have been described it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function without deviating therefrom. It should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

