---

title: Communications system
abstract: A communications system is provided, the system being operable to provide a communications session utilizing an internet protocol, such as for example IPv4, IPv6 and their extensions mobile IPv6 or IPv4. The system includes a mobile node having an application program and an operating system. The application program is operable to provide the communications session using an internet protocol address information. The operating system is operable to monitor the internet protocol address information and to inform the application program of a change of internet protocol address information. The application program is arranged to adapt the communications session in accordance with the change of internet protocol address information. As a result of the operating system informing the application program of a change of the internet protocol address information, the application program can adapt the operation of the communications session to reduce a likelihood of the communications session being affected when the IP address changes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07860069&OS=07860069&RS=07860069
owner: France Telecom
number: 07860069
owner_city: Paris
owner_country: FR
publication_date: 20050328
---
The present application claims priority under 35 U.S.C. 119 a d to European application no. 04290890.5 filed on Apr. 2 2004 the contents of which are herein incorporated by reference.

The present invention relates to communications systems and methods for providing communications sessions utilising an internet protocol. The present invention also relates to mobile nodes notification modules and notification plug ins.

Communications networks which utilise an Internet Protocol IP provide a facility for communications nodes such as personal computers mobile devices and servers to communicate information during communications sessions. According to the Internet Protocol used each communications node is provided with an IP address which uniquely identifies that node within the IP network. These IP addresses may be either permanently assigned to a communications node or assigned at a time at which a node affiliates itself with the network. More recently access to IP networks has been possible using mobile nodes such as mobile phones and portable computers. For example a mobile node may access an IP network via some form of wireless connection for instance by a radio communications network or an infra red link. As such an IP address may be assigned to a communications node on a temporary basis which may change during a communications session. Accordingly the communications session may be affected by a change of the IP address of the mobile node resulting from for example a change of affiliation from one network to another during a communications session.

Viewed from a first aspect the present invention provides a communications system operable to provide a communications session utilising an internet protocol. The system comprises a mobile node having an application program and an operating system. The application program is operable to provide the communications session using internet protocol address information. The operating system is operable to monitor the internet protocol address information and to inform the application program of a change of the internet protocol address information. The application program is arranged to adapt the communications session in accordance with the change of the internet protocol address information.

In one example the system includes a mobile node and a correspondent node the mobile node being arranged to provide a communications session with the correspondent node using an application program operating on the mobile node.

Embodiments of the present invention are arranged to inform an application program operating on a mobile node that an Internet Protocol IP address for use in communicating IP packets has changed during a communications session. An operating system is arranged to provide an indication that IP address information for the mobile node has changed. The change of the address information may include adding a new IP address to an IP stack of the operating system following for example a change or initiation of a change of affiliation of the mobile node from a first network to a second network the initiation being the beginning of a process for changing the affiliation. Correspondingly the change of the address information may be deleting an IP address from the IP stack of the operating system after the change of affiliation has been completed.

After being notified that the IP address information has changed the application program is able to take action to adapt the operation of the communications session. As such the application program can reduce a likelihood of the communications session being affected during a period in which the mobile node changes IP address for example as a result of a change of affiliation from one network to another.

The application program may be arranged to adapt the communications session following the notification of the change of the IP address information. For example the change of IP address information which is typically associated with a change affiliation of the mobile node from one network to another may have an effect of disrupting the communication of IP packets for a period during which the change of affiliation is being effected. Therefore some embodiments may include suspending communication of IP packets or at least adapting the rate of communicating the IP packets. The suspension or the change of the rate may be effected for example until an IP address of an IP network with which the node was affiliated has been deleted from the IP stack. In other embodiments the application program may be arranged to provide an indication to a corresponding application program operating on a correspondent node that a new IP address should be used for communicating IP packets to the mobile node. For example the application program on the mobile node may be adapted to monitor the new IP address as well as an old IP address for receipt of IP packets from the correspondent node. During a period in which the mobile node monitors both the new IP address and the old IP address the two IP addresses are available contemporaneously for use by the mobile node. The old IP address may be an address used for communicating IP packets on an IP network with which the mobile node was affiliated before a process of changing affiliation to the new IP network began. In some embodiments the correspondent node may be informed of the new IP address by the application program on the mobile node using a Session Initiation Protocol SIP message.

In some embodiments the operating system includes an IP stack having an IP address table for storing IP addresses an address adder for adding IP addresses and an address remover for removing IP addresses from the IP address table. The operating system may include a notification plug in and a notification module. The notification plug in may be operable to monitor the IP stack and to provide a notification of a change of IP addresses in the IP stack in accordance with an addition or deletion of addresses from the IP address table. The notification is provided to the notification module. The notification module is operable to inform the application program of the change of IP address information based on the notification received from the notification plug in.

Embodiments of the present invention can be used when delivering mobile services to telecommunication subscribers as they roam between different access networks such as WLAN Wireless Local Area Network GSM Global System for Mobile Communications and UMTS Universal Mobile Telecommunications System . Additionally these techniques are particularly applicable to use with the Session Initiation Protocol SIP to enable an application to initiate a SIP hand over. Embodiments of the present invention are not limited to application to a particular internet protocol and can be used with mobile IPv6 and IPv4 for example.

Various further aspects and features of the present invention are defined in the appended claims and include a communications method a mobile node a notification module and a notification plug in.

According to a current IETF Internet Engineering Task Force Internet standard for managing mobility known as the Mobile Internet Protocol version 6 MIPv6 a care of address is allocated to a mobile node when it changes affiliation from one network to another. With this technique a mobile node is identified by a permanent address home address used by all application programs which does not change and a mapping between the care of address and the home address is handled at the IP level of the mobile device. When the mobile node moves into a different network it acquires from the new network a care of address that is then provided to the IP stack of the various devices in communication with the mobile node. Packets which are addressed to the nodes home address are then automatically routed across the network to the care of address. With MIPv6 the application program running on the mobile node is unaware of the change of IP address.

One approach to managing IP address changes at the application level within a mobile enabled network is to use a polling method. This is an application program based method in which an application program operating on the mobile node regularly compares the current IP address obtained by polling the Operating System to one stored in the application program itself and can thereby discover changes.

An example communication link between two user nodes is illustrated in for an IP communications session between the mobile node MN and the correspondent node CN. Communications between these two user nodes span two networks and the communication between the mobile node MN and the correspondent node CN being controlled by respective routers and . Communication between the mobile node MN and the correspondent node CN utilises specified IP addresses for each of the nodes. For the present example the correspondent node CN is assumed to retain a fixed IP address throughout the duration of the communications session with the mobile node MN although in other examples the correspondent node may too be mobile. For the case of the mobile node MN if the node were to move outside the operational area of the network communication via the existing communication path will be terminated and an IP address allocated by the router will be lost.

In a change of affiliation to a new network is illustrated by the mobile node MN which indicates schematically the position of the mobile node MN after moving out of the operational area of the network and into the operational area of the network . It can be seen that a new communications path now exists between the mobile node MN and the correspondent node CN now using the networks and under control of the routers and . The transition from the first communication path between the mobile node MN and the correspondent node CN to the second communication path between the mobile node MN and the correspondent node CN may disrupt the communications session between the two nodes.

The operating system includes an IP stack which controls communications between the mobile node MN and external networks and devices. The IP stack includes and IP stack address table which stores one or more IP addresses attributed to the mobile node MN by respective networks with which the mobile node MN is able to communicate. Further IP addresses can be added to the IP stack address table using an address adder module within the IP stack of the operating system . IP addresses can be deleted from the IP stack address table using an address remover module within the IP stack of the operating system . In the mobile node MN of the application program is substantially unaware of the activity of the IP stack and the mobile node MN in particular is unaware of the state of the IP stack address table .

The node of may typically operate under the MIPv6 protocol. An aspect of MIPv6 is that a change of IP address is hidden from any application programs running on the mobile node. Indeed with MIPv6 the application program is aware of a permanent Home address of the mobile node and the changes of the care of address are handled at the IP level. However as discussed above managing a change of IP address at the application program level is in some cases highly desirable. Indeed the change of IP address can affect application programs involved in media communications causing loss of packets and disruption. To reduce these session disruptions and reduce packet loss appropriate mechanisms can be implemented at the application program level. For instance a reduction in disruption may be achievable by notifying correspondent nodes of the change of IP address experienced by the mobile node. Another mechanism for reducing disruption is for the application program to maintain when possible the session corresponding to the initial IP address opened on a first network until the change of IP address is acknowledged by the correspondent nodes while opening a session with the new IP address under a second network. In order for such session mobility management functions to be integrated into multimedia application programs the change of IP address occurring at the IP level should be notified to the application program. If the change of IP address is hidden to the application program no recovery mechanism or enhanced features for handling this change of IP address can be implemented.

Existing techniques by which application programs may detect a change of IP address require the application programs to constantly check or poll the IP address within the IP stack address table for changes. Regularly polling an operating system to detect a change of IP address can have a negative impact on system performance which can degrade multimedia session quality. Also it can result in overloading the operating system and can introduce delays in the detection of the change depending on the frequency of the polling.

The notification plug in provides an advantage to the mobile node MN because the IP address is made available to the application program without a need for heavy polling to be performed by the operating system . As such performance is improved while complexity is reduced. Events are only triggered when an address is added or removed with the result that a smaller number of operations are performed compared to a mechanism in which regular updates are made regardless of whether a change has occurred. Communications nodes having the plug in are provided with an advantage when applied to streaming media communications particularly for systems operating in a node controlled mobility environment. Such nodes may be provided with an improved facility in that the notification plug in can allow an application program to adapt the media in accordance with an indicated change in the IP address. In addition it addresses the need of multimedia application programs such as SIP enabled application programs to be informed of changes of IP address of the mobile node as it roams between access networks.

It should be understood that the actual structure chosen for providing the application layer with IP notification information is not limited to the particular Operating System implementation described herein. Although the example operating system uses a notification plug in and a notification module different operating system arrangements suitable for providing the appropriate IP address monitoring and notification functionality are also contemplated and may be advantageous for particular existing or future operating systems and mobile environments.

The OS kernel includes an IP stack which in turn includes the address management module containing the address adder and address remover modules and described in relation to . As with the address adder and address remover modules are used for adding and removing IP addresses to and from the IP stack address table . Generally any OS implementation of an IP stack contains a table for managing IP addresses and a set of associated methods to manage these addresses in the table. For instance the IPv6 Stack version 1.23 for Linux RTM uses a table referred to as inet6 addr1st and uses methods referred to as ipv6 add addr and ipv6 del addr to insert or delete an IP address in this table each time an IP address is acquired or lost. Similarly the Microsoft RTM IPv6 Stack version 1.4 for Windows RTM uses a list of AddrObj objects the InsertAddrObj method to add an IP address and the RemoveAddrObj method to delete an IP address.

The OS kernel includes the notification module . The notification module may itself maintain a table of active IP addresses. When the notification module is notified by the IP stack that an address has been deleted it removes the corresponding address from the table and notifies the application program that this address has been deleted. The mechanism can also provide where available an alternative IP address for use by the application program. In this way the notification mechanism can notify various application programs of any change to the IP address of the node.

The IP stack also includes the notification plug in . This is the part of the IP stack code that has to be modified to interact with the notification module and allows the notification mechanism to be started and stopped. It is an extension of a standard IP stack that allows it to communicate proactively with application programs within the application layer .

The notification plug in defines a structure which includes function pointers to callable functions in the notification module . When the notification functions are loaded the notification module sets the function pointers in the structure which can then be accessed by the IP stack using macros. The macros check whether the corresponding pointer is valid i.e. not NULL indicating that the notification functions have not been started or else are unavailable and call the corresponding notification functions.

In order for an application program to be notified of changes in the IP address a notification handler is integrated into the application layer . The notification handler interfaces with the notification module within the OS kernel preferably using an application programming interface API and handles notification messages sent by the notification module to application programs within the application layer allowing application programs to receive and utilise information about the IP addresses available to the system.

An example implementation of a notification handler is based around event messaging and consists of the application program receiving events from the notification module when a change of IP address occurs through the normal event system of the operating system . In this case a new pair of events should be registered declared in the operating system the events corresponding to a notification that an IP address has been added to the IP stack address table of the operating system and to a notification that an IP address has been deleted from the IP stack address table of the operating system . The associated parameters for these events would be the relevant IP address that has been added or removed. The addition of these events into the operating system allow an application program developer to maintain control over the mobility features of a given application program.

An alternative example implementation of a notification handler is based around a custom application programming interface API which could be provided to an application program developer. The supplied API would handle messaging functions and use function call back to the application program. The application program developer can then develop his application program with the API provided embedding the notification mechanism into the application program itself. The API would provide methods to register with the notification module to receive notification of change of IP addresses to listen on a specified socket connection for notification and to inform the application program of particular predetermined events. Example events of which the application program may be notified could include notification that the mobile node no longer has an operational IP address and is not connected to any network that a new IP address should be used or that the current IP address is no longer available in which case a new IP address to be used is provided.

In the described arrangement notification of the application layer by the IP stack is triggered by changes to the IP stack address table . Each implementation of an IP stack features a function to manage all of the available IP addresses. When this is changed i.e. when an address is added to or removed from the table the notification system generates an event. A notification module installed on the system can then be started and will be operable to interface between the IP stack and any relevant application programs such that any IP stack activity can be reported to the notification module for distribution to any relevant application programs such as multimedia application programs.

Referring to a situation is represented in which two radio mobile networks Network A and Network B provide an overlapping coverage area. In this example a mobile node operating a streaming media session moves from the zone of coverage of network A to that of network B. The mobile node changes affiliation as it moves from a coverage area provided by network A to a coverage area provided by network B acquiring an IP address from the relevant network at a given time. It should be understood that although radio networks have been used in this example the same principles apply to any IP network and access network wireless or fixed.

The basic affiliation transfer stages can be seen as stages S to S in . At a stage S the mobile node is initially attached to a network network A . The existing IP address previously allocated by network A to the mobile node appears in the address table of the IP stack. The notification functions the notification module and the notification plug in are loaded in the system but are idle at this stage. A media session for instance a streaming session is opened with a corresponding node the corresponding node not being represented in .

At a stage S the mobile node attaches to another network network B . As the mobile node is moving it enters the area of coverage of network B and although still affiliated to network A acquires an IP address from network B. At this point the IP stack address table now contains two IP addresses the IP address initially allocated by network A and the new IP address allocated by network B. The notification plug in initially idle is activated by the insertion of the second IP address in the table and reacts by informing the notification module of the addition of the IP address. The role of the notification module includes interfacing with application programs running on the mobile node. It therefore informs in turn the session based application program that a new IP address is available. This information is then processed by the application program which for instance can decide as is the case here to renegotiate a session with a correspondent application program on another node using the new IP address of the mobile node.

At a stage S the mobile node exits the area of coverage of network A and therefore loses its connection with that network and consequently the IP address corresponding to network A. The IP address initially allocated by network A is removed from the IP address table of the IP stack. Network B s IP address remains in the IP stack. Upon deletion by the IP Stack of one of the IP address the notification plug in informs the notification module of this deletion. In a similar way to the IP address addition the notification module informs the media application program of the deletion of the IP address. The application program is then able to launch the relevant procedures in accordance with its programming. In the example of the application program ignores this information.

At a stage S the change of affiliation and of active IP address is completed and the notification functions returns to an idle state. The media session continues to use the IP address allocated by network B.

Various modifications may be made to the example embodiments herein before described without departing from the scope of the present invention. Although embodiments of the present invention have been described with reference to mobile IPv6 it will be appreciated that embodiments of the present invention find application with other internet protocol including for example IPv4. It will also be appreciated that a communications node utilising the present invention may not include a wireless communications device but may simply be arranged to change an IP address mid session. Furthermore the correspondent node may also be mobile.

