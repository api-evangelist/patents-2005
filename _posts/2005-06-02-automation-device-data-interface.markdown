---

title: Automation device data interface
abstract: The subject invention pertains to facilitating communication between industrial automation devices such as controllers and data systems and/or services. Systems and methods are provided that receive statements or other unit of data interaction from an automation device, provide the statements to an appropriate system or service for processing, and optionally return a response such as a result set. Furthermore, in accordance with an aspect of the invention native controller code, variables, or tags can be mapped to stored data, procedures or combinations of data and/or procedures and updated automatically or semi-automatically.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07565351&OS=07565351&RS=07565351
owner: Rockwell Automation Technologies, Inc.
number: 07565351
owner_city: Mayfield Heights
owner_country: US
publication_date: 20050602
---
This application is a continuation in part of U.S. application Ser. No. 11 079 152 filed Mar. 14 2005 and entitled EMBEDDED APPLICATION MANAGEMENT IN INDUSTRIAL CONTROL SYSTEM. This application is also related to U.S. patent application Ser. No. 11 020 371 filed on Dec. 22 2004 and entitled INTEGRATION OF CONTROL AND BUSINESS APPLICATIONS USING INTEGRATION SERVERS U.S. patent application Ser. No. 11 026 210 filed on Dec. 30 2004 and entitled DATABASE STORED PROCEDURE USED TO COLLECT CONTROL SYSTEM DATA U.S. patent application Ser. No. 11 065 953 filed on Feb. 25 2005 and entitled TUNNELING FILE SYSTEM INTERFACE THROUGH NETLINX STACKS and U.S. patent application Ser. No. 11 067 164 filed on Feb. 25 2005 and entitled RELIABLE MESSAGING INSTRUCTIONS and U.S. patent application Ser. No. 11 141 527 filed on May 31 2005 and entitled APPLICATION AND SERVICE MANAGEMENT FOR INDUSTRIAL CONTROL DEVICES. The entireties of these applications are incorporated herein by reference.

The subject invention relates generally to industrial automation systems and more particularly toward data interaction and connectivity.

Industrial controllers are special purpose processing devices used for controlling e.g. automated and semi automated industrial processes machines manufacturing equipment plants and the like. A typical controller executes a control program or routine in order to measure one or more process variables or inputs representative of the status of a controlled process and or affect outputs associated with control of the process. Such inputs and outputs can be digital and or analog. A typical control routine can be created in a controller configuration environment that has various tools and interfaces whereby a developer can construct and implement a control strategy using industrial and conventional programming languages or graphical representations of control functionality. Such control routine can be downloaded from the configuration system into one or more controllers for implementation of the control strategy in controlling a process or machine.

Measured inputs received from a controlled process and outputs transmitted to the process can pass through one or more input output I O modules in a control system. Such modules can reside locally or remotely from the controller. Inputs and outputs can be recorded in I O memory. The input values can be asynchronously or synchronously read from the controlled process by one or more input modules and output values can be written directly to memory by a processor for subsequent communication to the process by specialized communications circuitry. An output module can interface directly with a controlled process by providing an output from memory to an actuator such as a motor drive valve solenoid and the like. During execution of the control routine values of the inputs and outputs exchanged with the controlled process can pass through memory. Values of inputs in memory can be asynchronously or synchronously updated from the controlled process by dedicated and or common scanning circuitry. Such scanning circuitry can communicate with input and or output modules over a bus on a backplane or network and asynchronously or synchronously write values of the outputs in memory to the controlled process. The output values from the memory can be communicated to one or more output modules for interfacing with the process.

Industrial controllers can communicate with databases for example to store and or retrieve data. Conventionally database communication is accomplished by continuously polling automation devices and sampling data to determine if the automation device includes data that needs to be written to a database. Alternatively an application could wait to be messaged a controller indicating that it has data that should be retrieved and written to a database or that desires to obtain data from the database. An industrial protocol such as CIP Control and Information Protocol is conventionally employed to poll message retrieve and or receive data from the automation layer which is subsequently presented to a database. However all transmissions such as reads and writes are limited by proprietary industrial control protocol e.g. CIP Control and Information Protocol connection size e.g. 512 bytes . Furthermore all requests transmitted in an industrial protocol are first routed to an Ethernet card or box that converts the requests and transmits them to a database.

The following presents a simplified summary of the invention in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.

Briefly described the subject invention concerns systems and methods to facilitate communication interaction and connectivity between industrial automation devices or systems and data supply systems or services. For example the disclosed systems and methods can simplify reading and writing control system data to and from a database or interacting with a service.

In accordance with an aspect of the invention an interface system is disclosed including a device interface component and a data interface component. The device interface receives commands statements or other units of data or database interaction including but not limited to declarative SQL statements from an automation device such as an industrial controller and transmits the received statements to the data interface component. The data interface component subsequently transmits the statements to a database system for execution or evaluation and obtains a response. The response is then transmitted back to the data interface component the device interface component and ultimately to the automation device providing the statements. This enables automation devices to interact with a database in its native language e.g. SQL OQL OOQL MDX . . . among other things.

In accordance with another aspect of the invention the device interface component can obtain statements commands expressions in the form of protocol strings for example from one or more automation devices and transmit them to the data interface component. The data interface component can subsequently provide such statements to a service including but not limited to a network and web service for evaluation. Any results produced by the evaluation can subsequently be transmitted back to the one or more automation devices via the data and device interface components.

According to other aspects of the invention the provided interface system can reside and execute as middleware on a controller or other automation device or on a database server.

According to an aspect of the subject invention the device interface component can correspond to a socket based middleware application gateway including for example a BSD Berkley Software Distribution socket or Winsock. The socket can be open to send and receive statements responses and or results through a middleware application communicatively coupled with JDBC drivers to a database for example. This provides a raw data pipe between a control device and a database. Besides a socket interface other middleware application interfaces include Common Industrial Protocol CIP object web service interface and reliable messaging such as JMS MQTT MSMQ and MQ.

The data interface component can be implemented as a JDBC Java Database Connectivity connector or interface in accordance with an aspect of the invention. Such an interface can facilitate communication with a database employing a database driver or API thereby enabling the database to be updated queried or otherwise manipulated in accordance with statements or commands received and transmitted thereto. The data interface component can also be implemented as a service connector to support interaction with services such as network and web services.

According to another aspect of the invention an automation device such as a controller can include an interface system as well as database system. A controller can therefore act as a database serving information to other automation devices through as well as leverage the JDBC reliable messaging and or inter process communication to exchange information with upper layer information management systems including but not limited to MES Manufacturing Execution System or ERP Enterprise Resource Planning .

According to another aspect of the invention a mapping component can be employed to map native control code variables and or tags among other things to stored data values. For example the mapping can include one or more statements commands transactions or other units of database interaction. The monitoring component can operate behind the scenes to automatically or semi automatically update control code variables or tags among other things to ensure they mirror or alias particular stored data values or combinations thereof.

In accordance with still another aspect of the invention methods are disclosed to facilitate communication with a database as well as a myriad of services. For example statements or commands are received from an automation device such as a controller and transmitted to a database system or service for execution or evaluation. Subsequently a response or result set can be received and transmitted back to the automation device.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the invention are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways in which the invention may be practiced all of which are intended to be covered by the present invention. Other advantages and novel features of the invention may become apparent from the following detailed description of the invention when considered in conjunction with the drawings.

The present invention is now described with reference to the annexed drawings wherein like numerals refer to like or corresponding elements throughout. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed. Rather the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention.

As used in this application the term component system and the like are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an instance an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computer and the computer can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

The word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs.

Furthermore the present invention may be implemented as a method system apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer or automation device e.g. controller to implement the disclosed invention. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but is not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick . Additionally it should be appreciated that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN . Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the subject invention.

Artificial intelligence based systems e.g. explicitly and or implicitly trained classifiers can be employed in connection with performing inference and or probabilistic determinations and or statistical based determinations as in accordance with one or more aspects of the subject invention as described hereinafter. As used herein the term inference or infer refers generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources. Various classification schemes and or systems e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines . . . can be employed in connection with performing automatic and or inferred action in connection with the subject invention.

Referring initially to an interface system is illustrated that facilitates data interaction in accordance with an aspect of the subject invention. More specifically interface system can facilitate interaction between an automation device such as a controller and a database and or a service e.g. network web . . . . System includes a device interface component and a data interface component .

Device interface component receives commands statements transactions or other unit of database or data interaction from one or more industrial automation devices. Database statements can include but are not limited to SQL Structured Query Language statements. Alternatively multidimensional database statements such as MDX Multidimensional Expressions object oriented database statements including OQL Object Query Language OOQL Object Oriented Query Language or other statements or commands could be received depending on the structure and or type of database involved in the interaction. The data statement s can be communicated to the device interface component via TCP IP Transmission Control Protocol Internet Protocol or like protocols frameworks inter process communication messages queues pub sub sockets TIPC Transparent Inter Process Communication or communication models. Device interface component can thus correspond to a socket which enables communication between two different processes on the same or different machines. Here device interface component can be a socket that is in communication with one or more automation devices and stands prepared to receive and or send data or data packets. Secure communications such as secure sockets layer SSL or other security means between a client and device interface component . Device interface component is communicatively coupled to data interface component .

Data interface component can receive or retrieve one or more statements commands transactions or other unit of database or data interaction from the device interface component and transmit them to a database management system DBMS . Additionally data interface component can receive a response such as a result set from a database management system and transmit the response back to the device interface component . In accordance with an aspect of the invention the data interface component can be implemented utilizing JDBC Java Database Connectivity API Application Programming Interface for Java programs and a database driver associated with the database to be accessed. The driver is beneficial at least because it provides efficient and secure communication with a database. Component may have a username and password or be provided one by a secure means. One aspect is to contain the authentication information in component and not include IT layer database usernames and passwords in a zero configuration interface component . Further this architecture reduces revision management issues between the device interface component and the database because the data interface component contains the database JDBC driver.

Furthermore the device interface component can provide a mechanism to perform data filtering. In other words the statements transactions or other units of database interaction received by the interface component can be selectively and or periodically provided to the data interface component to facilitated efficient processing thereof. Rather than immediately transmitting every statement received the interface component can batch them and transmit them to the data interface component at particular intervals or upon receipt of a predetermined number of statements transactions or the like. The device interface component can also include or employ artificial intelligence or knowledge or rule based components systems processes means or mechanisms e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines classifiers . . . to aid in determining batch size as well as if an when to transmit the batch. The device interface component can infer as that term is defined herein the optimal time and batch size to transmit to the data interface component . For example the device interface component could infer and or detect database load and transmit batches at particular times when the database is available for processing.

For purposes of clarity and understanding and not limitation consider a programmable logic controller PLC that seeks to write the some values to a database. The controller could transmit a native declarative database statement such as INSERT INTO Table values 10 20 30 to the device interface component . The device interface component could receive this statement and transmit it to the data interface component . Data interface component could then transmit the statement to a database management system including but not limited to a relational database management system RDBMS object database management system ODBMS and Post Relational Database. For example such database management systems can correspond to but are not limited to DB2 MSSQL MySQL Informix Sybase Cloudscape Oracle Post GRE Versant and Matisse. The database management system could then execute the statement thereby entering the values into the specified table. Upon completion a response indicative of a successful write or an error can be transmitted back to the automation device from the database management system through the data interface component and device interface component back to the PLC. This aspect of the subject invention enables the PLC programmer to have an efficient means to detect a successful database write and the design assures them they no longer need to keep a duplicate copy of the data that now resides in the database.

It should be appreciated that although described in terms of sockets and JDBC other implementations are also possible and within the scope of the subject invention. For example the device interface component can represent a CIP Common Industrial Protocol object s interface s that can enable both TCP and non TCP IP devices such as ControlNet and DeviceNet to exchange the data requests and communicate them to the data interface component . The interface object s can provide declarative interfaces as well as pre defined interfaces such as an insert and or select CIP service as well as transparently map CIP data types to the datatypes supported by the database vendor e.g. SQL . Further a CIP database table object can be mapped to a database table such that this CIP object will then present a data schema or data attributes which mirror the actual database table which it is assigned. In another example both device interface component and data interface component can employ one or more of a combination of inter process communication IPC mechanisms. In general IPC can be employed to exchange data between processes for example within the same entity over a network and or throughout a distributed environment. IPC can also be utilized to enable one application to control another application and or for several applications to share the same data without interfering with one another. Examples of IPC mechanisms include but are not limited to Common Gateway Interface CGI Fast CGI TIPC Berkley sockets std I O such as stdin stdout and stderr file descriptors named pipes memory mapped files queues and named queues mailboxes semaphores shared or dual port memory RISC OS messages Mach ports OS 2 named pipes Microsoft Windows DDE Novell SPX Apple Macintosh IAC e.g. AppleEvents and or different forms of software componentry such as CORBA Component Object Model COM and or distributed COM DCOM and or web services and or reliable messaging such as MSMQ MQ MQTT and JMS.

Furthermore while the interface system is described herein with respect to interaction with database systems system is not so limited. The interface system can facilitate interaction between an automation device or system and a myriad of different data sources or services. The device interface component could receive strings statements expressions or the like and interact with a data service via data interface component . For example a device interface component could receive a protocol string that specifies a network time to be received retrieved or otherwise obtained. The device interface component could then transmit this string to the data interface component that obtains the time from a network service. Similarly interface system and more particularly data interface component can enable interaction with a web service.

The results could be copied to PLC variables or further utilized in control logic code for example. The PLC may asynchronously or synchronously copy the controller tags or other information to from the declarative database statements in coordination with the control loops it is performing. Further the controller can use special event processing tasks specifically designed to interface data with the database request responses events. Furthermore it should be appreciated that database system can include stored procedures. Accordingly the one or more automation devices can invoke one or more stored procedures utilizing statements transmitted via interface system . The PLC or other automation device may store any type of information such as data input output discrete or process values or derived values performance related information alarms events messages error logs quality information application programs configuration information recipe information LDAP or active directory information firmware images etc. in the database system . Further it should be appreciated that database system is a general label that may include a singularity or plurality of database instances as well as from various vendors and limited functionality source implementations performing a database function. The database system component also is meant to include relational database management systems RDBMS and Object Database Management Systems ODBMS 

The automation data control variables and tags may be mapped between a database and the actual device internal values transparent to the user. Hence a remote ERP MES client or system can make a syntactically correct SQL declarative statement such as select from a Table where VIN ID 123456 which could return a result set containing the build parameters for a vehicle with vehicle VIN ID 123456. Similarly the ERP MES system could now modify this vehicle s color from blue to red by executing a SQL statement such as UPDATE TABLE SET COLOR RED WHERE VIN 123456 rather than try and find the PLC data value in an array of strings etc as is the current convention. This is possible because the build parameters may actually be stored in a local database the PLC variables and tags can be mirrored in the local database or the PLC leverages the interface component to fetch the latest build parameters just in time e.g. in real time for that specific control loop when it performs the vehicle s painting. System or component can represent a single instance of or a plethora of upper layer MES and ERP IT systems such as SAP Oracle IBM WebSphere and or Server Foundation Microsoft webMethods Integration Servers and other database quality and information management systems. Further it should be appreciated that the interface system supports moving information between the automation device and the database as a transaction.

Turning to an exemplary system is depicted to illustrate how aspects of the invention can be employed in an industrial automation environment. It should be appreciated that system is provided to facilitate understanding of aspects of the invention and not to limit the scope thereof. System includes a database management system or data warehouse system e.g. Oracle MSSQL MySQL DB2 Access Versant Post GRE Matisse . . . . System also includes a controller such as a programmable logic controller PLC or other control system. The controller interacts with the database system employing an interface system as described with respect to . The controller can also interact with a plurality of automation systems including RFID Radio Frequency Identification reader RFID print and apply system display system . The controller can receive data from an RFID reader system and store such data to the database utilizing the interface system . For instance the controller can collect batches of data and employ declarative query commands or statements specifying the storage and or organization of the data with respect to a database. Additionally the controller can retrieve data from the database system via interface system and provide such data to a RFID print and apply system to enable generation of RFID tags for example. The controller could also retrieve and supply data from the database system to the display system to enable population of user interfaces or displays with data as well as respond to requests and or commands from users. Still further yet the controller can interact with MES ERP Manufacturing Enterprise System Enterprise Resource Planning systems e.g. SAP IBM Web Sphere MRF PRO . . . . Such systems are business management systems that provide a plurality of tools and applications with respect to all facets of business including but not limited to sales manufacturing marketing planning inventory control and order tracking. Controller can provide an uplink of data such as RFID data to the MES ERP system from database system utilizing interface system .

System also includes a mapping component . Mapping component can map java objects automation device variables tags data and the like to stored or persisted data for example via one or more database statements commands transactions or other units of database interaction. More specifically the mapping component can include or be communicatively coupled to a plurality of rules or a schema that can be employed to perform the mapping or aliasing. Further this mapping component can perform the relational to from object database mapping R O Mapping . The automation devices may persist objects data in the object database. A mapping component may relate these databases between each other and remote databases. The automation layer configuration programming and devices may include and or leverage object relational mapping tools such as CocoBase by Thought Inc. Hence the mapping component could receive a variable or tag and map it to one or more corresponding statements commands queries or the like. The statements can then be transmitted via the interface system to the database system for evaluation or execution. The results of the evaluation can be provided to the mapping component utilizing interface system . It should also be appreciated the results of these statements could be fetched from memory such as local cache if available or alternatively from a web service or inter process communication. The mapping component can then copy the results to the appropriated variables or tags or otherwise utilize the results in control logic code.

The data flow between the automation device and database system can thus be performed transparently to a programmer. For instance control tags can be configured mapped linked or aliased to a database value row table or stored procedure such that when the user or other entity utilizes the automation alias they are in effect operating through interface system without having to be explicit about the data movement. The data exchange occurs according to the mapping rules such as use of a local cache involve inter process communications rule based such as periodic update dead band change of state trigger synchronous and asynchronous updates etc. Furthermore such mirroring or aliasing of control system variables tags or the like can be done automatically or semi automatically by mapping component .

By way of example and not limitation consider a situation where a programmable logic controller includes an addition command such as add z x y where z x and y are all integers. The mapping component could receive this command and map x to the query statement Select weight From IngredientsTable Where type flour and map y to the statement Select weight From LiquidTable Where type water. These query statements could then be submitted for evaluation if not available in cache to the database system utilizing interface system . The results of the statements could then be returned to the mapping component which could add the values together to determine the value of z. Subsequently a PLC SQL instruction can utilized to perform an update such as Update totalweight From OutputTable Set totalweight z Where batch 1234. Thus from this example it should be appreciated that control logic can include or directly reference declarative database statements commands and the like as well as employ such statements indirectly through mapping component or any combination thereof. Further local data tags that are references or aliases for a local database value may be updated by a remote client. In this case a PLC controller or automation device is using a data value that may actually be distributed to multiple devices and updated or managed by a central server.

The aforementioned systems have been described with respect to the interaction between several components and or systems. It should be appreciated that such systems can include those components and or systems specified therein some of the specified components and or additional components specified in other systems. Additionally it should be noted that one or more components may be combined into a single component to provide aggregate functionality or divided into several subcomponents. The components may also interact with or be integrated with one or more other components or systems not specifically described herein but known by those of skill in the art.

In view of the exemplary systems described supra a methodology that may be implemented in accordance with the subject invention will be better appreciated with reference to the flow charts of . While for purposes of simplicity of explanation the methodology is shown and described as a series of blocks it is to be understood and appreciated that the subject invention is not limited by the order of the blocks as some blocks may in accordance with the subject invention occur in different orders and or concurrently with other blocks from what is depicted and described herein. Moreover not all illustrated blocks may be required to implement the methodology in accordance with the present invention.

Additionally it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers. The term article of manufacture as defined supra is intended to encompass a computer program accessible from any computer readable device carrier or media.

Turning to a method of data interaction is illustrated in accordance with an aspect of the subject invention. At reference numeral one or more database statements commands transactions or other unit of database or data interaction are transmitted from an automation device such as a controller to a database database management system data warehouse system or other system or service. Such statements can be declarative database statement such SQL or OQL statements specified in string variables for instance. Such statements can specify storage of data and or retrieval of data. Furthermore such statements can invoke one or more stored procedures. These database statements can be transmitted utilizing a protocol such as TCP IP and the like. Initiation of the transmission can be local or remote. For example a controller could receive a command to persist all its data objects tags and the like to a database. At the automation device receives a response. The response can include an indication of whether or not execution of the statement s was successful and or a result set. Subsequently the result set can be copied to some controller variable to effect operation of some device or otherwise utilized in programmatic logic e.g. ladder logic . . . .

In order to provide a context for the various aspects of the invention as well as the following discussion are intended to provide a brief general description of a suitable computing environment in which the various aspects of the present invention may be implemented. While the invention has been described above in the general context of computer executable instructions of a computer program that runs on a computer and or computers those skilled in the art will recognize that the invention also may be implemented in combination with other program modules. Generally program modules include routines programs components data structures etc. that perform particular tasks and or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations including single processor or multiprocessor computer systems mini computing devices mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics industrial controllers and the like. The illustrated aspects of the invention may also be practiced in distributed computing environments where task are performed by remote processing devices that are linked through a communications network. However some if not all aspects of the invention can be practiced on stand alone computers. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to an exemplary environment for implementing various aspects of the invention includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 11 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that the present invention can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like displays e.g. flat panel and CRT speakers and printers among other output devices that require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems power modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above includes examples of the present invention. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the present invention but one of ordinary skill in the art may recognize that many further combinations and permutations of the present invention are possible. Accordingly the present invention is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the terms includes has and having are used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

