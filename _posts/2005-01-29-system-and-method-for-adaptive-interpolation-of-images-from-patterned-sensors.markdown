---

title: System and method for adaptive interpolation of images from patterned sensors
abstract: A adaptive filter interpolation method and system for the demosaicing of color images. In general, input pixels are input in a Bayer-mosaiced pattern (only one color per pixel), and output pixels are in full RGB mode (three color values per pixel). For each pixel location, in raster scan order, the processing steps can be summarized as follows. Following a regular raster scanning order (from left to right and top to bottom), for each pixel location horizontal and vertical gradients are first computed (whose computation depends on the available color for that pixel), and from those the appropriate interpolation filters are chosen from a small set of predetermined filters. Then, the chosen filters are applied to interpolate the missing data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07643676&OS=07643676&RS=07643676
owner: Microsoft Corp.
number: 07643676
owner_city: Redmond
owner_country: US
publication_date: 20050129
---
This is a continuation in part of application Ser. No. 10 801 450 filed Mar. 15 2004 now U.S. Pat. No. 7 502 505 and entitled HIGH QUALITY GRADIENT CORRECTED LINEAR INTERPOLATION FOR DEMOSAICING OF COLOR IMAGES .

The present invention relates in general to processing of digital color images and more particularly to a method and system of adaptively applying filters to obtain a high quality estimate of a missing pixel color at a pixel within the image.

Digital cameras are steadily increasing in popularity due to their declining costs which make them well within the reach of the average consumer. In order to keep costs low many color digital cameras are single sensor digital cameras in which only a single image sensor is used to capture color information for each pixel in a color image. Each image sensor in a single sensor digital camera which is typically a charge coupled device CCD or a complementary metal oxide semiconductor CMOS is part of a sensor array that represent the pixels of a color image. Each image sensor can only generate information about a single color at a given pixel. A color image however is represented by combining three separate monochromatic images. In order to display a color image all of the red blue and green RGB color values are needed at each pixel. In an ideal and expensive camera system each pixel in the sensor array would be provided with three image sensors each one measuring a red green or blue pixel color. In a single sensor digital camera however only a single red blue or green color value can be determined at a given pixel. In order to obtain the other two missing colors a technique must be used to estimate or interpolate the missing colors from surrounding pixels in the image.

Estimating or interpolating missing colors as discussed above is called demosaicing . The demosaicing term is derived from the fact that a color filter array CFA is used in front of the image sensors with the CFA being arranged in a mosaic pattern. This mosaic pattern has only one color value for each of the pixels in the image. In order to obtain the full color image the mosaic pattern must be demosaiced . Thus demosaicing is the technique of interpolating back from the image captured with a mosaic pattern CFA so that a full RGB value can be associated with every pixel. More specifically a single sensor digital camera captures the image using an image sensor array that is preceded in the optical path by a CFA. A highly common mosaic CFA is called the Bayer mosaic pattern. The Bayer mosaic pattern or Bayer filter is shown in . For each 2 2 set of pixels two diagonally opposed pixels have green filters and the other two pixels have red and blue filters. Since the color green G carries most of the luminance information for humans its sampling rate is twice that of the color red R and the color blue B .

There are multitudes of demosaicing techniques available. One of the simplest approaches to demosaicing is bilinear interpolation. In general bilinear interpolation uses three color planes that are independently interpolated using symmetric bilinear interpolation. This interpolation uses a pixel s nearest neighbors having the same color as the color that is being interpolated. In particular referring again to in bilinear interpolation the green value g i j at a pixel position i j that falls in a red or blue pixel is computed by the average of the neighboring green values in a cross pattern as follows 

Bilinear techniques typically use a small region of support. The region of support is the size of a pixel neighborhood whose values are considered for the interpolation of any given pixel. The region of support for the bilinear interpolation techniques described below typically is a 3 3 pixel region of support. Using this small of a region of support keeps memory usage and computational complexity to a minimum.

One problem however with many bilinear interpolation techniques is that they generate significant artifacts in the color image. This is especially true across edges and other high frequency content in the image since bilinear interpolation does not consider the statistical correlation among RGB values. Thus while bilinear interpolation techniques are fast computationally non intensive and easy to implement they are also notorious for producing low quality images due to the significant artifacts mainly blurriness and color fringing that they generate.

Better though more complex interpolation techniques take the correlation among RGB values into account. One group of interpolation techniques consider such correlation by using improved linear filters. For example such a technique is described in a paper by S. C. Pei and I. K. Tam entitled Effective color interpolation in CCD color filter array using signal correlation in pp. 488 491 September 2000 4 . Another group of interpolation techniques consider such correlation by using nonlinear filters. These nonlinear filters essentially adapt interpolation smoothness to a measure of image activity or edginess. For example these nonlinear interpolation techniques are discussed in the following papers 1 P. Long re X. Zhang P. B. Delahunt and D. H. Brainard Perceptual assessment of demosaicing algorithm performance vol. 90 pp. 123 132 January 2002 1 and 2 R. Ramanath W. E. Snyder and G. L. Bilbro Demosaicking methods for Bayer color arrays vol. 11 pp. 306 315 July 2002 2 .

Exploiting correlation among RGB channels is the main idea behind improving demosaicing performance in nonlinear interpolation techniques. Specifically it can be assumed that in a luminance chrominance decomposition the chrominance components do not vary much across pixels. In a constant hue approach described in U.S. Pat. No. 4 724 395 to Freeman entitled Median filter for reconstructing missing color samples the green channel is bilinearly interpolated and then the red and blue channels are interpolated so as to maintain a constant hue defined as the R G and B G ratios. However one problem with this technique by Freeman is that even at the expense of computing these ratios the technique still produces visible artifacts. Moreover using complex operations such as division and multiplication in the computing of interpolations greatly increases the computational complexity processing overhead and implementation cost.

Improved results for nonlinear interpolation techniques can be obtained by starting with bilinearly interpolated green pixels and then applying median filters to the interpolated values of the color differences R G and B G. Improved performance can be obtained by using gradient based nonlinear techniques which typically estimate edge directions and adjust the interpolation formulas so that filtering is performed preferentially along edge directions and not across them. For example one gradient based nonlinear technique is described in U.S. Pat. No. 5 373 322 to C. A. Laroche and M. A. Prescott entitled Apparatus and method for adaptively interpolating a full color image utilizing chrominance gradients . The Laroche and Prescott technique first interpolates the green channel by using both the red and blue channels to determine edge directions which determine unequal weights to the terms in equation 1 for the green channel. The color differences R G and B G then are interpolated. This technique is disadvantageous in that two computational passes are required to compute the missing color data in the image. A technique described in U.S. Pat. No. 5 506 619 to J. E. Adams and J. F. Hamilton Jr. entitled Adaptive color plane interpolation in a single color electronic camera improves on the Laroche and Prescott technique by considering both first and second order pixel differences see also J. E. Adams Design of practical color filter array interpolation algorithms for digital cameras vol. 3028 pp. 117 125 February 1997 7 . Again Adams and Hamilton s technique and most other non linear interpolation methods interpolate the green pixel values first and then use these green values to interpolate the blue and red values. This requires two passes of the image in order to interpolate all red green and blue color values which greatly increases the time necessary to interpolate the missing colors in an image.

A technique described in a paper by E. Chang S. Cheung and D. Y. Pan entitled Color filter array recovery using a threshold based variable number of gradients in vol. 3650 pp. 36 43 Jan. 1999 8 is an improvement on the above techniques by considering a variable number of gradients. A simpler but efficient algorithm that uses soft decision rules to combine interpolation results from horizontal and vertical directions is presented in a paper by X. Wu and N. Zhang entitled Primary consistent soft decision color demosaic for digital cameras in vol. I pp. 477 480 September 2003 9 .

Iterative methods can lead to further improvement by using results from blue and red interpolations to correct the green interpolation and vice versa. That is the basis of a technique described in a paper by R. Kimmel Demosaicing image reconstruction from color CCD samples vol. 8 pp. 1221 1228 September 1999 3 . In Kimmel s approach the interpolation steps are based on a combination of the constant hue and gradient based methods. A more recent technique introduced by Lukac et. al 11 also uses correction steps. A technique based on iterative projections is presented in a paper by B. K. Gunturk Y. Altunbasak and R. M. Mersereau entitled Color plane interpolation using alternating projections in vol. 11 pp. 997 1013 September 2002 6 . The Gunturk technique has the best performance to date on a popular set of standard test images. One problem however with the Gunturk technique is that it has a very high complexity as many as 480 operations per input pixel . Additionally more than one pass across the image is required to interpolate the red green and blue pixel values making this technique slow and computationally inefficient.

The above described nonlinear interpolation techniques typically use a larger region of support that is used in bilinear interpolation techniques. For example a 5 5 pixel region of support is typical for these nonlinear techniques. A 5 5 region of support yields good correlation between RGB values and produce high quality images. A smaller region of support greatly reduces the image quality while larger regions of support require more memory and greatly increase computational complexity.

In a paper by H. S. Malvar L. W. He and R. Cutler entitled High quality linear interpolation for demosaicing of Bayer patterned color images Montreal Canada vol. 3 pp. III 485 488 May 2004 10 and in a co pending patent application entitled HIGH QUALITY GRADIENT CORRECTED LINEAR INTERPOLATION FOR DEMOSAICING OF COLOR IMAGES filed on Mar. 15 2004 and assigned Ser. No. 10 801 450 an interpolation approach was defined that linearly combines a correction term with an interpolation to obtain a high quality estimate of a missing pixel color at a pixel within the image. This interpolation technique for demosaicing color images is simple and has a speed similar to that of bilinear interpolation while producing the high quality images of more complex techniques. However the interpolated image quality sometime suffers when interpolation takes place across horizontal and vertical edges and resulting interpolated images are still subject to artifacts at these points. The artifacts are much attenuated when compared to straight bilinear interpolation but they can still be noticed in some cases.

Therefore what is needed is a high quality interpolation technique that considers correlation among RGB values to improve performance and that is computationally efficient and fast. What is also needed is an interpolation technique that utilizes a larger region of support than bilinear techniques where the region of support is comparable to that used in nonlinear techniques for improved quality. What is further needed is an interpolation technique that optimizes the interpolated image regardless of any edges present in the image. Additionally what is needed is an interpolation technique that allows for all the color data to be interpolated in one computational pass across the data thereby increasing speed and minimizing computational complexity.

The invention disclosed herein includes a high quality adaptive filter interpolation method and system for demosaicing of digital color images. The present invention overcomes the above mentioned deficiencies of current interpolation techniques by providing a high quality interpolation that is computationally efficient fast nearly optimal in a statistical sense and provides superior image quality. Namely the adaptive filter interpolation method and system disclosed herein uses color information from a current pixel and surrounding gradients to determine what type of interpolation filters should be used for each pixel in an image. This adaptive filter interpolation system and method is extremely efficient in that it allows all pixel colors in an image to be interpolated in one pass.

The adaptive filter method and system can operate on color images captured by digital cameras. Prior to display the image is demosaiced using the adaptive filter interpolation method and system. Alternatively a captured digital color image can be stored in a computing device in a compressed mosaiced form. If an application on the computing device needs to access the image the application typically calls an appropriate application programming interface API to obtain the decompressed data. Most applications expect data in the RGB format so the demosaicing must be performed before the image data is sent to the requesting application.

This invention extends the ideas in a paper by H. S. Malvar L. W. He and R. Cutler entitled High quality linear interpolation for demosaicing of Bayer patterned color images Montreal Canada vol. 3 pp. III 485 488 May 2004 10 and a co pending patent application entitled HIGH QUALITY GRADIENT CORRECTED LINEAR INTERPOLATION FOR DEMOSAICING OF COLOR IMAGES filed on Mar. 15 2004 and assigned Ser. No. 10 801 450 that described a set of linear demosaicing filters. One main advantage of the adaptive filter interpolation system and method over the previous invention is that in this invention the set of filters has been extended to include those described in the aforementioned paper 10 and the co pending application plus additional ones targeted at interpolation along horizontal and vertical edges. The filters selected are fast computable close approximations to those that would be statistically optimal considering the statistics of a representative set of color images. For each pixel to be interpolated first directional gradients are computed and the interpolation filters to be used depend on the relative values of such directional gradients.

The adaptive filter interpolation method and system is an efficient new method to perform high quality demosaicing. The coefficients of the filters used approximate statistically optimal Wiener filters and allow fast implementations that use no multiplication operations just additions and shifts although multiplications can be used if the processing hardware supports fast multiplications . The interpolated images generated with the adaptive filter interpolation system and method surpass the fidelity of most algorithms currently in use. Compared to other nonlinear interpolation algorithms this adaptive interpolation system and method has the advantage that only a single pass is made over the image all colors are interpolated during that pass. The better performing algorithms described in the references require two passes one to interpolate green values and another to interpolate red and blue values. A second pass is needed because the filters for red and blue interpolation use the interpolated green values. Plus more passes may be needed to achieve a desirable quality level.

Additionally the adaptive filter interpolation system and method essentially removes artifacts such as zipper effects by choosing the interpolation filters so that they are aligned with edges in the image. For example in a region near a horizontal edge a large gradient in the pixel values in the vertical direction interpolation filters with coefficients mostly in a horizontal pattern are chosen. That way one avoids interpolating across an edge. Analogously in a region near a vertical edge one interpolates in the vertical direction. The adaptive filter interpolation method above requires that the magnitude of the gradient delta G the difference between the pixel value gradients in the horizontal and vertical directions reaches a threshold T for directional filtering to take place. That has a significant impact on improving mean square error MSE and reduces the generation of artifacts in some textured areas and diagonal edges. Furthermore the adaptive filter interpolation system uses near optimal linear filters that are not directionally oriented for pixels in which G is below the threshold T.

The operation of the adaptive filter interpolation system and method can be described as follows. In general input pixels are input in a Bayer mosaiced pattern only one color per pixel and output pixels are in full RGB mode three color values per pixel . For each pixel location in raster scan order the processing steps can be summarized as follows. For each pixel location horizontal and vertical gradients are first computed whose computation depends on the available color for that pixel and the location of that pixel in the mosaic pattern and these gradients are used to select the appropriate interpolation filters from a small set of predetermined filters. Then the chosen filters are applied to interpolate the missing data. The gradient computations filter selection and color interpolation are performed for each pixel before computing the same for the next pixel that is in one pass .

More specifically an image in Bayer format is input. A pixel location is selected based on raster scan order and its pixel color is extracted. Next for the given pixel location the horizontal and vertical gradients are computed by employing a region of support around the given current pixel location in the color image. The region of support is defined as a size of a pixel neighborhood whose color values are considered for computations associated with any given pixel such as the current pixel. A gradient differential G based on the relative values of horizontal and vertical gradients and dependent on the pixel location is then computed. This gradient differential is computed using the current pixel and pixels within the region of support. For each pixel the system decides on which filter to use based on the relative values of the horizontal and vertical gradients. To this end the gradient differential is compared to a threshold T and the interpolation filters are selected based on how the gradient differential compares to threshold T.

Bayer patterns such as that in are not unique and can vary from one camera model to another. For example in each 2 2 group of pixels the green filters could be located at the top left and bottom right positions instead of the top right and bottom left positions shown in . The adaptive filter interpolation method and system can be easily applied to any such rearrangement of the Bayer pattern at each pixel whose two missing color values are to be interpolated one just needs to consider the pattern of neighboring pixels e.g. for a green pixel determine if the immediate horizontal neighbors are red or blue and then choose the appropriate interpolation steps according to the detailed description below.

It is noted that in this section and the remainder of this specification the description refers to various individual publications identified by a numeric designator contained within a pair of brackets. For example such a reference may be identified by reciting reference 1 or simply 1 . A listing of the publications corresponding to each designator can be found at the end of the Detailed Description section.

In the following description of the invention reference is made to the accompanying drawings which form a part thereof and in which is shown by way of illustration a specific example whereby the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.

This invention comprises a new algorithm for adaptive interpolation of images produced by digital cameras using a set of linear filters. To reduce cost almost all digital cameras use a single CCD charge coupled device sensor. To capture the three RGB red green blue color components a mosaic patterned filter is superimposed to the CCD image array as shown in . For each CCD pixel only one color is captured either R G or B. Therefore it is necessary to interpolate the data to generate the other two colors at every pixel. For example the pixel marked with a x in is a red pixel so it has an observed red value. To obtain the green and blue values for that pixel one needs to interpolate the green and blue data available from neighboring pixels. For example to obtain the green value for the x pixel in one could perform a bilinear interpolation based on the green pixels marked o . The process of interpolating the missing RGB data captured with a mosaic patterned CCD color filter array is usually called demosaicing .

The adaptive filter interpolation system and method of the invention describes an efficient new method to perform high quality demosaicing. The coefficients of these filters approximate statistically optimal Wiener filters and allow fast implementations that use no multiplication operations just additions and shifts although multiplications can be used if the processing hardware supports fast multiplications . The interpolated images generated with the algorithm described in the invention surpass the fidelity of most algorithms currently in use. In most general terms for each pixel to be interpolated first directional gradients are computed and the interpolation filters to be used depend on the relative values of such directional gradients.

The adaptive filter interpolation system and method extends the ideas in of a set of linear demosaicing filters described in 10 . One main advantage of this new invention over the previous one is that in this invention the set of filters has been extended to include those in the former invention plus additional ones targeted at interpolation along horizontal and vertical edges. Compared to other nonlinear interpolation algorithms this adaptive filter interpolation system and method has the advantage that only a single pass is made over the image all colors are interpolated during that pass. The better performing algorithms described in the references require two passes one to interpolate green values and another to interpolate red and blue values. A second pass is needed because the filters for red and blue interpolation use the interpolated green values.

In general several basic advantageous ideas underlying the adaptive filter interpolation system and method of the invention are 

Referring to in the first exemplary implementation the adaptive filter interpolation system resides on a digital camera system . In general the adaptive filter interpolation system uses the adaptive filter interpolation method to process image data that is obtained from an image sensor array and outputs missing color values for each pixel . More specifically as shown in the adaptive filter interpolation system is part of the digital camera system and includes the image sensor array . The array is made up of a plurality of image sensors shown by the circles in where each image sensor is capable of determining a single color value.

The image sensor array includes a sensor substrate a color filter array CFA and a microlens array . It should be noted that typically the microlens array is disposed over the CFA which in turn is disposed over the substrate as indicated in by the dashed lines. The light from an image to be captured not shown enters the digital camera system as shown by the arrows . The purpose of the microlens array is to focus the incoming light onto each pixel represented by a single image sensor . The CFA changes the color response of each pixel. The sensor substrate captures the specific color incoming light as dictated by the CFA and generates an electrical signal. In this manner the image sensor array samples the incoming light from an image with red green and blue sensors arranged in the image sensor array .

Each pixel in the image sensor array is the output of a red green or blue sensor. Thus the sensor output is an electrical signal from each sensor that corresponds to a single color value for each pixel in the image sensor array . The output is raw mosaic patterned pixel data . As mentioned above in order to display the full color image color information for red green and blue colors must be obtained at each pixel. This is achieved by demosaicing or the interpolating the missing color values in the mosaic patterned pixel data .

The adaptive filter interpolation system use a novel demosaicing technique to interpolate a high quality estimate of the missing color values. The adaptive filter interpolation system resides on a processing device located on the digital camera system . As detailed below the adaptive filter interpolation system uses the adaptive filter interpolation method to obtain the missing color values at each pixel in the image sensor array .

Referring now to in the second exemplary implementation the adaptive filter interpolation system resides on a computing device . The raw mosaic patterned pixel data is sent from the digital camera system to the computing device . This pixel data typically is sent to the computing device via an interface connection which can be a USB interface an IEEE 1394 interface a Bluetooth interface or any other interface suitable for carrying the raw pixel data from the digital camera system to the computing device . As detailed below the adaptive filter interpolation system uses the adaptive filter interpolation method to obtain the missing color values at each pixel for use by the computing device .

The operation of the adaptive filter interpolation system and method used therein shown in now will be discussed. is a general flow diagram illustrating the general operation of the adaptive filter interpolation system shown in . The adaptive filter interpolation method begins by inputting a current pixel from a color image box . The current pixel has an associated current color. Namely the current color is the color that the image sensor of the current pixel is filtered to receive. Next for each given pixel location the horizontal and vertical gradients whose computation depends on the available color for that pixel and its location in the image are computed box . Using the computed horizontal and vertical gradients the appropriate interpolation filters are chosen from a small set of predetermined filters box . Then the chosen filters are applied to interpolate the missing data box . In other words any of the missing colors at the current pixel are interpolated or estimated. By way of example if the current color is green then the desired color may be red or blue.

In order to more fully understand the adaptive filter interpolation method and system disclosed herein the operational details of an exemplary working example are presented. It should be noted that this working example is only one way in which the adaptive filter interpolation method and system may be implemented.

The previous demosaicing algorithm 10 was aimed at fast computation. It defines a set a near optimal linear fixed filters in the sense of approximating closely optimal linear Bayesian estimators i.e. Wiener filters . While performing better than most non linear algorithms in terms of mean square error MSE measured with respect to the reference 3 CCD image the linear demosaicing in 10 still has color fringing artifacts zipper effects 2 near edges. In the adaptive filter interpolation system and method of the present invention the adaptive filter interpolation system and method essentially removes the zipper effects by choosing the interpolation filters so that they are aligned with edges in the image. For example in a region near a horizontal edge a large gradient in the pixel values in the vertical direction one chooses interpolation filters with coefficients mostly in a horizontal pattern. That way one avoids interpolating across an edge. Analogously in a region near a vertical edge one interpolates in the vertical direction.

Specifically the adaptive filter interpolation system and method scans the pixels in raster scan order and for each pixel it performs two steps 1 gradient differential computation and 2 interpolation as described below.

First a gradient differential Gis computed where where denotes the gradient in the horizontal direction and denotes the gradient in the vertical direction and denotes magnitude or absolute value . The formulas for computing the gradients depend on which pixel location within the Bayer pattern is being computed as described below. 2 Step 2 Interpolation

Then interpolation for the two missing colors is computed via linear filters but the choice of filters is dependent on Gd according to the following rule 

Parameter T is a threshold that controls how aggressive is the decision to interpolate along an edge. The smaller the value of T the more likely one is to switch from a non directional filter to a horizontally or vertically aligned filter.

The main advantages of this process over the well known Hamilton Adams method 7 and others are reduced computational complexity and better filtering performance. The differentiating aspects are 

To completely specify the interpolation process the interpolation formulas for each of the four possible pixel positions in a Bayer array are now defined. For each case one must specify four formulas one for the gradient computation and one for each of the horizontal vertical and non directional filters.

Note by non directional we mean filters that do not put more weight in either horizontal or vertical directions thus they are useful for diagonal edges and also for generic textures where no edge is present.

Red locations are the locations such as the one marked with an X in the top left of . We call Rthe Red value for center pixel and label the neighboring available pixel values as shown in .

First the gradient computation formulas are defined as Now one defines the horizontal interpolation filter for Green 2 where the first term is a bilinear interpolation for the horizontal direction only and the second term is a horizontal correction based on a Red gradient. In a preferred embodiment a good value for the first correction gain parameter is a . The horizontal interpolation filter for Blue is given by where the correction factor Cis computed as Note that the formula above is written in a way as to clearly identify two delta color gradient terms the first term corresponding to a horizontal gradient operator for pixels above the center pixel and the second term corresponding to a horizontal gradient operator for pixels below the center pixel. By regrouping terms an equivalent formula can be used for faster computation for example Now the vertical interpolation filter for Green is defined as 2 In a preferred embodiment a good value for the second correction gain parameter is a . The vertical interpolation filter for Blue is given by with or equivalently Now the diagonal or non directional interpolation filter for Green is defined as 4 and the diagonal or non directional interpolation filter for Blue In a preferred embodiment good values for the third and fourth correction gain parameters are a and a . Note that the interpolated values Gand Bcomplement the known value Rto determine the full RGB values for the current pixel of interest i.e. the pixel at the center in . 2. Interpolation at Blue Locations

The blue locations are the locations such as the one marked with an X in the bottom left of . We call Bthe Blue value for center pixel and label the neighboring available pixel values as shown in .

First the gradient computation formulas are defined Now the horizontal interpolation filter for Green is defined 2 where the first term is a bilinear interpolation for the horizontal direction only and the second term is a horizontal correction based on a Red gradient. In a preferred embodiment a good value for the first correction gain parameter is b . The horizontal interpolation filter for Red is given by where the correction factor Cis computed as or equivalently as Now the vertical interpolation filter for Green is defined as 2 In a preferred embodiment a good value for the second correction gain parameter is b . The vertical interpolation filter for Red is given by with or equivalently Now the diagonal or non directional interpolation filter for Green is defined as 4 and the diagonal or non directional interpolation filter for Red In a preferred embodiment good values for the third and fourth correction gain parameters are b and b . Note that the interpolated values Gand Rcomplement the known value Bto determine the full RGB values for the current pixel of interest i.e. the pixel at the center in . Using the preferred values for the correction gain parameters for the cases I and II one gets the interpolation filters shown in . 3. Interpolation at Green Locations in a Red Row and Blue Column

The green locations are the locations such as the one marked with an X in the top left of . We call Gthe Green value for center pixel and label the neighboring available pixel values as shown in .

First the gradient computation formulas are defined. There are three options the first is to use just the two immediate pixels in each direction as in the previous two cases namely The formulas above are simple but have the disadvantage of measuring the gradient via Red and Blue pixel values. In the first two cases Interpolation at Red and Blue locations gradients were computed from Green pixels. That is appropriate because in most cases edges are more defined in the Green channel.

A second alternative formula for computing the horizontal and vertical gradients around G using only Green pixel values is The formula above produces better results because it uses only Green pixel values.

A third alternative formula for computing the horizontal and vertical gradients around G using only Green pixel values considers the fact that one needs only the magnitude of the gradients to compute the gradient differential G This third formula produces even better results in practice. Now the horizontal interpolation filter for Red is defined as 2 where the first term is a bilinear interpolation for the horizontal direction only and the second term is a horizontal correction based on a Green gradient. In a preferred embodiment a good value for the first correction gain parameter is c . The horizontal interpolation filter for Blue is given by note that Gis a known value not an interpolated one where the correction factor Cis computed as 2 2 An alternative formula for Cthat leads to better results is or equivalently Now the vertical interpolation filter for Red is defined as where the correction factor Cis computed as 2 2 An alternative formula for Cthat leads to better results is or equivalently The vertical interpolation filter for Blue is given by 2 In a preferred embodiment a good value for the second correction gain parameter is c . Now the diagonal or non directional interpolation filter for Red is defined as and the diagonal or non directional interpolation filter for Blue In a preferred embodiment good values for the third fourth and fifth correction gain parameters are c 5 c 1 and c . Note that the interpolated values Rand Bcomplement the known value Gto determine the full RGB values for the current pixel of interest i.e. the pixel at the center in . 4. Interpolation at Green Locations in a Blue Row and Red Column

Green locations in a blue row and a red column are the locations such as the one marked with an X in the top left of . We call Gthe Green value for center pixel and label the neighboring available pixel values as shown in .

First the gradient computation formulas are defined. There are three options the first is to use just the two immediate pixels in each direction as in the previous two cases namely A second alternative formula for computing the horizontal and vertical gradients around Gis The formula above produces better results because it uses only Green pixel values. A third alternative formula for computing the horizontal and vertical gradients around G using only Green pixel values considers the fact that we need only the magnitude of the gradients to compute the gradient differential G This third formula produces even better results in practice. Now the horizontal interpolation filter for Blue is defined as 2 where the first term is a bilinear interpolation for the horizontal direction only and the second term is a horizontal correction based on a Green gradient. In a preferred embodiment a good value for the first correction gain parameter is d . The horizontal interpolation filter for Red is given by where the correction factor Cis computed as 2 2 An alternative formula for Cthat leads to better results is or equivalently Now the vertical interpolation filter for Blue is defined as where the correction factor Cis computed as 2 2 An alternative formula for Cthat leads to better results is or equivalently The vertical interpolation filter for Red is given by 2 In a preferred embodiment a good value for the second correction gain parameter is d . Now the diagonal interpolation filter for Blue is defined as and the diagonal or non directional interpolation filter for Red In a preferred embodiment good values for the third fourth and fifth correction gain parameters are d 5 d 1 and d . Note that the interpolated values Rand Bcomplement the known value Gto determine the full RGB values for the current pixel of interest i.e. the pixel at the center in . Using the preferred values for the correction gain parameters for the cases III and IV one gets the interpolation filters shown in . V. System Components

The adaptive filter interpolation system shown in includes a number of program modules that allow the system to produce a high quality interpolation of missing color at a pixel in a quick simple and efficient manner. is a block diagram illustrating the details of the adaptive filter interpolation system shown in . The program modules contained in the system now will be discussed.

In general referring to the adaptive filter interpolation system inputs color information including the raw mosaic patterned pixel data produced by the image sensor array processes the information and outputs one or more missing color values for each pixel . More specifically the adaptive filter interpolation system includes a current pixel selector that selects a current pixel having a current color from the image sensor array that represents a color image. A gradient computation module computes the gradient in the horizontal and vertical directions and computes the gradient differential G. The filter selection module then compares Gto a threshold T and selects the appropriate filter based on this comparison. The interpolation module computes an interpolation of the missing color values at the current pixel. The interpolation uses pixels with a region of support.

The adaptive filter interpolation method and system are designed to operate in a computing environment and on a computing device such as the processing device contained in the digital camera system or in the computing device . The computing environment in which the adaptive filter interpolation method and system operates will now be discussed. The following discussion is intended to provide a brief general description of a suitable computing environment in which the adaptive filter interpolation method and system may be implemented.

The adaptive filter interpolation method and system is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the adaptive filter interpolation method and system include but are not limited to personal computers server computers hand held laptop or mobile computer or communications devices such as cell phones and PDA s multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The adaptive filter interpolation method and system may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The gradient corrected linear interpolation method and system may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices. With reference to an exemplary system for implementing the gradient corrected linear interpolation method and system includes a general purpose computing device in the form of a computer .

Components of the computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

The computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

Note that the term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within the computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media.

Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad.

Other input devices not shown may include a microphone joystick game pad satellite dish scanner radio receiver or a television or broadcast video receiver or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as for example a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

The foregoing description of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description of the invention but rather by the claims appended hereto.

