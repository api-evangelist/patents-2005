---

title: System and method for limiting exposure of cryptographic keys protected by a trusted platform module
abstract: A cryptographic module for limiting exposure of cryptographic keys protected by a trusted platform module (TPM) is provided. The cryptographic module includes logic for establishing a session with the TPM on behalf of a cryptographic client and logic for sending a request from the cryptographic client to the TPM to retrieve in plaintext a cryptographic key of the cryptographic client. Logic for receiving the cryptographic key in plaintext from the TPM are also included in cryptographic module. Further, cryptographic module includes logic for performing a cryptographic operation requested by the cryptographic client using the cryptographic key, and logic for sending the results of the cryptographic operation to the cryptographic client. A hardware-based method and system for limiting exposure of cryptographic keys also are described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07802111&OS=07802111&RS=07802111
owner: Oracle America, Inc.
number: 07802111
owner_city: Redwood City
owner_country: US
publication_date: 20050427
---
A trusted platform module TPM is a security component specified by the Trusted Computing Group often implemented as a single chip. The TPM typically provides secure boot capability for a computing device as well as protected storage capability for protecting sensitive information such as cryptographic keys. When security conditions specified by TPM standards are satisfied the TPM releases the protected cryptographic keys in plaintext into a host memory. A processor or a cryptographic peripheral may then use the cryptographic keys for cryptographic operations.

Potential vulnerabilities exist with the release of the protected cryptographic keys in plaintext. In particular the cryptographic keys can easily be compromised by being exposed in plaintext outside a highly protected and controlled security boundary. In view of the foregoing there is a need to provide system and method for limiting exposure of cryptographic keys protected by the TPM.

Broadly speaking the present invention fills these needs by providing hardware based methods and systems for limiting exposure of cryptographic keys protected by a trusted platform module TPM . It should be appreciated that the present invention can be implemented in numerous ways including as a method a system or a device. Several inventive embodiments of the present invention are described below.

In accordance with a first aspect of the present invention a hardware based method for limiting exposure of cryptographic keys protected by a TPM is provided. In this method a session is first established with the TPM on behalf of a cryptographic client. Thereafter a request from the cryptographic client is sent to the TPM to retrieve in plaintext a cryptographic key of the cryptographic client protected by the TPM. The cryptographic key is then received in plaintext from the TPM and a cryptographic operation requested by the cryptographic client is performed using the cryptographic key. The results of the cryptographic operation are sent to the cryptographic client.

In accordance with a second aspect of the present invention a cryptographic module for limiting exposure of cryptographic keys protected by a TPM is provided. The cryptographic module includes logic for establishing a session with the TPM on behalf of a cryptographic client and logic for sending to the TPM a request from the cryptographic client to retrieve in plaintext a cryptographic key of the cryptographic client protected by the TPM. Logic for receiving the cryptographic key in plaintext from the TPM is also included in the cryptographic module. Cryptographic module additionally includes logic for performing a cryptographic operation requested by the cryptographic client using the cryptographic key and logic for sending the results of the cryptographic operation to the cryptographic client.

In accordance with a third aspect of the present invention a system for limiting exposure of cryptographic keys protected by a TPM is provided. The system includes a cryptographic client a cryptographic module in communication with the cryptographic client and the TPM in communication with the cryptographic module. The cryptographic module includes a cryptographic service whereby the cryptographic service includes logic for establishing a session with the TPM on behalf of the cryptographic client and logic for sending to the TPM a request from the cryptographic client to retrieve in plaintext a cryptographic key of the cryptographic client protected by the TPM. Further the cryptographic service includes logic for receiving the cryptographic key in plaintext from the TPM and logic for performing a cryptographic operation requested by the cryptographic client using the cryptographic key and logic for sending the results of the cryptographic operation to the cryptographic client.

Other aspects and advantages of the invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings illustrating by way of example the principles of the invention.

An invention is described for hardware based methods and systems for limiting exposure of cryptographic keys protected by a TPM. It will be obvious however to one skilled in the art that the present invention may be practiced without some or all of these specific details. In other instances well known process operations have not been described in detail in order not to unnecessarily obscure the present invention.

The embodiments described herein provide hardware based methods cryptographic modules and systems for limiting exposure of cryptographic keys protected by TPM. Essentially cryptographic functions are performed in a hardware protected environment isolated from the operating system and application programs. In one embodiment as will be explained in more detail below a cryptographic service is situated between a cryptographic client and the TPM. The cryptographic client cannot directly communicate with TPM to retrieve and utilize the cryptographic keys stored within the TPM. Instead the cryptographic client communicates to the TPM through the cryptographic service. After the cryptographic keys are retrieved the cryptographic service performs cryptographic operations requested by the cryptographic client using the retrieved cryptographic keys and returns the results to the cryptographic client.

Cryptographic client is executed in processor and in one embodiment cryptographic module includes cryptographic service and TPM . Cryptographic client may include any suitable applications or services running on a platform and as will be explained in more detail below cryptographic service includes the logic for limiting the exposure of cryptographic keys protected by TPM . It should be appreciated that TPM is a security component specified by a Trusted Computing Group often implemented as a single chip. TPM provides secure boot capability for a computing device as well as a protected storage capability for storing sensitive information such as cryptographic keys and integrity measurements. Specifically the protected storage capability may be used to protect cryptographic keys on behalf of cryptographic client running on a platform. Under control of cryptographic client cryptographic keys may be created either within TPM or external to the TPM and may then be protected by the TPM.

As shown in cryptographic client first sends a request to cryptographic service within cryptographic module to access a cryptographic key protected bound or sealed by TPM . It should be appreciated that TPM provides a service called bind which encrypts the cryptographic key of cryptographic client using a public key whose corresponding non migratable private key is kept secret by the TPM. In addition TPM provides a service called seal whereby the cryptographic key of cryptographic client may be encrypted in a key derived from integrity measurements associated with the cryptographic client and other software or firmware the measurements being stored within platform configuration registers within the TPM and a non migratable asymmetric key. If the cryptographic key of cryptographic client is created externally to TPM such as within cryptographic module the cryptographic key is passed to the TPM for sealing using platform configuration registers relevant to the cryptographic client.

After receiving the request from cryptographic client cryptographic service sends a request to TPM to unseal or unbind the cryptographic key. If security conditions specified by TPM standards are satisfied TPM returns or releases the protected cryptographic key to cryptographic service in plaintext i.e. the unencrypted form of an encrypted message and the cryptographic service stores the cryptographic key within a secure key store of the cryptographic service. After TPM releases the cryptographic key to cryptographic service cryptographic client sends a request to cryptographic service to perform a cryptographic operation using the retrieved cryptographic key. The request may include data to be operated upon. Cryptographic operation may include any suitable operation that is related to cryptography. Exemplary cryptographic operations include encrypting the data decrypting the data signing the data signing a one way hash of the data verifying a signature of the data verifying a signature on a one way hash of the data computing a message authentication code on the data transforming the cryptographic key etc. Cryptographic service returns the results of the cryptographic operation e.g. encrypted data decrypted data etc. back to cryptographic client . The cryptographic operations may also include creating a cryptographic key and storing the cryptographic key for which the key retrieval steps are omitted. Cryptographic keys created by cryptographic service may be protected within TPM either upon request of the cryptographic client or per a policy specified by a trusted administrator via a secure administrative path to cryptographic module .

After receiving the request from cryptographic client cryptographic service sends a request to TPM to retrieve in plaintext the cryptographic client s cryptographic key protected by the TPM. In response TPM returns or releases the protected cryptographic key to cryptographic service in plaintext. Cryptographic service then stores the cryptographic key within a secure key store of the cryptographic service. Thereafter cryptographic client sends data to cryptographic service and requests the cryptographic service to encrypt the data using the cryptographic key. Cryptographic service receives the request and data and encrypts the data using the cryptographic key received from TPM . After encryption cryptographic service sends the encrypted data back to cryptographic client .

As discussed above cryptographic operation may include any suitable operation that is related to cryptography and shows an exemplary cryptographic decryption operation. Cryptographic client sends a request to cryptographic service within cryptographic module to retrieve the cryptographic client s cryptographic key. After receiving the request from cryptographic client cryptographic service sends a request to TPM to retrieve in plaintext the cryptographic client s cryptographic key protected by the TPM. In response TPM returns or releases the protected cryptographic key to cryptographic service in plaintext. Cryptographic service receives the cryptographic key from TPM in plaintext and stores the cryptographic key within a secure key store of the cryptographic service. Thereafter cryptographic client sends data to cryptographic service and requests the cryptographic service to decrypt the data using the cryptographic key. Cryptographic service receives the request and data and decrypts the data using the cryptographic key received from TPM . After decryption cryptographic service sends the decrypted data back to cryptographic client .

Further executed on processor is platform chain of trust that sends integrity measurements of the platform code to TPM as the platform boots and software is loaded. To enable verification that the correct software and firmware components are loaded during a computer boot integrity measurements e.g. cryptographic checksums of computer code using an algorithm are taken on each of the software and firmware components in the boot chain. Per Trusted Computing Group standards the integrity measurement process starts at core root trust for measurement . The integrity measurement may include platform firmware operating system cryptographic framework with its cryptographic API cryptographic client and any other software that cryptographic client depends on. For more information on integrity measurements reference may be made to U.S. patent application Ser. No. 10 934 868 entitled SYSTEMS AND METHODS FOR SECURING A COMPUTER BOOT which is herein incorporated by reference.

After the platform boots cryptographic client may perform cryptographic operations using cryptographic keys protected by TPM . In the embodiment shown in cryptographic client may use a session oriented cryptographic framework with an API such as PKCS 11 to access a cryptographic key protected by TPM . A similar approach can be used for other cryptographic frameworks that do not have a session construct e.g. by carrying client authentication information with each request . It should be appreciated that object attributes of cryptographic framework are maintained for cryptographic keys protected by TPM . These object attributes may be assigned by a trusted administrator over a secure administrative path. For example a cryptographic key attribute definition may be system wide per user or for each cryptographic key individually. System may also define a correspondence between TPM and cryptographic key attributes of cryptographic framework either through system logic or under trusted administrator control. Similarly cryptographic key attributes of TPM are assigned to cryptographic keys of cryptographic framework protected by the TPM. These cryptographic key attributes may also be assigned by a trusted administrator over a secure administrative path.

Still referring to cryptographic client then initiates the establishment of a session with Crypto Module via cryptographic framework by providing authentication information e.g. a personal identification number to the cryptographic framework. Cryptographic framework relays this authentication information to cryptographic service within cryptographic module . At the same time information relating to which TPM s platform configuration registers are relevant to cryptographic client i.e. which platform configuration registers contain integrity measurements for the cryptographic client and the system software on which the client is dependent may be sent from cryptographic framework or configured by a trusted administrator over a secure administrative path.

Cryptographic service then establishes a session with TPM on behalf of cryptographic client . To establish the session cryptographic service determines cryptographic client s TPM identity and authorization data and sends it to TPM . The association between crypto module authentication information of cryptographic client and TPM authorization data may be via an algorithm or may be entered for each of the cryptographic client by a trusted administrator over a secure administrative path. Cryptographic client then sends to cryptographic service a request to use a cryptographic key protected by TPM . Cryptographic service sends a request to TPM for the protected cryptographic key. In response TPM returns the cryptographic key to cryptographic service in plaintext and the cryptographic service stores the cryptographic key in a secure key store. The cryptographic key is retained in the secure key store until the session between cryptographic client and cryptographic module is terminated the cryptographic key is deleted or the cryptographic module is reset or powered down.

After cryptographic service receives the cryptographic key cryptographic client requests through cryptographic framework that data sent by cryptographic client be encrypted using the retrieved cryptographic key and the cryptographic framework relays this request to the cryptographic service over the established session. Cryptographic service validates the request performs the cryptographic encryption operation using the cryptographic key stored in the secure key store and sends the encrypted data back to cryptographic framework . After receiving the encrypted data cryptographic framework relays the encrypted data back to cryptographic client . Other cryptographic operations such as decrypt sign verify compute message authentication code etc. are performed in a similar manner. Multiple cryptographic operations may be performed within a single session.

It will be apparent to one skilled in the art that the functionality described herein may be synthesized into firmware through a suitable hardware description language HDL such as VERILOG. For example the HDL may be employed to synthesize the firmware and the layout of the logic gates for providing the necessary functionality described herein to provide a hardware implementation of the limiting exposure techniques and associated functionalities.

In summary the above described invention provides hardware based methods cryptographic modules and systems for limiting exposure of cryptographic keys protected by a TPM. The cryptographic module provides a hardware protected environment that is isolated from the operating system and application programs. The cryptographic keys are never exposed in plaintext outside the cryptographic module even when the cryptographic keys are retrieved in plaintext from the TPM. Accordingly the introduction of the cryptographic module limits the exposure of cryptographic keys. Additionally as described above an application that uses a cryptographic API can benefit from the protected storage capabilities of a TPM without being modified.

With the above embodiments in mind it should be understood that the invention may employ various computer implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. Further the manipulations performed are often referred to in terms such as producing identifying determining or comparing.

Any of the operations described herein that form part of the invention are useful machine operations. The invention also relates to a device or an apparatus for performing these operations. The apparatus may be specially constructed for the required purposes or it may be a general purpose computer selectively activated or configured by a computer program stored in the computer. In particular various general purpose machines may be used with computer programs written in accordance with the teachings herein or it may be more convenient to construct a more specialized apparatus to perform the required operations.

The above described invention may be practiced with other computer system configurations including hand held devices microprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Although the foregoing invention has been described in some detail for purposes of clarity of understanding it will be apparent that certain changes and modifications may be practiced within the scope of the appended claims. Accordingly the present embodiments are to be considered as illustrative and not restrictive and the invention is not to be limited to the details given herein but may be modified within the scope and equivalents of the appended claims. In the claims elements and or steps do not imply any particular order of operation unless explicitly stated in the claims.

