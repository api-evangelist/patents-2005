---

title: Information processing system, program product, and information processing method
abstract: A boot block that contains a first public key is activated and a system Basic Input/Output System (BIOS) that contains a second public key and a first digital signature is verified, the verifying being performed by confirming that the first and second public keys match. In response to a determination that the first and second public keys match, the BIOS is activated and a system image is loaded to a real device. The system image is verified by confirming that the first digital signature that is stored in the system BIOS matches a second digital signature that is stored in a mass storage device. In response to the first and second digital signatures matching, a virtual mass storage device is created. Control of the virtual mass storage device is transferred to a boot strap code in an operating system image and the operating system image is booted from the virtual mass storage device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07937575&OS=07937575&RS=07937575
owner: Lenovo (Singapore) Pte. Ltd.
number: 07937575
owner_city: Singapore
owner_country: SG
publication_date: 20051219
---
This application claims priority of Japanese patent application No. JP 2004 367548 filed on Dec. 20 2004 and entitled Information Processing System Program Product and Information Processing Method. 

The present invention relates in general to loading a system image. More specifically the present invention relates to a method system and computer program product for verifying that a system image is non corrupt and then forming a virtual device by adding a change to an interface used for a bootstrap code in the verified system image and an OS activated thereby to access a predetermined real device in order that the bootstrap code and the OS may be utilized.

In recent years convenience of communication has improved due to progress in technology for networking allowing various services to be provided through a network. As a result of this improvement the need to transmit personal information on the network has increased as the desire for security in a personal computer and the desire for secure infrastructure including network protocols.

In order to meet these requirements reliability of an operating system OS which is operable on a personal computer is important. Additionally spyware threatens security by monitoring keyboard input and frame buffers of displays.

Prior art methods for solving such problems include a method for using a platform in conformity with standards of the Trusted Computing Group TCG and Boot Integrity Services BIS in the Preboot Execution Environment PXE standard.

Incidentally the TCG standard discloses a computer system in which even if an OS combined with an application program or a user interface is not installed or writable magnetic media are not provided an application program or user interface may be loaded from CD ROM media or a network to be executed.

A platform in conformity with aforementioned TCG standard or providing BIS in accordance with the PXE standard however is difficult to install and support. In addition the prior art provides no technique for securely booting the existing OS.

TCG is not intended to securely perform a system operation and can only provide a mechanism for confirming security of a process and a module before the system operation. In addition BIS according to the PXE standard defines only an authenticating process for a module downloaded through a network but does not specify a process for securely performing OS operation.

A boot block that contains a first public key is activated and a system Basic Input Output System BIOS that contains a second public key and a first digital signature is verified the verifying being performed by confirming that the first and second public keys match. In response to a determination that the first and second public keys match the BIOS is activated and a system image is loaded to a real device. The system image is verified by confirming that the first digital signature that is stored in the system BIOS matches a second digital signature that is stored in a mass storage device. In response to the first and second digital signatures matching a virtual mass storage device is created. Control of the virtual mass storage device is transferred to a boot strap code in an operating system image and the operating system image is booted from the virtual mass storage device.

The present invention includes loading a system image including a boot image for composing a system verifying that the loaded system image is correct and forming a virtual device by adding a change to an interface used for a bootstrap code and an OS to access a predetermined real device in order that the bootstrap code in the image for boot which is verified by the verification means. The OS activated thereby may be utilized.

The system image may include for example an image of a required application program in addition to an image for boot. The system image may be loaded from for example a CD ROM drive a server on the network a hard disk or a USB memory. The bootstrap code includes a code that is read first to start a boot sequence among system images. An OS is activated from a read only data medium for example CD ROM or DVD ROM .

Main memory includes an area for storing an OS image an area for storing a virtual CD ROM image and an area for operation working memory . A bootstrap code which is executed upon booting is also stored in the area . The virtual CD ROM image is accompanied by a digital signature obtained by encrypting a hash value calculated by applying a predetermined hash function to the image with a secret key. The virtual CD ROM image is composed of system images including an OS module and an application program.

A boot block that is first executed upon turning on the power and a system BIOS are stored in ROM . Boot block is set to be writable only before factory shipment and cannot be changed afterward. In other words boot block embodies a Core Root Trusted Measurement CRTM in accordance with the Trusted Computing Platform Association TCPA specification. CD ROM drive can read a CD ROM including the virtual CD ROM image to be loaded to the aforementioned area .

System BIOS is accompanied by a public key corresponding to a secret key used in creating a digital signature . System BIOS is also accompanied by a digital signature obtained by encrypting a hash value calculated by applying a predetermined hash function to the image with a secret key. Boot block is accompanied by a public key corresponding to the secret key used for creating digital signature .

In a preferred embodiment loading is achieved by CPU CD ROM drive and system BIOS or alternatively by CPU network device PXE server system BIOS and PXE boot code in the embodiment shown in which will be described below. System verification will in a preferred embodiment be composed of CPU digital signature system BIOS public key and digital signature in the embodiment shown in . Alternatively CPU network device PXE server digital signature system BIOS public key digital signature and PXE boot code will be used in the embodiment shown in . Moreover a virtual device may be composed of for example CPU and system BIOS in the embodiments shown in .

According to a preferred embodiment after loading a system image including an image for boot for composing a system to a predetermined storage area a verification that the loaded system image is non corrupt is performed. If the system image is non corrupt in order that the bootstrap code in the image for boot verified by the verification means and the OS activated thereby may be utilized a virtual device is formed by adding a change to the interface used for the bootstrap code and the OS to access the predetermined real device.

When the bootstrap code in the loaded system image is then activated the bootstrap code will try to boot a real device first but the access for it will result in an access to a storage area where the system image is loaded because of the virtualization of the device. In addition when an OS tries to access a real device it will result in an access to the storage area where the system image is loaded. Accordingly the boot is to be performed based on the system image that has been verified to be non corrupt.

Even after the boot is completed an attempt to access a real device by the OS results in an access to the storage area where the system image is loaded because of the virtualization of the device. In other words the load for executing the application is always performed from the system image that has been verified to be non corrupt thereby making it possible to achieve a secure computing environment.

According to a preferred embodiment of the present invention the verification that the loaded system image is non corrupt is performed based on whether or not a hash value obtained by decoding an electronic signature accompanying the system image with a corresponding public key is coincident with a hash value obtained by applying a predetermined hash function to the system image.

The verification that the loaded system image is non corrupt is performed by the system BIOS. In this case also for system BIOS a verification that the system BIOS is non corrupt is performed. This verification that the BIOS itself is non corrupt is performed based on the program product and the public key stored in memory means that is fixed to the information processing system so as not to be detached and is non rewritable and the digital signature that corresponds to this public key and accompanies the system BIOS.

The load of the system image is performed by download from the server on the network. Before a control is transferred to the bootstrap code in the downloaded system image the verification that the system image is non corrupt is performed. The download and the control transfer are performed based on for example a procedure in conformity with the PXE standard.

In order to place the verification before the control transfer to the bootstrap code a preferred embodiment will employ a method of monitoring the control transfer to the bootstrap code using an address monitoring mechanism and its control mechanism that the system has and thereby temporarily transferring the control to a verification operation before the control transfer is performed.

According to a preferred embodiment in order that the system image is loaded to perform a verification that the system image is non corrupt and then the bootstrap code in this system image and the OS activated thereby are utilized a virtual device is formed by adding a change to the interface used for the bootstrap code and the OS to access a predetermined real device thereby making it possible to easily achieve a secure computing environment.

Next in Step boot block determines whether or not the verification that system BIOS is non corrupt has been made. If it is determined that the verification has not been made the boot procedure is terminated. If it is determined that the verification has been made the procedure proceeds to Step to activate system BIOS . In Step system BIOS loads virtual CD ROM image currently recorded on the CD ROM mounted on the CD ROM drive to area of main memory .

In Step system BIOS further verifies that loaded virtual CD ROM image namely the system image is non corrupt. In other words the system BIOS determines whether or not a hash value obtained by decoding digital signature accompanying the virtual CD ROM image with public key coincides with a hash value obtained by applying the aforementioned hash function to the virtual CD ROM image and if it determines that they coincide with each other determines that the virtual CD ROM image is non corrupt. As a result of this verification that the OS and the application program included in the virtual CD ROM image are non corrupt has been made. Thus the non corrupt OS is a predetermined secure OS in which the operations of OS modules loaded in memory and permitted to operate are secured.

Next in Step system BIOS determines whether or not the verification that the system image is non corrupt has been made. If it is determined that the verification has not been made the boot procedure is terminated. If it is determined that the verification has been made the procedure proceeds to Step to create the virtual CD ROM. When the bootstrap code that is first read from the virtual CD ROM image and the OS to be activated try to access the CD ROM drive via an interface INT or a device driver a code called by the INT or the device driver is set so as for area of main memory to be accessed. As a result using the same procedure as booting from CD ROM drive the boot will be performed from area .

Next in Step system BIOS reads bootstrap code to area and moves the control to area . As a result in Step the OS will be booted. That is bootstrap code starts booting the OS based on the virtual CD ROM image of area and while loading a file required for activating the OS through the virtual CD ROM drive by the aforementioned INT to area of memory gradually enhances internal functions of the OS.

During enhancement when the aforementioned device driver of the virtual CD ROM operable under the OS environment becomes usable bootstrap code loads a file required for activating the OS to area using the device driver. Thus also in an environment where the device driver of the OS is utilized bootstrap code continues bootstrap in the same procedure as activating the OS via CD ROM drive based on the virtual CD ROM image of area and then completes the boot procedure.

Within this embodiment the system image is loaded to area to verify that it is non corrupt and area is formed into a virtualized device to be provided to the bootstrap code and the OS activated thereby thus making it possible to easily achieve a secure computing environment.

PXE server provides network boot service PXE network boot in accordance with the Preboot Execution environment PXE standard and stores the virtual CD ROM image which will be loaded to area . Network device is provided with a network interface card conforming to the PXE standard for connecting the system to PXE server . PXE boot code conforms to PXE standard and is provided by a vendor of a network card as a ROM image.

PXE network boot is a technique for sequentially downloading a code block for network bootstrap and a main part of an OS system image from a predetermined node on the network namely the PXE server to develop them in the memory and then perform the boot by passing an execution to the downloaded code. In a normal PXE network boot process when the control is transferred to the PXE boot code from the BIOS the PXE boot code then performs linkage processing for moving to the boot of the OS. For this reason before the control is transferred to the OS the BIOS cannot verify under the prior art that the downloaded code is non corrupt.

Thus according to this embodiment system BIOS is configured so as to temporarily obtain an execution right using a memory access trap function that uses a debug register before the control is transferred to the PXE boot code. A standardized entry address used when the PXE boot code transfers the control to the downloaded code. A fixed physical address 7C00 0000h is set as an address of the debug register and the execution of this address is monitored.

When setting the address of the debug register however the execution monitor is invalidated. In other words the PXE boot code itself provided from an external network device vendor unexpectedly utilizes the debug register so that an execution monitoring function of the physical address 7C00 0000h which the present invention intends may be inhibited. For that reason system BIOS serves as a virtual 8086 monitor as a precondition of a virtual 8086 mode and restricts the utilization of the debug register using a code other than that of the system BIOS . The virtual 8086 mode is one of the protected modes provided by the 8086 processor family and provides a processor operating environment in which when a code that operates under the mode performs specific operations a processor exception trap for calling an exception handling routine in the virtual 8086 monitor. It is thus possible to suppress and monitor these specific operations. Under this operating environment when the PXE boot code tries to access the debug register the processor exception occurs and the access may be invalidated so that system BIOS can certainly capture that the execution of the code in the fixed physical address is started and can additionally execute a predetermined verification procedure to the downloaded code.

In Step the PXE boot code loads a network boot program hereinafter referred to as NBP to main memory via the network from PXE server according to the PXE specification. Further in Step just before the control is transferred to NBP from the PXE boot code the system BIOS acquires the execution right again by the trap function. Subsequently in Step the system BIOS verifies that NBP loaded in main memory is non corrupt. In other words the system BIOS determines whether or not a hash value obtained by decoding a digital signature accompanying NBP with public key corresponding to this digital signature accompanying the BIOS coincides with a hash value obtained by applying a predetermined hash function to NBP. If they coincide with each other the system BIOS determines that NBP is non corrupt.

Next in Step it is determined whether or not the verification that the NBP is non corrupt has been made. If it is determined that the verification has not been made the boot procedure is terminated. If it determines that the verification has been made the procedure proceeds to Step and the system BIOS creates the virtual CD ROM drive and then transfers the control to NBP in Step . Incidentally because the creation of the virtual CD ROM drive may be completed just before NBP transfers the control to the system image NBP may create the virtual CD ROM drive just before the control is transferred to the system image from NBP.

Next in Step NBP loads an entire system image from PXE server . In Step NBP further verifies that the entire system image is non corrupt. In other words when a hash value obtained by decoding the digital signature accompanying the system image with the public key corresponding to this digital signature is coincident with a hash value obtained by applying a predetermined hash function to the entire system image NBP determines the verification that the entire system image is non corrupt has been made.

The terms NBP loads a system image means that NBP suitably arranges the system image in the main memory as the virtual CD ROM image that the virtual CD ROM drive should keep as shown also in .

In Step NBP further determines whether or not the verification that the entire system image is non corrupt has been made. If it is determined that the verification has not bee made the boot procedure is terminated and meanwhile if it is determined that the verification has been made the procedure proceeds to Step . The procedures of Step and are similar to those of Steps and shown in .

According to this embodiment also in booting the network the system image is loaded to area to verify that it is non corrupt and area is formed into a virtualized device to be provided to the bootstrap code and the OS activated thereby thus making it possible to easily achieve a secure computing environment.

As a result of this it has become possible to treat a password that has been conventionally controlled only by BIOS using the OS and the application having the network function National language Support NLS Graphical User Interface GUI or the like thereby making it possible to provide service such as password backup distribution policy setting on security or the like to an information system without decreasing a security level.

In addition in order to set the Trusted Platform Module TPM in conformity with TCG to an enable state it is necessary under the prior art to enter a supervisor password on the OS. In practice however a password with administrator authority is informed when an end user or an administrator executes an enabling operation on an end user s machine. As opposed to this when the present invention is used it becomes possible to authenticate the end user via the network allowing a TPM chip to be set to an enable state without an administrator s interaction.

Moreover the present invention makes it possible to securely perform an update of system software a patch for an OS or a distribution of a modified module.

It should be understood that the present invention is not limited to aforementioned embodiments but may be achieved with a suitable modification. For example in the aforementioned embodiment it is configured in such a way that the load of the system image to area is executed through CD ROM drive or network device but instead of this it may be executed through a USB memory or a hard disk.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

