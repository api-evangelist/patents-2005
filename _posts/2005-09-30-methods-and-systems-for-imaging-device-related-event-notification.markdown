---

title: Methods and systems for imaging device related event notification
abstract: Aspects of the present invention relate to systems, methods and devices for imaging device event notification administration and subscription. Some aspects relate to selective imaging device event notification based on user credentials and/or the occurrence of a specific event. Some aspects relate to the construction, maintenance and use of an event subscription record that is used to manage imaging device event notification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001183&OS=08001183&RS=08001183
owner: Sharp Laboratories of America, Inc.
number: 08001183
owner_city: Camas
owner_country: US
publication_date: 20050930
---
This application is a continuation in part of U.S. patent application Ser. No. 10 962 248 entitled Methods and Systems for Imaging Device Remote Application Interaction filed on Oct. 8 2004 this application is also a continuation in part of U.S. patent application Ser. No. 10 961 793 entitled Methods and Systems for Imaging Device Remote Form Management filed on Oct. 8 2004 this application is also a continuation in part of U.S. patent application Ser. No. 10 961 911 entitled Methods and Systems for Imaging Device Remote Location Functions filed on Oct. 8 2004 this application is also a continuation in part of U.S. patent application Ser. No. 10 961 594 entitled Methods and Systems for Imaging Device Remote document Management filed on Oct. 8 2004 and this application is also a continuation in part of U.S. patent application Ser. No. 10 962 103 entitled Methods and Systems for Imaging Device Document Translation filed on Oct. 8 2004 this application also claims the benefit of U.S. Provisional Patent Application No. 60 704 066 entitled Methods and Systems for Imaging Device Applications filed Jul. 28 2005.

Embodiments of the present invention comprise methods and systems for imaging device event notification.

Imaging devices such as printers copiers scanners and fax machines can have a wide array of functions and capabilities to fit specific uses or combinations of uses. Imaging devices often take the form of a multi function peripheral device MFP that combines the functions of two or more of the traditionally separated imaging devices. An MFP may combine any number of imaging devices but typically comprises the functions of a printer scanner copier and fax machine.

Some imaging devices may contain computing resources for data storage and processing such as processors hard disk drives memory and other devices. As imaging devices add more features and functions they become more costly and complex.

More complex imaging devices and MFPs may comprise network connectivity to provide communication with other computing devices such as personal computers other imaging devices network servers and other apparatus. This connectivity allows the imaging device to utilize off board resources that are available on a connected network.

Imaging devices typically have a user input panel with an array of buttons knobs and other user input devices. Some devices also have a display panel which can be for display only or can be a touch panel display that enables user input directly on the display.

Devices with touch panel displays or displays with buttons arranged in cooperation with the display can display menu data that may be selected by user input. This menu data is typically driven by an on board server module within the imaging device.

Embodiments of the present invention comprise systems methods and devices for interacting with a remote computing device from an imaging device. These embodiments comprise remote computing devices configured to communicate with imaging devices imaging devices configured to communicate with remote computing devices and systems comprising various combinations of remote computing devices in communication with imaging devices.

Embodiments of the present invention comprise methods and systems for imaging device event notification.

The foregoing and other objectives features and advantages of the invention will be more readily understood upon consideration of the following detailed description of the invention taken in conjunction with the accompanying drawings.

Embodiments of the present invention will be best understood by reference to the drawings wherein like parts are designated by like numerals throughout. The figures listed above are expressly incorporated as part of this detailed description.

It will be readily understood that the components of the present invention as generally described and illustrated in the figures herein could be arranged and designed in a wide variety of different configurations. Thus the following more detailed description of the embodiments of the methods and systems of the present invention is not intended to limit the scope of the invention but it is merely representative of the presently preferred embodiments of the invention.

Elements of embodiments of the present invention may be embodied in hardware firmware and or software. While exemplary embodiments revealed herein may only describe one of these forms it is to be understood that one skilled in the art would be able to effectuate these elements in any of these forms while resting within the scope of the present invention.

Embodiments of the present invention comprise interfaces and architecture that integrate imaging devices with remote computing device applications and environments to provide solutions that may not be possible solely with an imaging device alone. Some embodiments comprise an infrastructure and set of interfaces that allow applications on a network to programmatically control imaging device functions and interact with a user through an imaging device input panel. Software functions that are not practical within the imaging device can be performed on the server but are accessible from the imaging device.

For the purposes of this specification and claims an imaging device IDev may be described as a device that performs an imaging function. Imaging functions comprise scanning printing copying image transmission sending and receiving image conversion and other functions. Exemplary imaging devices comprise printers copiers facsimile machines scanners computing devices that transmit convert or process images and other devices. An IDev may also perform multiple imaging functions. For example and not by way of limitation a multi function peripheral device MFP which typically has the capability to perform a plurality of functions comprising a printer scanner copier and or a facsimile machine or image transmitter receiver is a type of imaging device. Other MFP imaging devices may comprise other combinations of functions and still qualify as an IDev.

For the purposes of this specification and claims a remote computing device RCD is a device capable of processing data and communicating with other devices through a communications link. An RCD is a remote device because it requires a communications link such as a network connection a telephone line a serial cable or some other wired or wireless link to communicate with other devices such as an imaging device. Some exemplary RCDs are network servers networked computers and other processing and storage devices that have communications links.

Some embodiments of the present invention may be described with reference to . These embodiments comprise an imaging device IDev that may be a multi function peripheral device MFP or a single function device. The imaging device further comprises a user interface UI panel which may comprise input buttons and a display device or may comprise a touch panel system with or without buttons . User input and display may also be performed through a separate UI device which may be connected to the imaging device by a communication link such as a USB connection a network cable a wireless connection or some other communications link. UI device may comprise an input device such as a keyboard or buttons as well as a display device which may also be a touch screen panel. UI device may also comprise an interface for transfer of instructions that are input to the device from a remote input device. This form of UI device may comprise memory sticks USB memory cards and other storage devices that may be configured to store input for transfer to an imaging device.

These embodiments further comprise a remote computing device RCD that is linked to the imaging device via a communications link such as a network connection. This network connection may be a typical wired connection or a wireless link.

Embodiments of the present invention may provide menu data from the RCD to the imaging device UI panel or remote panel via the network connection . Once this menu data is fed to the imaging device an UI panel on the imaging device may be used to interact with applications that run on the remote computing device . User input received from UI panels may be returned directly to the remote computing device .

A Web Service is a software application identified by a Uniform Resource Identifier URI whose interfaces and binding are capable of being defined described and discovered by Extensible Markup Language XML artifacts and supports direct interactions with other software applications using XML based messages via Internet based protocols.

An application on the remote computing device may use one or more Web Services to control various features in the imaging device such as enabling disabling or setting device values or controlling device functions.

Embodiments of the present invention allow network applications running on remote computing devices to interact with the user of the imaging device through the imaging device I O panel. These embodiments allow imaging device user interface UI control i.e. touch panel button display by applications. Some embodiments may also integrate custom display screens or menus with the native imaging device UI. Embodiments may hand off control of imaging device functions between standard operation modes performed on the imaging device in response to user input to an imaging device UI and open systems modes that utilize network resources such as applications on RCDs through user input at the imaging device UI.

Embodiments of the present invention comprise network based applications that have full control over the imaging device UI to display text and graphics in any format. In these embodiments the application can programmatically display buttons textboxes graphics etc. in any layout desired.

In some embodiments the UI layout is easy to program using a standard language such as a markup language. These languages comprise Hypertext Markup Language HTML Extensible Markup Language XML Wireless Markup Language WML Extensible Hypertext Markup Language XHTML and other languages.

In some embodiments of the present invention a remote computing device application or server application is able to request a keyboard UI to be displayed on the imaging device display . In some embodiments this functionality is available on the imaging device and does not need to be recreated by remote computing device applications. In some embodiments the remote computing device may define the keyboard prompt and default values. These embodiments may comprise a remote computing device that is able to rename imaging device UI buttons such as the OK and Cancel buttons as well as define additional buttons.

In some embodiments menu templates may be served to the imaging device UI by the imaging device itself or from a remote computing device .

Some embodiments of the present invention may comprise a remote computing device application that is registered as the External Authorization server. The External Authorization application may control access to the imaging device and may have top level control of the UI. UI control may be given to this application in the same manner that control is given to an internal auditor.

In these embodiments when an imaging device system boots it checks to see if an External Authorization application is registered. If so the imaging device is placed in disabled mode and the application is contacted to take control of the UI. If the External Authorization server is not available an error message may be displayed and the device may remain disabled. The imaging device may periodically try to contact the External Authorization server until it is available. Table 1 below describes what entity has control of the UI in an exemplary embodiment when the device is in a disabled state.

In embodiments of the present invention access to the custom UI panels of imaging devices may vary from application to application. Some solutions such as Document Management integration may wish to leverage the native Image Send screens but display some custom UI s to gather additional information about a scan job. Other solutions like custom printing applications may be accessed from a separate mode than the native functions.

In order to accommodate the diversified needs of these solutions applications embodiments may support multiple integration points for UI control. These integration points are based on a user action trigger for which applications may register. In some embodiments applications may be registered with target devices so that the device knows that when trigger A occurs on the front panel to contact remote computing device B for instructions. In exemplary embodiments applications may be integrated with an imaging device at any of several trigger points.

Remote computing devices may be registered to a specific function and contacted when that function s hardware key is pressed e.g. Image Send on the imaging device UI. Any UI information provided by the remote computing device may be displayed instead of the standard function screens native to the imaging device. This trigger may be used for applications that wish to replace the existing functions with completely custom UI s such as an alternative scan solution or a specialized display such as a Section 508 compatible screen or other specialized need interface that may have large buttons or other accommodations.

In some embodiments each function on the imaging device may have a menu on the touch screen that remote computing devices such as servers can register. This enables solutions applications to provide custom content and still use some of the standard functionality provided by the imaging device. When a button assigned to a custom application is selected a menu will be displayed with the solutions registered to that function. Users may select the desired solution and the remote computing device will be contacted for instructions.

In some embodiments a stand alone RCD mode that provides remote computing device application access can be accessed from the job queue portion of the UI that is displayed on every screen. This trigger point may be used for applications that do not fit within one of the standard device functions such as custom printing solutions on an imaging device. When the RCD menu is selected a menu will be displayed with the solutions applications registered to the generic RCD mode. Users will select the desired solution and the remote computing device will be contacted for instructions.

In some embodiments of the present invention when an imaging device is enabled additional hardware keys may be used to manage the device. Hardware key assignments for an exemplary embodiment are shown in table 2.

In some embodiments in addition to the key for logout a timeout period may be implemented. Some embodiments also comprise an auto clear setting that can be configured for a given period of time such as 10 to 240 seconds or disabled . In these embodiments when there is no activity for the time configured in auto clear the device may automatically return to disabled mode and attempt to contact a remote computing device to retake control of the UI.

Depending on a particular solution a remote computing device application may have full or only partial control of the imaging device UI and a particular imaging job. In some embodiments partial control may include cases where a remote computing device is monitoring clicks but native modes are responsible for the UI interaction and controlling the job. Partial control may also include cases where the remote computing device application is integrated with a native mode UI trigger function custom menu . In these embodiments the imaging device may handle all error and jam notifications with only a notification sent to the relevant remote computing device application.

For some embodiments in cases where the remote computing device application has full control over the UI and the job error and jam notifications may be handled differently depending on the type of error. For recoverable errors a notification may be sent to the remote computing device application and the application may be responsible for displaying messages and resolving the error. For non recoverable errors the imaging device and RCD mode may interact to gracefully handle the error condition e.g. provide user with instructions for clearing jam .

In some embodiments at different points throughout an imaging job several applications may need control over an imaging device including but not limited to an External Authorization application a standard RCD application an imaging device native mode and other applications. The following section describes for an exemplary embodiment the various steps in an exemplary job the entities that may have control during each step and what type of control may be allowed.

Step 1 User provides credentials to access the device at the device UI. This step may be controlled by a remote computing device such as an External Authorization application or by Internal Accounting native mode in the imaging device itself. At the end of this step the device is enabled. The External Authorization application may also specify default parameters or disable specific job parameters e.g. default file format is PDF but user may change color mode is set to B W and user may not change .

Step 2 User sets parameters for the job using one of the native imaging device modes or a standard RCD application. At the end of this step the user makes an input to initiate the job. When the input is made an optional notification may be sent to the standard RCD application which can then change job parameters if desired. An e mail application is one example of an application that may request notification when the user input is made. A user may use native Image Send screens or other input to select scan options and choose e mail recipients. A user may then select a custom application button and choose the scan to e mail option from the menu. The e mail application may then display custom screens for the user to set permissions for the file. Once a user places the original document s on the scanner and initiates the process the e mail application may capture the destination parameters set by the user and change the target destination to the e mail application FTP server. The e mail application may then receive the file apply the appropriate permissions and send to the e mail recipients selected by the user. A remote computing device application may also want to retake control of the UI at this point if as in some embodiments the application generates thumbnails of the scanned images and displays them to the user for verification.

Step 3 Once the job is initiated the imaging device is responsible for scanning or RIPing the job and spooling it to the HDD. If the imaging device is configured to authorize jobs with an external authorization application it may send a click report to the application and wait for instructions. The external authorization application may enable the job for sending printing cancel the job or change job parameters and then enable . As an example a rules based printing application may wish to change job parameters after it receives a click report. Some rules based printing applications support rules based printing and scanning that can limit what each user is allowed to do based on the time of day the destination or many other parameters. For example only users in the marketing group may be able to scan high quality color images. If a user from another group selects color and 600 dpi a rules based application may change the parameters to color and 200 dpi. At the end of this step the job should either be authorized or canceled.

Step 4 In some embodiments this may be an optional step where the standard RCD application in step 2 may have specified the destination as a HDD for temporary storage. This step may also be used in some embodiments by a Java application running on the imaging device. For example a government office may have a custom encryption application running on the device that takes the scanned document encrypts it and then requests the imaging device to send it to the target destination selected by the user in step 2. In some embodiments it may be beneficial to send a notification to the external authorization application after this step because the imaging device does not know how long the file will be on the HDD or what the application is going to do with it and after the send print step.

Step 5 In the final step the file is actually output. In typical embodiments the file is either sent over the network or printed locally. At the end of this step a notification that the job was successfully completed should be sent to the external authorization application and optionally to the standard RCD application.

The API s may be used to allow a remote computing device application to control access to an imaging device for vend applications and to manage the device from a remote location.

In some embodiments of the present invention a Device Control and Vend API allows applications to enable and disable access to the device and track click counts. The Device Control and Vend API may provide an RCD with the following controls 

Enable disable device of function this may allow an RCD to enable or disable access to the device as a whole or by function to enforce individual user privileges. In some exemplary embodiments the functions listed in Table 3 may be selectively enabled or disabled by an application.

Report clicks used at the end of a successful job the clicks used may be reported back to an RCD including 

Debit mode in these embodiments when an application enables the device it may specify if the current job requires authorization. If so the job will be spooled to memory and click information e.g. as defined in Table 4 will be sent to an RCD. An RCD will then notify the device if the job should be deleted or output sent. At this point the application also has the option of changing job parameters. If the application does not require authorization the job will continue as normal and a click report will be sent at the end of the job.

Print job accounting in these embodiments an RCD may wish to monitor print jobs along with walk up functions. For print job accounting an IDev may monitor all incoming print jobs and send accounting data in the PJL header to an RCD for verification before printing the job. The RCD will evaluate the accounting data or lack thereof and inform the IDev to continue with or cancel the job.

Report on unidentified jobs in these embodiments an RCD may also wish to monitor print jobs that it cannot associate to a specific user such as device reports and incoming fax jobs. The RCD can register to receive click counts for all unidentified jobs so that it may bill them to a general account.

In some embodiments of the present invention a Device Management API allows a network application to remotely setup and manage the imaging device. In exemplary embodiments the Device Management API may provide an RCD with the following controls 

The above groupings are provided only as an exemplary embodiment detailing which settings should be included. In some embodiments actual API s should be grouped by functional areas since there may be overlap between Key Operator settings and web page settings.

In some embodiments an Internal Accounting API may allow a remote computing device application to configure internal accounting and report click counts. In some exemplary embodiments an Internal Accounting API may include 

Some embodiments of the present invention may comprise a Font and Form Management API which allows an RCD application to remotely download and manage fonts and forms in mass storage. In some exemplary embodiments a Font and Form Management API may provide a remote computing device with the following controls 

In some embodiments of the present invention a Firmware Management API may allow a remote computing device or network application to remotely download and manage the imaging device firmware. In some exemplary embodiments a Firmware Management API may provide a remote computing device e.g. a server with the following controls 

In some embodiments of the present invention device function API s allow a remote computing device application to use existing imaging device functionality to provide new custom solutions.

In some embodiments an Image Send API may provide the remote computing device application with the following controls 

In some embodiments a remote computing device can change the default values on the imaging device or the values for the current job. For the current job the remote computing device may also specify if scan parameters may be modified by the user or not. If one remote computing device application e.g. Access Control specifies that a parameter cannot be changed and then a second application e.g. Document Management tries to set the parameter a notification may be sent to the second application and the setting will not be changed.

In some embodiments print jobs may be submitted by remote computing device applications using standard printing channels. In some exemplary embodiments a Print API may provide a remote computing device with the following additional control 

In some embodiments of the present invention a Copy API may provide a remote computing device with the following exemplary controls 

In some embodiments a remote computing device can change the default values on the imaging device or the values for the current job. For the current job the remote computing device may also specify if copy parameters may be modified by the user or not.

In some embodiments of the present invention a Document Filing API may provide a remote computing device with the following exemplary controls 

Allowing external applications to control an imaging device opens up the imaging device to new security vulnerabilities. In embodiments of the present invention that provide some security measures the following exemplary items are security concerns that may be addressed by the remote computing device interface.

Access to remote computing device interfaces may be limited to valid applications. Embodiments provide extensive access and control of the imaging device which poses a significant security risk. The interface of these embodiments may be protected from access by attackers while maintaining ease of setup and use for valid solutions.

Confidential data user credentials and job data may be protected during network transfer. User credentials and job data may be secured during network transfer to ensure that it cannot be stolen an intruder cannot monitor device activity and a man in the middle attack cannot change messages. Imaging devices may support Secure Sockets Layer SSL and other connections to ensure data is safe while being communicated between the imaging device and remote computing device applications.

Administrators may have the ability to lock down imaging device access. For users with strict security policies administrators may have the ability to disable access by remote computing devices or limit access to specific applications. Administrators may have an option to register the limited applications that they wish to access the imaging device interfaces.

Remote computing device applications may ensure the imaging device is not being spoofed. The remote computing device may be able to authenticate an imaging device that it is contract with it to ensure an intruder cannot imitate the imaging device to collect network configuration and password information monitor file folder structures of a document management system or spoof security settings and DSK status of the imaging device.

A remote computing device may ensure that the server is not being spoofed. The imaging device must be able to authenticate all remote computing devices that it is in contact with to ensure that an intruder is not spoofing the remote computing device s IP address. By pretending to be the remote computing device an intruder could steal user credentials redirect scanned documents change device settings or firmware or bring down the access control system either to provide access to unauthorized users or initiate a denial of service attack for valid users .

Access control vend applications may not be compromised when a remote computing device is unavailable. When the remote computing device is unavailable it may not be acceptable to provide open access to the device. If the remote computing device is unavailable at startup or becomes unavailable at anytime e.g. someone disconnects network cable the imaging device may immediately be disabled and an error message displayed.

An administrator may be able to adjust a security level based on company and application requirements. Security requirements can have a large impact on the time it takes to develop a remote computing device application and the resources required to implement the solution. Users using some embodiments may range from a small business with one imaging device no IT staff and a simple scan or print application to a large government office using access control and audit trails to track all device activity. The security measures used to protect imaging device interfaces may be adjustable by the administrator to match the target environment.

The imaging device and remote computing device applications may be able to hand off user credentials. Users may be prompted to login at multiple points throughout a job. For example an access control application or accounting application may control total device access the imaging device may have user authentication enabled for Image Send and a document management application may require user login before showing a folder list. In many environments all of these applications will use a common user database. In some embodiments it is therefore desirable for the applications to pass user credentials to each other so that each one does not have to repeat the authentication process.

Some embodiments of the present invention may be described with reference to . These embodiments comprise an imaging device only which is configured to interact with a remote computing device such as a server through a communications link. The imaging device comprises a user interface which comprises a user input device such as a keypad one or more buttons knobs or switches or a touch screen panel and a display which may comprise user input device in the form of a touch screen panel.

Imaging device will typically be capable of performing one or more imaging functions including but not limited to scanning printing copying facsimile transmission sending and receiving and others.

These embodiments further comprise a communications link which may be a wired connection as shown in comprising a network cable a Universal Serial Bus USB cable a serial cable a parallel cable a powerline communication connection such as a HomePlug connection or other wired connections. Alternatively the communications link may comprise a wireless connection such as an IEEE 802.11 b compliant connection a Bluetooth connection an Infrared Data Association IrDA connection or some other wireless connection.

The operation of some imaging device embodiments may be explained with reference to . In these embodiments menu data is received from a remote computing device not shown in which is connected to the imaging device via the communication link through a wired or wireless connection. This menu data is then displayed on the imaging device user interface display . This display of remote menu data is intended to prompt a user to make an input on the user interface input device .

Imaging devices of these embodiments are further configured to accept input from a user in response to a display of remote menu data and communicate that user input to a remote computing device. In some embodiments this user input data will be processed by a remote computing device. This may comprise running an application on the remote computing device. This processing may also comprise accessing and communicating data that is stored on the remote computing device.

The imaging devices of these embodiments are further configured to receive data resulting from processing the user input data. This may comprise data generated by an application running on the remote computing device in response to the user input. The imaging device may also receive data that was stored on a remote computing device such as a file server in response to processing the user input.

Once the imaging device has received the processed data the imaging device may perform a native function in response to the data or using the data. For example and not be way of limitation the imaging device may print a document that was stored on the remote computing device and modified on the remote computing device according to the user input. As another non limiting example the imaging device may active or enable functions i.e. scanning copying printing fax transmission on the imaging device in response to the receipt of processed data.

Some more specific imaging device embodiments may be explained with reference to . In these embodiments the imaging device is configured to receive menu data formatted in a markup language from a remote computing device. The communication link by which the menu data is communicated may be established and maintained using a Hypertext Transfer Protocol HTTP . The markup language may comprise terms from Hypertext Markup Language HTML Extensible Markup Language XML Wireless Markup Language WML Extensible Hypertext Markup Language XHTML and or other languages.

Once the menu data is received it may be displayed on the imaging device user interface display . As in previously described embodiments the menu data is typically intended to prompt user input on imaging device user interface . Display of the remotely stored menu data may be accomplished with a browser application that is native to the imaging device .

In these embodiments the imaging device is further configured to route user input received though its user interface to a remote computing device. The remote computing device that receives the user input may then run an application or otherwise process the user input and return the results of the processing to the imaging device . Accordingly the imaging device is further configured to receive processed data from a remote computing device. In some embodiments the imaging device may perform one or more functions in response to the receipt of processed data.

Some embodiments of the present invention may be explained with reference to . These embodiments comprise a remote computing device RCD which has a communications link . Communications link may be a wired connection as shown in comprising a network cable a Universal Serial Bus USB cable a serial cable a parallel cable a powerline communication connection such as a HomePlug connection or other wired connections. Alternatively the communications link may comprise a wireless connection such as an IEEE 802.11 b compliant connection a Bluetooth connection an Infrared connection such as those defined in the Infrared Data Association IrDA standard or some other wireless connection. In some embodiments RCD may further comprise a data storage device which is typically a hard drive but may also be an optical drive device such as an array of compact disk drives flash memory or some other storage device.

Embodiments of RCD may be further described with reference to . In these embodiments RCD comprises a processor for processing data and running programs such as operating systems and applications. RCD may further comprise memory which may be in the form of Random Access Memory RAM and Read Only Memory ROM . Generally any applications processed by processor will be loaded into memory . RCD may further comprise a network interface which allows RCD to communicate with other devices such as an imaging device . In some embodiments RCD may also comprise a user interface but this is not required in many embodiments. Storage may be used to store applications and data that may be accessed by an imaging device of embodiments of the present invention. Processor memory storage network interface and optionally user interface are typically linked by a system bus to enable data transfer between each component. Communications link may couple the RCD to other devices via network interface .

In some embodiments described with reference to an RCD may comprise menu data stored on storage device or in memory . This menu data may be configured for display on an imaging device user interface . Menu data may be stored in many formats and configurations. In some embodiments menu data may take the form of terms expressed with a markup language. The markup language may comprise terms from Hypertext Markup Language HTML Extensible Markup Language XML Wireless Markup Language WML Extensible Hypertext Markup Language XHTML and or other languages. In these embodiments menu data may be sent through a communications link to an imaging device . Accordingly menu data configured for display on an imaging device is stored on RCD .

An RCD of some embodiments will be further configured to receive user input obtained through the user interface of an imaging device and transferred to the RCD over communications links . Once this input data is received at an RCD the input data may be processed . This processing may comprise conversion of the data to a new format execution of commands contained within the data or some other process. Once the input data has been processed the processed output may be sent back to the imaging device where the processed output may be used in an imaging device process or function.

In some embodiments as described with reference to an RCD may send menu data configured for an imaging device display using a markup language. The markup language menu data is then received at the imaging device and displayed to a user. Typically this will prompt the user to enter an input on the imaging device user interface . This user input will then be sent by the imaging device to the RCD . The RCD will then receive the input data prompted by the display of the menu data on the imaging device . Once received the input data may be processed on the RCD . Processing may comprise the selection recordation and or modification of a form document or other data stored on RCD the authorization of a user identified by the user input the translation of a document input by the user generation of a map or other directions related to user input or some other process or function.

Some embodiments of the present invention may be described with reference to . These embodiments comprise at least one RCD and a plurality of imaging devices . In these embodiments at least one of the imaging devices comprises a user interface with a display and user input panel that is integral with the display i.e. touch screen or a separate input unit. RCD is connected to imaging devices by a communications link and network to enable data transmission between RCD and imaging devices 

In these embodiments menu data is stored on RCD and sent to at least one of the imaging devices where the menu data is displayed on a user interface. Any of Imaging devices that receive the menu data are configured to accept and transmit user input to an RCD . Once the user input data is received at the RCD the data may be processed as discussed in previously described embodiments. The result of processing may then be sent back to any combination of the imaging devices 

In these embodiments a single RCD may be used to provide processing power resources and functionality to a plurality of imaging devices without reproducing these resources in each imaging device. In some embodiments data generated by input on one imaging device may be directed to another imaging device for processed data output or final processing.

Embodiments of the present invention provide systems and methods for notification techniques between an imaging device IDev and an application which may be local or on a remote computing device RCD . These notification methods and systems may be used for error reporting and other purposes. Applications may receive these notifications by subscribing to a notification application on an IDev. The IDev may then notify an application when a specific event occurs on the IDev or an associated device.

In some embodiments subscribing to an event may comprise making a call to an IDev Web Service and identifying an event for which notification is desired. In some embodiments an application may additionally subscribe to an event within the context of a single job or globally for all jobs . In some exemplary embodiments an application may expose a web service of its own through which the IDev may send notifications.

In some embodiments receiving an event notification may comprise implementing a web service through which to receive event notifications. In some embodiments a web service or another application may be used to subscribe to an event notification process. A web service or another application may also be used to process event data when an event occurs. In some embodiments an event method may be called any time an event occurs. An event method may also be job specific wherein it only sends a notification message during a specific job. In some embodiments an eventdata parameter may be used. The eventdata parameter may comprise a structure containing event specific data such as a job identifier user credentials and or other data.

In some exemplary embodiments an application may subscribe to an error notification process that is triggered by an error of some type in the IDev system. In some of these embodiments this may be described as an ON SYSTEM ERROR event. An error condition may be triggered by several factors. In some exemplary embodiments an error condition may be triggered by an out of paper condition which has stopped a print process or in the case of a scan job a document not found condition in the input tray.

In some exemplary embodiments which comprise a web service an event trigger may comprise application provided configuration data that is syntactically and semantically valid in terms of the Web Service Description Language WSDL and overall rules but is still not valid. For example a user may configure a fax operation and specify a fax number which is not a valid phone number.

In some embodiments of the present invention an application or device that wants information relating to IDev activity may request from the IDev a list of events for which the IDev is capable of sending notifications. These events may be related to native functions and or applications or may be related to remote applications which are in communication with the IDev. In some embodiments a subscribing application may use a SOAP method GetServiceEventElements to obtain a list of event elements for which an IDev notification application is capable of sending notifications. Once the list of available notification events is known a subscribing application may request a subscription to an event on the list. An IDev notification application may then record the notification request in a notification record and notify the subscribing application if the event occurs.

Some embodiments of the present invention comprise processes that may be implemented as Web Service methods. Some of these processes are referred to by specific names that are used in exemplary embodiments. These names may be related in a syntax using the name followed by a closed set of parentheses i.e. Event CreateJob Authenticate . A description of an exemplary embodiment comprising these methods and their functions and attributes is found in Appendix A.

In some embodiments of the present invention a notification application may be based on a subscription model where local or network applications that wish to receive notifications may subscribe in advance to events with a given IDev. In some embodiments an IDev may implement a subscribers list and manage it. This may be done through a web service. In these embodiments event notifications may be messages that may be sent to subscribing applications when certain conditions take place on the IDev.

In some embodiments a purpose of the event notification process may be to allow remote clients to receive information about events that take place on the IDev or an associated device during execution of a specific job. In these embodiments a job specific subscription may be requested for which notification only occurs while the specific job is executing. In an exemplary embodiment of the present invention an IDev notification application may send a Hello SOAP request to a registered application of External Authority subscribing application each time a new application is registered with the IDev or each time an application is removed from the list on a given IDev such as an MFP.

Embodiments may comprise events that an application has subscribed to being associated with a specific job ticket. These per job ticket subscriptions may remain valid for the lifespan of the job ticket. When a particular job ticket instance expires the subscription associated with it may also expire. This type of subscription may be used by a standard user application. By subscribing to an event on a per job ticket basis the subscriber may be notified about the event within the context of the client s job. Subscription to a per job ticket event will expire when the job ticket expires. A per job ticket subscription embodiment is a sub set of the broader job specific subscription embodiments.

Some embodiments of the present invention may define a notification mechanism to be used for notifying a subscribing application about eligible events that take place on the IDev or an associated application or device. In some embodiments a notification mechanism may be specified by the subscribing application when a notification request is made or at some time before the actual notification occurs.

Some embodiments of the present invention comprise access control in which a notification application requires credential authentication prior to granting a notification subscription. In these embodiments a notification request may comprise a user credential or may be followed up with a user credential to authenticate the user. The notification application may process the credential or send it to a remote authentication application for processing. Only when the credential is successfully authenticated will the subscription request be granted. In some embodiments only certain types of subscription request may require access control and credential authentication. For example a global subscription request for all jobs on an IDev may require authentication while a job specific subscription request may not require authentication.

In some exemplary embodiments of the present invention an IDev notification application may run under a secure access mode. In this mode a request from a subscribing application may contain a SOAP header comprising a security element of type SECURITY SOAPHEADER TYPE. This element may contain user or account credentials. In some exemplary embodiments the request may comprise some or all of the following XML or SOAP elements 

In some embodiments of the present invention account credentials may be provided which may contain information about the user and application such as the user login name and password. User or application account credentials may be provided inside a SOAP header element. The account credentials may be provided inside a CreateJob request or inside the PJL stream. The original caller account credentials may be submitted as one of the parameters in this request. Credentials may also be sent in a separate message or message exchange.

In an exemplary embodiment of the present invention a message containing user account data information may comprise the following XML elements 

Some embodiments of the present invention may comprise an Access Control List ACL . The ACL may comprise information about the permissions of each IDev user IDev resources and or remote applications. A remote application such as an External Authority described below may maintain the ACL and may provide it to a plurality of IDevs on the network. The External Authority or another application may return the ACL in response to an Authenticate request from the IDev or as a parameter in an EnableDevice request sent to the IDev. The External Authority may send the EnableDevice request when it does not receive the Authenticate request from the IDev. If a user starts a job from the operation panel interface the IDev may not send the Authenticate request. The ACL response message may contain instructions on IDev features that should be enabled or disabled for the requested account. If the method returns successfully but without the ACL element the MFP may interpret this to mean that the credentials are valid and may enable all features for the user. In case of an error the MFP may return a fault element to the requesting application.

In some exemplary embodiments only the IDev and the External Authority application may use this method. The IDev may implement the client side of this method and take the credentials and JobId data types as parameters. The purpose of this request may be to allow the External Authority to authenticate the user credentials and allow or disallow access to IDev features. This method may be reserved for exclusive use between the IDev and the registered External Authority application. The IDev may implement the client side of this method while the application may implement the server side.

In some embodiments applications with administrator level credentials or other qualifications may be allowed to subscribe to events on a global basis e.g. without a need to provide a job ticket at time of subscription. This type of subscription may never expire. In these embodiments events may be fired when a particular condition takes place on the IDev. This type of global subscription may be used by applications such as an accounting application or an external authority application that may subscribe once to certain types of events and may receive notification from the IDev when an actual condition takes place for any job or job ticket executing on the IDev. In these embodiments subscription to an event may never expire. In some exemplary embodiments the best time to subscribe to an event on a global basis may be at the time the application discovers an enabled IDev device on the network.

In some embodiments of the present invention an IDev may be configured to operate under the supervision of an External Authority application that may have been assigned an exclusive decision making role. An External Authority application may monitor or control the processes on the IDev. As such it may provide system enable or disable decision making. When an IDev runs under the control of such an application the IDev features may remain disabled until enabled by the External Authority. The enable signal may come from such an External Authority application when the user account credentials have been positively validated. This type of application may also provide access control features to the IDev and may enable or disable specific features of the IDev based on the credentials submitted. The IDev may be configured to run under the control of only one External Authority application. If configured to operate with an External Authority the IDev may only execute jobs submitted by that External Authority application or that have been authorized by that External Authority.

In some embodiments of the present invention an IDev may be configured to operate either as an uncontrolled native IDev that is with no external authority or to operate under the control of an external authority. When an IDev operates as an uncontrolled native machine all of its features may be enabled by default. On the other hand when an IDev is configured to operate under the control of an External Authority all of the features may be disabled by default. The External Authority application may then enable specific IDev features based on the user provided credentials.

In some exemplary embodiments An IDev may provide a configuration page for registering an application that can be accessed only by administrators. An administrator may configure the external authority application to implement at a minimum the following methods of the MFPCoreWS interface the server side of the Hello method the server side of the Authenticate method the server side of the Authorize method and the client side of the EnableDevice method. An administrator may also configure the external authority application to implement the client side of the Subscribe method the server side of the Event method and if the external authority application needs to control the operation panel the client side of the ShowScreen and ShowScreen requests.

In some exemplary embodiments of the present invention remote applications may subscribe unsubscribe to from event notifications by sending a Subscribe SOAP request message to the IDev. The action parameter in this SOAP request defines the action. If the value of the action parameter evaluates to true then the meaning of this SOAP request is to subscribe to a particular event otherwise it is an unsubscribe request. In some exemplary embodiments a remote application may subscribe to an event by sending a Subscribe SOAP request with the action field set to true. To un subscribe from an event notification a remote application may send the Subscribe SOAP request again with the action field set to false.

In other embodiments of the present invention applications such as an accounting service may subscribe to certain events of interest on a global basis without specifying a job ticket. By doing so the overall application interaction with the IDev service may be simplified.

In some embodiments of the present invention the lifetime of a subscription entry may depend on several factors. The most basic case is when the subscription record is removed from the subscriber list via a specific user request to un subscribe as shown earlier. If a subscription request to an event has been made on a per job basis then the subscription may expire automatically when the job object itself ceases to exist.

In an exemplary embodiment a web service method such as the MFPCoreWS framework may remove any references in the subscriber s database when a job has been cancelled. If a subscription request to an event has been made on a global basis the subscription record may never expire. The MFPCoreWS framework will not remove it from the subscriber s database. The only way to remove it from the list may be to specifically request removal of this record to the application that initially subscribed to a given event. Records in the subscriber s database may not be persistent. In this case when the device powers down all subscription records may be lost and no notifications of that fact will be sent to the original subscribers.

In some embodiments of the present invention an IDev may send event notifications to subscribing applications. These event notifications may comprise notifications triggered by events related to IDev functions IDev applications and remote applications. Some exemplary events comprise job creation the beginning of job execution the end of job execution job cancellation job termination job abortion user login user logout and many other events.

In some exemplary embodiments the IDev may send a ON JOB CREATE event notification when a remote application successfully creates a new job using the CreateJob method. The IDev may send a ON JOB EXECUTE event when a remote application issues a ExecuteJob request and the job begins executing successfully on the IDev. The IDev may send a ON JOB CANCEL event when a remote application issues a CancelJob request. The IDev may send a ON JOB CLOSE event when a remote application issues a CloseJob request and the job begins executing successfully on the IDev. The IDev may send a ON JOB ABORT event to registered applications when the user terminates a job from the IDev operation panel using the Job Status mode. The IDev may send an ON JOB STARTED event to a subscribing application when an operation panel initiated job begins executing on the IDev. The IDev may send an ON JOB COMPLETED event when an IDev initiated job stops executing on the IDev for any reason including successful completion of a job or an error condition that caused the job to stop.

This ON JOB COMPLETED event may provides registered subscribers with the reason this job stopped such as successful completion or an error condition. In addition the ON JOB COMPLETED event may contain job configuration information and the JobResults data structure to provide the IDev resource use details of this job. The IDev may send an ON USER LOGOUT event to subscribing applications when a user logs out from the IDev at the operation panel. The sequence that the user executes to log out from the IDev may be specific to the IDev itself. The actual action that causes the user log out event may be device specific and as such is of no concern to the monitoring application. In any case when the monitoring application receives the ON USER LOGOUT event it means that the currently logged on user session with the IDev has terminated. The IDev may generate this event type when the user executes the log out sequence on the IDev operation panel or when the session times out. This may be the IDev automatic logout when the user has abandoned the machine.

In some embodiments an IDev may send a notification when a specific IDev hardware key is pressed. The IDev may send an ON HKEY PRESSED event notification to subscribers when a hardware key is pressed. In some embodiments this may occur when one of the keys of type E MFP KEY ID TYPE has been pressed by the user on the IDev. This event may be triggered by pressing the KEY COPY KEY IMGSND KEY PRINT KEY FAX KEY DOC FILING KEY JOB STATUS KEY CLEAR ALL KEY SPECIAL FUNCTIONS KEY CUSTOM SETTINGS or KEY PROGRAM keys. The IDev may send an ON SYSTEM READY event to subscribing applications when an IDev system component becomes ready for operation. The IDev may also send an ON SYSTEM ERROR event to subscribing applications when an internal system error occurs on the IDev such as a paper jam the IDev is out of paper and so on. The application may then acquire more specific information about the problem by issuing a GetDeviceStatus request.

In other embodiments of the present invention an event notification may comprise some information when sent to a subscriber. The information attached to the event notification may be provided by the MFPCoreWS framework inside an element. This element may have two parts of which one part may include a Header segment. In some embodiments the information in this segment may not be event type specific and may be provided in all event types. In an exemplary embodiment this segment may contain the following information account information which is represented via the element and the device information that is represented via the element. These elements may be represented in the following format bplewnia 0F21F359 AB84 36D110E6D2F9 AR 650 DS Engineering Dept Japan 90 EF 0F 21 2A 36 1.2.3.4 and .

Some embodiments of the present invention may include elements with a second event specific segment. In these embodiments the content of this segment may be event type and job type specific. The information in this segment may be contained within the element.

In further embodiments of the present invention the notification message may be delivered to a subscribing application in more than one way using a variety of mechanisms. In some embodiments the following transport mechanisms for event message delivery may be used SOAP using a notification method such as the Event method E MAIL where the body of the message will be the notification HTTP GET HTTP POST using the HTTP POST mechanism to deliver the event data to subscribers and RAW 2.0 protocol a Sharp notification mechanism. An application may designate the event delivery mechanism at the time of subscription.

Some embodiments of the present invention may be described with reference to . In these embodiments an imaging device IDev comprises a user interface which is capable of receiving user input and displaying data to a user. The user interface will typically comprise a display often in the form of a touch panel. The display may be used to display data to a user. This data may comprise menu data to prompt for a user selection or data entry such as a user ID and password form selection or some other input. The imaging device has a communication link which may comprise a typical computer network connection a serial cable or some other wired or wireless communication link as described in other embodiments. The communication link may connect the imaging device to a remote computing device RCD such as a server. The RCD may be used to store documents such as forms and other data and make that data accessible from the imaging device . The RCD may also execute applications that interact with or receive input from the imaging device and its user interface . In some embodiments a database may be linked to the imaging device and or an RCD . In some embodiments an RCD or database may be connected to an IDev over a wide area network such as the internet .

Some embodiments of the present invention may be described with reference to . These embodiments may comprise a subscribing application such as an accounting application which is capable of requesting and receiving a global or job specific event notification subscription. A subscribing application may be an External Authority Application which has special privileges and access to restricted notification resources. In some embodiments the External Authority Application may have access to global notifications that are not job specific. An External Authority Application may need to submit credentials for authentication before receiving restricted notifications.

Some embodiments may further comprise other remote subscribing applications A B which may request event notification subscriptions from an imaging device IDev event notification application . These applications A B may only have access to unrestricted notifications. The external authority application remote applications and IDev notification application may communicate with each other through means of a network using SOAP methods or other methods. The external authority application and remote applications may also designate an event notification transport mechanism which may be used for sending and receiving event notifications and related data. Typical event notification transport mechanisms comprise HTTP Post e mail SOAP messages and other mechanisms.

Some embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request to an IDev notification application. A subscription request may comprise a subscribing application address and an event type. In some embodiments a subscription request may also comprise user or application credentials and other data. The IDev notification application may then receive the subscription request from the subscribing application and record the subscribing application ID and event identification in a subscription record. The IDev notification application may then configure itself to notify the subscribing application identified in the subscription request when the event identified in the subscription request occurs.

In further embodiments of the present invention as illustrated in a job specific subscription may be implemented. In these embodiments a subscribing application may send a subscription request comprising a subscribing application address an event type and a job ID to an IDev notification application. The IDev notification application may receive the subscription request comprising the subscribing application address the event type and the job ID from the subscribing application. The IDev notification application may then record the subscription request data in a subscription record. The IDev notification application may then configure itself to notify the subscribing application at the subscribing application address when the event described by the event type occurs during execution of the job identified by the job ID. A job ID may comprise a job ticket.

In further embodiments of the present invention as illustrated in an alternative job specific subscription may be implemented. In these embodiments a subscribing application may send a simple subscription request to an IDev notification application. The IDev notification application may receive the simple subscription request and request an event type from the subscribing application. The subscribing application may then send an event type to the notification application. Upon receiving the event type the notification application may request a job ID from the subscribing application. The subscribing application may then supply a job ID to the notification application. Once the notification application has the subscription request the event type and the job ID the notification application may con to send a notification to the subscribing application when the event identified by the event type occurs during the execution of the job identified by the job ID.

Some embodiments of the present invention illustrated in comprise an event notification subscription using a specified notification delivery mechanism. In these embodiments a subscribing application may send a subscription request with a subscribing application address an event type and a specified delivery mechanism to an IDev notification application. The IDev notification application may receive the subscription request with the subscribing application address event type and specified delivery mechanism from the subscribing application. The IDev notification application may then record the subscription request data comprising the specified delivery mechanism in a subscription record. The IDev notification application may then configure itself to notify the subscribing application at the subscribing application address using the specified delivery mechanism when an event described by the event type occurs. In similar embodiments the subscription request subscribing application address and specified delivery mechanism may be exchanged through multiple messages.

Other embodiments of the present invention may be described with reference to . In these embodiments a subscribing application such as an accounting application may discover an enabled IDev on the network. The subscribing application may then obtain from the IDev a list of reportable events that the IDev is capable of identifying for notification purposes. In some embodiments a subscribing application may detect these reportable events by means other than a list supplied by the IDev such as by identifying an IDev and searching an external source for specific IDev data. Reportable events may also be determined through detection of IDev capabilities directly through various protocols.

Once reportable events have been identified a subscribing application may send a subscription request to the IDev notification application. This subscription request or a related message may comprise a subscribing application address to which notifications may be sent. The subscription request or a related message may also comprise one or more event types selected from the reportable events obtained from the IDev. A subscription request or a related message may also identify a job ID to an IDev notification application. The IDev notification application may receive the subscription request and any related messages comprising a subscribing application address an event type and any job ID for job specific notification embodiments from the subscribing application. The IDev notification application may then record the subscription request and any related data in a subscription record. The IDev notification application may then configure itself to notify the subscribing application at the subscribing application address when the event described by the event type occurs. In some job specific notification embodiments this notification would only occur when the event occurs during execution of the job identified by the job ID.

Some embodiments of the present invention comprise a notification subscription with access control. In these embodiments a subscribing application may be required to submit credentials before being granted a subscription. In some embodiments only certain subscriptions require credentials while others do not.

Some embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request comprising credentials to an IDev notification application. The IDev notification application may then receive the subscription request comprising the credentials. Once the credentials have been received the notification application may authenticate the credentials. The notification application may then decide whether to deny the subscription request or grant the subscription. When the credentials authenticate successfully and the user account is authorized to receive the requested notification the subscription request may be granted .

Further embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may request a notification subscription from a notification application. The notification application may then receive the request and may when the notification requested is restricted request credentials from the subscribing application if none were supplied in the subscription request. The subscribing application may then send the credentials to the notification application which may then receive the credentials. The notification application may then authenticate the credentials and verify that the authenticated user account is authorized to receive the requested notification. Based on this verification the notification application may then decide whether to deny the subscription or grant the subscription.

Other embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request containing a credential to an IDev notification application. The IDev notification application may then receive the subscription request containing the credential and send the credential to an authentication application which may then authenticate the credential. The authentication application may then notify the notification application of the results of the authentication process. The notification application may then deny the subscription when authentication is unsuccessful. When authentication is successful the authentication application may send an authentication message to the notification application which may then grant the subscription request.

Other embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request to an IDev notification application. The IDev notification application may then request credentials from the subscribing application which may then send the credentials to the notification application. The notification application may then send the credentials to an authentication application which may authenticate the credentials. The authentication application may then inform the notification application of the results of the authentication. Based on these results the notification application may deny the subscription or grant the subscription.

Further embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request comprising credentials to an IDev notification application. The IDev notification application may then receive the subscription request and the credentials and may determine whether the subscription request is of a type that requires authenticated credentials. In some exemplary embodiments these types of subscription requests may comprise a request for a global subscription from an external authority application such as an accounting application or a subscription request for a protected job. If the subscription request is restricted and does require authenticated credentials the notification application may then authenticate the credentials. The notification application may then deny the subscription request if the authentication is unsuccessful or if the authenticated user account is not authorized to receive the requested notification. If authentication is successful and the user account is authorized to receive the requested notification the subscription request may be granted . If the subscription request is not restricted and does not require credentials the subscription request may be granted without processing the credentials.

Other embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request comprising credentials to an IDev notification application. The IDev notification application may then determine whether the subscription request is of a type that requires authenticated credentials. If the subscription request does require authenticated credentials the notification application may then send the credentials to an authentication application which may authenticate the credentials. The notification application may then analyze the results of the authentication process and deny the subscription request if the authentication is unsuccessful or if the authenticated user account is not authorized to receive the requested notification. The notification application may also grant the subscription request if the authentication is successful and the authenticated user account is authorized to receive the requested notification. If the subscription request is not restricted and does not require credentials the subscription request may be granted without processing the credentials.

Further embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request to an IDev notification application. The IDev notification application may then receive the subscription request and may then determine whether the subscription request is of a type that requires authenticated credentials. If the subscription request does require authenticated credentials the notification application may then request the credentials from the subscribing application. The subscribing application may then send the credentials to the notification application which may then receive the credentials. The notification application may then authenticate the credentials. The notification application may then analyze the results of the authentication process and deny the subscription request if the authentication is unsuccessful or if the authenticated user account is not authorized to receive the requested notification. The notification application may also grant the subscription request if the authentication is successful and the authenticated user account is authorized to receive the requested notification. If the subscription request is not restricted and does not require credentials the subscription request may be granted without processing the credentials.

Other embodiments of the present invention may be described with reference to . In these embodiments a subscribing application may send a subscription request to an IDev notification application. The IDev notification application may then receive the subscription request and determine whether the subscription request is of a type that requires authenticated credentials. If the subscription request does require authenticated credentials the notification application may then request the credentials from the subscribing application. After receiving the credentials from the subscribing application the notification application may then send the credentials to an authentication application. The authentication application may then authenticate the credentials and send the results to the notification application. The notification application may then analyze the results of the authentication process and deny the subscription request if the authentication is unsuccessful or if the authenticated user account is not authorized to receive the requested notification. The notification application may also grant the subscription request if the authentication is successful and the authenticated user account is authorized to receive the requested notification. If the subscription request is not restricted and does not require credentials the subscription request may be granted without processing the credentials.

Further embodiments of the present invention comprise systems and methods for event notification. Some of these embodiments comprise global and job specific notification. Some embodiments also comprise notification by a specified delivery mechanism.

Some embodiments of the present invention may be described with reference to . In these embodiments an IDev notification application may detect when a specific event occurs. The IDev notification application may then check to determine if the event is recorded on a subscription record. The IDev notification application may then chose not to send a notification if the specific event is not on the subscription record. Alternatively the notification application may send a notification of the specific event to any subscribing application when the event is found on the subscription record. The subscribing application may then receive the notification of the event from the notification application.

Other embodiments of the present invention may be described with reference to . In these embodiments an IDev notification application may detect when a specific event occurs. The IDev notification application may then check to determine if the event is recorded on a subscription record. The IDev notification application may then choose not to send a notification if the specific event is not on the subscription record. Alternatively if the specific event is on the subscription record the notification application may then check if the subscription is for a global subscription or a job specific subscription. If the subscription is a global subscription the notification application may send a notification of the event to the subscribing application.

If the subscription is job specific the notification application may check to determine if the job was in progress at the time of the event. If the job was not in progress at the time of the event the notification application may choose not to send a notification of the event as the job specific subscription is not active. If the job was in progress at the time of the event the notification application may send a notification of the event to the subscribing application. The subscribing application may then receive the notification of the event from the notification application. A notification application may determine whether a job is in progress using a job ticket method wherein job tickets are maintained by an application during the execution of a job. Once a job has been completed the job ticket may be deleted.

Further embodiments of the present invention may be described with reference to . In these embodiments an IDev notification application may detect when a specific event occurs. The IDev notification application may then check to determine if the event is recorded on a subscription record. The IDev notification application may then choose not to send a notification if the specific event is not on the subscription record. If the specific event is on the subscription record the notification application may then check if the delivery mechanism for the notification has been designated by the user. If the delivery mechanism for the notification has been designated by the user the notification application may send notification of the event to the subscribing application using the designated delivery mechanism. If the delivery mechanism for the notification is not designated by the user the notification application may send notification of the event using a default delivery mechanism . The subscribing application may then receive the notification of the event from the notification application via the default or designated delivery mechanism when a notification message is sent.

Further embodiments of the present invention may be described with reference to . In these embodiments an IDev notification application may detect when a specific event occurs. The IDev notification application may then check to determine if the event is recorded on a subscription record. The IDev notification application may then choose not to send a notification if the specific event is not on the subscription record. If the specific event is on the subscription record the notification application may check whether the subscription is global or job specific.

If the subscription is global the notification application may then check if the delivery mechanism for the notification has been designated. If the subscription is job specific the notification application may check whether the job was in progress at the time of the event. If the job was not in progress when the event occurred the notification application may chose not to send a notice . If the job was in progress at the time of the event the notification application may check if the delivery mechanism for the notification has been designated. If the delivery mechanism for the notification has been designated the notification application may send notification of the event to the subscribing application using the designated delivery mechanism. If the delivery mechanism has not been designated the notification application may send notification of the event using a default delivery mechanism . The subscribing application may then receive the notification of the event from the notification application via the designated delivery mechanism or the default delivery mechanism when a notification is sent.

Some embodiments of the present invention may be described with reference to . The embodiments comprise a core web service framework CWSF . CWSF may comprise a platform for building deploying and running a web service on an IDev such as an MFP. Some may provide a standards based multi language execution environment for building distributed network applications. These applications may control processes executing on the IDev.

In some embodiments a CWSF may comprise a hardware interface HWIF connecting to IDev hardware . An HWIF may shield the CWSF from particular platform hardware specific details. A standardized HWIF may allow the CWSF to communicate with multiple IDev hardware devices meeting the interface standard.

An HWIF module may provide hardware abstraction of an IDev that hosts a CWSF . An HWIF module may comprise a set of device independent APIs that the CWSF uses to communicate with actual IDev hardware components. On the other side an HWIF module may implement device specific operation that it uses to control the hardware components of a particular platform. In this way the HWIF may shield the CWSF from actual hardware architecture details.

An HWIF module may also serve as a source of notifications that the CWSF receives through a through a status monitoring module SMM . These notifications may be passed to the CWSF via the SMM by means of callback calls. For example and not by way of limitation an HWIF module may act as a source of a Started Notification Callback which is posted when a device is about to start executing a job. An HWIF may also be the source of a Completed Notification Callback which may be posted when a job is completed. An HWIF may also be the source of a State Change Notification Callback which may be posted when a job changes its state. An HWIF may also be the source of a Page Notification Callback which may be posted when a page is read in or printed.

In some embodiments a CWSF may comprise a System Architecture Layer SAL that is responsible for translating high level application requests into a sequence of requests specific to a job type at the HWIF level thereby hiding the complexity from the application. The SAL may group together a sequence of atomic operations into high level functions. A SAL may provide a logical connection to an HWIF module . A SAL may also register a set of notification callbacks with the HWIF module . When certain conditions occur while a job executes the SAL may receive corresponding notification from an HWIF module . A SAL may also be the source of event notifications. In some embodiments a SAL may perform an On Job Started notification and or an On Job Completed notification.

The architecture of some embodiments of the present invention may be based on the concept of a job. Depending on the actual device capabilities and device architecture more than one job may be in progress on an IDev at the same time. For example and not by way of limitation a user may execute a scan job while another client is submitting a print job. At the same time another user may be receiving a fax message and an administrator may be performing an administrative job on the device. In embodiments of the present invention all these jobs may execute at the same time because each job is identified by a unique identity that is represented by a job object.

The mechanism within the CWSF that controls this dynamic job environment may be referred to as a job queue manager JQM . A JQM may manage jobs processed by the system. These jobs may be represented by job objects related to user processes executing on a device. Each job may be represented by a job identifier job ID and be associated with job settings job results and an access control list ACL . The ACL may comprise detailed information about access to job information by notification subscribers. A JQM may manage each job object for its entire lifetime. A JQM may perform functions such as job object creation job object destruction managing job settings keeping track of security data associated with a job s user keeping track of job state and status and other functions.

A JQM may also be the source of an event notification. In some embodiments a JQM may be the source of an On Job Create notification and On Job Execute notification an On Job Close notification an On Job Cancel notification and other notifications.

A JQM may maintain a job object database of jobs currently being executed on an IDev or associated hardware or applications. The job object database may also comprise an execution journal that persists across device power cycles even when other job information may be lost.

In some embodiments a CWSF may also comprise a status monitoring module SMM . The SSM may monitor the status of a device or a job executing on a device. An SMM may monitor changes in device and job states. An SMM may also register a set of notification callbacks with a HWIF module . An SMM may inform the JQM or an NM about job or device state changes or other notifications. An SMM may be the source of an On System Error notification.

In some embodiments a CWSF may comprise a notification module NM . An NM may receive event notifications from many different sources within the CWSF . An NM may receive signals indicating internal IDev events or receive other notifications of events occurring on IDev hardware on CWSF modules on remote applications or other events. When a notification is received an NM may communicate with a JQM to create an event data message. An NM may also contact a subscriber manager SM to find out whether there are any subscribers interested in receiving notification of an event. If at least one subscriber is found the NM may attempt to deliver event notification data to that subscriber. If a subscriber has identified a specific notification method the NM may attempt to deliver the notification using a transport protocol designated by the subscriber during a subscription request or at some other time.

Some embodiments of a CWSF may also comprise a user interface UI processor . A UI processor may interface with an IDev UI panel . A UI processor may provide UI content to IDev panel to prompt for user input or inform a user of a condition on the IDev a CWSF module or a remote application. A UI processor may also accept user input from an IDev panel and relay that input to IDev hardware a CWSF module or a remote application . A UI processor may enable remote applications to display application specific screens using an industry standard markup language such as XHTML to define forms. A UI processor may also be the source of event notifications such as an On Hkey Pressed notification an On User Logout notification or another notification.

A CWSF may also comprise a web service module WSM . A WSM may provide a Simple Object Access Protocol SOAP interface for an IDev. Remote applications may use a WSM through a set of SOAP interface methods to control IDev hardware including an IDev UI panel . A remote application may also access and or report to CWSF modules through the WSM .

In some embodiments a CWSF may comprise a subscriber manager module SMM . An SMM may manage a subscriber database in which subscriber data is maintained for event subscriptions.

Some embodiments of a CWSF may also comprise a markup language library such as an XML library . XML library may comprise a utility code library. XML library may provide function for managing XML content. These functions may be used for parsing and or generating XML data.

A CWSF may also comprise an event delivery module EDM . An EDM may deliver even notification messages to subscribers. An EDM may access subscriber preferences which may be stored in subscriber database in some embodiments. This subscriber data may be used to select a transport mechanism for notification delivery.

Some embodiments of the present invention are illustrated in . In these exemplary embodiments remote applications such as a security application a higher authority application or other applications may connect to an IDev over a communication link such as a network . In these embodiments an MFP Core Web Service CWS may expose a SOAP interface to the external applications . When a remote client application makes a SOAP request to the IDev the CWS assumes the responsibility of translating the markup language e.g. XML data representation of the request into a binary form that can be processed by the device. The CWS may also translate any binary data returned to the remote clients into a suitable markup language.

In these exemplary embodiments a CWS may also assume the responsibility of verifying and validating the input markup language stream that is received from a remote client . This data validation may be performed according to the rules expressed in a Web Service Definition Language WSDL definition document for the SOAP interface. While a CWS is processing a client SOAP request it may also return error information serialized as a SOAP fault message.

When executing in secure mode a CWS may assume the responsibility of assuring that a request comes from an authorized source and that the user making the request has sufficient rights to make the request. A CWS may also perform user session management.

The terms and expressions which have been employed in the forgoing specification are used therein as terms of description and not of limitation and there is no intention in the use of such terms and expressions of excluding equivalence of the features shown and described or portions thereof it being recognized that the scope of the invention is defined and limited only by the claims which follow.

