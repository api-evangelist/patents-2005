---

title: Intrusion event correlation with network discovery information
abstract: A policy component includes policy configuration information. The policy configuration information contains one or more rules. Each rule and group of rules can be associated with a set of response actions. As the nodes on the monitored networks change or intrusive actions are introduced on the networks, network change events or intrusion events are generated. The policy component correlates network change events and/or intrusions events with network map information. The network map contains information on the network topology, services and network devices, amongst other things. When certain criteria is satisfied based on the correlation, a policy violation event may be issued by the system resulting in alerts or remediations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08046833&OS=08046833&RS=08046833
owner: Sourcefire, Inc.
number: 08046833
owner_city: Columbia
owner_country: US
publication_date: 20051114
---
Embodiments of the present invention relate to systems and methods for determining the characteristics of a computer network. More particularly embodiments of the present invention relate to systems and methods for automatically and passively determining a host configuration of a computer network.

Computers and computer networks connecting such computers are vital components of modern society. Unfortunately such computer networks are susceptible to attacks from internal and external hostile sources. Intrusion detection systems IDSs are used to prevent such attacks. Conventional IDSs operate by analyzing network traffic in terms of the traffic itself. They do not however consider the end points of that traffic. End points refer to the originators and recipients of message traffic. Such end points include for example clients and the servers. Analysis of end points can provide contextual information about the network such as host addresses and services. By not considering these end points a vital piece of contextual information about the network is missed. Consequently a substantial need exists for technologies that provide information about the end points of computer network traffic.

IDSs are less effective than they could be because they do not have contextual information about the computer network they are monitoring. For example without contextual information IDSs are susceptible to computer network attacks. Not only does the lack of contextual information make the IDS more susceptible to attack but it also makes the IDS less efficient. One such inefficiency is that without contextual information the IDS may not be able to discern whether or not an attack will cause harm. Attacks can be directed to a particular service running on a target host. Without information about the services running on the target host an IDS could mistakenly detect an attack even if that host is not running the targeted service. That is the IDS would cause an alarm even though the attack would be harmless. Such an event is called a false positive. Large numbers of false positives can make it more difficult and expensive to locate genuine attacks that can harm a host on the network.

Some conventional techniques for providing contextual information to IDSs are known. One such technique is for a human to audit each host manually and gather all desired contextual information. This manual method has a number of disadvantages including that it is time consuming prone to error and makes maintenance more difficult. One reason for these drawbacks is that networks are dynamic in nature. Host computers in computer networks are added removed and reconfigured. If these changes are not meticulously documented each computer on the network must be revisited periodically to insure that the contextual information is up to date.

Another conventional technique for providing contextual information to an IDS is an automatic discovery system. Conventional automatic discovery systems are active scanning systems that actively probe end hosts on a computer network and perform stimulus response tests on them to find and record vulnerabilities that exist on end hosts. Though not manual active scanning systems also suffer from several problems. One problem is that active scanning can be destructive to the network. In testing for vulnerabilities they can cause both routers and servers to malfunction or stop functioning. Another problem is that they may not provide information useful to an IDS because in many instances a one to one mapping does not exist between the information an active scanner provides and the information an IDS can use. Another problem is that active scanners only provide a snapshot of the network at the time when the scan is performed. This snapshot is problematic because a host may run a vulnerable service transiently. In such a case the active scanning may be performed at a time when the vulnerable service is not running. As a result the active scan would not cause an alarm despite the transient nature of the vulnerability.

While it is advantageous to automatically and passively determine a host configuration there may be occasions when a passive map does not incorporate information that would be useful. In view of the foregoing it can be appreciated that a substantial need exists for systems and methods that can advantageously minimize false positives in intrusion detection system by using known network characteristics such as host and service information about targeted network devices.

Embodiments of the present invention minimize false positives for example by allowing a policy component to correlate events such as IDS events with stored network characteristics in a network map. In this manner false positives can be reduced in the policy component.

One embodiment of the invention includes a method for automatically and passively determining the characteristics of a network including using policy configuration information in a policy component wherein the policy configuration information comprises one or more rules. An event is identified on the network and associated with the event is a network address such as an IP or MAC address. Next the event is evaluated based on one or more of the rules in the policy component. As part of this process the policy component accesses the network map to determine if the event information matches one or more criteria as part of a correlation process and generates a policy violation event based on the determination that the event matches the one or more criteria. For example the intrusion event information may be correlated with the network map information to answer queries associated with one or more rules in the policy component.

Another embodiment of the invention includes a system for automatically and passively determining the characteristics of a network including a network map storage device containing network device addresses service and network topology information a policy component which receives an intrusion event and enforces one or more network configuration rules and wherein the policy component accesses information in the network map storage device through a link provided by a device address associated with the intrusion event to determine if information associated with the intrusion event matches network map information as part of evaluating one or more rules. Once the evaluation of the event is complete a policy violation event may be generated if it is determined that the event is unauthorized for example. Upon initiation of the policy violation event remediations or alerts may be effectuated by the system. Device addresses may be any type of address for a communications or computer device including IP address or MAC address. Intrusion events may be identified based on receiving decoding and analyzing one or more packets on the network.

Embodiments of systems and methods for processing network events based on one or more policies are described in this detailed description of the invention. In this detailed description for purposes of explanation numerous specific details are set forth to provide a thorough understanding of embodiments of the present invention. One skilled in the art can appreciate however that embodiments of the present invention may be practiced without these specific details. In other instances structures and devices are shown in block diagram form. Furthermore one skilled in the art can readily appreciate that the specific sequences in which methods are presented and performed are illustrative and it is contemplated that the sequences can be varied and still remain within the spirit and scope of embodiments of the present invention.

In one embodiment of this system a single computer may include a policy component a network map security devices and the response component . In other embodiments more than one computer may house each component separately or include combinations of the above components. For example the policy component could communicate with the network map which is stored on another computer through any transmission media. Single components may even be distributed across more than one device. For example the policy component may be distributed across more than one computer. The policy component and network maps may be stored in volatile or nonvolatile storage devices including RAM ROM EPROM EEPROM FLASHROM or removable storage. The network shown in may represent one or more networks including the Internet Intranet LAN online information networks wireless network private or public networks e.g PSTN voice and or data networks or cable and dBS.

As explained in more detail below a network configuration and usage policy for the network is defined for the network and can be applied in a policy engine . The user configures a policy. The policy consists of a list of rules and groups of rules. Each rule and group of rules can be associated with a set of response actions. Each rule can be activated to become part of the active policy. As the nodes on the monitored networks change events are generated to reflect the changes. If a new service is detected on a host for example an event is generated that contains the new service information. The events and the data contained within the events are evaluated based on the currently active policy. The events and the data contained within the events are correlated with information in the network map to help reduce false positives. If the event or the data within the event triggers the rule an event is generated that initiates one or more configured responses.

With reference to the network map can be configured to maintain a current snapshot of the network map. The network map can include information on hosts network topology services and vulnerabilities for example as explained in more detail below.

The policy engine maps new events against the network map to determine if there have been any policy violation events as explained below. If there has been a policy violation one or more remediations can be performed or alerts issued as shown in .

The events generated by one or more security devices e.g. IDSs are collected and forwarded to the policy component . In another embodiment of this method the events are collected and first stored in a database and then forwarded to the policy component .

Intrusion events can be determined from the one or more security devices according to many different methodologies. Embodiments of the present invention can be applied to passively determined network maps or characteristic databases. These systems are passive because they examine packets moving across a network they do not perform active scans. They are automatic because they require little or no human intervention. Such passive systems operate by performing functions including 1 identifying network devices on a network 2 identifying operating systems and services running on network devices 3 recording in real time changes occurring on the network and 4 gathering this information in a format that can be used by a network reporting mechanism. Exemplary network reporting mechanisms include IDSs and network management systems NMSs .

As shown in the security devices passively collect traffic traveling over the network decode data and then compare the data to established operating system and service fingerprints. They also collect flow data from network sessions that involve at least one monitored host.

Referring again to the security devices shown in network reporting mechanisms can examine packets moving across a network in real time for characteristic information about the network. One such type of characteristic information is information related to a network device or host on the network. One skilled in the art can appreciate that a network device is any device with a network connection. Network devices can include but are not limited to hosts servers gateways bridges computers printers switches game machines wireless devices cell phones networked televisions PDAs and routers.

Referring to the network map is a database containing information on host services network topology and vulnerabilities. In some embodiments the database is keyed to the IP addresses of the hosts or other network devices. In this manner queries to the network map may be identified using the IP addresses or other types of addresses. The network map provides a profile of each host bridge or router service and vulnerability for each RNA sensor on the network. The network map can be used to view host profiles for specific hosts. Host profiles contain detailed information about hosts running services and vulnerabilities for specific hosts. Discovered hosts and services can be mapped into the network map representation of the network.

The network map allows one to view the network topology in terms of the hosts that reside on the network the bridges on the network which may include hubs routers or switches the services running on the network operating systems and or the vulnerabilities on the network. The user has the capability to view any of the above via a conventional user interface. The network map may be split into the following components the hosts map which displays network devices such as computers printers amongst other things the bridges map which displays bridges switches or routers detected on the network the services map which displays services detected on the network and the vulnerabilities map which displays vulnerabilities detected on the network .

The information in the network map may come from one or more sensors. When there is more than one sensor the data can be correlated into a composite network map. If multiple sensors generate events from the same host or service the information is combined from each sensor into a composite representation of that host or service according to predetermined protocols.

The network map also includes host profiles for specific hosts. Host profiles contain information about hosts running services and vulnerabilities for specific hosts. One exemplary host profile may contain one or more of the following host name distance in network hops from the sensor that detected the host operating system host type criticality level for the host either automatic of user specified link to events that involve the host link to intrusion events where the host is either the source IP or destination IP protocols used by the host services running on the host and vulnerabilities to which the host may be susceptible. The host profiles may be viewed by the user via the user interface.

The bridges portion of the network map contains information on the network bridges and routers that connect one segment of the network with another. The bridges portion may also by viewed by a user through the user interface.

The services portion of the network map provides a view of the services running on the network the vendor and version of each service and the hosts running each service. The user may access the network map via a user interface to view the services and list of hosts that run each service.

In response to network traffic the identity of the network device is recorded. The identity is stored as a data structure in a file or database for example. If a packet identifies a network device that has previously been recorded the current information and the previous information are compared and any changes are recorded. If no changes have been found no new information is recorded. In either case the next packet is read.

In step of method a packet transmitted on a network is read. In step a network device is identified using the packet. A network device includes but is not limited to a computer a printer server cell phone wireless device and a router. One skilled in the art can appreciate that a network device can also be referred to as a host. In step the identity of the network device is recorded. The identity is stored as a data structure in a file or database for example. If a packet identifies a network device that has previously been recorded the current information and the previous information are compared and any changes are recorded. If no changes have been found no new information is recorded. In either case method returns to step to read the next packet.

Further methods for identifying a network devices operating system a router services running on a network device transmission control protocol flow on a network or subnets amongst other things can be determined according to any of the methods set forth in U.S. patent application Ser. No. 10 843 459 filed May 12 2004 titled Systems and Methods for Determining Characteristics of a Network and Enforcing Policy which is herein incorporated by reference in its entirety. Further methods for determining the distance between two subnets for creating an inferred subnet on a network and assigning vulnerability to a network device are also shown in U.S. patent application Ser. No. 10 843 459.

Referring again to the policy engine comprises one or more policies. The policy consists of a list of rules and groups of rules. Each rule and group of rules can be associated with a set of response actions. Each rule can be activated to become part of the active policy. As the nodes on the monitored networks change events are generated to reflect the changes. If a new service is detected on a host an event is generated that contains the new service information. The events and the data contained within the events are evaluated based on the currently active policy. If the event or the data within the event causes the rule to fail an event is generated that triggers the configured responses.

In another embodiment information passively discovered on a network is used to enforce a network configuration and usage policy. As part of this process the policy component accesses the network map to determine if event information matches pre defined ranges or values. An action is performed if a usage policy is violated. Exemplary actions can include alerting the user and denying network access based on the type of information discovered or when that information was discovered.

One exemplary usage policy can prevent unauthorized use of an operating system. An action is triggered if a discovered operating system does not match the allowable operating system for the given IP address. For example a user specifies that only Windows 2000 and Windows XP may be used on the network. If a host with any other operating system detected an alert would be generated and the offending host would be blocked at the firewall. As part of this process the policy component accesses the network map to determine if the operating system or network device characteristics match pre defined ranges or values.

Another exemplary usage policy is the prevention of unauthorized service usage. An action is triggered if a prohibited service is detected. For example the user specifies that service A is not permitted on subnet X. If service A is detected on subnet X an alert is generated. Again as part of this process the policy component accesses the network map to correlate the event with the network map to determine if information relating to the service event matches pre defined ranges or values. For example the network map may be queried to determine if a particular IP address is permitted to have certain services or applications. In another example the network map may suggest that for subnet Z Linux is the only permitted operating system. Additionally the only permitted services are secure shell SSH and secure sockets layer SSL . An exception is made to allow host X to additionally run HTTP. Also host Y is allowed to run Windows 2003 Server with no service restrictions. Any violations of this policy generates an policy violation event PVE .

Another exemplary usage policy is the qualification of events. The criticality of an alert is adjusted based on information gathered from multiple sources. For example if an attack that only affects IIS is detected and the host is a Windows system running IIS a critical alert is generated. If an attack that only affects IIS is detected and the host is a Linux system which cannot run IIS an informational alert is generated.

Another exemplary usage policy is defining a threshold for a single event. An action is triggered upon detecting multiple events of the same type within a given time period. For example if ten failed login attempts to a single service are detected within a thirty second time period an alert is generated to indicate a brute force login attempt. In another example if fifteen failed login attempts followed by a successful login to a single service are detected within a forty five second time period an alert is generated to indicate a successful brute force login and the client system is blocked at the firewall.

Another exemplary usage policy is detecting IDS event sequences. An action is triggered upon detecting multiple events in a given sequence within a given time period. For example the sequence of events E F and G destined for a single host is indicative of a successful compromise of a host. Individually none of the events is considered critical and are ignored. However when occurring sequentially within a 60 second time period they represent a critical event and generate a critical alert.

In another example a buffer overflow attack is detected against a host and within 5 minutes a new telnet server is detected on the host. A critical alert is generated and the firewall blocks traffic to and from the host.

Another exemplary usage policy is maintaining temporal constraints. An action is triggered upon detecting sessions established during prohibited times. For example normal virtual private network VPN connections occur between the hours of 7 00 a.m. and 9 00 p.m. EST. A connection initiated at 2 00 a.m. generates an alert. Another exemplary usage policy is maintaining statistical constraints. An action is triggered upon detecting deviations from normal operating parameters. For example a web server that normally serves 30000 hits per hour is currently serving 5 hits per hour. An alert is generated.

Additional policy response actions include event logging to a local database system logging a service message performing a simple network management protocol SNMP trap generating an e mail message controlling a network device e.g. invoke a firewall rule or disable a network switch port and raise or lower the priority of an IDS event. If a node changes to the Windows operating system and a policy is written that prohibits the Windows operating system is in effect with an e mail response action configured an e mail message is generated containing the event data and rule ID.

Policy analysis is further described in U.S. patent application Ser. No. 10 843 398 filed May 12 2004 titled Systems and Methods for Determining Characteristics of a Network which is herein incorporated by reference in its entirety.

While illustrates an exemplary process for determining if an unauthorized service had been introduced on a network device the same or similar methodology can be used to determine any events including for example the following events unauthorized or allowable operating system for a given IP address qualification of events detecting IDS event sequences detecting a buffer overflow event detecting sessions established during prohibited times impermissibly controlling a network device amongst other events.

Remediations can include programs that embodiments run when a compliance policy is violated as indicated by the policy engine. Remediation modules may use information provided in the Policy Violation Event PVE that triggered the violation to perform a specific action. Embodiments of the present invention include default predefined remediation modules and user customized remediation modules that perform specific tasks when policy violations are triggered. Some embodiments can include flexible application programming interfaces APIs that allow users to create and upload custom remediation modules to respond to policy violation events.

For example if a network is running a Linux based firewall a remediation module could dynamically update IP tables on the Linux server so that traffic that violates a compliance policy is blocked. Other possible remediations include reconfiguring or shutting down firewalls or routers or other network devices. Further remediations may include dynamically blocking traffic sent to an IP address or network that violates a compliance policy.

In one embodiment multiple instances can be created for each module some of which may represent connection to a specific network device. For example if the subnet has four routers that there may need to be remediations sent to four instances should be configured of that module. When creating an instance configuration information is specified for allowing the network discovery system to establish a connection with the network device. Then for a configured instance remediations may be added that describe the action or actions that are desired for the network device to perform when a policy is violated. In one embodiment when the system executes remediations it logs events to memory. Associated with the events include information about the remediation name and the policy and rule that triggered it. In an embodiment the user may view the remediation status through a conventional user interface.

Policy Violation Event s may also lead to system alerts. Alerts may be delivered by any mechanism including email syslog SNMP trap alerts SMS messages text messaging IM voicemail amongst other means. An active alert may be launched if for example it is assigned to a Policy Violation Event PVE that is generated according to the embodiments of the present invention.

In accordance with an embodiment of the present invention instructions adapted to be executed by a processor to perform a method are stored on a computer readable medium. The computer readable medium can be a device that stores digital information. For example a computer readable medium includes a read only memory e.g. a Compact Disc ROM CD ROM as is known in the art for storing software. Alternatively the computer readable medium may be read access memory RAM EPROM EEPROM FLASHROM DVD CD or any other type of computer memory. The computer readable medium can be accessed by a processor suitable for executing instructions adapted to be executed.

Embodiments of the present invention relate to data communications on one or more networks. The data communications can be carried by one or more communications channels of the one or more networks. A network can include wired communication links e.g. coaxial cable copper wires optical fibers a combination thereof and so on wireless communication links e.g. satellite communication links terrestrial wireless communication links satellite to terrestrial communication links a combination thereof and so on or a combination thereof. A communications link can include one or more communications channels where a communications channel carries communications.

A system and method in accordance with an embodiment of the present invention disclosed herein can advantageously improve existing intrusion detection systems or real time network reporting mechanisms by giving them contextual information about a computer network. Such a system and method is particularly advantageous in comparison to manual methods in that its information is updated automatically. The ability of the present invention to reduce false positives in the policy component is an important advantage over conventional network detection systems.

In the foregoing detailed description systems and methods in accordance with embodiments of the present invention have been described with reference to specific exemplary embodiments. Accordingly the present specification and figures are to be regarded as illustrative rather than restrictive. The scope of the invention is to be further understood by the claims and by their equivalents.

