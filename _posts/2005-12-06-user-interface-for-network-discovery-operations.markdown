---

title: User interface for network discovery operations
abstract: Methods, apparatus, systems and computer program products to capture discovery task information are described. More specifically, a graphical user interface is described that simplifies the task of defining what types of components (hardware and software), domains and methods are to be used during an IT infrastructure discovery operation. One benefit of using the described user interface is that the user is relieved of the burden of determining what aspects of the discovery action need be defined. Another benefit is that a user may be asked for input for only those elements necessary to the discovery—based on the user's prior input. For example, if the only type of component identified for discovery are JAVA® platforms, only those discovery methods (e.g., JMX) related to JAVA® platforms will be proffered to the user during that phase of specifying the discovery operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07941506&OS=07941506&RS=07941506
owner: BMC Software, Inc.
number: 07941506
owner_city: Houston
owner_country: US
publication_date: 20051206
---
This application claims priority to US provisional patent applications entitled Topology Discovery Ser. No. 60 633 639 Generic Discovery Ser. No. 60 633 625 and Change Configuration Management Ser. No. 60 633 640 all filed on 6 Dec. 2004. This application also claims priority to US applications entitled Resource Reconciliation Ser. No. 11 204 189 filed 15 Aug. 2005 and Generic Discovery for Computer Networks Ser. No. 11 999 999 filed 6 Dec. 2005. All of these references are hereby incorporated by reference.

The invention relates generally to computer networks and more particularly to a graphical user interface associated with network discovery operations.

It will be recognized that the volume and rate at which hardware e.g. computers switches routers and storage devices or systems and software e.g. user applications application suites and environments such as order entry and database management systems are being deployed within business organizations is high and continues to grow. An essential aspect of managing this growth includes monitoring controlling and documenting this deployment process to minimize potential outages lower total operational costs improve customer service and meet corporate compliance and security requirements. Knowledge of network topology or more generally information technology IT infrastructure topology also permits one to understand how various components deliver business services to end users. This in turn can lead to improved management and greater efficiency in the use of such resources.

The task of identifying hardware and software components coupled to a network is often referred to as discovery. It will be recognized that discovery can be a very complex operation involving different types of hardware and software coupled via many different and often unknown network topologies. As used herein the term network can mean a single network local or wide area or multiple separate networks coupled via any private e.g. an intranet or public e.g. the Internet network or any combination of private and public networks and using any suitable communications protocol and any media e.g. wired or wireless . Illustrative communication protocols include but are not limited to Transport Control Protocol TCP Sequence Packet Exchange SPX User Datagram Protocol UDP Internet Protocol versions 4 or 6 IP and IPv6 and Internet Control Message Protocol ICMP .

In prior art discovery systems a user often a system administrator configures a discovery operation through the creation of a profile. Generation of a profile is a difficult and often imprecise task involving the manual input of a large amount of technically detailed information including information that is not necessarily relevant to the targeted discovery operation. Thus it would be beneficial to provide a mechanism to facilitate the capture and processing of discovery profile information.

The invention describes a method and graphical user interface that simplifies a user s task of specifying what types of components hardware and or software domains and methods are to be used during a network or more generally an IT infrastructure discovery operation. A method in accordance with one embodiment of the invention includes selecting through a first graphical interface element one or more types of computer network components to discover selecting through a second graphical interface element one or more network domains to search for the selected component types selecting through a third graphical interface element one or more discovery methods for each type of computer network component selected through the first graphical interface element and storing indications of the user selected computer network components network domains and discovery methods. The collection of stored indications comprising a discovery set specification.

In another embodiment a predefined discovery set specification may be used to initialize or pre select various options presented to the user through the graphical user interface. In yet another embodiment user interface elements are presented that permit the user to specify a schedule on which the defined discovery action is to be performed. In still another embodiment user interface elements are presented that permit the user to specify post discovery actions. One illustrative post discovery action is to notify the user for example by email that the specified discovery action has been completed.

Methods in accordance with the invention may be stored in any media that is readable and executable by a computer system.

New and useful methods apparatus systems and computer program products to capture infrastructure topology discovery task information are described. The following descriptions are presented to enable any person skilled in the art to make and use the invention as claimed and are provided in the context of the particular examples discussed below variations of which will be readily apparent to those skilled in the art. Accordingly the claims appended hereto are not intended to be limited by the disclosed embodiments but are to be accorded their widest scope consistent with the principles and features disclosed herein.

In one embodiment of the invention a software application e.g. a wizard is used to graphically present a series of options to a user by which the user may select or specify certain discovery task parameters. Based on the user s input other discovery operation parameters may be automatically determined. The collection of user specified and automatically determined parameters referred to herein as a Discovery Set specifies a unique discovery operation. Discovery sets are the means by which a user specifies what type of components she wants to discover how the components should be discovered and when the components should be discovered. As used herein the term component means any hardware device e.g. a computer system storage device or switch or software application e.g. a database application enterprise resource planning system or operating system that may be detected by a network discovery action.

Referring to in accordance with one embodiment of the invention discovery set definition method includes introductory operations block in which the user is informed of the scope of the discovery set definition task type specification operations block during which the user specifies what type of components should be discovered e.g. SAP systems enterprise applications based on Java platforms such as the Java 2 platform enterprise edition or J2EE and or computer systems executing the Unix operating system domain specification operations block in which the user identifies a set of addresses over which the discovery operation is to be performed and method specification operations block in which the user specifies one or more discovery methods for each type of component specified during the acts of block . SAP is a registered trademark of SAP Aktiengesellschaft a joint stock company of the Federal Republic of Germany. JAVA and J2EE are registered trademarks of Sun Microsystems Inc. of Santa Clara Calif. UNIX is a registered trademark of the American Telephone and Telegraph Company Corporation of New York N.Y. Optional post discovery actions may also be specified block . For example whether a graphical representation of the discovered components should be displayed. In addition optional scheduling information may be input block . For example to cause a discovery action defined by the discovery set to be executed at a specified time and or at a specified interval. Once the acts of block are completed discovery set specification may be retained in storage unit in any format accessible to a discovery engine e.g. an application . One of ordinary skill in the art will recognize that discovery set specification may represent for example one or more files or one or more database entries or objects. Similarly storage unit may represent for example one or more direct access storage devices e.g. magnetic or optical disk storage devices one or more database tables or one or more database objects.

In one embodiment user input for each discovery set definition operation e.g. is solicited through a uniform graphical user interface. Referring to in one embodiment the uniform graphical interface comprises user interface window having title region action region roadmap region and contextual information and input region . Title region is generally used to identify which step of discovery definition process is currently active. Action region provides Previous Next Save Cancel and Help buttons which the user may select at any time to navigate through or terminate the current discovery set definition. It will be recognized that certain action buttons may not be enabled at all times. For example if the displayed window is the first last in a sequence of windows the Previous Next button will not be enabled. Roadmap region is generally used to present big picture information with respect to the current operation. As such the contents of roadmap region are dynamic. Contextual region is generally used to present user input options that are unique to the current definition operation. Accordingly the contents of contextual region are also dynamic.

Referring to in one embodiment invocation of discovery set definition process causes introductory window to be generated introductory operations . As shown title region indicates the current window is associated with introductory operations. In addition roadmap region indicates not only that the current window is associated with introductory operations via an illustrative check box but that additional steps remain to be completed e.g. type domain method post discovery actions and schedule specification operations . Contextual information region may prompt the user to specify a name for a new discovery set and or offer the opportunity to select a previously defined discovery set i.e. to perform a rediscovery operation . Referring to in one embodiment contextual information region may itself comprise input regions and . Region may be used by the user to enter the name of a new discovery set while region may be used to display a list of previously defined discovery sets wherein the user may select one of them. After the user supplies a discovery set name in region or selects a previously defined discovery set displayed in region the user may select the Next button in action region see or alternatively an input trigger button such as for example an OK button may be provided in either or both of regions and .

Referring to in one embodiment following introductory operations type specification window is generated type specification operations . As shown title region indicates the current window is associated with type specification operations. In addition roadmap region indicates not only that the current window is associated with type specification operations but that introductory operations have been completed via shading for example and that additional steps remain to be completed e.g. domain method post discovery actions and schedule specification operations . Central to discovery operations is the identification of what types of components to discovery. Illustrative component types include but are not limited to SAP systems J2EE systems Oracle systems DB2 systems Simple Network Management Protocol SNMP devices and computer systems executing the Windows operating system through for example use of Windows Management Instrumentation WMI technology. ORACLE is a registered trademark of Oracle International Corporation of Redwood City Calif. DB2 is a registered trademark of International Business Machines Corporation of Armonk N.Y. WINDOWS is a registered trademark of Microsoft Corporation of Redmond Wash. Referring to in one embodiment contextual information region may itself comprise a list region and description region . Region may display a list of one or more types of components to discover through for example a check lists boxes bullets or other means. Region may be used to display a brief description of the component type s selected in region . After the user selects at least one component type displayed in region the user may select the Next button in action region see or alternatively an input trigger button such as for example an OK button may be provided in either or both of regions and .

It is noted that if the user had selected a previously defined discovery set during the acts of block see contextual type specification fields in region will be populated to reflect the selections made in the earlier definition. At this point the user may simply accept the prior definitions by selecting the Next button in action region or they may alter the selection by selecting additional types and or un selecting one or more types previously selected.

Referring to in one embodiment the start of domain selection operations causes window to be generated. As shown title region indicates the current window is associated with domain specification operations. In addition roadmap region indicates not only that the current window is associated with domain specification operations but that introductory and type specification operations have been completed via shading for example and that additional steps remain to be completed e.g. method post discovery actions and schedule specification operations . Similar to previous windows contextual information and user input region provides the means by which a user may specify one or more domains over which a discovery action is to occur.

Referring to in one embodiment contextual information and user input region comprises a series of tabs each one associated with a different mechanism that may be used by a user to specify a domain. For example if the DOMAIN tab is selected the user may select from one or more previously defined domains e.g. www.bmc.com or obonal eu . Previously defined domains may be stored independently from or integral to discovery sets in a discovery database or otherwise. If such a mechanism is provided a list of available domains is presented in region . The user may select a domain listed in region and include it in the current discovery set thereafter displayed in region by activating button . Information related to the one or more selected domains may be displayed for the user s convenience in region .

Referring to if the SUBNET tab is selected the user may select from one or more previously defined subnets e.g. 192.168.54. . Previously defined subnets may be stored independently from or integral to discovery sets in a discovery database or otherwise. If such a mechanism is provided a list of available subnets is presented in region . The user may select a domain listed in region and include it in the current discovery set thereafter displayed in region by activating button . Provision for entry of a subnet mask may also be provided not shown in . Information related to the one or more selected subnets may be displayed for the user s convenience in region .

Referring to if the HOST tab is selected the user may specify a new domain name or select a domain through buttons . For example a specific network IP address e.g. 192.168.1.1 could be input or a specific host could be named e.g. ExampleHost or a host could be selected from a list of known hosts e.g. those obtained from a local DNS server or recorded in a discovery database . It will be recognized that such information may be recorded in an associated discovery database or in another different database or file. Once a host has been specified it may be added by selected A4 button . After being added to the discovery set s list of selected domains it will appear in region . Similarly if a host is selected from within region e.g. by a mouse click it may be deleted from the current discovery set s definition via REMOVE button .

Referring to if the RANGE tab is selected the user may specify a new domain name similar to that of entry in . A range of network addresses may be entered through the use of START and END elements each of which operates as described with respect to element in . In a like manner A4 and REMOVE buttons and region behave as elements and in .

Once the user has specified a domain using one or more of the techniques described above with respect to the user accepts the identified domain list by selecting the Next button in action region see or alternatively by selecting an input trigger button such as for example an OK button such as may be provided in region .

Referring now to in one embodiment the start of method selection operations causes window to be generated. As shown title region indicates the current window is associated with discovery method specification operations. In addition roadmap region indicates not only that the current window is associated with method specification operations but that introductory type and domain specification operations have been completed via shading for example and that additional steps remain to be completed e.g. post discovery actions and schedule specification operations . Similar to previous windows contextual information and user input region provides the means by which a user may specify one or more domains over which a discovery action is to occur.

Referring to in one embodiment contextual information region may itself comprise three panels or regions selected discovery type panel relevant discovery method panel and information panel . In this embodiment panel lists all of those types selected by the user during the acts of block . This list could be organized in any manner for example alphabetically. In addition one of the listed discovery types e.g. the top most entry of the list may be selected by default. Panel identifies the relevant discovery methods for the type entry selected in region . By way of example WMI secure shell SSH and Telnet methods may be listed in panel if an Asset type component is selected in panel . Alternatively if a J2EE type component was selected in panel Java management extensions JMX methods could be listed in methods panel . For each discovery type one or more methods may be selected e.g. via a check box interface mechanism . Information panel may be used to display helpful support information to the user for each of the selected discovery methods. For example information panel may display for each selected discovery method a brief description of the method e.g. what kind of information it returns a list of the parameters and credentials that the method requires e.g. user name and password and any other information the user may find helpful e.g. indication that the selected method will use the user s root password or that the method generates a relatively high network load . the user may review this information using it to form their final decision as to whether you actually want to use the method. For example if method N is one of 3 methods selected to discover a particular type of component and information panel indicates this method generates a substantial network load or requires a credential not available to the user they may choose not to use the selected method. Referring to in another embodiment method window may display type panel in place of roadmap region and divide contextual information and user input region so as to display the list of relevant discovery methods and information panel .

To reduce the user s burden it is preferable that only those types of components selected during type specification operations block are presented in panel . For the same reasons it is preferable that only those methods relevant to the selected component type are listed in panel . It has been found that this selective culling of information assists the user focus on only those issues relevant to their goal eliminating the need to consider discovery types and or methods that are not pertinent to the component they are currently considering.

Once the user has specified at least one discovery method for each selected type entry she may continue discovery set definition process by selecting the Next button in action region see or alternatively by selecting an input trigger button such as for example an OK button such as may be provided in region .

Part of the information available to discovery set definition process is the identity of each discovery method s parameters and the credentials needed to perform the method. Referring to in one embodiment users specify values for each parameter associated with a selected discovery method through parameter window . For example the SNMP method requires that Version and Port parameter values be specified. As shown region includes a list of all the parameters associated with the method identified in title region . In the XXXXX string in title region represents the name of a specific discovery method. Selecting a parameter listed in region causes contextual information and user input region to display the list of parameters associated with the method and a means by which the user may input values for each. It will be recognized that some parameters may require a value mandatory parameters and some may not optional parameters . All or some of both mandatory and optional parameters may be assigned default values and if so assigned will be displayed in user input region . Once the user has specified or accepted default values for at least a method s mandatory parameters another discovery method may be similarly addressed by selecting the Next button in action region see or alternatively by selecting an input trigger button such as for example an OK button such as may be provided in region . The user may utilize the Previous button in action region to revisit a previously addressed discovery method.

Referring to in one embodiment users specify credential values for those discovery methods that require them through credential window . For example the SNMP method requires a community name credential and the WMI discovery method requires a user name and password. As shown region includes a list of all the credentials associated with the discovery method identified in title region . In the XXXXX string in title region represents the name of a specific discovery method. Selecting a credential listed in region causes contextual information and user input region to display the name of the credential and a means through which the user can enter a value s . A user may input one or more values e.g. one or more community names or user name password combinations for each credential. In addition for those credentials that rely on passwords or other private information user input via region may be encrypted. Once the user has specified a method s credentials another discovery method may be similarly addressed by selecting the Next button in action region see or alternatively by selecting an input trigger button such as for example an OK button such as may be provided in region . As previously noted the user may utilize the Previous button in action region to revisit a previously addressed discovery method.

Following specification of the methods to use during the discovery action the user may specify zero or more optional actions to take following completion of the discovery action. For example the user may choose to receive an email notification that the discovery action has completed or was not completed and any error messages describing the reasons the discovery was not completed. The user may also specify that one or more actions occur when she reconnects to the discovery application. Illustrative reconnect actions include but are not limited to prompt to review the log files associated with the discovery action and entry into a validation phase for discovered components if needed . In addition post discovery actions may be tied to specific details of the defined discovery set. For example if the discovery set definition includes a SAP discovery type the user may specify that at the end of the discovery action a SAP map is opened and fed with the result of a well known SAP query.

Referring to in one embodiment the start of post discovery action specification operations causes window to be generated. As shown title region indicates the current window is associated with the specification of post discovery actions. In addition roadmap region indicates not only that the current window is associated with post discovery operations but that introductory type domain and method specification operations have been completed via shading for example and that only schedule specification operations remain. Similar to previous windows contextual information and user input region provides the means by which a user may specify one or more post discovery actions. One of ordinary skill in the art will recognize that the layout of region depends upon the available actions. As this entire step is optional the user is not required to specify any action. In one embodiment the optional nature of this operation may be noted by some visual effect or wording in window e.g. the word OPTIONAL may be included in title region roadmap region or contextual information and user input region . Once the user has specified any desired post discovery actions including none she may move to the next phase or step of defining the discovery set by selecting the Next button in action region see or alternatively by selecting an input trigger button such as for example an OK button such as may be provided in region .

Following the specification of any desired post discovery actions the user may specify a schedule for the defined discovery action. Referring to in one embodiment the start of optional scheduling operations causes window to be generated. As shown title region indicates the current window is associated with the scheduling the defined discovery action. In addition roadmap region indicates not only that the current window is associated with scheduling operations but that no more operations remain to be performed via shading for example . Similar to previous windows contextual information and user input region provides the means by which a user may specify when the defined discovery set is to be performed. In general a user may specify when and how often a discovery action is to be run. For example every day at 2015 hours or the first Saturday of each month at 0600 hours. in one embodiment if no recurrence time is specified it is assumed that the action will be once at the specified time. In addition a default time may be provided such as immediately. Once the user has specified a schedule or accepted the default execution schedule she may move to the next phase or step of defining the discovery set by selecting the Next button in action region see or alternatively by selecting an input trigger button such as for example an OK button such as may be provided in region .

With completion of scheduling operations discovery set definition process is completed. Referring to however in one embodiment summary window is presented just prior to saving the defined discovery set to storage unit see . As shown title region indicates the current window is a summary window. Summary information region presents a listing of all the choices made by the user during the acts of blocks . In addition region may also include a consequences section in which the discovery set s expected run time resource usage and impact to other users may be briefly described. If the user is satisfied with their prior selections she may activate the Finish button in action region . In response discovery set specification is stored in storage unit . As previously noted discovery set specification may represent one or more files or one or more entries in a database. Similarly storage unit may represent one or more direct access storage devices e.g. magnetic or optical disk storage devices one or more database tables or one or more database objects.

Referring now to a graphical user interface in accordance with the invention may be incorporated in discovery application . In particular discovery wizard the software module responsible for generating views in accordance with may be invoked by or through discovery engine the software module responsible for performing or orchestrating actual discovery operations . As shown discovery engine uses database to retain information related to discover types domains methods post discovery actions scheduling and discovery specifications generated in accordance with . It will be recognized that database may comprise more than one physical store and more than one database closely coupled or distributed across a network.

Referring to discovery application in accordance with the invention may be part of enterprise . As shown discovery application is coupled to local network and via this network various components such as database system storage system notebook computer and desktop computer . In addition discovery application may be communicatively coupled via gateway to distal network having other components .

One benefit of a discovery set definition process in accordance with the invention is that the user is relieved of the burden of determining what aspects of the discovery action need be defined. Another benefit of the inventive process is that a user may be presented with queries or asked for input for only those elements necessary to the discovery. For example if the only type of component identified for discovery during the acts of block see are J2EE systems only those discovery methods related to J2EE systems will be proffered to the user during the acts of block . Further any post discovery actions not appropriate for J2EE discovery can also be withheld from the user s view during the acts of block . Yet another benefit of the invention is that discovery set definition operations may be suspended at any time by the user. This may for example be accomplished by activating the Cancel button in any window s action bar see element in . In one embodiment activating the Cancel button causes the user to be prompted to either save or abandon the discovery set. Partially completed discovery sets may be stored in a database or file specific to the discovery application in a location specified by the user or in a database file that is available to other applications.

It is further noted that a user interface in accordance with the invention is modular. That is as new types of components become known see block in or additional methods are developed for existing components see block in they may be easily incorporated into the display and selection technique described herein. By way of example only discovery set definition technique may use an Application Programming Interface API to obtain known types of components and discovery methods from a database specialized to the discovery operation or generally accessible .

Various changes in the components display structures and details of the illustrated operational methods are possible without departing from the scope of the following claims. For instance the operations shown in need not be performed in the sequence illustrated. In addition a discovery wizard in accordance with the invention and as embodied in or display the structures of need not be part of or integral to discovery application of . That is a graphical user interface in accordance with the invention may be embodied as a stand alone executable that interacts through for example an API with discovery engine and or database . Further domain specification operations block of may rely in whole or in part on an external application. That is a domain editor application or module may be used to define a domain whereafter it may be selected through use of an interface in accordance with the invention.

It will be recognized that acts in accordance with may be performed by a programmable control device executing instructions organized into one or more program modules. A programmable control device may be a single computer processor a special purpose processor a plurality of processors coupled by a communications link or a custom designed state machine. Storage devices suitable for tangibly embodying program instructions include but are not limited to magnetic disks fixed floppy and removable and tape optical media such as CD ROMs and digital video disks DVDs and semiconductor memory devices such as Electrically Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM Programmable Gate Arrays and flash devices.

