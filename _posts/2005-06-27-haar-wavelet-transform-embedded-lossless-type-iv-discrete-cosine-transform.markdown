---

title: Haar wavelet transform embedded lossless type IV discrete cosine transform
abstract: A shared lossless Haar transform and an appended type-IV discrete cosine transform are combined to form a lossless discrete cosine type-IV transform having a fast pipeline architecture for providing fast reversible lossless DCT-IV transform data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07634525&OS=07634525&RS=07634525
owner: The Aerospace Corporation
number: 07634525
owner_city: El Segundo
owner_country: US
publication_date: 20050627
---
The invention was made with Government support under contract No. F04701 00 C 0009 by the Department of the Air Force. The Government has certain rights in the invention.

The present application is one of four related copending applications including application entitled Haar Wavelet Transform Embedded Lossless Type IV Discrete Cosine Transform Ser. No. 11 168 977 filed Jun. 27 2005 application entitled Shared Haar Wavelet Transform Ser. No. 11 168 979 filed Jun. 27 2005 application entitled Haar Wavelet Transform Embedded Lossless Type II Discrete Cosine Transform Ser. No. 11 168 978 filed Jun. 27 2005 application entitled Extended Haar Transform Ser. No. 11 168 981 filed Jun. 27 2005 and application entitled Compressed Data Multiple Description Transmission and Resolution Conversion System Ser. No. 11 126 705 filed May 10 2005 by the same inventor.

The invention relates to the field of discrete cosine transforms. More particularly the present invention relates to the use of forward Haar transform for use in discrete cosine transforms for data compression.

The discrete cosine transform DCT does not enable one to directly merge two equal sized transforms into one double size transform nor to split double size transform in halves. The equal sized splitting and merging is desirable for communicating transformed packets in smaller divisible packets. As such the DCT is not a true merge and split transformation process. When used to split or merge a mirror inverse DCT transform does not provide for lossless transformation. The only way for the DCT to perform a merge process is to inversely transform two equal sized DCT transforms back into the time domain and merge in the time domain and finally forward transform the combined double size block into a double size DCT transform. This disadvantageously required additional inverse transformations and forward transformations prior to transmission while degrading the transformed data when additionally inverse and forward again transforming the data and hence the DCT is not a true direct split or merge transform. Another problem with the fast discrete cosine transform is that there is no decimation in time DCT separate flow process compatible with the DCT decimation in time combine flow process. That is prior DCT processes do not have mirror block and flow processes. In prior art the T N 2 type II DCT and D N 2 type IV DCT blocks are DCT transforms of the sum and the difference of two equal sized blocks processing first and second halves of the input data prior to combining the two halves into a double size DCT output. In both forward and inverse DCT transforms the prior art requires operations on two different types of discrete cosine transforms T N 2 and D N 2 which are incompatible with true merge and split transform processing.

Another disadvantage of the prior DCT transforms is that the DCT are processed with integer operations that always incurred large errors in the resulting transformed data that is very lossy whereas floating point operations have minimum amount of loss. The term lossy means that the resulting data from transform to inverse transform losses data fidelity. In the content of image compression and decompression the lossy image would have lower fidelity that the original uncompressed image. There are no completely lossless integer operated type II or type IV discrete cosine transforms. Yet another disadvantage in the prior art type II DCT and type IV DCT is that the DCTs are implemented with single function. As such the DCTs do not share resources with other transforms for example a Haar transform. A 2 2 rotator whether lossy or lossless has two bit parallel serial word inputs Xand Xthat are rotated in radians into two outputs Y and Y. The first output of the 2 2 rotator is the first input weighted by the cosine of the rotating angle adding to the second input weighted by the sine of the same rotating angle. The second output of a 2 2 rotator is the first input weighted by the sine of the same rotating angle subtracted from the second input weighted by the cosine of the same rotating angle. That is Y cos X sin Xand Y cos X sin X. An integer lossy 2 2 rotator has two integer outputs for two integer inputs. An integer lossy 2 2 rotator has been implemented using traditional lifting stages. The unweighted input in each lifting stage is always used for addition but not used for subtraction. Rotators have been used in DCT transforms. Rounding errors cannot be cancelled during continuous use of additions in lifting stages. The total rounding error of the traditional lifting method used in prior arts is very large because the accumulation of rounding errors throughout lifting stages. As such the use of traditional lifting method produces lossy rotators.

Most linear discrete transforms including DCT produce non integer coefficients. The DCT coefficients have to be quantized into integers. The rounding off or quantizing of the DCT coefficients into integers cause information loss that can never be completely recovered by inverse transformations. In many applications it is often desirable to approximate the original linear DCT with a nonlinear DCT that may produce integer outputs from integer inputs while retaining the reversibility property of a transform. However this reversibility still suffers of loss of data fidelity during the transformation and inverse transformation processes. Discrete cosine transforms DCTs are widely used by JPEG MPEG and other international data compression standards to perform lossy compressions on digital image audio and video data. These compression methods divide the data into blocks each of which is first transformed by a linear orthogonal transform such as the DCT. The DCT matrix consists of real numbers. The DCT outputs are floating point numbers and the floating point number have to be quantized in order to convert to integers for transform domain processing. Most of the existing integer discrete cosine transforms are either lossy or unfavorably causing the dynamic range of transform coefficients to increase. There is no lossless integer DCT that still retains the transform fidelity as of the floating point DCT. The quantization process will cause information loss in the inverse transform. The DCT has been used by the current international still image compression standard JPEG for many years. Yet the international still image compression standard JPEG2000 has adopted the wavelet transforms. The JPEG2000 does not use the Haar wavelet transform. Also there is no compatibility between the DCT and JPEG2000 standard wavelet transforms. As such there are no common processes shared by these two transforms.

The modulated lapped transform is a special form of the cosine modulated subband filter banks. The modulated lapped transform is also called modified discrete cosine transform in MPEG the international data compression standards for audio and video data. The modulated lapped transform compression method divides the data into windowed overlapped blocks each of the overlapped portion is first transformed by a linear orthogonal transform i.e. the type IV discrete cosine transform DCT IV . The coefficients are quantized into integers. The rounding off or quantizing of the modulated lapped transform coefficients into integers causes information loss that can never be completely recovered by inverse transforms. It is desirable to approximate the original linear modulated lapped transform with a nonlinear modulated lapped transform that may produce integer outputs from integer inputs while retaining the reversibility property of a transform. The window function and the DCT IV matrix consist of real numbers. The DCT IV outputs are floating point numbers that have to be quantized in order to convert to integers. The quantization process causes information loss that may never be recovered in the inverse transform. In many applications it is desirable to approximate the linear modulated lapped transform with a nonlinear transform that produces integer coefficients from which the original integer data can be reconstructed losslessly. Both the DCT IV and Haar wavelet transform are exact in floating point operations. However in many applications the inputs are integer valued data sequences. These DCT IV transforms and Haar wavelet transforms are approximated by nonlinear transforms producing integer outputs as close as possible to the true outputs but still include lossy data. These nonlinear operations may be regarded as a quantization process. But the nonlinear transform is reversible while the quantization is nonreversible.

The random numbers generators are used in many applications. Random numbers produced by digital electronic random number generators are not truly random. The resulting random numbers especially integer random numbers either have certain correlations between the generated numbers or have some pseudo periodic structures. Typical examples are the pseudo random sequences found in wireless communications systems. The Haar transform cannot be used to accurately decorrelate the pseudo random sequences for use as a random number generator. The Haar transform has been used for data compression and edge detection in medical images. But the performance of the regular Haar transform is limited by the lack of sufficient decorrelation power of the Haar transform. These and other disadvantages are solved or reduced using the invention.

Another object of the invention is to provide a system for generating lossless DCT IV transform data.

Yet another object of the invention is to provide a system for generating lossless extended Haar transform data.

Still another object of the invention is to provide a shared Haar transform for use with appended transform for collectively providing lossless DCT II transform.

Still another object of the invention is to provide a shared Haar transform for use with appended transform for collectively providing lossless DCT IV transform.

Still another object of the invention is to provide a shared Haar transform for use with appended transform for collectively providing lossless extended Haar transform.

A further object of the invention is to provide an extended Haar transform for decorrelating digitally generated pseudo random numbers.

The invention is directed to forming lossless transforms including DCT II DCT IV and extended Haar transforms. A shared Haar transform is used as a front end transform and an appended transform is used as a back end transform. The front end and back end combine as a complete transform. In the preferred forms a first aspect is directed to a DCT II appended transform a second aspect is directed to a DCT IV append transform and a third aspect is directed to an extended Haar transform. All three aspects of the inventions cover the use of the front end shared Haar transform. The shared Haar transform is also called the Sequential transform or S transform. The S transform includes word pair wise rotators that can be factored into lifting steps.

The first aspect of the invention is directed to a nonlinear discrete cosine transform type II DCT II that produces integer outputs from which the original integer data can be reconstructed losslessly. The lossless DCT II is configured as a cascade connection of the front end shared Haar transform having many word pair wise rotations and a backend appended DCT II transform. The integer to integer lossless DCT II and the shared integer to integer lossless Haar transform are cascaded. That is the lossless Haar transform is an integral front end part of the lossless DCT II. The shared integrated integer to integer lossless Haar transform and appended DCT II transforms are implemented by using a nonlinear lifting stages for providing accurate floating point operations. The nonlinear lifting stages are reversible. As such the resultant DCT II transform is perfectly lossless during forward and inverse transformations.

The second aspect of the invention is directed to a nonlinear type IV discrete cosine transform DCT IV that produces integer outputs from which the original integer data can be reconstructed losslessly. The lossless DCT IV is also configured as a cascade connection of the shared lossless Haar transform. The appended lossless DCT IV and shared Haar transform are combined to form a lossless DCT IV transform. The integrated integer to integer lossless Haar transform and DCT IV transform are implemented by using nonlinear lifting stages.

In a third aspect of the invention the shared Haar transform and an appended Haar transform are combined into an extended Haar transform. The extended Haar transform increases the decorrelation power. The extended Haar transform is a cascade connection of two Haar transforms the shared and appended Haar transforms. The shared Haar transforms uses fix angular word pair wise rotations whereas the extended Haar transform uses adaptive angular word pair wise rotations. Using nonlinear lifting methods the integer to integer extended Haar transform becomes lossless due to the reversibility of the integer to integer Haar transform and the adaptive word pair wise rotations. These and other advantages will become more apparent from the following detailed description of the preferred embodiment.

An embodiment of the invention is described with reference to the figures using reference designations as shown in the figures. Referring to an input set of eight integer image data samples from input buffer is passed on to the next processing stage in consecutive word pairs. Input data words one and two are sent to processing unit PU input data words three and four to processing unit PU input data five and six to processing unit PU and input data words seven and eight to processing unit PU . The data input are preferably bit parallel serial words. The processing units PU PU PU and PU are identical lossless 2 2 rotators with a 45 degrees rotating angle that is 4 radians. The rotated outputs of PU are input words one and five to the Haar output buffer . The rotated outputs of PU are input words two and six to the Haar output buffer . The rotated outputs of PU are input words three and seven to the Haar output buffer . The rotated outputs of PU are input words four and eight to the Haar output buffer . The complete circuit is a parallel connection of four word pairs of lossless normalized 2 2 Haar transform or a parallel connection of a lossless normalized Haar wavelet transforms with eight inputs.

Referring to the Haar output buffer passes on eight integer output data from the shared forward Haar transform to processing units PU PU PU and PU with sign changes on data words six and eight denoted by dashed lines. The processing units PU PU PU and PU are identical lossless 2 2 rotators with a rotation of 4 radians. Simultaneously input words one and three of latch A latch on the two rotated outputs from PU . The latch A serves to permute input words to latched words by mere wire routing. Input words two and four of latch A latch on the two rotated outputs from PU . Input words five and seven of latch A latch on the rotated outputs from PU . Input words six and eight of latch A latch on the rotated outputs from PU . At the next clock cycle output words one and two of latch A are sent to processing units PU . Output words three and four of latch A are sent to processing units PU . Output words five and six of latch A are sent to processing units PU . Output words seven and eight of latch A are sent to processing units PU . The processing units PU and PU are identical lossless 2 2 rotators with rotating angle as 4 radians. Processing units PU and PU are identical lossless 2 2 rotators with a rotating angle of 8 radians. The latch B latches on the rotated outputs of PU PU PU and PU . Output word one of latch B connects directly to input word one of the DCT output buffer . Output word five of latch B connects directly to input word eight of the DCT output buffer . Output words two and eight of latch B connect directly to the input pairs of processing units PU . Output words three and seven of latch B connect directly to the input pairs of processing units PU . Output words four and six of latch B connect directly to the input pairs of processing units PU . Processing units PU PU and PU are lossless 2 2 rotators each with a unique rotating angle. The rotating angle of PU is 16 radians. The rotating angle of PU is 8 radians. The rotating angle of PU is 3 16 radians. The rotated outputs from PU PU and PU are respectively connected to the input word pairs two and three four and five and six and seven of the DCT output buffer . The latch A and latch B are used for buffering and word permutation. The output data from the DCT output buffer is the lossless DCT II transformed data.

Referring to the Haar output buffer passes on eight integer output data from the shared forward Haar transform to latch C with sign changes on data words six and eight denoted by dashed lines. The latch C is used for permuting and buffering of the shared forward Haar transformed data from the Haar output buffer. The latch outputs are sent to block processing unit for processing with two parallel fourth order lossless DCT IV transforms. The DCT IV transformed outputs from the block processing unit are passed on to processing units PU PU PU and PU . The processing units PU PU PU and PU are lossless 2 2 rotators. The rotating angle of PU is 32 radians of PU is 16 radians of PU is 3 32 radians and of PU is 8 radians. The outputs from the processing units PU PU PU and PU are sent to the DCT IV output buffer . The output data in the DCT IV output buffer is the lossless DCT IV transformed data.

Referring to the Haar output buffer passes on eight integer output data from the shared forward Haar transform to processing units PU PU PU and PU . The processing units PU PU PU and PU are identical lossless 2 2 rotators. Each of the rotating angles in PU PU PU and PU is precalculated from the two inputs. The latch E latches on the rotated outputs from PU PU PU and PU then sent to processing units PU PU PU and PU in word pairs. Each of the processing units PU PU PU and PU has a specific rotating angle that is precalculated from the two inputs. The extended Haar output buffer latches on the rotated outputs of PU PU PU and PU .

Referring to a processing unit comprises of three integer to integer lifting stages. The integer inputs IN and IN from the input buffer are fed into the first lifting stage comprising a processing pipeline unit PL A and an adder . The first input IN to the first lifting stage is weighted by a weighting constant that is one minus the sine of a rotating angle divided by the cosine of the rotating angle at PL A . At adder the second input IN is added to the integer round off of the weighted output from PL A . The second lifting stage comprises of a processing pipeline unit PL B and an adder . The inputs to the second lifting stage are the outputs from the first lifting stage . The first output of the first lifting stage is passed on to adder with a sign change. The second input to the second lifting stage is passed on to the second output of the second lifting stage without change. The second output of the first lifting stage from adder is weighted by a second constant that is the cosine of the rotating angle at PL B . At adder the first output of the first lifting stage is subtracted from the integer round off of the weighted output from PL B . The first output of the second lifting stage is the integer round off of the weighted second input subtracting the first input. The weighting constant is the cosine of the rotating angle. The third lifting stage comprises of a pipeline processing unit PL C and an adder . The inputs to the third lifting stage are the outputs from the second lifting stage . The first input of the third lifting stage is passed on to the second output Out of the third lifting stage without change. The first input of the third lifting stage is weighted by a weighting constant that is one minus the sine of the rotating angle divided by the cosine of the rotating angle at PL C . At adder the integer round off of the PL C output is subtracted from the second input of the third lifting stage . The first output Out of the third lifting stage is the integer output of adder . Both outputs Out and Out of the third lifting stage are buffered at output buffer .

Referring to the design of a processing unit is based on a three stage lifting transform comprising three lifting stages the first lifting stage the second lifting stage and the third lifting stage . The electronic circuit is a parallel pipeline with data flow arranged in word serial and bit parallel format. Three multiplying constants p c and p are respectively stored in read only memory ROM ROM and ROM in canonic signed digital codes. The constant c is the cosine of the rotating angle. The constant p is equal to one minus sine of the rotating angle divided by the cosine of the rotating angle. In two s complement the first input data IN from the input buffer is multiplied to the canonic signed digit codes of p in ROM by the first pipelined multiply add unit PMA in the first lifting stage . In the same PMA unit the multiplied result is added to the second input data IN from the input buffer in two s complement form. The pipelined multiply add unit having many levels of arrays of carry and save adders and an array of carry look ahead adders with an output latch at the output end of the pipelined multiply add unit performs array multiplications and additions in the same unit. The number of pipelined multiply add unit levels depends on the bit length of each data involved in multiplication and addition operations. At the same time instant that PMA begins processing the first latch FF latches on the first input IN . A common data ready signal is used to delatch the PMA latch and the FF latch so that both outputs from PMA and FF can simultaneously flow to the second lifting stage . The output from PMA is multiplied to the canonic signed digit codes of c in ROM by the second pipelined multiply add unit PMA in the second lifting stage . In the same PMA unit the multiplied result subtracts the output of FF in two s complement form. At the same time instant that PMA begins processing the second latch FF latches on the output of PMA . A common data ready signal is used to delatch the PMA latch and the FF latch so that both outputs from PMA and FF can simultaneously flow to the third lifting stage . The output from PMA is multiplied to the canonic signed digit codes of p in ROM by the third pipelined multiply add unit PMA in the third lifting stage . In the same PMA unit the multiplied result is added to the output of FF in two s complement form. At the same time instant that PMA begins processing the third latch FF latches on the output of PMA . A common data ready signal is used to delatch the PMA latch and the FF latch so that both outputs from PMA and FF can simultaneously flow to the output buffer . The output from PMA is the OUT in the output buffer . The output from FF is the OUT in the output buffer .

In the three lifting stages multipliers are replaced by binary shifts and additions for improved operational speed. Integer arithmetic operations such as additions subtractions and shifts of binary numbers are used according to the lifting algorithm to give accurate results for a lossless 2 2 rotation. The implementations of the Haar extended Haar DCT II and DCT IV transforms includes the 2 2 rotator referred to as processing units. A three stage lifting method is used to reduce the four multiplications in a 2 2 rotator into three multiplications. Thus a lossless 2 2 rotator for integer inputs comprises of three integer to integer lifting stages. In the first lifting stage the second integer output of the first lifting stage is the second integer input of the lossless 2 2 rotator adding to the integer round off of the weighted first integer input of the lossless 2 2 rotator. The first integer output of the first lifting stage is the same first integer input of the lossless 2 2 rotator. In the second lifting stage the first integer output of the second lifting stage is the integer round off of the weighted second integer output of the first lifting stage subtracting off the first integer output of the first lifting stage. The second integer output of the second lifting stage is the same second integer output of the first lifting stage. In the third lifting stage the second integer output of the third lifting stage being the first integer output of the lossless 2 2 rotator is the weighted first integer output of the second lifting stage adding to the second integer output of the second lifting stage. The first integer output of the third lifting stage being the second integer output of the lossless 2 2 rotator is the same first integer output of the second lifting stage. The weighting constant in the first lifting stage is one minus the sine of the rotating angle divided by the cosine of the rotating angle. The weighting constant in the second lifting stage is the cosine of the rotating angle. The weighting constant in the third lifting stage is the sine of the rotating angle minus one divided by the cosine of the rotating angle.

Referring to the block processing unit comprising three integer to integer lifting stages is to perform a 2 2 lossless vector rotation. The vector has four integer data that are processed in parallel. The two sets of integer inputs IN and IN from the input buffer are fed into the first lifting stage comprising a block processing unit DCT IV A and an adder . The first set of inputs IN is fed into the block processing unit DCT IV A for performing a 4 4 DCT IV transform. The transformed data are rounded off into integers before adding to the second set of inputs IN at adder . The inputs to the second lifting stage are the outputs from the first lifting stage. The second lifting stage comprises of a block processing unit DCT IV B and an adder . The first output set of the first lifting stage is passed on to adder with a sign change. The second output set of the first lifting stage is the second input set to the second lifting stage that is passed on to the second output of the second lifting stage without change. The second output set of the first lifting stage is also fed into the block processing unit DCT IV B for performing a 4 4 DCT IV transform. The transformed data are rounded off into integers before subtracting the first output set of the first lifting stage IN at adder . The third lifting stage comprises of a block processing unit DCT IV C and an adder . The inputs to the third lifting stage are the outputs from the second lifting stage. The first input of the third lifting stage is passed on to the second output OUT of the third lifting stage without change. The first input of the third lifting stage is also fed into the block processing unit DCT IV C for performing a 4 4 DCT IV transform. The transformed data are rounded off into integers before subtracting from the second output set of the second lifting stage at adder . The first output set of the third lifting stage is the integer input set OUT in the output buffer . The second output set of the third lifting stage is the integer input set OUT in the output buffer .

Referring to all Figures a radix 2 decimation in time DCT algorithm is used to decompose the ordinary DCT into a cascade structure consisting of as the first part a Haar wavelet transform and as the second part a pair of lower order DCTs followed by a rotation operation. For example the eight order DCT decimation in time equation is given by the DCT DIT equation.

In the DCT DIT equation x is the integer input represented by an eight element vector and z is the integer output also represented by an eight element vector. His the Haar wavelet transform matrix.

The shared forward Haar transform can have a parallel implementation. In addition the matrix Iin the DCT DIT equation represents a sign change of the output data words six and eight of the Haar output buffer .

In the DCT DIT equation c cos k 16 and s sin k 16 for k 1 2 3 4. Ris a rotation matrix referred to as an Rrotation matrix and T the fourth order DCT matrix.

Both the DCT and Haar wavelet transforms are exact in floating point operations. However in many applications the inputs are integer valued data sequences. It is desirable to approximate the above transforms with nonlinear transforms producing integer outputs as close as possible to the true outputs. This type of nonlinear transform is reversible and is called the lossless lifting method. The lossless lifting method to implement reversible integer transforms is based on factoring the transform matrix into several elementary matrices. But the factoring into elementary matrices in the lossless lifting operations must produce results as accurate as the floating operations. The most accurate factoring of elementary matrix is given by the factorization of the 2 2 rotations for p 1 s c defined by a cmatrix.

A radix decimation in time DCT IV algorithm is used to decompose the ordinary DCT IV into a cascade structure consisting of as the first part a Haar wavelet transform and as the second part a pair of lower order DCT IV followed by a rotation operation. The Haar wavelet transform clearly exhibits the subband properties of DCT IV while the two lower order DCT IV and the rotation operator are to decorrelate the residual correlation between subbands. Without any information loss the Haar wavelet transform also called the sequential transform may be implemented by lifting methods. The two lower order DCT IV and the rotation operator may further be factored into lifting steps. Finally using the nonlinear lifting algorithm the complete DCT IV can be mapped into an integer to integer transform. The nonlinear lifting is reversible and as such the resultant DCT IV is perfectly lossless.

For example the eight order DCT IV decimation in time DIT equation is given by the DCT IV DIT equation.

In the DCT IV DIT equation c cos k 32 and s sin k 32 for k 1 2 3 4 D 4 is the fourth order DCT IV matrix and Ris an Rrotation matrix.

Both the DCT IV and the Haar wavelet transforms are exact in floating point operations. However in many applications the inputs are integer valued data sequences. It is desirable to approximate the above transforms with non linear transforms producing integer outputs as close as possible to the true outputs. This type of non linear transform is reversible and is called the lossless lifting method. The lossless lifting method to implement reversible integer transforms is based on factoring the transform matrix into several elementary matrices. But the factoring into elementary matrices in the lossless lifting operations must produce results as accurate as the floating operations. The most accurate factoring of elementary matrix is in the form p 1 s c as defined the cmatrix and the y lifting equations.

The basic operation in the Haar transform which is also called the Haar wavelet transform is to perform pair wise addition and subtraction of two adjacent input pixels. For example the three lower order Haar transform matrices are given by the H H and Hmatrices.

The Nth order Haar transform performs N 2 2 2 rotations in parallel with all rotating angles as 45 degrees at 4 radians. The shared forward Haar transform is used to decorrelate two adjacent random variables. In general for two random variables xand x with covariance cov x x and variances var x and var x the 2 2 rotational transform is used to decorrelate the two random variables xand xaccording to the 2 2 rotational transform equation.

The rotating angle in the 2 2 rotational transform equation must satisfy the rotating angle equation.

Depending on the second order statistical parameters of the two inputs the magnitude of the rotating angle varies from 0 to 45 degrees. The rotating angle is 0 when the two random variables are uncorrelated. The rotating angle is 45 degrees at 4 radians when the two variances of the two random variables are equal. The shared Haar transforms are assuming that the variances of the two input random variables are equal even through that may not be so.

The processing units PU PU PU and PU in are used to further decorrelate the shared Haar transform outputs by removing the correlations between the shared Haar transform output word pairs 6 1 5 2 3 8 and 4 7 from the outputs of latch D . Each of the rotating angles of processing units PU PU PU and PU is calculated according to the rotating angle equation. The latch E latches on the rotated outputs from PU PU PU and PU . The processing units PU PU PU and PU are used to further decorrelate the outputs from the latch E by removing the correlations between the output word pairs 8 1 7 2 3 6 and 4 5 from latch E. Each of the rotating angles of processing units PU PU PU and PU is calculated according to the rotating angle equation.

A fast lossless extended Haar Transform comprises of three decorrelation layers. The first layer is the shared Haar transform. The second layer comprises of PU PU PU and PU and latch E . The third layer comprises of PU PU PU and PU and the extended Haar output buffer . Each of the three layers is to perform four lossless 2 2 rotations in parallel. The processing chain is expressed by an Eequation.

In the Eequation crepresents the cosine of the kth rotating angle and s the sine of the kth rotating angle.

The shared Haar transform and the rotational transforms in the subsequent two rotation layers are implemented by the lifting method. The lossless lifting method to implement reversible integer transforms is based on factoring the transform matrix into several elementary matrices. But the factoring into elementary matrices in the lossless lifting operations must produce results as accurate as the floating operations. The most accurate factoring of elementary matrix is in the form p 1 s cusing the cmatrix.

The factoring of the elementary matrix is equivalent to the nonlinear lifting operations as given by the lifting equations.

A lossless transform also called the hybrid orthogonal transform is generated by applying a fourth order lossless DCT to the first half of the lossless extended Haar transform output. The relation between the hybrid orthogonal transform Bthe forth order DCT Tand the extended Haar transform Eis given by the hybrid orthogonal transform equation.

The fourth order DCT in the hybrid orthogonal transform equation is implemented with two layers of lossless rotations. Each rotational layer comprises of a pair of lossless 2 2 rotators as expressed by the fourth order DCT matrix.

In the fourth order DCT matrix c cos k 16 and s sin k 16 . The lossless 2 2 rotators in the fourth order DCT are implemented with integer to integer lifting method.

The invention in the first aspect is directed to an integrated lossless type II DCTs comprising an appended DCT II transforms and a shared lossless Haar wavelet transform. It should be apparent that the transforms as shown have input and output buffers and communication lines for communicating input data and output data. The transforms are useful in data compression that conserves storage capacities and communication bandwidth such that the invention can be used in computer systems and communication systems. The lossless block transforms including both appended DCT and Haar wavelet transform are very effective in prevention of error propagation. Second the regular structure is quite suitable for VLSI design. Third the integrated transform is multi functional namely both the DCT and Haar wavelet transform may be integrated in one VLSI design and used for lossless or lossy data compression applications.

In the second aspect of the invention an integrated lossless DCT IV and a lossless Haar wavelet transform. There are many advantages for using such architecture. First the lossless block transforms including both DCT IV and Haar wavelet transform are very effective in prevention of error propagation. Second the regular structure is quite suitable for VLSI design. Third the integrated transform is multi functional namely both the DCT IV and Haar wavelet transform may be integrated in one design and used for lossless or lossy data compression applications.

In the third aspect of the invention an extended Haar transform and an unitary transform called hybrid orthogonal transform are constructed in which four low pass bases belong to the DCT class and four high pass bases to the Haar Wavelet Transform class. The four low pass bases can achieve as much energy compaction as the DCT whereas the high pass bases have as much spatial localization as the Haar Wavelet Transform. The invention is directed to a combination of transforms having a front end shared Haar transform and an appended transform that can be a DCT II DCT IV or an extended Haar transform. The transforms can be used separately or in combination to transform communicate and store data in processing systems. Those skilled in the art can make enhancements improvements and modifications to the invention and these enhancements improvements and modifications may nonetheless fall within the spirit and scope of the following claims.

