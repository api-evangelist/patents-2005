---

title: Triggerless interactive television
abstract: Various technologies and techniques are disclosed that relate to providing interactive television by synchronizing content to live and/or recorded television shows. Content is synchronized without the use of in-band triggers. A broadcast stream is received, and search/action pairs are received from a transmission path, such as from the Internet or user. When the search criteria are found in the broadcast stream, the associated action is performed and the content is synchronized with the show. An application programming interface is used to facilitate synchronization, and includes a set search method, a search function template method, and a clear search method. The set search method initiates searching of the broadcast stream and registers one or more callback methods for performing the associated action when the match is found. The search function template serves as the template for registering the callback methods. The clear search method clears the system resources from the search.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08307403&OS=08307403&RS=08307403
owner: Microsoft Corporation
number: 08307403
owner_city: Redmond
owner_country: US
publication_date: 20051202
---
The computer and television industries are making large strides in developing technology that combines the functionality of the computer and the television. For instance the computer is becoming more adept at rendering audio and video data in a manner that simulates the broadcast infrastructure of the television industry. Likewise the television and computer industries are making improvements in delivering interactive television content that tie web based and or other content to television broadcast content. One example of such interactive television includes displaying particular advertiser s web page when their commercials are broadcast. Another example of interactive television includes displaying an interactive game that is in synch with the television broadcast.

In order to synchronize web based and or other content with television video content the broadcaster must typically send triggers in band with the video. Triggers are synchronization events and references to applications typically web pages that perform the actions. Examples of industry standards that support such triggers include the Advanced TeleVision Forum ATVEF standard and the Broadcast HTML standard. When using triggers in this fashion some sort of back channel is typically required in order to send the actual web pages since the in band channel is too narrow to send much content. Furthermore in band triggers require the broadcaster which generates the web content and triggers to work hand in hand with the head end side to get those triggers sent. This relationship between the broadcaster and head end has traditionally been problematic because among other reasons the television broadcasts have to be modified in order to include the required in band triggers.

Described herein are various technologies and techniques for providing interactive television by synchronizing content to television shows. In one aspect content is synchronized without the use of in band triggers. As one non limiting example a broadcast stream is received such as a particular live or recorded television show. A set of search instructions are received from a transmission path such as from a web page downloaded over a separate transmission path such as the Internet and or from search instructions entered by the user. The search instructions include a search criteria and one or more actions to be performed when that search criteria is found in a particular portion of the broadcast stream. When the search criteria are found in the broadcast stream the associated one or more actions are performed and the content is synchronized with the show being played.

In another aspect an application programming interface is provided to facilitate the synchronizing of content to television shows. The application programming interface includes a set search method a search function template method and a clear search method. The set search method initiates searching of a particular broadcast stream to locate the value e.g. string etc. to match and registers one or more callback methods that should be called to perform a particular action when the match is found. The search function template serves as the template for registering the callback methods. The clear search method clears the system resources associated with the particular search.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

For the purposes of promoting an understanding of the principles of the invention reference will now be made to the embodiments illustrated in the drawings and specific language will be used to describe the same. It will nevertheless be understood that no limitation of the scope of the invention is thereby intended. Any alterations and further modifications in the described embodiments and any further applications of the principles of the invention as described herein are contemplated as would normally occur to one skilled in the art to which the invention relates.

There are various ways to synchronize web based and or other content with television video content. Typically the broadcaster sends triggers in band with the video such as using the ATVEF or Broadcast HTML standards. The broadcaster typically must modify the television broadcast to include the in band triggers and must work hand in hand with the head end side to get those triggers sent. Various technologies and techniques are discussed herein that allow web based and or other content to be synchronized with video content without using in band triggers and or without modifying the television broadcast stream. The term broadcast stream used herein is meant to include live and or recorded broadcast streams.

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers mobile telephones PDAs distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through an non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . Computer may be integrally positioned with or separate from monitor . Monitor may be configured to display items of different sizes and to display items in different colors. Examples of other suitable display devices include but are not limited to computer monitors televisions PDA displays displays of other portable devices and so forth. In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through a output peripheral interface and integrally positioned with or separate from computer . Non limiting examples of speakers include computer speakers stereo systems amplifiers radios television audio systems and so forth.

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . In one embodiment the remote computer may include a TV broadcast station a cable broadcast station and or a satellite transmission system. The broadcast signals transmitted to between the computer and the remote computer may include analog and digital signals that are transmitted over any suitable communication link. The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Turning now to with continued reference to a search program operating on computer in one aspect of the present invention is illustrated. In the example illustrated on search program is one of application programs that reside on computer . Alternatively or additionally one or more parts of search program can be part of application programs in RAM on remote computer with remote application programs or other such variations as would occur to one in the computer software art.

Search program includes business logic . Business logic is responsible for carrying out some or all of the techniques described herein. Business logic includes logic for retrieving search instructions that were received from a transmission path such as one separate from a broadcast stream and logic for processing the broadcast stream to look for search criteria and determine a match . Business logic also includes logic for registering one or more callback methods so one or more actions can be performed when a match is determined . Business logic of search program also includes logic for deleting system resources used in the search . In business logic is shown to reside on computer as part of application programs . However it will be understood that business logic can alternatively or additionally be embodied as computer executable instructions on one or more computers and or in different variations than shown on . As one non limiting example one or more parts of business logic could alternatively or additionally be implemented as an XML web service that resides on an external computer that is called when needed.

Also shown on are search instructions that were received from a transmission path such as one separate from the broadcast stream. Search instructions contain one or more sets of search action pairs . As one non limiting example search instructions are contained in a web page that communicates with search program . Each search action pair includes search criteria and one or more actions to be performed when the particular search criteria is found in the broadcast stream. Search instructions are retrieved by business logic . Search criteria are used by business logic as the search criteria to look for in the broadcast stream. Business logic registers callback methods for the actions so that the actions are performed when the search criteria is matched with the broadcast stream.

Turning now to with continued reference to the stages for implementing one or more aspects of search program of system are described in further detail. is a high level process flow diagram of one aspect of the current invention. In one form the process of is at least partially implemented in the operating logic of system . The process begins at start point with receiving at least one broadcast stream such as audio video emergency alerts time weather and or data stage . One or more search action pair instructions are received from a transmission path such as one separate from the broadcast stream stage . As a few non limiting examples search action pairs can be contained in an HTML file or other file that was downloaded over an Internet connection. For example a guide entry for the show can contain a URL that specifies where the initial web page containing the search action pairs can be retrieved. As another example the user could select the start page with the search action pairs by navigating to that page in a web browser or by some other selection means. As yet a further non limiting example the initial start page and or the search action pairs can be generated programmatically or manually based on criteria entered by the user such as criteria indicating the user wishes to start recording the show on the programmable video recorder PVR when the search string John Doe comes on. Finally the initial start page containing search action pairs can be retrieved or generated from various other sources.

The broadcast stream is processed by search program to extract portions of content from the stream stage . As a few non limiting examples portions of content extracted from the stream can include string values retrieved from a close caption and or subtitle stream. Portions of content can alternatively or additionally be extracted from another text stream from an audio stream from a video stream from an emergency alert stream from a time stream from a weather stream and or from other streams. As one non limiting example you may want a certain action to be performed when a certain sound is broadcast such as the jingle of a particular company. As another non limiting example you might have a particular frame or frames of video that you want to match before kicking off a certain action. Numerous other text and non text variations of searches are also possible.

When search program determines that the search criteria has been found in the extracted content stage based on a full or partial match as applicable the one or more actions associated with the search criteria are initiated and the result of the one or more actions is synchronized with the show being played stage . Some non limiting examples of actions include initiating another search opening a particular web page launching an external program beginning recording on a PVR device skipping a scene such as a commercial after a certain time period muting a commercial tracking the number of times a show is watched for data collection purposes and or transcribing the close caption stream and writing the text to file or Braille output. Nearly anything that can be initiated programmatically using computer can be included as part or all of an action. One non limiting example of synchronization includes using timeshifting to delay playback of the show from it s broadcast time and perform the result of the action at a time that appears to occur before the action was actually initiated. The process then ends at end point .

Shown in is a more detailed process flow diagram illustrating the stages involved in synchronizing content with a show in one aspect of the current invention. In one form the process of is at least partially implemented in the operating logic of system . The process begins at start point with receiving at least one broadcast stream stage . A search page having one or more search action pairs is received from a transmission path such as one separate from the broadcast stream stage . The search page is bound to at least one search object e.g. search class in stage . As a non limiting example search program can create the search object. Callback methods are registered so methods in the search page for associated actions are called when a match is found stage . The callback method is then called to perform the associated action when a match to the search criteria is found in the broadcast stream stage . The result of the action is then synchronized with the show stage . The process then ends at end point .

Turning now to a class diagram is shown that illustrates the methods used in synchronizing content with a show in one aspect of the current invention. Search class includes three methods SetSearch SearchFncTemplate and ClearSearch . In one aspect of the invention the SetSearch method is responsible for initiating the extraction of content from the broadcast stream and searching for a match. In one aspect of the invention the SetSearch method is also responsible for registering the callback methods for the associated actions using the SearchFncTemplate method as a template for the structure of the callback method. The ClearSearch method is responsible for deleting the system resources used in running a particular search

In one aspect of the invention the SetSearch method accepts one or more of the following parameters streamld searchFnc regExp mode idSearch deltaTimeShift startSearchTime endSearchTime and dwCookie. One or more of these parameters may be optional and or omitted. The streamld parameter is used to indicate an identifier of the particular stream to search for the search criteria such as CC or CC for a close caption stream. The searchFnc parameter is used to indicate the name of the callback search function to call when the specified criteria has been located matched in the stream. The regExp parameter is related to the type of the stream. As one non limiting example for text based streams the regExp parameter can be a regular expression or other string that indicates the string to match in the stream. The regExp parameter can include a full or partial string to match including wildcards or other variations as would occur to one in the art. As another non limiting example for video streams the regExp parameter can be a video image to match. For audio streams as a non limiting example the regExp parameter can be a sound byte to match. For audio and or video streams the regExp parameter can include a full and or partial value to match. Alternatively or additionally the particular stream could be converted to a string or other data type suitable for matching. The mode parameter indicates how long the search should be performed such as once recurring etc. In one aspect of the invention if once is specified the search terminates after the first string it gets that matches. If recurring is specified then the search keeps on matching strings until terminated manually or systematically.

The idSearch parameter is an identifier for the search and may or may not be unique. The deltaTimeShift parameter specifies the delay in presentation time from when the search string is matched and the callback method is kicked off. As one non limiting example the deltaTimeShift parameter can be used in a scenario where the action to perform when a match is found includes initiating the recording of a television show on a PVR after a certain portion of a segment begins to air with someone featured the user wants to record. The startSearchTime parameter specifies the time the search started and the endSearchTime parameter specifies the time the search ended. One non limiting example of when the startSearchTime and endSearchTime parameters might be used is to synchronize content in the third quarter of a sports game. The SetSearch method outputs a dwCookie parameter that is a unique identifier for the search that can be used to free system resources with the search as well as used for other purposes as desired.

In one aspect of the invention the SearchFncTemplate method serves as the callback template method for the methods of the associated actions that are called when a particular search criteria is matched in the broadcast stream. The SearchFncTemplate method can include one or more of the following input parameters ccMatched idSearch timeStart and or timeEnd. One or more of these parameters may be optional and or omitted. In one aspect of the system for text based streams the ccMatched parameter is the actual string matched in the search. For other stream types such as audio and or video streams the ccMatched parameter is the matched section of that stream. The idSearch parameter is an identifier for the search and may or may not be unique. The timeStart parameter is the presentation time of the first field e.g. character in the search string and the timeEnd parameter is the presentation time of the last field e.g. character in the search string. The timeStart and timeEnd parameters may be offset by the deltaTimeShift parameter specified in the SetSearch method . As one non limiting example the timeStart parameter can be used in external post processing stages to realign stages with the video. As one non limiting example the timeEnd parameter can be used as a synchronization point to base further animations from.

The ClearSearch method can include one or more of the following parameters dwCookie. The dwCookie parameter is a unique identifier for the particular search and allows the ClearSearch method to free the system resources associated with the search.

One of ordinary skill in the software art will appreciate that the methods in search class could be arranged differently with more or fewer parameters could perform more or fewer operations and or could call other methods to perform the operations described. Furthermore one of ordinary skill in the software art will appreciate that one of more of the methods in search class could be modified so that the return value is not from the particular stream being matched but instead is from another co time located stream and or a time indicator in the show. As one non limiting example when a particular sound occurs in the show the value being matched a certain picture could be returned the value being returned .

Turning now to some hypothetical examples will be used to further illustrate some of the techniques discussed in . These examples are illustrative only and the techniques described herein could be used in numerous other scenarios. Beginning with a process flow diagram illustrates performing serial matching based on a Mary had a little lamb hypothetical. Serial matching is used when you want to process certain searches in a specific order and or perform one or more actions only if all of the search criteria in that exact order are met. An example where serial matching may be useful is when a live show is being broadcast and you are not sure of certain details so you want to wait until after the criteria is matched completely and in a certain exact order. Serial matching does not work as well when part of the content that is required for a match comes across garbled and or in scenarios where the show is mid stream and some of the content that includes the search criteria has already been broadcast.

The process on begins with running the OnLoad event from the search page. The first search is looking for Mary . The stream is searched until Mary is located. When Mary is actually located then the search proceeds with searching for Had . The stream is then searched until Had is located. When Had is actually located then the search proceeds with searching for Little . The process follows this serial pattern for each of the remaining phrases until Lamb is actually found .

Turning now to the same hypothetical will be used to illustrate a parallel matching process. A parallel matching process can be useful in scenarios where there are missing strings and or when starting in a later part of a show after some content has already been broadcast. illustrates the process flow and illustrates the corresponding HTML page with VBScript that implements the process. Both figures will be referred to collectively in the following discussion. Again the start page shown containing the search action pairs in could be downloaded over the Internet and or obtained by some other means. The process begins with binding the web page to a search object on and then running the OnLoad event on that kicks off all of the searches . In the OnLoad event five searches are registered using the SetSearch method that can be completed in any order if at all Mary Had A Little Lamb and 5 Seconds timeout . When searches for Mary Had and A Little are matched then ActLinel callback method on is called. When searches for Lamb and Seconds timeout are matched the DoneLinel callback method on is called. When the search for Lamb completes with a successful match the DoneLinel method on clears up the resources by calling the ClearSearch method and then performs the final action which is to display the Test Your Little Lamb Knowledge quiz and synchronize it with the show. As shown on the simulated screen includes among other things a TV window as well as content window for displaying the Test Your Little Lamb Knowledge quiz discussed in the hypothetical examples in . One of ordinary skill in the art will appreciate that parallel and serial searches are opposite extremes of searching methods and that combinations of these two searching methods could be used instead of or in addition to either of them alone.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. All equivalents changes and modifications that come within the spirit of the inventions as described herein and or by the following claims are desired to be protected.

For example a person of ordinary skill in the computer software art will recognize that the client and or server arrangements user interface screen content and or data layouts as described in the examples discussed herein could be organized differently on one or more computers to include fewer or additional options or features than as portrayed in the examples and still be within the spirit of the invention.

