---

title: Methods and apparatus for managing requests
abstract: A management control center communicates with multiple agents in a storage area network. On behalf of the management control center, the agents communicate with a switch resource management entity that maintains configuration information about resources such as a group or groups of switches in the storage area network. Based on a chain of communications from the management control center through the agents to the remote management entity, the management control center can indirectly learn about a configuration of switch resources in the storage area network. The agent utilizes a calculated current load value (e.g., a value indicating a relative burden placed on the remote management entity to service the forwarded set of requests) to selectively forwards requests to the switch resource management entity. This technique ensures that the switch resource management entity is not overwhelmed by a task of servicing too many requests at the same time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07694007&OS=07694007&RS=07694007
owner: EMC Corporation
number: 07694007
owner_city: Hopkinton
owner_country: US
publication_date: 20050330
---
Information services and data processing industries in general have rapidly expanded as a result of the need for computer systems to manage and store large amounts of data. As an example financial service companies such as banks mutual fund companies and the like now more than ever before require access to many hundreds of gigabytes or even terabytes of data and files stored in high capacity data storage systems. Other types of service companies have similar needs for data storage.

Data storage system developers have responded to an increased need for storage by integrating high capacity data storage systems data communications devices e.g. switches and computer systems e.g. host computers or servers into networks called storage networks or Storage Area Networks SANs. In general a storage area network is a collection of data storage systems that are networked via a switching fabric to a number of host computer systems operating as servers. The host computers access data stored in the data storage systems on behalf of client computers that request data from the data storage systems. For example according to conventional applications upon receiving a storage access request a respective host computer in the storage area network accesses a large repository of storage through the switching fabric of the storage area network on behalf of the requesting client. Thus via the host computer e.g. server a client has access to the shared storage system through the host computer. In many applications storage area networks support hi speed acquisitions of data so that the host servers are able to promptly retrieve and store data from the data storage system.

Conventional storage area network management applications typically include a graphical user interface GUI that enables a network manager to graphically manage control and configure various types of hardware and software resources associated with a corresponding managed storage area network. For example one conventional network management storage application generates a graphical user interface utilized by a network manager to graphically select interact with and manage local or remote devices and associated software processes associated with the storage area network. Based on use of the graphical user interface in combination with an input device such as a hand operated mouse and corresponding pointer displayed on a viewing screen a network manager is able to manage hardware and software entities such as file systems databases storage devices peripherals network data communications devices etc. associated with the storage area network. Consequently a network management station and associated management software enables a network administrator or systems manager a person responsible for managing the storage network to manage the storage area network and its resources. One purpose of managing storage area network resources is to maintain the storage area network so that the storage area network is properly configured to provide efficient data access to many users.

To manage devices such as switches in a storage area network a network administrator via the graphical user interface discussed above may arbitrarily assign agents e.g. entities that perform tasks on behalf of one or more other entities in the storage area network to manage the switches through a common storage area network management device. For example a network administrator may assign a first agent a duty of managing a first switch based on communications from the first agent to a management device that in turn manages or controls the first switch. Additionally the network administrator may assign a second agent a duty of managing a second switch device based on communications from the second agent to the same management device that in turn controls the second switch. Accordingly multiple agents can communicate with the same management device to manage switches under the control of the management device.

The first agent and the second agent typically can communicate with the management device to learn of configuration information associated with respective switches. For example the first agent can send a request to the management device to learn of configuration information associated with the first switch. The second agent can send a request to the management device to learn of configuration information associated with the second switch. After receiving respective replies from the management device the respective agents forward the information to a source e.g. a management control center that initially prompted the agents to retrieve the configuration information frm the management device.

Conventional network management applications that support management of network resources via use of multiple agents in a storage area network typically suffer from a number of deficiencies. For example one or more agents forwarding requests to a management device as discussed above can inadvertently inundate the management device with respective tasks of simultaneously servicing the requests for information. For example a multitude of agents may concurrently request information from the management device about corresponding switches. When inundated with such concurrent requests the management device may not be able to respond to a respective agent within a timeout window. In such a case if the management device does not respond to an inquiry by an agent within the timeout window the agent will give up and resend the same request to the management device. Resending the same request to the management device can cause further congestion to the management device and a respective communication link because the management device may have been in the middle of replying to the original request by the agent. Time spent by the management device to service the aborted request is therefore wasted.

Timeouts may occur because respective communication links between agents and the management device does not support the bandwidth required so that the management device can efficiently distribute the requested information to respective agents. Timeouts may also occur because the management device does not have appropriate processing power to formulate replies and disseminate information to multiple agents quick enough. Either of these types of bottlenecks therefore can result in poor system performance of a storage area network.

Techniques discussed herein deviate with respect to conventional network management applications. For example embodiments of the present application include mechanisms and techniques to keep track of a current burden on a remote management entity to service previously forwarded requests. Based on the current burden the agent selectively forwards additional requests to the remote management entity so as not to inundate the remote management entity with too many requests at the same time.

More specifically according to one configuration discussed herein a management control center communicates with multiple agents in a storage area network. The agents each communicate with a switch resource management entity that maintains configuration information about resources such as a group or groups of switches in the storage area network. Based on a chain of communications from the management control center through the agents to the remote management entity the management control center can indirectly control or learn about a configuration of switch resources in the storage area network. For example the management control center issues requests to agents. The agents forward the requests to the remote management entity for servicing by the remote management entity. Eventually the remote management entity communicates requested information through the agent to the management control center.

The agent can calculate a current load value corresponding to a relative burden placed on the remote management entity to service the forwarded set of requests. The agent utilizes the current load value as a gauge of whether to forward further requests to the management entity. While the remote management entity services a previously forwarded set of requests assume in this example that the agent receives a new request to be forwarded from the agent to the remote management entity. As discussed the agent selectively forwards the new request to the remote management entity so that it is not inundated with requests. In other words if a current burden on the remote management entity is relatively high based on the current load value as calculated by the agent the agent does not immediately forward the newly received request to the remote management entity. Conversely if the current load value calculated by the agent is relatively low the agent forwards the new request to the remote management entity. This technique of selectively forwarding the requests from the agent increases system efficiency because fewer if any timeouts occur as a result of the remote management entity being overburdened with trying to respond to or handle too many requests at the same time.

One method of calculating the current load value corresponding to a relative burden placed on the remote management entity to service a forwarded set of requests includes first determining a respective weight value for each corresponding request in a set of requests already forwarded to the remote management entity for servicing. Each respective weight value indicates a relative burden placed on the remote management entity to service a corresponding request forwarded to the remote management entity. Note that the weights associated with each request can vary depending on a respective type of request. For example some types of requests require more resources to service than others. The agent sums respective weight values associated with each request in the set of requests to produce the current load value.

In addition to calculating the current load value the agent can identify a threshold load value corresponding to an ability of the remote management entity to simultaneously handle multiple requests for information forwarded by the agent. For example the agent can receive or identify attributes e.g. processing speed amount of memory communication bandwidth etc. associated with the remote management entity or its respective resources. Based on the attributes associated with the resources of the remote management entity the agent can identify a threshold load value indicating a relative ability of the remote management entity to simultaneously handle multiple pending requests for information forwarded by the agent.

In response to receiving a new request in the above example to be forwarded from the agent to the remote management entity the agent identifies a weight value corresponding to an additional burden that would be placed on the remote management entity if the new request were forwarded to the remote management entity for servicing. To determine whether to forward the new request the agent performs a comparison of a sum of the current load value and weighted value of the new request with respect to the threshold load value. If the sum of the current load value and the weighted value associated with the new request is less than the threshold load value the agent forwards the new request to the remote management entity. If the sum of the current load value and the weighted value associated with the new request is more than the threshold load value the agent queues the new request at the agent in lieu of forwarding the new request to the remote management entity. In this latter case if the agent thereafter receives an indication that the remote management entity completes servicing of one or more requests in the previously forwarded set of requests the agent potentially forwards the new request to the remote management entity for servicing. In other words if the current load value decreases due to servicing a pending request at remote management entity the remote management entity may then be able to handle servicing of the new request.

In summary therefore a technique of selectively forwarding the new request to the remote management entity includes detecting whether forwarding the new request to the remote management entity if forwarded and processed along with the set of requests would overburden the remote management entity with a task of servicing requests forwarded from the agent.

In addition to the embodiments discussed above other embodiments herein include a computerized device e.g. a host computer workstation etc. configured to support the aforementioned method operations to selectively forward requests from an agent. In such embodiments the computerized device such as a host entity hosting an agent application includes a memory system a processor e.g. a processing device a display and an interconnect. The interconnect supports communications among the display the processor and the memory system. The memory system is encoded with an agent application that when executed on the processor produces a process that supports selectively forwarding requests to a remote management entity as discussed.

Yet other embodiments disclosed herein include software programs to perform the method embodiment and operations summarized above and disclosed in detail below under the heading Detailed Description. More particularly a computer program product e.g. a computer readable medium including computer program logic encoded thereon may be executed on a computerized device to support selectively forwarding requests form an agent or agents as explained herein. The computer program logic when executed on at least one processor with a computing system causes the processor to perform the operations e.g. the methods indicated herein as embodiments. Such embodiments are typically provided as software code and or other data structures arranged or encoded on a computer readable medium such as an optical medium e.g. CD ROM floppy or hard disk or other medium such as firmware or microcode in one or more ROM or RAM or PROM chips or as an Application Specific Integrated Circuit ASIC or as downloadable software images in one or more modules shared libraries etc. The software or firmware or other such configurations can be installed onto a computerized device to cause one or more processors in the computerized device to perform the techniques explained herein.

One more particular configuration herein is directed to a computer program product that includes a computer readable medium having instructions stored thereon for supporting management of network resources. The instructions when carried out by a processor of a respective computer device cause the processor to perform the steps of i forwarding a set of requests from the agent to the remote management entity for servicing by the remote management entity ii calculating a current load value corresponding to a relative burden placed on the remote management entity to service the forwarded set of requests iii while the remote management entity services the set of requests receiving a new request to be forwarded from the agent to the remote management entity and iv selectively forwarding the new request to the remote management entity depending on the current load value associated with servicing the forwarded set of requests. Other embodiments of the present application include software programs to perform any of the method embodiment steps and operations summarized above and disclosed in detail below.

Techniques herein are well suited for use in systems in which a management control center communicates with an assigned agent to request information associated with switches managed by a switch resource management entity. However it should be noted that embodiments herein are not limited to use in such applications.

It should be understood that the system herein can be embodied as a software program or as a software program operating in conjunction with corresponding hardware. Example embodiments of the present application may be implemented in conjunction with EMC s Control Center software application that provides graphical management functionality for storage area network resources and in computerized devices that operate the Control Center software. Control Center software is manufactured by EMC Corporation of Hopkinton Massachusetts USA.

According to one configuration herein a management control center communicates with multiple agents in a storage area network. On behalf of the management control center the agents communicate with a remote device such as a switch resource management entity that maintains configuration information about resources such as a group or groups of switches in the storage area network. Based on a chain of communications from the management control center through the agents to the remote management entity the management control center can learn about a configuration of switch resources in the storage area network. The agent utilizes a calculated current load value e.g. a value indicating a relative current burden already placed on the remote management entity to service a previously forwarded set of requests to determine when and whether to forward requests to the switch resource management entity. Selectively forwarding requests from the agents ensures that the switch resource management entity is not overwhelmed by a task of servicing too many requests at the same time.

In general agents discover and manage resources R R . . . R e.g. switch resources as well as RF RF and RF e.g. fabric resources in network by communicating with management entities . For example computer system can utilize agent to communicate such as forward requests with either or both management entity and management entity . Communications from the computer system through the agents to respective management entities and in a reverse direction from a management entities through agents to computer system enable discovery and management of device attributes e.g. management capabilities such as configuration name of switch ports connectivity paths zone information vendor type etc. associated with resources in environment e.g. a storage area network environment as more particularly shown in the sample configuration of .

In the specific example configuration as shown in computer system can communicate through agent to either or both of management entity and management entity . Request forwarding controller of agent controls forwarding of requests from computer system to management entity so that a respective management entity is not inundated with handling too many simultaneous requests. According to one possible configuration only a single agent is assigned to manage a set of respective resources in environment . This possible configuration is further discussed in related U.S. patent application Ser. No. 11 023 668 entitled METHODS AND APPARATUS FOR MANAGING GROUPS OF RESOURCES filed on Dec. 28 2004 the entire teachings of which are incorporated herein by this reference. Other configurations in addition to this configuration are discussed below.

As mentioned agent forwards requests to management entity depending on a current load on a respective management entity . As shown agent includes request processor weight table queue threshold value compare logic current load value gate communication interface response processor and filter .

In general computer system generates and forwards messages commands requests etc. whatever they may be to management entity through agent . Upon receipt of a request from computer system request processor accesses weight table to identify a weight value associated with a burden that would be placed on management entity if the respective request were forwarded to management entity for servicing. Request processor stores the received request along with a respective weight value in queue e.g. a first in first out buffer .

Gate pops requests off queue and forwards them to management entity depending on input from compare logic . Compare logic generates a signal to gate indicating whether to forward a next request in queue depending on a number of factors as discussed below. According to one configuration if queue becomes overloaded with requests agent notifies the computer system of such an event to prevent computer system from issuing too many requests for queue to handle and prevent timeouts from occurring.

One factor associated with whether to forward a next request in queue to management entity is current load value . Agent keeps track of current load value to identify a relative burden associated with processing of requests already forwarded to management entity for processing.

Another factor associated with whether to forward a next request in queue is threshold value . Agent keeps track of threshold value to identify a maximum relative burden that management entity can manage at one time without being overburdened by receiving too many requests at once. Agent may identify threshold value by receiving attributes e.g. a processor speed memory etc. associated with resources of the management entity employed to facilitate servicing of requests. Based on the attributes the agent identifies a threshold load value corresponding to an ability of the remote management entity to simultaneously handle multiple pending requests for information forwarded by the agent. According to one configuration the agent accesses a table e.g. in the management entity agent etc. to identify a threshold value associated with the management entity .

Yet another factor associated with whether to forward a next request REQ in queue is a weight value e.g. W associated with a next request REQ in queue . As discussed request processor utilizes weight table to generate a weight value associated with a respective request. According to one configuration the agent and more specifically request processor identifies a weight value W or additional burden associated with the new request REQ based on multiple parameters such as i a type of resource e.g. type of managed switch device such as manufacturer managed by the remote management entity ii an interface type associated with a respective communication interface or protocol used to communicate between the management entity and agent types may include or support protocols such as a. SNMP Simple Network Management Protocol b. FAL Fabric Access Layer c. SMI Storage Management Interface and or d. SWAPI SWitch Application Programming Interface etc. and iii a type of information e.g. zone configuration information port information switch device information etc. being requested from the management entity for a respective request.

One way to implement weighting is to configure weight table see also as a multi dimensional array. In this instance agent and more specifically request processor utilizes request attributes for the above 3 parameters to identify a weight value associated with a given received request. Such a weight table may be scaled back to a single dimensional two dimensional array three dimensional array etc. or implemented as an algorithm based on the above parameters or other system or device parameters.

Based on a combination of current load value threshold value and weight value e.g. W associated with a next request in queue agent employs compare logic to regulate forwarding requests to management entity so that the current load value of pending requests in management entity does not exceed a specified load such as that indicated by threshold value . That is according to one configuration compare logic sums weight value W associated with REQ e.g. request 6 in a series of requests to current load value . If a sum of the current load value and weight value W exceeds the threshold value associated with management entity then compare logic signals gate not to allow forwarding of request REQ to management entity . On the other hand if a sum of the current load value and weight value W does not exceed the threshold value associated with management entity then compare logic signals gate to allow forwarding of request REQ to management entity . In the latter case after gate forwards request REQ to management entity other pending requests REQ and REQ as well as respective weight values W and W drop down in queue . Note that a weight value associated with a respective request scan be determined by compare logic at run time rather than stored in queue .

Agent employs the above routine whether to forward any remaining or future received requests in queue . Consequently queue fills up with requests as computer system forwards requests to agent faster than management entity is able to process them. Conversely queue empties of requests as computer system forwards requests to agent slower than management entity is able to service them.

Management entity generates responses to the requests forwarded by agent . For each request serviced by management entity agent adjusts current load value to reflect that a respective request has been processed and therefore no longer poses a processing burden on the management entity . For example management entity sends a response to a given request to agent . Agent receives a respective response through communication interface to response processor . Response processor updates the current load value to reflect that the current burden on management entity to service requests has been diminished by a specified amount associated with the serviced request. That is response processor decreases current load value by a respective weight value associated with the request that has been serviced by management entity .

In addition to adjusting a current load value response processor forwards a response and or information associated with a serviced request to filter of agent . According to one configuration computer system can request information associated with a single resource such as resource R. As previously discussed management entity tracks information associated with a group of resources R R and R. Management entity may not be able to split information associated with a group of resources. For example when agent requests configuration information associated with R management entity replies with configuration information associated with each of resources R R and R. In this case filter identifies that computer system requested information associated with R and therefore strips off the information associated with R and R instead of just configuration information associated with resource R. Filter forwards the information associated with R to computer system to satisfy the original request.

Accordingly one embodiment herein involves forwarding a given request to the management entity for information associated with one or more resources managed by the management entity . In response to forwarding a request the agent receives a response associated with the given request from the management entity . As discussed a respective response from the management entity can include requested information e.g. information associated with resource R as well as non requested information e.g. information associated with resource R and R . The filter of agent processes the response received from the management entity to filter out the non requested information associated with the other resources managed by the remote management entity. Thereafter the agent forwards the requested information to computer system .

As briefly discussed above agent includes a respective communication interface e.g. management application programming interfaces such as ESNAPI to enable communications with management entity based on for example communication protocols such as i SNMP Simple Network Management Protocol ii FAL Fabric Access Layer iii SMI Storage Management Interface and or iv SWAPI SWitch Application Programming Interface etc. A type of communication protocol utilized to communicate between agent and management entity depends at least partially on a manufacturer of the management entity and the resources that it oversees.

As mentioned communications between the agent and respective management entity enable discovery and management of device attributes e.g. management capabilities such as configuration name of switch ports connectivity paths zone information vendor type etc associated with resources in environment e.g. a storage area network environment as more particularly shown in .

According to one configuration multiple agents can be assigned to forward requests to the same management entity to convey responses back to computer system . In such a case the agents communicate amongst each other to learn how each other agent is loading a respective management entity . A respective management entity may also provide feedback to the agents of its current load conditions and whether it can handle receiving new requests. Consequently the agents and management entities can work in concert so that a management entity is not overburdened with servicing too many requests at the same time.

Communications interface of host enables host to communicate over network to other devices i.e. resources associated with storage area network environment .

As shown memory system is encoded with an agent application supporting assignment of management capabilities associated with a network device in storage area network environment . Agent application may be embodied as software code such as data and or logic instructions e.g. code stored in the memory or on another computer readable medium such as a disk that supports processing functionality according to different embodiments described herein. During operation processor accesses memory system via the interconnect in order to launch run execute interpret or otherwise perform the logic instructions of the agent application . Execution of agent application produces processing functionality in agent process . In other words the agent process represents one or more portions of the agent application or the entire application performing within or upon the processor in the host .

It should be noted that a respective agent in executed in a host can be represented by either one or both of the agent application and or the agent process . For purposes of the discussion of the operation of embodiments of the present application general reference will be made to the agents as performing or supporting the various steps and functional operations to carry out the features of embodiments of the present application.

It should be noted that in addition to the agent process embodiments herein include the agent application itself i.e. the un executed or non performing logic instructions and or data . The agent application may be stored on a computer readable medium such as a floppy disk hard disk or in an optical medium. The agent application may also be stored in a memory type system such as in firmware read only memory ROM or as in this example as executable code within the memory system e.g. within Random Access Memory or RAM . In addition to these embodiments it should also be noted that other embodiments herein include the execution of agent application in processor as the agent process . Thus those skilled in the art will understand that the host e.g. computer system may include other processes and or software and hardware components such as an operating system that controls allocation and use of hardware resources.

Functionality supported by host and more particularly agent will now be discussed via flowcharts in . For purposes of this discussion agent or host generally performs steps in the flowcharts. This functionality can be extended to the other entities as well. Note that there will be some overlap with respect to concepts discussed above for . Also note that the steps in the below flowcharts need not always be executed in the order shown.

Now more particularly is a flowchart illustrating a technique of selectively forwarding requests from an agent to a management entity so that the management entity is not inundated with too many requests at the same time.

In step the agent forwards a set of requests e.g. requests REQ REQ REQ REQ and REQ to a remote management entity for servicing by the remote management entity .

In step the agent calculates or maintains a current load value corresponding to a relative burden placed on the remote management entity to service the forwarded set of requests.

In step the agent while the remote management entity services the set of requests receives a new request e.g. request REQ to be forwarded from the agent to the remote management entity .

In step the agent selectively forwards the new request to the remote management entity depending on the current load value associated with servicing the forwarded set of requests.

In step the agent forward a set of requests e.g. requests REQ through REQ to a remote management entity for servicing by the remote management entity .

In step the agent calculates a current load value corresponding to a relative burden placed on the remote management entity to service the forwarded set of requests.

In sub step of step the agent determines a respective weight value for each corresponding request in the set of requests. Each respective weight value indicates a relative burden placed on the remote management entity to service a corresponding request forwarded to the remote management entity .

In sub step in step the agent sums respective weight values associated with each request in the set of requests to produce the current load value . According to one configuration a first weight value associated with a corresponding first request in the set of requests is different than a second weight value associated with a corresponding second request in the set of requests.

In step the agent identifies a threshold load value corresponding to an ability of the remote management entity to simultaneously handle multiple requests for information or other types of commands forwarded by the agent .

In step while the remote management entity services the set of requests the agent receives a new request to be forwarded from the agent to the remote management entity .

In step in response to receiving a new request the agent identifies a weighted value corresponding to an additional burden that would be placed on the remote management entity if the new request were forwarded to the remote management entity for servicing.

Continuing now to flowchart in in step the agent selectively forwards the new request to the remote management entity depending on the current load value associated with servicing the forwarded set of requests.

For example in sub step in step the agent performs a comparison of a sum of the current load value and weighted value with respect to the threshold load value .

In sub step in step if the sum of the current load value and the weighted value is less than the threshold load value the agent forwards the new request to the remote management entity .

In sub step in step if the sum of the current load value and the weighted value is more than the threshold load value the agent queues the new request at the agent in lieu of forwarding the new request to the remote management entity .

In step the agent receives an indication that the remote management entity completes servicing of at least one request in the forwarded set of requests.

In step the agent in response to receiving the indication forwards the new request to the remote management entity for servicing.

In step the agent forwards a given request to the remote management entity for information associated with one or more resources managed by the remote management entity .

In step the agent receives a response associated with the given request from the remote management entity . The response includes requested information associated with the one or more resources as well as non requested information associated with other than the one or more resources managed by the remote management entity .

In step the agent processes the response received from the remote management entity to filter out the non requested information.

In step the agent forwards the requested information associated with the one or more resources to computer system originally communicating the given request to the agent for forwarding to the remote management entity .

Each weight table includes a two dimensional map to identify a weight value associated with a given request. For example as illustrated in weight table column of weight table identifies different switch resource types such as a vendors and or models associated with a type of resource being queried. Row of weight table identifies different communication interface types e.g. SNMP SMI FAL etc. associated with the given request which is used to communicate with a respective management entity . Thus for a given request of type 1 request processor in identifies a respective weight value to assign to the given request based on a type of switch resource and communication interface associated with the given request.

As previously discussed a weight value can identify a respective relative burden that would be placed on a management entity if the given request were forwarded by the agent to the management entity for servicing. According to one configuration the weight value identifies a number of processor cycles that would be required by the management entity to service the given request. A metric associated with the weight value however may vary depending on the application.

Network includes switch device switch device which themselves have corresponding switch ports and . Network also includes management entity management entity . . . collectively management entities that control manage query resources in storage area network environment and more specifically groups of resources in network . For example management entity can be configured to control groups of switches in switch device management entity can be configured to control groups of switches in switch device etc.

Host entity includes adapter and corresponding port and port to communicate over network . Host entity includes adapter and corresponding port and port to communicate over network . Storage system resource includes respective adapters and corresponding ports and access controllers and storage devices and maps and as well as physical storage devices and . Host entity executes agent host entity executes agent and host entity N executes agent . Storage area network can include any number of agents each of which may operate on any computerized device in the storage area network environment . For example agents can also potentially reside in respective devices in network network etc.

According to one configuration computer system e.g. management control system learns of groupings of resources in storage area network environment and assigns a given agent in storage area network environment duties of supporting exclusive sets of management functions associated with the group of resources. For example the agents communicate with management entity that in turn control groups of resources e.g. switches in network . Based on the assignments agents act on behalf of computer system to control manage or retrieve information associated with switch devices . For example computer system forwards requests to agents . The agents as discussed above selectively forward the requests to respective management entity of storage area network environment . Proper configuration and control of switches ensures that host entities may efficiently access data from storage system resources on behalf of clients.

Agents can be distributed throughout storage area network environment as shown. In one application agents run on respective host entities that are not dedicated to serving data from storage area network environment to corresponding clients. In other words agents optionally run on host resources e.g. host entities that are at least partially dedicated to executing agents but not serving clients. Agents may also run on host entities that do serve data retrieved from storage system resources to respective clients.

For illustrative purposes computer system e.g. a management control center is configured in this example as a storage area network management station operated by a user such as a network manager responsible for managing resources in the storage area network . For example computer system executes a resource manager application e.g. a software graphical user interface application that generates and displays information in accordance with embodiments of the present application as will be explained herein. The resource manager may be any type of network management software application that executes performs or otherwise operates within computer such as a computerized management station.

The management station computer system e.g. a computer device includes a corresponding display e.g. a monitor or other visual display device that resource manager controls to display a graphical user interface . In general graphical user interface presented by a software application e.g. resource manager running on computer enables user to initiate execution of commands to associated devices such as switches in storage area network environment . For example a user may provide input commands e.g. selections by clicking on a mouse to i control information e.g. tables pop up screens etc. displayed on display and ii request an agent or other agents as is generally the case throughout this document to perform a management function e.g. configuration of switches such as request information from a specific management entity in storage area network environment .

Computer system and more particularly resource manager stores learned attributes associated with storage area network environment in repository . Based on management capabilities reported by agents to computer system resource manager notifies e.g. via a display screen of selectable options in graphical user interface user of management functions that can be performed on resources e.g. switch devices in the storage area network environment .

Note again that storage area network environment enables host entities e.g. servers etc. to access data in storage system resources on behalf of clients coupled to or through the host entities . However as discussed certain host entities are optionally dedicated to running agent applications rather than server applications for serving data to clients.

The following discussion illustrates how certain host entities in storage area network environment serve data to clients. For example host entity couples to network via adapter and corresponding ports . Ports couple to respective ports and on switch devices . In turn ports and of switch devices couple to ports and of corresponding storage system resources . Thus switch devices and corresponding ports and form at least part of a data path e.g. a zone between host entities and corresponding storage system resources .

Storage system resource includes access controllers to facilitate access to corresponding storage devices e.g. logical storage space . Storage devices are configured as logical portions of one or more physical storage devices e.g. arrays of storage disks . Maps provide a mapping of storage devices e.g. logical volumes to corresponding physical storage devices e.g. storage disks .

Typically selected host entities are limited to accessing certain storage devices in storage system resource based at least in part on configuration settings of switch devices of network . For example in one embodiment switch ports and of switches are assigned to create a particular zone in network . In general a zone defines a group of resources in the network providing a logical path i through a switch resource and ii between a host resource and a storage array resource . Thus in some respects a zone defines a logical data flow path in the storage area network environment .

As discussed computer system assigns agents to manage different groupings of resources to more effectively support configuration of and communication within storage area network environment . Based on the assignments agents in storage area network environment enable user to configure the storage area network environment so that host entities can more efficiently access data on behalf of corresponding clients. That is assigning agents to manage groups of resources controlled by management entities enable the computer system and corresponding user to more efficiently manage resources e.g. groups of resources in storage area network environment .

As discussed above techniques herein are well suited for use in systems in which a management control center communicates with agents that in turn selectively forward requests to management entities of a storage area network. However it should be noted that embodiments of the present application are not limited to such use.

While this invention has been particularly shown and described with references to preferred embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the present application as defined by the appended claims. Such variations are intended to be covered by the scope of this present application. As such the foregoing description of embodiments of the present application is not intended to be limiting. Rather any limitations to the invention are presented in the following claims.

