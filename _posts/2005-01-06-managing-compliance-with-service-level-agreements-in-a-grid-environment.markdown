---

title: Managing compliance with service level agreements in a grid environment
abstract: A computer-implemented method, system, and program for managing compliance with service level agreements in a grid environment are provided. A grid service for managing compliance with service level agreements in a grid environment detects a grid job passing a timing entry point, and flowing towards a grid environment provided by a grid vendor. When the grid job is detected passing the timing entry point, the grid service starts a timer to monitor an amount of time from the grid job passing the timing entry point until a result of the grid job passes a timing exit point while flowing away from the grid environment. When the grid service detects the result of the grid job passing the timing exit point, the grid service determines whether a value of the timer exceeds a timing term agreed to in a service level agreement specifying performance requirements for said grid job agreed to by said grid vendor, such that compliance with the service level agreement is automatically managed within the grid environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07668741&OS=07668741&RS=07668741
owner: International Business Machines Corporation
number: 07668741
owner_city: Armonk
owner_country: US
publication_date: 20050106
---
The present invention relates in general to improved grid computing and in particular to managing and enforcing compliance with service level agreements in a grid environment. Still more particularly the present invention relates to monitoring timely compliance of the grid environment with the service level agreement for processing a job and controlling restitution for non compliance.

Ever since the first connection was made between two computer systems new ways of transferring data resources and other information between two computer systems via a connection continue to develop. In typical network architectures when two computer systems are exchanging data via a connection one of the computer systems is considered a client sending requests and the other is considered a server processing the requests and returning results. In an effort to increase the speed at which requests are handled server systems continue to expand in size and speed. Further in an effort to handle peak periods when multiple requests are arriving every second server systems are often joined together as a group and requests are distributed among the grouped servers. Multiple methods of grouping servers have developed such as clustering multi system shared data sysplex environments and enterprise systems. With a cluster of servers one server is typically designated to manage distribution of incoming requests and outgoing responses. The other servers typically operate in parallel to handle the distributed requests from clients. Thus one of multiple servers in a cluster may service a client request without the client detecting that a cluster of servers is processing the request.

Typically servers or groups of servers operate on a particular network platform such as Unix or some variation of Unix and provide a hosting environment for running applications. Each network platform may provide functions ranging from database integration clustering services and security to workload management and problem determination. Each network platform typically offers different implementations semantic behaviors and application programming interfaces APIs .

Merely grouping servers together to expand processing power however is a limited method of improving efficiency of response times in a network. Thus increasingly within a company network rather than just grouping servers servers and groups of server systems are organized as distributed resources. There is an increased effort to collaborate share data share cycles and improve other modes of interaction among servers within a company network and outside the company network. Further there is an increased effort to outsource nonessential elements from one company network to that of a service provider network. Moreover there is a movement to coordinate resource sharing between resources that are not subject to the same management system but still address issues of security policy payment and membership. For example resources on an individual s desktop are not typically subject to the same management system as resources of a company server cluster. Even different administrative groups within a company network may implement distinct management systems.

The problems with decentralizing the resources available from servers and other computing systems operating on different network platforms located in different regions with different security protocols and each controlled by a different management system has led to the development of Grid technologies using open standards for operating a grid environment. Grid environments support the sharing and coordinated use of diverse resources in dynamic distributed virtual organizations. A virtual organization is created within a grid environment when a selection of resources from geographically distributed systems operated by different organizations with differing policies and management systems is organized to handle a job request.

While grid technologies solve some of the problems with decentralizing disparate computing systems to create a virtual organization of resources grid technologies do not solve all the problems associated with decentralized resources. One of these problems left unsolved is how to monitor and enforce service level agreements SLAs which have become the norm in the computer industry for designating the expected performance by information technology providers. Grid technology providers also called grid vendors make no guarantee except for here is the environment that you asked for. This guarantee however is limited and does not take into account the timeliness required for some grid jobs. Further this guarantee is limited because there is not a mechanism to detect whether the guarantee is met or to provide compensation to the customer if the guarantee is not met.

Therefore in view of the foregoing there is a need for a method system and program for managing and enforcing compliance with SLAs for grid jobs executing in a grid environment. In particular there is a need for managing compliance with SLAs based on the timeliness required of a particular type of grid job. Further there is a need for controlling restitution when a grid environment does not deliver the response or result of a grid job in compliance with the SLA.

In view of the foregoing the invention in general provides for grid computing and to managing compliance with service level agreements in a grid environment. The invention relates to monitoring timely compliance of the grid environment with the service level agreement for a grid job and controlling restitution for non compliance.

In one embodiment a grid service for managing compliance with service level agreements in a grid environment detects a grid job passing a timing entry point and flowing towards a grid environment provided by a grid vendor. When the grid job is detected passing the timing entry point the grid service starts a timer to monitor an amount of time from the grid job passing the timing entry point until a result of the grid job passes a timing exit point while flowing away from the grid environment. When the grid service detects the result of the grid job passing the timing exit point the grid service determines whether a value of the timer exceeds a timing term agreed to in a service level agreement specifying performance requirements for said grid job agreed to by said grid vendor such that compliance with the service level agreement is automatically managed within the grid environment.

The grid jobs include a transaction processing type of job or a batch type of job. If the grid job is a transaction processing type of job then the grid service accumulates the value of the timer for a series of grid jobs and determines whether the accumulated value exceeds the timing terms in the service level agreement. If the grid job is a batch type of job then the grid service detects when the last result for the batch type of job passes the exit point and then stops the timer.

In addition responsive to the value of the timer exceeding the timing term agreed to in the service level agreement the grid service calculates a restitution fee to compensate a client submitting the grid job. Then the grid service controls reconciliation with the client through the restitution fee.

If the value of the timer does not exceed the timing term agreed to in the service level agreement then the grid service determines whether to award bonus credits. Bonus credits are transferred to the client sending the grid job to indicate the extra timeliness of the grid job execution or are accumulated by the grid vendor to determine which portions of the grid environment and which types of jobs run most efficiently.

Referring now to the drawings and in particular to there is depicted one embodiment of a computer system which may be implemented in a grid environment and in which the present invention may be implemented. As will be further described the grid environment includes multiple computer systems managed to provide resources. Additionally as will be further described the present invention may be executed in a variety of computer systems including a variety of computing systems mobile systems and electronic devices operating under a number of different operating systems managed within a grid environment.

In one embodiment computer system includes a bus or other device for communicating information within computer system and at least one processing device such as processor coupled to bus for processing information. Bus may include low latency and higher latency paths connected by bridges and adapters and controlled within computer system by multiple bus controllers. When implemented as a server system computer system typically includes multiple processors designed to improve network servicing power.

Processor may be a general purpose processor such as IBM s PowerPC processor that during normal operation processes data under the control of operating system and application software accessible from a dynamic storage device such as random access memory RAM and a static storage device such as Read Only Memory ROM . The operating system may provide a graphical user interface GUI to the user. In one embodiment application software contains machine executable instructions that when executed on processor carry out the operations depicted in the flowcharts of and and other operations described herein. Alternatively the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

The present invention may be provided as a computer program product included on a machine readable medium having stored thereon the machine executable instructions used to program computer system to perform a process according to the present invention. The term machine readable medium as used herein includes any medium that participates in providing instructions to processor or other components of computer system for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Common forms of non volatile media include for example a floppy disk a flexible disk a hard disk magnetic tape or any other magnetic medium a compact disc ROM CD ROM or any other optical medium punch cards or any other physical medium with patterns of holes a programmable ROM PROM an erasable PROM EPROM electrically EPROM EEPROM a flash memory any other memory chip or cartridge or any other medium from which computer system can read and which is suitable for storing instructions. In the present embodiment an example of a non volatile medium is mass storage device which as depicted is an internal component of computer system but will be understood to also be provided by an external device. Volatile media include dynamic memory such as RAM . Transmission media include coaxial cables copper wire or fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency or infrared data communications.

Moreover the present invention may be downloaded as a computer program product wherein the program instructions may be transferred from a remote virtual resource such as a virtual resource to requesting computer system by way of data signals embodied in a carrier wave or other propagation medium via a network link e.g. a modem or network connection to a communications interface coupled to bus . Virtual resource may include a virtual representation of the resources accessible from a single system or systems wherein multiple systems may each be considered discrete sets of resources operating on independent platforms but coordinated as a virtual resource by a grid manager. Communications interface provides a two way data communications coupling to network link that may be connected for example to a local area network LAN wide area network WAN or an Internet Service Provider ISP that provide access to network . In particular network link may provide wired and or wireless network communications to one or more networks such as network through which use of virtual resources such as virtual resource is accessible as provided within a grid environment . Grid environment may be part of multiple types of networks including a peer to peer network or may be part of a single computer system such as computer system .

As one example network may refer to the worldwide collection of networks and gateways that use a particular protocol such as Transmission Control Protocol TCP and Internet Protocol IP to communicate with one another. Network uses electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are exemplary forms of carrier waves transporting the information. It will be understood that alternate types of networks combinations of networks and infrastructures of networks may be implemented.

When implemented as a server system computer system typically includes multiple communication interfaces accessible via multiple peripheral component interconnect PCI bus bridges connected to an input output controller. In this manner computer system allows connections to multiple network computers.

Additionally although not depicted multiple peripheral components and internal external devices may be added to computer system connected to multiple controllers adapters and expansion slots coupled to one of the multiple levels of bus . For example a display device audio device keyboard or cursor control device may be added as a peripheral component.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. Furthermore those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention.

With reference now to a block diagram illustrates one embodiment of the general types of components within a grid environment. In the present example the components of a grid environment include a client system interfacing with a grid management system which interfaces with server clusters servers workstations and desktops data storage systems and networks . For purposes of illustration the network locations and types of networks connecting the components within grid environment are not depicted. It will be understood however that the components within grid environment may reside atop a network infrastructure architecture that may be implemented with multiple types of networks overlapping one another. Network infrastructure may range from multiple large enterprise systems to a peer to peer system to a single computer system. Further it will be understood that the components within grid environment are merely representations of the types of components within a grid environment. A grid environment may simply be encompassed in a single computer system or may encompass multiple enterprises of systems. In addition it will be understood that a grid vendor may provide grid environment where the grid vendor may calculate a cost for use of resources within grid environment based on the amount of time required for a grid job to execute or the actual amount of resources used for example.

The central goal of a grid environment such as grid environment is organization and delivery of resources from multiple discrete systems viewed as virtual resource . Client system server clusters servers workstations and desktops data storage systems networks and the systems creating grid management system may be heterogeneous and regionally distributed with independent management systems but enabled to exchange information resources and services through a grid infrastructure enabled by grid management system . Further server clusters servers workstations and desktops data storage systems and networks may be geographically distributed across countries and continents or locally accessible to one another. It will be understood that mechanisms for discovery of grid resources within virtual resource are not depicted herein however client system may discover the resources within virtual resource as advertised from local and global directories available within grid environment .

In the example client system interfaces with grid management system . Client system may represent any computing system sending requests to grid management system . In particular client system may send virtual job requests and jobs to grid management system and grid management system may respond with a grid offer and controls processing of grid jobs. Further while in the present embodiment client system is depicted as accessing grid environment with a request in alternate embodiments client system may also operate within grid environment .

While the systems within virtual resource are depicted in parallel in reality the systems may be part of a hierarchy of systems where some systems within virtual resource may be local to client system while other systems require access to external networks. Additionally it is important to note that client system may physically encompass the systems depicted within virtual resources . Further the systems in virtual resource may be allocated among resource nodes and execution environments where a resource node is a grouping of resources enabled to perform a particular grid function and an execution environment is a grouping of resources and resource nodes enabled to handle a particular grid job.

To implement grid environment grid management system facilitates grid services. Grid services may be designed according to multiple architectures including but not limited to the Open Grid Services Architecture OGSA . In particular grid management system refers to the management environment which creates a grid by linking computing systems into a heterogeneous network environment characterized by the sharing of resources through grid services.

In one example as will be further described in detail grid management system may include multiple grid services that working together enable monitoring of the execution of a grid job within grid environment and analysis of whether an SLA for the grid job was met by the performance of grid environment . In addition grid management system may include multiple grid services that working together enable restitution if the performance of grid environment does not comply with an SLA.

As described herein a SLA may define multiple performance terms including but not limited to execution time response time costs disk and network requirements and other performance and workload requirements of a particular grid job or of grid jobs for a particular client. In addition a SLA may define the terms for calculating a restitution fee should execution of the grid job not comply with the SLA terms and the SLA may define the terms for calculating bonuses should execution of the grid job comply with the SLA terms.

It is important to note that in one embodiment a SLA is negotiated by an automated bid negotiation process provided by grid management system however in another embodiment communication between the client and the provider of grid environment may be facilitated to enable agreement upon the terms of a SLA.

Referring now to a block diagram illustrates one example of an architecture that may be implemented in a grid environment. As depicted an architecture includes multiple layers of functionality. As will be further described the present invention is a process which may be implemented in one or more layers of an architecture such as architecture which is implemented in a grid environment such as the grid environment described in . It is important to note that architecture is just one example of an architecture that may be implemented in a grid environment and in which the present invention may be implemented. Further it is important to note that multiple architectures may be implemented within a grid environment.

Within the layers of architecture first a physical and logical resources layer organizes the resources of the systems in the grid. Physical resources include but are not limited to servers storage media and networks. The logical resources virtualize and aggregate the physical layer into usable resources such as operating systems processing power memory I O processing file systems database managers directories memory managers and other resources.

Next a web services layer provides an interface between grid services and physical and logical resources . Web services layer implements service interfaces including but not limited to Web Services Description Language WSDL Simple Object Access Protocol SOAP and eXtensible mark up language XML executing atop an Internet Protocol IP or other network transport layer. Further the Open Grid Services Infrastructure OSGI standard builds on top of current web services by extending web services to provide capabilities for dynamic and manageable Web services required to model the resources of the grid. In particular by implementing OGSI standard with web services grid services designed using OGSA are interoperable. In alternate embodiments other infrastructures or additional infrastructures may be implemented a top web services layer .

Grid services layer includes multiple services which may be incorporated into grid management system . For example grid services layer may include grid services designed using OGSA such that a uniform standard is implemented in creating grid services. Alternatively grid services may be designed under multiple architectures. Grid services can be grouped into four main functions. It will be understood however that other functions may be performed by grid services.

First a resource management service manages the use of the physical and logical resources. Resources may include but are not limited to processing resources memory resources and storage resources. Management of these resources includes scheduling jobs distributing jobs and managing the retrieval of the results for jobs. Resource management service monitors resource loads and distributes jobs to less busy parts of the grid to balance resource loads and absorb unexpected peaks of activity. In particular a user may specify preferred performance levels so that resource management service distributes jobs to maintain the preferred performance levels within the grid.

Second information services manages the information transfer and communication between computing systems within the grid. Since multiple communication protocols may be implemented information services manages communications across multiple networks utilizing multiple types of communication protocols.

Third a data management service manages data transfer and storage within the grid. In particular data management service may move data to nodes within the grid where a job requiring the data will execute. A particular type of transfer protocol such as Grid File Transfer Protocol GridFTP may be implemented.

Finally a security service applies a security protocol for security at the connection layers of each of the systems operating within the grid. Security service may implement security protocols such as Open Secure Socket Layers SSL to provide secure transmissions. Further security service may provide a single sign on mechanism so that once a user is authenticated a proxy certificate is created and used when performing actions within the grid for the user.

Multiple services may work together to provide several key functions of a grid computing system. In a first example computational tasks are distributed within a grid. Data management service may divide up a computation task into separate grid services requests of packets of data that are then distributed by and managed by resource management service . The results are collected and consolidated by data management system . In a second example the storage resources across multiple computing systems in the grid are viewed as a single virtual data storage system managed by data management service and monitored by resource management service .

An applications layer includes applications that use one or more of the grid services available in grid services layer . Advantageously applications interface with the physical and logical resources via grid services layer and web services such that multiple heterogeneous systems can interact and interoperate.

With reference now to there is depicted a block diagram of a grid management system for handling grid jobs and tracking compliance of grid jobs to perform within SLA terms. As depicted client system submits bid requests for grid jobs to a grid bid controller service . Grid bid controller server receives the bid request which may include workload and performance requirements and accesses other grid services within grid management system to determine whether grid environment can handle the grid job described by the bid request and to price an offer to handle the grid job described by the bid request. U.S. patent applications Ser. Nos. 10 940 452 and 11 031 489 herein incorporated by reference describe types of grid services that may estimate the workload requirement for a bid request and determine a price for the estimated workload. Alternatively a system administrator may receive the bid request and determine whether grid environment can handle the workload and performance requirements.

In addition according to an advantage of the invention the bid request may include SLA terms or may refer to an SLA already in place between the client and the grid vendor whose grid environment is managed by grid management system . Grid bid controller service determines whether grid management system can meet the SLA terms for the particular grid job. Further grid bid controller service may determine that grid management system can only meet a portion of the SLA terms or can only meet adjusted SLA terms. Moreover grid bid controller service may analyze the performance requirements of a grid environment in the bid request and generate the terms of the SLA to comply with the performance requirements in the bid request.

Grid bid controller service returns a bid offer to client system . The bid offer may specify a price to complete the bid request as requested. Alternatively the bid offer may include exceptions exclusions additions or other changes to handling the original bid request. For example if grid bid controller server determines that grid management system cannot meet an SLA term in the bid request but could meet the other SLA terms then the bid offer may agree to the bid request with an exclusion or the bid offer may include a newly generated SLA.

Grid bid controller server may store a copy of each bid request and the corresponding bid offer in a bid storage system . Bid storage system is then accessible to grid scheduler service when client system sends the job associated with a previously stored bid request and bid offer. Grid scheduler service notifies the other grid services when a grid job is received and coordinates the scheduling of resource allocation by a grid allocation server job routing to the allocated resources by job router and workload monitoring to determine the actual workload requirements of a grid job routed to a selection of grid resources by grid workload monitor .

Grid scheduler service may also coordinate the collection and return of a result or response to a grid job. In one example when grid scheduler service receives a batch grid job grid scheduler service may accumulate all the results of the batch job and return the results to client system or other systems. In another example when grid scheduler service receives a transaction processing grid job grid scheduler service may quickly return responses to client system .

According to an advantage of the invention a grid SLA service also monitors the flow of jobs and responses to and from grid environment . In particular grid SLA service starts timers according to the type of grid job and according to the terms of the SLA agreement as will be further described. Grid SLA service compares the time calculated for a grid job from the time the grid job passes an entry point to the grid environment to the time the grid job passes an exit point from the grid environment with the terms in the SLA for the grid job. If grid SLA service detects non compliance with any terms in the SLA then grid SLA service calculates and manages any necessary restitution to the grid client. In addition if grid SLA service detects compliance with all the terms in the SLA then grid SLA service may calculate and manage the distribution of bonus credits. In one example a client may collect the bonus credits and compare the number of bonus credits received from different grid vendors to determine the most SLA compliant grid vendors. In another example a grid vendor may collect bonus credits to determine which system administrators are managing the grid environment to facilitate SLA compliant grid jobs or determining which types of jobs are managed most efficiently in the grid environment.

Referring now to there is depicted a block diagram of examples of components of a grid SLA service in accordance with the method system and program of the present invention. As depicted grid SLA service includes multiple timer controllers including a batch job timer controller and a transaction process timer controller . Batch job timer controller controls timers for batch type jobs and transaction process timer controller controls timers for transaction processing type jobs.

In one embodiment a batch type job may include a large job or a group of jobs typically not requiring human interaction for completion with an SLA that may specify a particular completion time or a duration for the completion of all calculations for example. For example an SLA may be agreed to for a group of database processing jobs where computations for all of the database processing jobs must complete within 1 hour and for each minute over that hour required to complete the database processing jobs restitution of ten dollars is required. Other examples of batch type jobs submitted within a grid environment include but are not limited to a batch grid job requiring the analysis of geological survey data created during the search for oil or gas a batch grid job requiring the analysis of gnomic data used for gene mapping and a batch grid job requiring the analysis of data retrieved from radio telescopes. For each batch type grid job an SLA would require that all calculations finish within a particular time period or else a penalty would be assessed.

In contrast in one embodiment transaction processing type jobs may require human interaction or time sensitive responses so the SLAs for transaction processing based jobs may specify a percentage of transactions that must be completed in a particular amount of time or a cap time for completion of all transactions. The percentage and cap time may vary based on the time of day or particular day. For example an SLA may be agreed to for all transaction processing of a particular type between 8 AM and 10 AM where the timing terms require that each transaction be completed within a minute and that half of the transactions are completed by 9 AM. In another example an SLA for the analysis of financial derivatives e.g. a financial analyst enters a single analysis request for a specific client may require that 90 of all financial derivative transaction be completed within a particular time period such as 2 minutes and that all financial derivative transactions must be completed by the close of the financial market that day. In yet another example transaction processing based jobs may require the analysis of what if analysis involving a large number of variables such as insurance risk analysis or fingerprint searches. The SLA in these examples may designate the maximum allowable time for a percentage of the transactions to complete on a sliding scale such as 60 of the transactions completed within one minute 75 of the transactions completed within ninety seconds 90 of the transactions completed within two minutes and all transactions completed in less than 150 seconds.

In one example batch job timer controller starts a batch timer when a batch job is detected passing an entry point into the grid environment. The entry point is specified by agreement in the SLA. Then when batch job timer controller detects the results of all the grid jobs included in the batch job passing an exit point out of the grid environment the batch timer is stopped and the time is compared with time terms of the SLA for the grid job. A batch timer may merely calculate the duration of a batch job however a batch timer may also calculate a start time and date and a stop time and date.

Timer tables include the data collected for each timer started by batch job timer controller or transaction process timer as will be further described with reference to . Further timer tables may include the expected duration of a grid job or an expected completion time or date. Additionally timer table may indicate any restitution calculated for the grid job based on whether the grid job completion time meets SLA terms.

A reconciliation controller controls the reconciliation process for grid job compliance with SLA terms. In particular reconciliation controller determines whether a response or result of a grid job is returned within the time period agreed to in an SLA for the grid job.

In one example if the time taken for delivery of a response or result exceeds the terms agreed to in the SLA for the grid job then reconciliation controller calculates a restitution fee based on the fee established in the SLA. Where the client system submitting the grid job is external to the grid environment then reconciliation controller may control returning the actual dollar amount of the restitution fee to the client system. Where the client system is part of the grid environment then reconciliation controller may control crediting an internal account for the restitution fee.

Alternatively in another example if the time taken for delivery of a response or result is less than the terms agreed to in the SLA for the grid job then restitution controller calculates bonuses based on the bonus agreement in the SLA. Then restitution controller actually controls restitution of either the restitution fee or the calculated bonuses. For example restitution controller may make a payment to the client for the restitution fee or restitution controller may credit an account for the client with the restitution fee.

With reference now to there is depicted a block diagram illustrating the position of timers for calculating grid job execution compliance with SLA terms in accordance with the method system and program of the present invention. As depicted the flow of data for the processing of a grid job includes multiple systems. It will be understood that the examples of systems in the flow of data may include alternate systems and may include alternate data flows.

For purposes of example a client interface is depicted that provides the interactive medium for a client to select to send a grid job and to receive the response from a grid job. Client interaction via client interface is communicated via client network to a client server system . Client server system then interfaces with a wide area network WAN . WAN provides network access to other networks via the Internet or other networking infrastructure. In particular WAN provides network access to a grid network . Grid network may include for example the network interface for a grid vendor that supplies grid environment . Grid jobs are processed by a virtual organization of resources within grid environment as previously described.

An SLA agreement may designate the position along the data path at which the grid vendor is responsible for time compliance in grid job execution. In one embodiment the timeliness of the systems designated by reference numeral is not included in the SLA agreement by a grid vendor. The grid vendor does include however a guarantee of the timeliness of grid network and grid environment to handle a grid job.

In the example since the grid vendor has agreed to guarantee the timeliness of the grid job once the grid job reaches grid network the SLA timer is set to start and stop at the edge of grid network as depicted at reference numeral . It will be understood that an in an alternate example the SLA timer may start at one location and stop at another. Further it will be understood that multiple timers may be implemented along the data flow and that the client may also implement timers to determine whether SLA agreements are met.

Referring now to there is depicted an illustrative example of entries in a timer table in accordance with the method system and program of the present invention. As depicted a timer table includes entries for multiple batch grid jobs as depicted at reference numeral and for multiple transaction processing grid jobs as depicted at reference numeral .

In the examples timer table includes the SLA target time retrieved from the SLA terms for the grid job. In one example as depicted with reference to grid job batch A the SLA target time is a total duration of two hours while in another example as depicted with reference to grid job batch B the SLA target time is a completion time of Apr. 15 2004 at 2 00 pm. It will be understood that the SLA target time may include both a total duration and a completion time. Further it will be understood that the SLA target time may include other time and performance based constraints.

In addition in the examples timer table includes the current time detected on a timer for a grid job. In one example as depicted with reference to grid job batch A the current time is merely the total time that a grid job has been executing while in another example as depicted with reference to grid job batch B the current time includes the date and the actual current time. It will be understood that batch job timer controller may start timers that track job execution duration or track the current date and time or both.

Timer table also includes a completion time where the completion time for each grid job. In one example as depicted with reference to grid job batch C the completion time indicates the total duration of the grid job before passing the exit point while in another example as depicted with reference to grid job batch D the completion time indicates the actual time at which the grid job completed and the duration. It will be understood that the completion time may include multiple types of time indicators tracked during

In addition timer table includes a reconciliation calculation. The reconciliation calculation indicates may indicate a monetary calculation a credit calculation or other value that designates the restitution required for a grid job for non compliance with an SLA or that designates the bonus accumulation for a grid job for compliance with an SLA. In one example as depicted with reference to grid job batch C the reconciliation calculation is for non compliance with the SLA terms and comes to a restitution fee of 10.00 while in another example as depicted with reference to gird job batch D the reconciliation calculation for compliance with the SLA terms comes to 30 bonus points where each bonus point represents a minute.

For transaction processing type jobs timer table shows the time per transaction such as the current time for transactions and and shows the accumulated time for multiple transactions in a transaction group A where the transaction processing SLA terms may include a time limit per transaction but may also include a time limit for a particular number of transactions and may include time requirements for a percentage of the transactions to be completed. In the example transactions and are currently executing and transactions and have already completed. The SLA terms require that half of the transactions complete before 1 30 pm and that all the transactions are complete before 1 31 pm. Both transactions and finished before 1 30 pm however transactions and will need to finish before 1 31 pm to meet the SLA terms. A restitution fee could have been calculated if transactions and did not finish before 1 30 pm and may also be calculated if transactions and do not finish before 1 31 pm.

With reference now to there is depicted a high level logic flowchart of a process and program for generating service level agreements during a bid offer in accordance with the method system and program of the present invention. As depicted the process starts at block and thereafter proceeds to block . Block depicts a determination whether a grid management system receives a grid job request. When a grid management system receives a grid job request the process passes to block . Block depicts determining the grid environment requirements for the job request. Next block depicts generating a SLA based on the grid environment requirements. Alternatively the grid job request may include an SLA that is agreed to. Thereafter block depicts returning the SLA with the bid offer for the job request and the process ends.

Referring now to there is depicted a high level logic flowchart of a process and program for generally managing job execution compliance to a service level agreement within a grid environment in accordance with the method system and program of the present invention. As illustrated the process starts at block and thereafter proceeds to block . Block depicts receiving a grid job submitted by a client at a grid provider where the grid job is based on a previously agreed to bid offer. Next block depicts the grid provider accessing the bid offer previously agreed to by the grid provider. Thereafter block depicts initiating SLA monitoring when the grid job passes an entry point for the grid vendor based on the type of grid job where types of grid jobs include but are not limited to batch jobs and transaction process jobs and the process passes to block .

Block depicts the grid provider executing the grid job according to the bid offer and providing the job results to the client. Next block depicts stopping SLA monitoring when the job results pass the exit point. Thereafter block depicts a determination whether the SLA terms were met. If the SLA terms were met then the process ends. If the SLA terms were not met then the process passes to block depicts a determination whether the terms of the SLA were met. If the terms of the SLA were not met then the grid provider makes restitution for the unmet agreement requirements and the process ends.

With reference now to there is depicted a high level logic flowchart of a process and program for monitoring the compliance of batch grid jobs with the terms of a SLA in accordance with the method system and program of the present invention. As depicted the process starts at block and proceeds to block . Block depicts a determination whether a request to monitor batch job compliance is received. When a request to monitor batch job compliance is received then the process passes to block . Block depicts starting the SLA timer when the batch job is submitted. Next block depicts a determination whether the final result for the batch job is detected. When the final result for the batch job is detected the process passes to block .

Block depicts comparing the batch job execution time with the SLA terms. Next block depicts a determination whether the job execution time when the batch completed exceeded the SLA terms. At block if the job execution time did not exceed the SLA terms then the process passes to block . Block depicts accumulating performance bonuses for the portion of time by which the SLA terms exceed the batch job execution time and the process passes to block . Otherwise at block if the batch job execution time exceeds the SLA terms then the process passes to block . Block depicts calculating a restitution fee based on the SLA designated restitution requirement and the process passes to block .

Block depicts completing the reconciliation with the client for the batch job and the process ends. Where performance bonuses are accumulated reconciliation may include updating the a performance status for the grid environment with the performance bonuses or updating an employee s performance rating for managing the grid environment with the performance bonuses for example. Where restitution fees are calculated the client may be compensated for the unmet portions of the SLA terms.

Referring now to there is depicted a high level logic flowchart of a process and program for monitoring the compliance of transaction process grid jobs with the terms of a SLA in accordance with the method system and program of the present invention. As depicted the process starts at block and thereafter proceeds to block . Block depicts a determination whether a transaction process grid job enters the grid environment. When a transaction process grid job enters the grid environment then the process passes to block . Block depicts starting the SLA response timer. Next block depicts continuing to calculate the results and route the results back to the client. Thereafter block depicts a determination whether a response exits the grid environment. If a response exits the grid environment then the process passes to block .

Block depicts stopping the SLA response timer. Next block depicts a determination whether the transaction is part of a group of cumulative transactions with cumulative SLA terms. If the transaction is not part of a group of cumulative transactions then the process passes to block . Block depicts comparing the SLA response timer execution time with the SLA terms and the process passes to block . Otherwise at block if the transaction is part of a group of cumulative transactions with cumulative SLA terms then the process passes to block . Block depicts adding the calculated response timer time to the cumulative SLA timing. Next block depicts a determination whether the cumulative SLA timing is complete. If the cumulative SLA timing is not complete then the process ends. If the cumulative SLA timing is complete then the process passes to block .

Block depicts a determination whether the response time or the cumulative SLA timing exceeds the SLA terms. If the response time or cumulative SLA timing exceeds the SLA timing terms then the process passes to block . Block depicts calculating a restitution fee based on the SLA designated restitution requirement and the process passes to block . Otherwise at block if the response time or cumulative SLA timing does not exceed the SLA timing terms then the process passes to block . Block depicts accumulating performance bonuses for returning the response before the SLA timing terms and the process passes to block .

Block depicts completing the reconciliation with the client for the transaction process job and the process ends. In particular as previously described reconciliation may include crediting payments to the client for the restitution fee and receiving credits from the client for accumulated performance bonuses.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

