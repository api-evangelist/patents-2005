---

title: Rebootless display driver upgrades
abstract: Systems and methods for rebootless updating of a IHV display driver are disclosed. According to such a method, first, the operating system stops the driver from running. Second, the system switches over to an interim or temporary display driver, which be a default driver provided with the operating system. Third, the new hardware-specific driver is started. Thus, a hardware-specific display driver may be updated without rebooting.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08056072&OS=08056072&RS=08056072
owner: Microsoft Corporation
number: 08056072
owner_city: Redmond
owner_country: US
publication_date: 20051031
---
Updating a hardware specific display driver i.e. a display driver that may be used to control video graphics display associated with a piece of hardware has always required rebooting. Such a hardware specific display driver may be referred to as an independent hardware vendor IHV display driver.

In previous operating systems it was not possible to update the display driver without requiring a reboot. The graphics architecture in these operating systems did not support the fact that a display driver would be completely stopped from running and then dynamically updated to a completely new display driver. For example driver resources typically need to be released in order to change to a new driver. In previously available operating systems there was no way to release resources. Consequently the user had to shutdown to release the resources. For the kernel side of the operating system to recognize the presence of a new driver the user would have to reboot. Also a driver is typically used by a number of clients. In previously available operating systems there was no way to stop clients from using the driver. Accordingly if the clients could not be stopped from using the driver then the driver could not be changed. Rebooting the system would force all clients to stop using i.e. disconnect from the driver.

It would be desirable however if a display driver could be updated without requiring a reboot while maintaining certain functionality such as 2D for example and state of the operating system.

As disclosed herein a currently running hardware specific display driver may be dynamically switched to a new display driver while the hardware is still running. Such a method may include three steps. First on a request to update the currently running driver the operating system stops the driver from running. Second the system switches over to an interim or temporary display driver. The interim display driver may be a default driver provided with the operating system such as the VGA driver provided with the Microsoft WINDOWS operating system . Third the new hardware specific driver is started. The 3D state is restored and the GPU continues to work normally with full functionality. Thus a hardware specific display driver may be updated without rebooting.

To install the upgraded display driver onto the host computer the user may run a so called setup engine on the host computer. At the setup engine copies the files associated with the upgraded display driver into memory on the host computer. It should be understood that in prior systems such new display driver files were deposited somewhere in memory and upon the next startup were detected and used. In a system as disclosed herein the new files may be copied as in previous systems and stored in memory until the new driver is started as described in detail below .

At the currently running hardware specific driver is stopped. A method for stopping a currently running hardware specific display driver is described in detail below in connection with .

At control is switched to an interim display driver. The interim display driver may be a default driver provided with the operating system such as the VGA driver provided with the Microsoft WINDOWS operating system . When the currently running hardware specific display driver is stopped there is no display driver running on the system. This would result in a black screen and an unpleasant user scenario. To avoid this the VGA driver which is already loaded in the system is now started being used. Until the new hardware specific driver is installed the desktop is displayed using the VGA driver.

In order for hardware to draw anything to the screen it must have some resources allocated to it. These are allocated by the operating system to the graphics hardware. Accordingly when the currently running driver is stopped at sufficient resources are still allocated to enable the default driver to run in the interim. For example certain memory and I O resources may stay allocated. It should be understood that this is different from what would happen in most stacks. For most devices all resources would be released after the driver is stopped because after the driver has been stopped use of the hardware would be prohibited.

At the upgraded hardware specific display driver is started. A method for starting a new hardware specific display driver is described in detail below in connection with . Thus a hardware specific display driver may be updated without rebooting.

There are two categories of clients that need to be paused. First Win32K the older 2D part of the graphics stack in WINDOWS GDI is stopped at . The operating system shell is notified to stop using the device. Also the kernel pauses all clients.

At the second category of clients is paused. The second category includes Direct3D clients. When these clients are paused everything that was allocated on behalf of those clients has been deleted. When step is finished nothing associated with the IHV driver will be left in the kernel mode. At this point there is no Video Memory Manager and Video Scheduler activity.

At on seeing the PnP manager request DxgPort will call the IHV kernel mode driver through its registered DmStopDevice DDI. The operating system informs the display driver to clean up any memory for example or anything else the display driver has to clean up. The IHV driver is responsible for cleaning up its state in this function. It releases all held resources and undoes all activities which the driver started in the DmStartDevice function.

After step whenever an application calls in to do graphics the application is told that the hardware is unavailable and that the application should clean up any of its resources. At the DirectX runtime receives a Device Lost notification from DxgKrnl. This notification is forwarded at onto the DirectX applications. New DirectX9L applications will destroy their device objects. DirectX9 and previously written applications may or may not destroy the device. It should be understood that DirectX refers to WINDOWS 3D graphics dxg directX graphics .

Preferably the applications are notified of the new driver only when they call in to do graphics. That is when they want to use the old driver they are told that it is unavailable. Then new DirectX9L applications reroute themselves to the new driver which is the updated IHV driver . When DirectX9 and previously written applications find out that the old driver has been unloaded D3D runtime spoofs to the application pretending that the driver is still there.

At the kernel graphics stack stops the interim driver. Preferably the VGA driver is now stopped from running but it is still loaded. A black screen may appear momentarily.

At the graphics stack calls the updated video display driver through a device driver interface DDI that initializes the graphics hardware and allocates the necessary display driver resources. The graphics stack tells new IHV driver to start. At the graphics stack notifies the kernel to create the corresponding objects for the adapter. These were destroyed when the device was stopped.

At 2D graphics objects are restored. Win32K is notified to create the corresponding views and its graphics device objects. Monitor objects are also created at this point through the kernel graphics stack. At 3D graphics objects are restored. The 3D graphics software requests that the applications recreate their device objects after which the applications can restart rendering i.e. using the new and updated driver.

Although not required the invention can be implemented via an application programming interface API for use by a developer or tester and or included within the network browsing software which will be described in the general context of computer executable instructions such as program modules being executed by one or more computers e.g. client workstations servers or other devices . Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs minicomputers mainframe computers and the like. An embodiment of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an example system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology compact disc read only memory CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as ROM and RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data . RAM may contain other data and or program modules.

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the example operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

One of ordinary skill in the art can appreciate that a computer or other client devices can be deployed as part of a computer network. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes. An embodiment of the present invention may apply to an environment with server computers and client computers deployed in a network environment having remote or local storage. The present invention may also apply to a standalone computing device having programming language functionality interpretation and execution capabilities.

Thus there have been described systems and methods for rebootless updating of a video display driver. Though the invention has been described in connection with certain preferred embodiments depicted in the various figures it should be understood that other similar embodiments may be used and that modifications or additions may be made to the described embodiments for practicing the invention without deviating therefrom. The invention therefore should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the following claims.

