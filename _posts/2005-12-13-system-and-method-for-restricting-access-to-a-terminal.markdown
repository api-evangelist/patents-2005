---

title: System and method for restricting access to a terminal
abstract: A method for authenticating data comprising the steps of: providing data to a first device having at least two initial cryptographic keys; generating authentication information required to authenticate the data utilizing the at least two initial cryptographic keys; sending the data and authentication data to a second device having paired cryptographic keys wherein each paired cryptographic key is associated to one of the at least two initial cryptographic keys; and authenticating the data in the second device utilizing the paired cryptographic keys.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08108317&OS=08108317&RS=08108317
owner: Hand Held Products, Inc.
number: 08108317
owner_city: Skaneateles Falls
owner_country: US
publication_date: 20051213
---
This patent application claims priority of provisional U.S. patent application Ser. No. 60 712 787 filed Aug. 31 2005 and that is titled PED B Utilities Engineering Specification which is incorporated herein by reference in its entirety.

This invention relates generally to a system an apparatus and a method for restricting access to and control of a computing device and more particularly a system an apparatus and a method for restricting access to and control of a computing device which may be used for performing transactions such as financial transactions at a point of sale.

Devices that perform financial transactions also referred to herein as financial transaction devices are generally at risk from being misused to perform criminal activity. Financial transaction devices are typically designed with various security features that defend against this type of risk. One type of security feature is to require each user of the device to enter a user code such as a personal identification number PIN along with other transaction related information as a pre condition for using the device to execute a financial transaction. A device that requires an entry of a PIN as a pre condition of its use is generally referred to as a PIN Entry Device PED .

The PIN and other transaction related information are typically encrypted using a PIN encryption and cryptographic key and transmitted by the device to a host computer. The host computer attempts to verify that the encrypted PIN and other transaction data are correct and if correct further processes the transaction. The encrypted PIN and other transaction data is correct if it associates with an account number typically referenced within the transaction data.

A transaction typically involves a buyer and a seller. Processing the transaction may involve debiting an account of a buyer in the transaction typically the user of the PED and crediting an account of the seller of the transaction typically a retail store business entity supplying the PED . The encryption of the PIN and the other transaction data prior to transmission of the data protects against revealing the unencrypted data to parties that may be listening eavesdropping and or intercepting the data during its transmission or processing.

As shown other PED financial transaction terminals are configured to communicate directly or indirectly over a local network located within the confines of a retail store. The transaction terminal communicates indirectly over the local area network via the cash register . The local network can also include a wireless 802.11 access point and other cash registers and

A local server that is directly connected to the local network and to one or more mass storage devices communicates with other remotely located servers such as a remote server associated with the retail store and a credit and or debit authorization server over a wide area network . This type of arrangement can be scaled to include and support hundreds of transaction terminals and cash registers multiple local networks local servers and remote servers .

In some exemplary embodiments the transaction terminal displays the transaction amount to a user of the transaction terminal . The user of the transaction terminal typically a buyer in the transaction communicates an approval of the transaction amount via the terminal . In an exemplary embodiment the user presses a Yes key on the contact sensitive touch screen or keypad not shown to communicate approval and presses a No to communicate non approval.

Upon approval from the user the terminal prompts the user to enter a PIN value. The user inputs a PIN value by pressing a series of numerically labeled keys and by finally pressing an enter key displayed onto contact sensitive touch screen . In other exemplary embodiments a PIN is entered before the user approves the amount.

The transaction terminal encrypts and communicates information including the inputted PIN value and other transaction related data to the cash register . The cash register communicates the encrypted information to a local server via the local network . The local server communicates the encrypted information to a credit debit authorization server a remote server owned by the retailer via the wide area network or a service provider. In some exemplary embodiments the encrypted information is communicated to a remote server owned by the retailer and then re transmitted from the remote server to a credit debit authorization server .

The credit debit authorization server determines whether the encrypted PIN value and the other transaction related data are correct such as being associated with a credit debit account number referenced by the transaction related data. The credit debit server may perform other data checks such as for available balance. If correct the credit debit authorization server debits the account of the buyer user and credits the account of the seller retailer and communicates approval information to the terminal via the wide area network the local server the local are network and the cash register . In many cases the retailer s account resides at a different location. In these cases a credit advice is sent to the server holding the retailer s account. In some circumstances one or more servers may be offline and the processing of the transaction may be delayed or altered as relative to the description above.

The local server communicates the approval information to the remote server . The remote server records the transaction within the retailer s sellers digital records for the purpose of maintaining records including for example accounts receivable and inventory control records. The terminal displays information indicating the transaction approval to the user not shown and or a cash register.

The SIE terminal digitally signs data files containing programs and or data utilizing a Signing Utility program such as are available with various Public Key Infrastructure software systems or smart card based security tokens to create a file header by processing the data file and one or more encryption key s . The result is generally referred to as a digital signature. A digital signature may be created by processing the data file and one or more encryption key s through a digital signature algorithm. A second digital signature may be created by processing the data file and one or more additional encryption key s wherein at least one of the encryption key s that is processed to create the second digital signature is different than any of the encryption key s in the first digital signature. Alternatively processing the data file and one or more encryption keys through a different algorithm than that used in the first digital signature may create a second digital signature. The encryption key s may be secret keys private keys or public keys but in an exemplary embodiment provided herein they will be described as private keys.

Once computed the file header and its associated data is communicated as a digitally signed data to the terminal via a communications link . The terminal receives the digitally signed data and authenticates the signed data by verifying the authentication data in the file header. The authentication data in the file header is verified by using one or more encryption key s that are associated with the initial encryption key s which the SIE used to create the digital signatures. These encryption key s may be secret keys private keys or public keys but in the description of an exemplary embodiment herein they will be described as public keys.

It is to be noted that the encryption keys of the first and second devices may be associated by mathematical derivation symmetry or other relationship.

In this exemplary embodiment the authentication data is recomputed in the receiving terminal and compared to the authentication data generated by the SIE . In this embodiment the algorithm used by the SIE is reversed to decrypt the digital signature.

The file header and digital signature may be stored and communicated separate from the data. The signed data may include multiple digital signatures.

Prior to being placed into normal operation the public encryption key s is transmitted to the terminal from the SIE terminal via the execution of a Key Injection Utility program. In some exemplary embodiments the public encryption key s is transmitted to the terminal from a server or other device. The public encryption key s and its associated private encryption key s are generated from the SIE terminal via the execution of a Key Generation Utility program. The SIE terminal interoperates with the financial transaction terminal in order to secure data transmission. Other sources of private public key s generation and or management may be employed. It is to be noted that the data file itself need not be encrypted or otherwise protected in order for secure data transmission to be accomplished in accordance with the present invention.

The input output interface is electronically connected to a virtual keypad such as a contact sensitive touch screen a card reader one or more data communications ports including a USB port a radio IEEE 802.11 port a bar code reader and RFID port and an RS 232 serial communications port . The input output interface is also connected to a user interface display . Optionally the terminal can include data storage such as a disk storage device or flash memory. Other exemplary embodiments of the transaction terminal can include other combinations and variations of hardware and software.

CPU substantially controls transaction terminal . The CPU is also referred to as a primary CPU. In some exemplary embodiments the terminal may include additional processors. CPU executes instructions and or processes data fetched from the memory storing authenticated unrestricted and executable programming and or data. In some exemplary embodiments the memory stores unrestricted executable programming and or data which is physically secure via tamper resistant hardware or software non volatile and implemented as flash memory.

The first instructions fetched and executed by CPU may reside within a boot loader program stored within memory . During its execution the boot loader program transfers direction of the CPU to a firmware program

The boot loader program and firmware program are authenticated flagged as unrestricted and installed into the memory during manufacture of the transaction terminal or at a later time. Under certain conditions the firmware is configured to transfer the direction of the CPU to one or more other programs . The firmware program will not transfer the direction of the CPU to instructions residing within another programming module unless the other programming module is first authenticated by the firmware and optionally flagged or classified as unrestricted and stored in memory . If authentication fails the other programming module may be flagged as restricted and stored into memory or discarded.

The other authenticated programming module may alternatively be stored but not additionally flagged because the act of storing may indicate authentication so that modules that are not authenticated are not stored. Programming modules may be authenticated prior to each execution. Other programming modules may be executed without authentication. For instance 

The firmware may be pre installed with one or more public encryption keys. The terminal is typically injected with one or more public encryption keys from the SIE terminal . As shown the firmware of the terminal was injected with ten public encryption keys after the firmware was installed onto the terminal . The one or more public encryption keys may be transmitted to the terminal after it is installed or by an intermediate service provider.

A file including a data file and a file header is communicated from the SIE terminal and stored in the transaction terminal in memory . The firmware program accesses the file and attempts to authenticate a first digital signature not shown and a second digital signature not shown stored within the file header . The first and second digital signatures have been previously generated by the SIE terminal executing the Signing Utility. The authentication process may occur while the file is loaded. The authentication process proceeds until the completed file is received.

In an exemplary embodiment the first and second private keys used to construct the first and second digital signatures have been selected from within a larger set of N private keys such as 10 or more and referred to as 2 of N signing where N represents the total number of private keys within the larger set of private keys. An advantage of having a large set of these keys in the first device is that it provides flexibility in use of the system should a key become compromised in some way. If a key is compromised it can be erased invalidated retired etc. from use. With a large set of keys other keys may then be utilized in substitution for the compromised keys making other changes such as injection of additional keys unnecessary.

The first digital signature residing within the file header was previously generated from a hashing algorithm and a private encryption key . The second digital signature was previously generated from a private encryption key . The larger set includes the 10 private keys identified as .

The firmware program attempts to authenticate the first digital signature using public encryption key . If successful the firmware program attempts to authenticate the second digital signature using public encryption key . If successful the firmware program tests for correctness of other information within the file header . The private and public keys may be generated in accordance with encryption standards such as Elliptic Curve Cryptosystem or RSA Cryptosystem.

The first and second public keys used to authenticate the first and second digital signatures respectively may be identified as two public keys included within a larger set of public keys that are each associated with a first and second private key of a set of private keys. The firmware is configured to authenticate digital signatures using the other public keys included within the larger set of public keys if necessary. This type of exemplary embodiment is referred to as 2 of N authentication where N represents the number of public keys within the larger set of private public cryptographic key pairs. Cryptographic keys are referred to as being paired when they are related to each other or associated with each other mathematically or in some other way.

If the digital signatures are authentic and other information within the file header is correct the program and or data is flagged as authenticated and executable and copied into the memory storing unrestricted data . When appropriate direction of the CPU is transferred to the data residing in memory from the firmware program in accordance with instructions executing within the firmware program

When appropriate direction of the CPU is transferred back to the firmware program or to another authenticated and unrestricted program in accordance with instructions executing within the data or in accordance with interrupts generated from hardware or other digital logic within the terminal .

If either of the digital signatures associated with the data is not determined to be authentic it will not be permitted to control CPU . Only authenticated programs are permitted to control the CPU.

Authenticated programs may or may not be permitted to transfer control of the CPU to the program . If for example transfer is not permitted and the program is an executable file it will not be executed or if the program is a script file it will not be interpreted or if the program is data it will not be input or processed. Otherwise control may be transferred if the other program is authenticated.

If both of the digital signatures are determined to be authentic control of the CPU will be permitted to be transferred to the program so that executable files will be permitted to execute script files will be permitted to be interpreted by an authenticated script interpreter program and data files will be permitted to be input and processed by an authenticated program.

While being active firmware or other type of digital logic containing data is permitted to perform actions to process or to transfer control of the CPU to other firmware that was authenticated before the time of performing such actions.

The active firmware is best not permitted to execute the other inactive firmware as an executable file best not permitted to interpret the other inactive firmware as a script file and best not permitted to process the other inactive firmware as data if the other inactive firmware was not authenticated prior to the time of its transferring control of the CPU by the active firmware.

If the other inactive firmware is detected to have been last modified at a time later than a time that it was last authenticated the other inactive firmware is no longer authenticated. All firmware or data must be authenticated prior to being activated or being processed by other activated programs and later than the time of its last modification.

Newly delivered firmware can replace presently installed previously delivered firmware after the newly delivered firmware is determined to be authentic authenticated . For example a first bitmap file named icon.bmp that is delivered and authenticated can be replaced by a second bitmap file named icon.bmp that is delivered and authenticated. A newly delivered program that is delivered and authenticated can input and process the second bitmap file icon.bmp.

Likewise newly delivered firmware can replace presently installed previously delivered firmware of the terminal after the newly delivered firmware is authenticated. The CPU that controls terminal is also referred to as the primary CPU. The firmware that initiates control of the behavior of the primary CPU is referred to as primary firmware.

In some exemplary embodiments the terminal includes one or more processors CPU s in addition to a primary CPU to execute authenticated firmware and which CPU is utilized to process other authenticated data. Additional processors may be included. Optionally the terminal can interoperate with a CPU included within a peripheral that is attached to the terminal such as a smart card and its associated reader. Additional CPU s are referred to as non primary CPU s or referred to individually as a secondary or tertiary CPU. An additional CPU may have its own firmware which is referred to as non primary firmware or referred to individually as secondary or tertiary firmware. To replace a particular copy of firmware a data type field stores a value that indicates that its associated data is to be installed as primary secondary or tertiary firmware.

Firmware may be authenticated in a manner different than that for other types of digital logic. Firmware whether primary secondary or tertiary may be authenticated using one or more cryptographic keys that are different from the cryptographic keys used for other types of data.

One or more secret or private cryptographic keys in the possession of a manufacturer of the terminal may be used to sign data that is intended by the manufacturer to be installed as firmware within the terminal . At least one public cryptographic key that is cryptographically paired with respect to the firmware private key is utilized by the presently installed primary firmware to authenticate any newly delivered data that is intended to be installed as firmware. Alternatively one or more symmetric secret keys may be employed.

The file header may include a data type field that stores a value to indicate a classification type of its associated data . The data type field can indicate that the data is firmware an executable program an interpreted program data a specific type of firmware primary secondary or tertiary a specific type of program executable or specific script language or a specific type of data etc. To deliver data to replace primary secondary or tertiary firmware the data type field stores a value that indicates that its associated data is to be installed as primary secondary or tertiary firmware respectively.

It is contemplated that after authentication of the newly delivered firmware primary secondary or tertiary execution of a command to install the newly delivered firmware in order to replace the presently installed firmware primary secondary or tertiary will be permitted. After installation of the newly delivered firmware a reboot of the newly installed firmware or of the terminal as a whole will cause the newly delivered and installed firmware primary secondary or tertiary to execute. Alternatively the newly delivered firmware can modify or supplement the presently installed firmware. Execution may be initiated without rebooting the terminal . Newly delivered firmware primary secondary or tertiary that has not been determined to be authentic will not be permitted to be installed onto the terminal . The above described exemplary embodiments to install firmware enables the manufacturer of the terminal to upgrade versions of firmware without relying upon trusting cooperation from other parties including owners or users of the terminal .

In some exemplary embodiments the file header includes an installation type field. The installation type field indicates whether the data is to replace or supplement previously installed data of the same type. In some exemplary embodiments the data type field indicates that its data stores one or more cryptographic keys such as public keys. The installation type field can be used to indicate whether the newly delivered public keys supplement or replace any public keys that have been previously installed onto the terminal . Like other data types this type of data public keys would be signed using at least two private keys. In an exemplary embodiment the at least two private keys used to digitally sign the newly delivered key would not be used for other types of operations such as encrypting data.

Further in some exemplary embodiments the data stores one or more secret keys including for example one or more PIN encryption keys. A PIN encryption key is used to transform encrypt a PIN into encrypted data that is transmitted from the terminal to a host computer. Like other types of data this type of data would be signed using at least two private keys to generate at least two signatures that are stored within the file header . Unlike other types of data the at least two private keys are further used to encrypt the PIN encryption key into encrypted data that is stored as data associated with the file header . The encrypted data would later be decrypted using the at least two public keys that are associated with respect to the two private keys. Alternatively a different key can be used to encrypt.

In an exemplary embodiment the primary firmware provides an application programming interface API through which a path of execution of a currently active program passes through to perform certain programming actions. These programming actions include transferring the direction of the behavior of the CPU via executing interpreting or processing of other data.

In some exemplary embodiments the API includes addresses within the firmware to perform programming actions including executing interpreting or processing of other data. As a result a currently executing program cannot transfer the direction of the behavior of the primary CPU without directing its path of execution through the API and into the functions that reside within the firmware

In other types of exemplary embodiments the public keys can be utilized to authenticate messages in addition to the data carried by messages. The messages are typically communicated from other computers interoperating with the terminal or via an intermediate device such as a smart card. This feature enables the terminal to further authenticate the identity of other computers or persons that interoperate with the terminal .

The functions that reside within the firmware are configured to determine an authentication status of the other data to be executed interpreted or processed. If the other data has not been determined to be authentic the function will not perform the programming action associated with the API and will instead return an error to the currently active program. In this type of exemplary embodiment the active program has no other way to execute interpret or process other data other than that provided by the API of the firmware

The input output interface is electronically connected to a keypad or keyboard not shown a token input output device a data storage device such as a disk drive one or more data communications ports including a USB port and an RS 232 serial port and a user interface display . Other exemplary embodiments of the SIE terminal include other combinations and variations of device I O data storage and user interface hardware and may include physical and or logical security mechanisms.

A plurality of utility programs including a Key Generation utility a Key Injection utility and a Signing utility can be loaded and executed in memory to control the CPU and the behavior of the SIE terminal . In an exemplary embodiment all utility programs are secured under the principles of dual control and split knowledge for access control. Additionally individual users may be granted varying privileges and permissions.

A Key Generation utility program executing on the SIE terminal instructs the user s of the SIE terminal to insert a blank USB signature token into the token I O device . The program prompts a user to enter information constituting one or more user defined attributes of the token also referred to as user defined token attributes. Other token attributes are program defined and can be initialized by the program during initialization of the blank token .

In an exemplary embodiment the user defined token attributes include a label and a password or PIN access code. In this use scenario a user enters a label equal to the text string A via the keypad of the SIE terminal . The label is stored onto and associated with the token . As a result the token is hereafter referred to as the A token . A user also enters an access code via the keypad of the SIE terminal . The access code is stored securely onto and associated with the token . After the user defined token attributes are prompted for by the program and entered by a user the program communicates an initialization command to the token while it is inserted within the token I O device .

In response to the initialization command the inserted token generates a private public asymmetric cryptographic key pair and initializes other program defined token attributes. The private public cryptographic key pair consists of a private encryption key and public encryption key that are related to each other and that are both stored within the A token . The private public cryptographic key pair is also referred to as the A private public key pair. The program communicates a read command to the inserted A token to read a copy of the generated public encryption key into the SIE terminal memory . The generated private encryption key remains securely stored within the A token .

Other program defined token attributes include a key authentication code KAC . The KAC is a hash value computed using the private keys of one or more tokens forming a token use set. A token use set groups tokens that are configured to be used together. In this exemplary embodiment a token use set will consist of two tokens. For example tokens A and B are configured to be used to generate a pair of digital signatures for signing a data. Token use set number one consists of tokens A and B .

Next the Key Generation utility program instructs that a second blank USB signature token be inserted into the token I O device if it has not been already inserted. In this exemplary embodiment the token I O device has two ports that each accommodates one token.

As described for token A the program prompts a user to enter information constituting one or more user defined attributes for the token . In this use scenario a user enters a label equal to the text string B via the keypad of the SIE terminal . The label is stored onto and associated with the token . As a result the token is hereafter referred to as the B token . A user also enters an access code via the keypad and the access code is stored onto and associated with the token . After the user defined token attributes are prompted for by the program and entered by a user the program communicates an initialization command to the token while it is inserted within the token I O device .

In another type of exemplary embodiment the token I O device has only one port. In this exemplary embodiment the Key Generation utility program instructs the user s to remove the token from the token I O device and instructs that a second blank USB signature token be inserted into the token I O device .

In response to the initialization command the inserted token generates a private public cryptographic key pair and initializes other program defined token attributes. The private public cryptographic key pair consists of a private encryption key and public encryption key that are cryptographically related to each other and that are both stored within the B token . The private public cryptographic key pair is also referred to as the B private public key pair. The program communicates a read command to the inserted B token to read a copy of the generated public encryption key into the SIE terminal memory . The generated private encryption key remains securely stored within the B token .

The program computes a key authentication code KAC based upon the public key values and and stores the KAC value onto both tokens and as a program defined attribute for token use set number one consisting of tokens A and B .

The program communicates a read command to the inserted B labeled token to read a copy of the generated public encryption key into the SIE terminal memory . The generated private encryption key remains securely stored within the B labeled token. The Key Generation utility program instructs that the B labeled token and any other token to be removed from the token I O device . As a result the initialization of tokens A and B of the first token set is complete.

Tokens may be grouped into token sets having at least two individual tokens and where each individual token is in the secure possession of a unique individual. For example the tokens A and B are tokens within the token set number one. The token A is in the secure possession of one person such as a security officer. The token B is in the secure possession of another person such as a software development manager. Only the security officer knows the password of token A and only the software development manager knows the password of the token B. Both the security officer and the software development manager must co operate to digitally sign a data. This type of security arrangement is referred to as dual control .

The above described procedure is repeated for the signature tokens within the token sets two through five . As a result all of the signature tokens are initialized and the public encryption keys are now stored into the SIE terminal memory . The program then instructs the users that all the signature tokens are to be stored in a secure place.

Next the Key Generation utility program instructs the users to insert a blank fleet token into the token I O device . The token is also labeled as token Fleet A and is here after also referred to as the Fleet A token . As described for token A the program prompts a user to enter information constituting one or more user defined attributes for the token . In an exemplary embodiment the user defined token attributes include a label and an access code. The program then stores a copy of each of the public encryption keys onto the Fleet A labeled token .

Optionally the program also stores a copy of each of the public encryption keys onto on a data storage device . The program then instructs that the Fleet A labeled token be removed from the token I O device and stored in a secure place. The public encryption keys can be later retrieved from the one or more fleet tokens and or the data file for injection into the terminal as described in association with .

The token set includes tokens and token set includes tokens and token set includes tokens and token set includes tokens and and token set includes tokens and . Tokens of each token set are indexed with a combination of the token set identifier and the letters A or B. Hence token is referred to as token A token as token B token as token A token as B token as A token as B token as A token as B token as A and token is referred to as token B.

Transaction terminals typically require data to be signed by two private encryption keys. For this type of exemplary embodiment the two private keys are stored within one token key set. A data can be signed using tokens A and B tokens A and B tokens A and B tokens A and B or tokens A and B. Unused key pairs function as backup key pairs in circumstances where one or more key pairs are lost or compromised.

A Key Injection utility program executing on the SIE terminal instructs that the first fleet token be inserted into the token I O device . The Key Injection Utility prompts for one or more passwords at initiation. The program communicates a read command to the inserted fleet token token to read a copy of the generated public encryption keys from the fleet token into memory of the SIE terminal .

The Key Injection utility program then prompts the user to confirm that the public encryption keys are to be injected into the transaction terminal . Upon confirming the Key Injection utility program communicates and injects the public encryption keys to the transaction terminal via the communication link . In an exemplary embodiment injection related commands are also communicated by the SIE terminal to the firmware to perform injection of the public encryption keys . Upon successful injection of the public encryption keys the transaction terminal will here after be enabled to authenticate data using the public encryption keys 

In other exemplary embodiments the storage of the public encryption keys is divided between multiple fleet tokens . Input of all of the public encryption keys requires all of the fleet tokens to be individually inserted into the token I O device and read separately. In this type of exemplary embodiment each of a plurality of trusted users is responsible for the safe keeping of each of one or more of the fleet tokens . Each individual token set can be divided among a plurality of trusted users. Another embodiment is that all public encryption keys are stored in multiple fleet tokens.

Next the SIE terminal prompts the user s to insert a first signature token into the token I O device and to input a first access code value associated with the first signature token. In this use scenario the user s insert the signature token A and input an access code value equal to the access code value stored onto token A . The SIE terminal verifies the token is valid for use in the signing process including the presence of a private encryption key an access code value not shown and a key authentication code KAC not shown from token A and verifies that the first access code value inputted by the user s is equal to the access code value stored onto token A.

Next the SIE terminal prompts the user s to insert a second signature token into the token I O device and to input a second access code value associated with the second signature token. In this circumstance the user s insert the signature token B of the token set one and input a second access code value equal to the access code value stored onto token B . The SIE terminal verifies the token is valid for use in the signing process including the presence of a private encryption key an access code value not shown and a key authentication code KAC not shown from token B and verifies that the second access code value inputted by the user s is equal to the access code value stored onto token B.

The SIE terminal also verifies that the KAC read from token A and the KAC read from token B are correct indicating that both token A and token B are members of the same token set in this circumstance token set number one . Both tokens A and B are now ready to perform data signing.

Token A provides a first private encryption key which is used in conjunction with data file to create a first digital signature by executing a digital signature algorithm. Next the token B provides a second private encryption key which is used in conjunction with data file to create a second digital signature by executing the digital signature algorithm. The data signing utility program then completes generation of the other portions of the file header and adds the file header to the data file and stores the data file header and the data of the file into a newly created signed data file. Next the signed data and secure header are communicated to the transaction terminal via the communications link . The transaction terminal stores the signed data and secure header into its memory and queues the signed data and secure header for authentication and flags the signed data and secure header as being pre authenticated. Optionally the signed data and secure header are stored and later communicated to the transaction terminal via the communications link

It is to be noted that the term header is used herein to describe a portion of file which contains certain information. The allocated space in memory for the header is not restricted to any particular location.

Next the transaction terminal attempts to authenticate the signed data as described in association with . If authentication is unsuccessful the signed data is flagged as being restricted from directing the CPU of the transaction terminal . In one exemplary embodiment the signed data is removed from the transaction terminal . If successfully authenticated the signed data is flagged as being unrestricted from directing the CPU of the transaction terminal and is available to execute and direct the CPU when direction of the CPU transitions from the firmware or other unrestricted digital logic directing the CPU to the digital logic of the data . Alternatively the signed data can be authenticated as it is received and stored or not stored in accordance with the results of the authentication.

The system of the invention provides for deactivating disabling a token use set without requiring the generation and or injection re keying of new cryptographic keys. In some circumstances one or more tokens of a token use set may be lost or stolen or be in the possession of persons that are no longer trusted by those persons responsible for the security of one or more transaction terminals and or the security of other components of the system. If active tokens remain that are not compromised the system is said to be partially compromised .

The transaction terminal is configured to remove public keys of one or more token use sets that have been previously injected into the transaction terminal . Removal or deactivation of the public keys effectively deactivates disables the use of tokens storing the related private keys. An advantage of 2 of N signing and authentication is that there are other N 2 other previously injected cryptographic keys that remain active enabled and ready for use without requiring the generation and or injection of new cryptographic keys.

If all N active public keys are removed from a transaction terminal the terminal no longer authenticates incoming data and the system is said to be fully compromised . While no new data can be loaded to the terminal it can continue to operate with the previously authenticated data. As a result generation and injection of other cryptographic keys restores dual signature security within the transaction terminal . In the preferred embodiment new public keys can be loaded to the terminal remotely using a previously established secure mechanism.

As a result a key escrow management system providing backup escrow and recovery retrieval of cryptographic keys lost or compromised from the primary token use set is not required. A trusted key repository for archival and later retrieval of cryptographic keys to replace a currently active token use set with another newly activated token use set is not required either.

A token use set consisting of two keys provides dual control of key generation signing and authentication. A token use set consisting of three keys can provide triple control. A token use set of four keys can provide quadruple control of key generation signing and authentication and so on.

The KAC is a security mechanism that prevents a key from one token use set from being used in combination with a key from another token use set. Tokens from the same token use set are intentionally placed under the control of separate and trusted persons to reduce the likelihood that one person could possess a complete token use set.

To generate a digital signature a person is required to have physical possession of a currently activated token and required to input a correct access code value into the SIE terminal . Possession of an activated token by itself is not sufficient to initiate the process or to generate a correct digital signature. Knowledge of a correct access code value by itself is not sufficient to generate a correct digital signature. This characteristic of the system of the invention is referred to as two factor access control .

To correctly sign a data file two persons are each required to have physical possession of a different and currently activated token within the same token use set and are each required to input a correct access code value into the SIE terminal that is associated with each respective token of the active token use set. This characteristic of the system of the invention is referred to as split knowledge and dual control .

The tokens are referred to as secure because each token stores and protects information including a private key and an access code value. Additionally the tokens may have other mechanisms such as physical security attributes that seek to prevent tampering including disclosure of access codes and keys. A token may be a physical or electronic or software entity and may include such things as smart cards tamper resistant security modules TRSM USB devices etc. In other exemplary embodiments the requirement for related key sets can be removed allowing any 2 of n keys to be used. In another embodiment the KAC mechanism could be shared across all tokens allowing any two or more tokens to be used together.

A housing of the transaction terminal is configured for portability so that the transaction terminal can be moved from location to location. The housing is further configured to be replaceably mounted on a fixed structure such as a fixed structure of a cashier station or a fixed structure of the retail store floor e.g. a shelf a column .

The transaction terminal includes a display having an associated touch screen overlay an imaging assembly module having an imaging axis a and a card I O card reader port having a physical dimensions that are partially defined by the physical dimensions of the card I O card reader and partially defined by housing . The transaction terminal further includes a luminous shroud . When light from imaging assembly module strikes luminous shroud the luminous shroud glows .

The display optionally has an associated touch screen overlay so that the display operates as a data input interface to the terminal . The combination of the display and the touch screen overlay is also referred to as a touch screen . In some operating modes the display outputs a PIN entry screen for prompting a customer to enter PIN information into the touch screen overlay . In other operating modes as shown in the display outputs a signature prompt screen prompting a customer user to enter signature information into the terminal with use of a stylus . The touch screen and or a keyboard can be used for selecting between modes of operation of the terminal in addition to entering data into the terminal .

Referring to the housing of the transaction terminal has formations facilitating the replaceable mounting of the transaction terminal onto a surface of a fixed structure. Selection of various modes of operation may be made with use of a graphical user interface GUI . A plurality of components of the transaction terminal are implemented on circuit boards located within the housing of .

Referring to the GUI can be displayed onto the display and can include a plurality of control buttons in the form of selection icons such as bar code decoding icon and RFID decoding icon location detection icon image capture icon a form data entry icon and an Internet web browsing icon . Many operating systems such as WINDOWS CE GNU Linux and Symbian support such GUI functionality. Selection of one of the icons transitions the transaction terminal into a mode of operation corresponding to the selected icon. In some embodiments a pointer controller also referred to as a mouse can be used to move a pointer that is output onto the display .

When the Internet icon is selected the transaction terminal is driven into a web browsing mode of operation. The transaction terminal can incorporate a web browser for enabling the terminal to be utilized for navigating between websites disposed within various servers of the Internet. Available web browser software packages for hand held devices include for example Opera for Mobile by Opera Software Netfront by Access and Minimo by the Mozilla Foundation WebPro 1.0 by Novarra and or WinWAP available from Slob Trot Software Inc. and Pocket Internet Explorer available from Microsoft Inc.

The selection of bar code decoding icon transitions the terminal into a bar code reading mode of operation such that an actuation of trigger subsequent to a bar code decode mode being selected results in control circuit capturing an electronic image representation subjecting the electronic image representation to a decode attempt and automatically outputting a decoded message e.g. a decoded message is one or more of i displayed on display ii stored into memory and or iii uploaded to another remote device such as a remote computer that is accessible via a communications network.

When trigger button is actuated with terminal in a bar code reading mode of operation control circuit automatically sends appropriate control signals to image sensor chip . Image sensor chip in response thereto automatically exposes photosensitive pixels of image sensor to light and generates image signals. The image signals are thereafter automatically converted into digital values by image sensor IC chip . The digital values are received by FPGA and transferred into RAM to capture an electronic image representation of a substrate carrying a bar code symbol .

In accordance with a bar code decoding program stored in ROM control circuit may attempt to decode a bar code symbol represented in the captured electronic image representation. The capture of image data and decoding of image data occur automatically in response to a trigger signal being generated. A trigger signal can be generated when trigger is actuated. Control circuit may be configured to continuously capture image data and attempt to decode bar code symbols represented therein as long as trigger is actuated. The electronic image representation captured into RAM may be an image map having a pixel value grey scale color scale for each pixel of the image sensor.

Selection of an RFID decoding icon transitions the terminal into an RFID decode mode of operation such that an actuation of trigger subsequent to a selection of an RFID decode mode results in control circuit controlling RFID reader unit to broadcast a radio frequency signal in attempt to activate RFID tags in a vicinity of terminal automatically decoding an RFID tag encoded message carried by a received signal utilizing RFID reader unit and automatically outputting a decoded RFID tag message e.g. to display and or to communicate to another computer.

The RFID reader unit includes an RF oscillation and receiver circuit and a data decode processing circuit . The RFID reader unit may be configured to read RF encoded data from a passive RFID tag such as tag which may be disposed on article . Where RFID reader unit is configured to read RF encoded data from a passive RFID tag RF oscillation and receiver circuit transmits a carrier signal from antenna to passive tag . Passive RFID tag converts the carrier energy to voltage form and a transponder of tag is actuated to transmit a radio signal representing the encoded tag data. RF oscillator and receiver circuit in turn receives the radio signal from the tag and converts the data into a processable digital format. Data decode processing circuit typically including a low cost microcontroller IC chip decodes the received radio signal information received by RF oscillator and receiver circuit to decode the encoded identification data originally encoded into RFID tag .

Selection of the image capture icon transitions the terminal into a picture taking mode of operation such that a subsequent actuation of trigger results in control circuit automatically capturing a two dimensional electronic image representation corresponding to the present field of view of imaging assembly module and automatically outputting the two dimensional electronic image representation into one or more of i a memory of the terminal e.g. memory ii another computer and or iii display as described previously herein without decoding being executed and without a decoded message being output.

The terminal can be configured so that icons operate as triggers as well as mode selections. The terminal can be configured so that actuation selection of one of the icons results in a generation of a trigger signal and an associated operating mode being activated initiated such that there is no need to separately actuate trigger after an icon is actuated selected .

Referring to the terminal may further include a plurality of communication links such as an 802.16 communication link 802.11 communication link a communication link for communication with a cellular network such as a network in accordance with the Global System for Mobile Communications GSM a Bluetooth communication link and an IR communication link facilitating communication between terminal and another device located separately from the terminal . The terminal may reside on a network such as a local area network LAN including separately located and separately housed server processors and other hand held devices.

In one embodiment the network is a GSM network that supports packet based wireless communication in accordance with the General Packet Radio Service GPRS . In another embodiment the network is a CDMA network. The cellular radio can be a CDMA type of radio that connects to any CDMA network including but not limited to Qualcomm s CDMA2000 1xRTT CDMA2000 1xEV DO or W CDMA UMTS networks. The aforementioned cellular networks all support high speed packet based wireless data transfer.

In addition to having wireless communication links the terminal may include various physical connector interfaces such as a D connector interface enabling hard wired RS communication with host processor and USB physical connection interface enabling USB communication with devices of a network. The terminal may further be in communication with a plurality of offsite remote host processors or servers located several miles to thousands of miles away from the terminal . Remote host processors may be in communication with the terminal via a wide area network such as the Internet.

In the embodiment of control circuit includes a central processing unit or CPU . CPU may be disposed on processor IC chip while memory may be incorporated partially in IC chip and partially in a plurality of memory IC chips such as EPROM IC chip RAM IC chip and flash IC chip . EPROM IC chip RAM IC chip and flash IC chip or other nonvolatile storage device may be in communication with microprocessor IC chip via system bus .

The terminal also includes a keyboard and a pointer controller enabling movement of a pointer. In some embodiments the pointer controller is provided by an arrow navigation matrix. The pointer controller may also be provided by e.g. a trackball mouse or a joystick. The IC chip may include a real time clock a plurality of serial I O interfaces such as general purpose I O USB and Ethernet interfaces and a plurality of parallel interfaces such as PCMCIA PC and Compact Flash CF memory .

In cryptography a cryptographic hash function or hash algorithm is a function for summarizing or probabilistically identifying data. Such a summary is known as a hash value or simply a hash and the process of computing such a value is known as hashing. A hash function takes a file or message of any length as input and produces a fixed length string as output sometimes termed a message digest or a digital fingerprint. A property of hash functions is that if two hashes according to the same function are different then the two inputs were different in some way. Suitable hash algorithms for the present invention include SHA Secure Hash Algorithm or MD5 Message Digest 5 etc.

The hash value is encrypted in a step using at least two cryptographic keys such as with the private keys of asymmetric pairs e.g. RSA key pairs . This encrypted hash value is referred to as a digital signature . The digital signature and data file is sent to a second device in a step .

In a step the digital signature is decrypted using at least two paired cryptographic keys associated with the initial cryptographic keys.

In a step the data file is passed thru the hash algorithm at the second device to generate a second device hash value.

A query is made in a step whether the second device hash value is equal to the first device hash value. If the values are equal the second device may proceed in a step with one or more transactions that may or may not involve the data file. These transactions might involve such things as executing programs interpreting data processing data displaying data transferring data etc. If the values are not equal the second device is prevented from proceeding in a step with one or more transaction steps such as those mentioned.

The hash value is encrypted in a step using a first cryptographic key thereby generating a preliminary digital signature.

The preliminary signature is then encrypted with a second cryptographic key in a step to thereby generate a final digital signature.

A step decrypt the final digital signature using a second public cryptographic key associated with the second private cryptographic key.

A step decrypts the preliminary digital signature using a first public cryptographic key associated with the first private cryptographic key.

A step compares the hash value computed by the first device to the hash value computed by the second device.

A query is made in a step whether the second device hash value is equal to the first device hash value. If the values are equal the second device may proceed in a step with one or more transactions that may or may not involve the data file. These transactions might involve such things as executing programs interpreting data processing data displaying data transferring data etc. If the values are not equal the second device is prevented from proceeding in a step with one or more transaction steps such as those mentioned.

While the present invention has been particularly shown and described with reference to the preferred mode as illustrated in the drawing it will be understood by one skilled in the art that various changes in detail may be effected therein without departing from the spirit and scope of the invention as defined by the claims.

It should be understood that the programs processes methods and apparatus described herein are not related or limited to any particular type of computer or network apparatus hardware or software unless indicated otherwise. Various types of general purpose or specialized computer apparatus may be used with or perform operations in accordance with the teachings described herein. While various elements of the preferred exemplary embodiments have been described as being implemented in software in other exemplary embodiments hardware or firmware implementations may alternatively be used and vice versa.

In view of the wide variety of exemplary embodiments to which the principles of the present invention can be applied it should be understood that the illustrated exemplary embodiments are exemplary only and should not be taken as limiting the scope of the present invention. For example the steps exemplified herein and the flow diagrams may be taken in sequences other than those described and more fewer or other elements may be used. Also unless applicants have expressly disavowed any subject matter within this application no particular exemplary embodiment or subject matter is considered to be disavowed herein.

The claims should not be read as limited to the described order or elements unless stated to that effect. In addition use of the term means in any claim is intended to invoke 35 U.S.C. 112 paragraph 6 and any claim without the word means is not so intended. Therefore all exemplary embodiments that come within the scope and spirit of the following claims and equivalents thereto are claimed as the invention.

