---

title: Providing flow control and moderation in a distributed message processing system
abstract: Systems and methods for controlling the work load on a distributed system comprising a plurality of stages are provided. The capacity of a present stage is monitored, using either various resources of the present stage or rates of work completion and work receipt of the present stage. Information indicating the capacity of a succeeding stage are obtained and communicated to the present stage. The monitored capacity information of the present stage and the communicated information of the succeeding stage, either alone or in combination, are used to determine if a throttling action is necessary to control the load of work at the present stage. A provided throttling technique inserts an appropriate delay before the present stage to allow the present stage to process an amount of work without saturating the capacity of the present stage. This technique is applied at each stage of the distributed system to control the work load of the overall system by controlling the work load at each stage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08150994&OS=08150994&RS=08150994
owner: Microsoft Corporation
number: 08150994
owner_city: Redmond
owner_country: US
publication_date: 20050603
---
In a message processing system comprised of a plurality of stages one stage interacts with another stage by communicating work such as messages in a work flow to the subsequent stage. The effectiveness of this work flow is important to and in effect determines the overall operability of the system. Each stage or component which may also be thought of as a subsystem of the overall system has a capacity to perform work and is responsible for and capable of receiving the work from the previous stage processing the work and transmitting work to the next stage. The completion of such tasks consumes various resources at each stage and the consumption of the resources has a direct effect on the functionality of the system as the processing capacity of each stage is a function of its resources. Often the present capacity of a subsystem is not easily measurable and the exact resource requirement for performing an individual task is not predictable. In addition a subsystem may concurrently process a heterogeneous workload thus making the quantification of the subsystem capacity and prediction of the resource consumption difficult. In order for the system to function at an optimal level each stage of the system must optimally use its resources. This is because each stage contributes to the overall system. For example if all stages of a message processing system are using their resources at an optimal level the overall system will achieve maximum throughput or production of the system in a given time. If however just one stage of the system is not appropriately utilizing its resources the system will experience either an accrual of work in response to the over utilized stage or the system will be under worked as more work could be handled or processed by the system.

Various factors contribute to the utilization and hence to the overall operation of a message processing system. One such factor is the arrival rate of work to the system. When the work arrival rate is very high the system or one or more stages is expending its resources on the arrival and cannot attend to handling the actual work. One particular stage may be overburdened with incoming messages or work while the next stage is idle waiting to receive the work load. The utilization of one stage causes a ripple or cascading effect on all of the succeeding stages. When the system is in this state i.e. when the incoming rate of work is too much for it to handle the system is thrashing. As too much work for the system is received a number of problems ensue. Errors may result the type of work the system is handling such as messages or data may be lost or the system may become unresponsive or slow.

Throttling techniques are employed in message processing systems to prevent the system from thrashing. A throttled system controls the work flow of the system so that the system is only handling the amount it can properly process and is therefore neither under utilized nor over utilized. A message processing system that utilizes throttling techniques conducts an examination of the system throughout operation to determine when the system is not operating in an optimal state. Such a situation is known as a stress situation. When a stress situation is discovered throttling actions are taken to mitigate the problem.

Throttling techniques are presently utilized in many types of message processing systems and similar systems in which work is processed and transferred between system components and wherein resources are consumed in performing such operations. However various problems exist with such presently used techniques. One such drawback is that the detection of stress situations is dependent upon the user of the system. The user is responsible for determining the threshold values for the various resources but often times the user does not have the data necessary to do so and the data is very dynamic in nature. This is particularly so when the message processing system comprises a series of stages where effective throttling would require information about the capacity and resource utilization of the individual stages. Furthermore when a stress situation is detected and necessary measures are employed to alleviate the problem the system stays in this mode and does not re evaluate to determine if at a later time the system can handle an increased workload.

Accordingly in light of the above considerations and limitations improved systems and methods for controlling the flow of work in a distributed message processing system comprising a plurality of stages are highly desired. The present invention satisfies this need.

The present invention provides a throttling and flow control method for use in a distributed system comprising a series of successive stages wherein each stage has a capacity to perform work and consumes resources while performing such work. According to the present invention throttling techniques are performed and applied at each individual stage of the system. In this manner each stage is contributing to the operability of the system by optimizing the flow between successive stages.

In one embodiment each stage of the distributed system monitors its capacity to perform work and also receives information indicating the capacity of a succeeding stage to perform work. Based on the information obtained from the succeeding stage and the monitoring of the capacity of the present stage the present stage may perform a throttling action. In this manner each stage may perform throttling actions independently to optimize the overall throughput of the system.

In one embodiment the capacity of a present stage to perform work is monitored by comparing a state of a resource of the present stage to a pre defined threshold value. When the state of the resource exceeds a pre defined threshold this serves as an indication to the present stage that the resources are being consumed beyond a desirable limit and that accordingly a throttling action may be necessary in order to control the resources of the stage. In another embodiment of the present invention the capacity of the present stage is monitored by calculating both the rate of new work being received by the stage and the rate that the stage is processing or completing the work. The comparison of the rates provides an indicator as to whether or not the stage is backlogged with work and is receiving more work than it can process.

The responsibility of the distributed system as illustrated in is to perform one or more specified tasks. Such tasks include by way of example and without limitation processing messages in a server and publishing messages through the use of a subscription store and message queue. In performing such tasks each stage receives work from a previous stage and transmits work to a subsequent stage. Each stage may be thought of as a subsystem of the system as each stage performs a specific task. The ability of each subsystem to perform its work is a function of the capacity of each subsystem which is a function of the resources of each subsystem. Therefore the utilization of the resources results in the quality of the work performance of the overall distributed system .

Accordingly for the system to operate at its optimal level the work load generated by one stage and transmitted to a subsequent stage must not be too great for the capacity of the subsequent stage to handle. In accordance with an embodiment of the present invention throttling techniques are employed at each stage of the system to control the work load at that particular stage thereby controlling the overall work load and throughput of the system .

Each stage of the system monitors the capacity of the present stage and obtains information about the capacity of the succeeding stage from the succeeding stage. The stage then uses the monitored information about the present stage and the information obtained from the succeeding stage to perform a throttling action to control the load on the system . Referring to for example Stage receives information from Stage about the capacity of Stage to perform work. Using this information in conjunction with the monitoring of its own capacity Stage performs a throttling action. For example the monitored information about Stage and the capacity information from Stage may indicate to the present stage Stage that Stage and Stage are overburdened with work. Accordingly as an example of a throttling action Stage may delay the receipt of work into Stage thereby reducing the work flow at both Stage and Stage . Similarly and in accordance with the present invention Stage monitors the capacity of Stage and gathers information about the capacity of Stage . Stage may then perform an appropriate throttling action at Stage based on this information. Stage and Stage perform similar operations and so on.

In accordance with one embodiment a present stage may also communicate information indicating the capacity of the present stage and any information it has obtained from a succeeding stage to a preceding stage. The preceding stage may then perform a throttling action based at least in part on the information transmitted to it from the present stage.

The information that the present stage receives from the succeeding stage step of the method of about the capacity of the succeeding stage to perform work may also be determined and processed in the manner illustrated in . In one embodiment the present stage may receive information from the succeeding stage concerning the state of a resource at the succeeding stage. The present stage may then compare that received information to a threshold value maintained by the present stage i.e. step and take an appropriate throttling action i.e. step if the threshold value is exceeded. Thus throttling actions may be taken based on either the monitored capacity of the present stage to perform work information received from the succeeding stage about its capacity to perform work or a combination of both.

The present stage may take a variety of different actions in order to throttle the work load of the system. One example of a throttling action is delaying the receipt of work into the present stage. Another example of a throttling action is delaying the generation and or transmission of work from the present stage to the succeeding stage. Yet another example of a throttling action is controlling various resource allocations that are required for the receipt and processing of work.

The monitored resource at a given stage may comprise any resource that the stage consumes in order to perform its function. Examples of the kinds of resources that may be consumed include without limitation a system wide usage of a physical memory a process memory a thread count a number of open database connections and a capacity in terms of concurrent messages. While the method of illustrates the monitoring of a single resource it is understood that the present invention is by no means limited thereto. Rather the present stage may monitor or receive information from a succeeding stage about multiple resources and may base a decision to perform a throttling action on the stage of any one of those resources or on the combined state of multiple resources.

In the embodiment illustrated in the throttling action may comprise delaying the receipt of work at the present stage by a time Ds. According to an embodiment of the invention Ds may be calculated by the following formula 

In one embodiment the rates compared in in particular the rate of receipt of new work and rate of completion of work are computed according to a sliding window protocol which is illustrated in . The sliding window dynamically tracks data and uses that data to predict the current rate of receipt and rate of completion of the present stage. The overdrive factor Of is a variable greater than or equal to 1.0 which is used to provide the present stage with more work than the output rate indicates from the sliding window computation. This overdrive effect is employed because the output rate may not precisely represent the actual capacity of the system.

Referring to one sliding window sample is shown wherein Ni items of work are transmitted to the stage during Di time. In the same sample No items of work are processed by the stage during a time Do. At a later time sample Ns items of work are about to be transmitted to the stage. Ds is computed based on the sample rates computed during the prior sliding window sample as shown in . The computation for Ds takes into consideration that the input rate after the Ns items of work are transmitted is required to be less than the output rate so that the stage is handling a controlled amount of work.

As with the embodiment illustrated in the information that the present stage receives from the succeeding stage step of the method of about the capacity of the succeeding stage to perform work may also be determined and processed in the manner illustrated in . For example the present stage may receive information from the succeeding stage about the rates at which it is receiving and completing work. The present stage may then use that information in the manner illustrated in to perform a throttling action such as delaying the transmission of new work to the succeeding stage. Thus throttling actions may be taken based on either the monitored rates of the present stage information about the rates of the succeeding stage or a combination of both.

Each component and of the above described message publication system represents a stage of a distributed system and in accordance with the present invention the throttling techniques discussed above may be performed at each of these stages to control the overall work load on the message publication system . It is understood that the message publication system is just one example of a system that may embody the throttling and flow control techniques of the present invention described above.

As can be appreciated portions of the present invention may be implemented as a whole or in part in one or more computing systems or devices. illustrates the functional components of one example of a computing system in which aspects of the present invention may be embodied or practiced. As used herein the terms computing system computer system and computer refer to any machine system or device that comprises a processor capable of executing or otherwise processing program code and or data. Examples of computing systems include without any intended limitation personal computers PCs minicomputers mainframe computers thin clients network PCs servers workstations laptop computers hand held computers programmable consumer electronics multimedia consoles game consoles satellite receivers set top boxes automated teller machines arcade games mobile telephones personal digital assistants PDAs and any other processor based system or machine. The terms program code and code refer to any set of instructions that are executed or otherwise processed by a processor. Program code and or data can be implemented in the form of routines programs objects modules data structures and the like that perform particular functions.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as ROM and RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures components program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

All or portions of the methods of the present invention described above may be embodied in hardware software or a combination of both. When embodied in software the methods of the present invention or certain aspects or portions thereof may be embodied in the form of program code that when executed by a computing system cause the computing system to perform the methods of the present invention. This program code may be stored on any computer readable medium as that term is defined above.

It is noted that the foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to various embodiments it is understood that the words which have been used herein are words of description and illustration rather than words of limitation. Further although the invention has been described herein with reference to particular means materials and embodiments the invention is not intended to be limited to the particulars disclosed herein rather the invention extends to all functionally equivalent structures methods and uses such as are within the scope of the appended claims.

