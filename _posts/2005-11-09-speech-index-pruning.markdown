---

title: Speech index pruning
abstract: A speech segment is indexed by identifying at least two alternative word sequences for the speech segment. For each word in the alternative sequences, information is placed in an entry for the word in the index. Speech units are eliminated from entries in the index based on a comparison of a probability that the word appears in the speech segment and a threshold value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07831428&OS=07831428&RS=07831428
owner: Microsoft Corporation
number: 07831428
owner_city: Redmond
owner_country: US
publication_date: 20051109
---
The present invention relates to indexing spoken documents and more particularly to pruning indexes of the spoken documents.

Searching through vast collections of documents for a particular document of interest has become commonplace in computing environments. In particular searches performed on web pages found on the Internet are performed by a large number of search services.

To perform these text based searches search services typically construct an inverted index that has a separate entry for each word found in the documents covered by the search service. Each entry lists all of the documents and the positions within the documents where the word can be found. Many of these search services use the position information to determine if a document contains words in a particular order and or within a particular distance of each other. This order and distance information can then be used to rank the documents based on an input query with documents that have the words of the query in the same order as the query being ranked higher than other documents. Without the position information such document ranking based on word order is not possible.

Attempts have been made to construct indices for spoken documents where a spoken document is a speech signal or multiple speech signals that have been grouped together as a single entity. For example speech signals associated with a particular meeting or a lecture could be grouped as a single spoken document. Also a multimedia document such as a movie or an animation can be considered a spoken document.

In order to index a spoken document the speech signals must first be converted into text. This is done by decoding the speech signal using a speech recognition system. Such speech recognition systems use acoustic models and language models to score possible word sequences that could be represented by the speech signal. In many systems a lattice of possible word strings is constructed based on the speech signal and the path through the lattice that has the highest score is identified as the single word string represented by the speech signal.

In speech indexing systems of the past this single best estimate of the text from the speech signal is used to create the index for the spoken document. Using a single string output from the speech recognizer provides the ability to mark the position of particular words relative to each other in the spoken document. Thus the same ranking systems that have been developed for textual indexing can be applied to these spoken document indexing systems.

Unfortunately speech recognition is not perfect. As a result the recognized text contains errors. This produces an index with errors making the systems unreliable during search.

The discussion above is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

A speech segment is indexed by identifying at least two alternative word sequences for the speech segment. For each word in the alternative sequences information is placed in an entry for the word in the index. Speech units are eliminated from entries in the index based on a comparison of a probability that the word appears in the speech segment and a threshold value.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with various embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers telephony systems distributed computing environments that include any of the above systems or devices and the like.

Embodiments may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Some embodiments are designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules are located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing some embodiments includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer is operated in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one preferred embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device .

In general a spoken document is a collection of speech signals that are related to each other in some manner. For example speech signals that occur at a meeting speech signals associated with a lecture or speech signals associated with a multimedia document such as a movie or a multimedia presentation. To form spoken documents some embodiments of the present invention separate the speech content from other content in a multimedia document. For example the speech content may be removed from a movie to separate it from the video and musical content of the movie. When the spoken document represents only the speech content of a multimedia document a mapping may be stored that links the spoken document to the multimedia document. This allows a path to the multimedia document to be returned in the search results.

Spoken documents can be very long. To assist in the speech recognition process each spoken document is divided into spoken segments by a segment identifier at step . A spoken document then consists of an ordered list of segments. Under one embodiment the segments are formed by dividing each spoken document at periods of silence. Techniques for identifying periods of silence in speech are well known in the art.

At step a document segment tagger maps each segment and each spoken document to an integer value and stores the mapping in a collection descriptor file which lists all documents and segments. In some embodiments collection descriptor file maps the integer value to a path name where the spoken document can be found. For spoken documents that were generated from multimedia files collection descriptor file can map the integer value to a path name where the multimedia document is stored.

In some embodiments a single integer value is used to identify both the segment and the document. In such cases the range of such values that are associated with each document must also be stored. In other embodiments each document has a unique integer value and each segment within a document has a unique integer value as its identifier within the document. The integer values provide a compact reference to the documents segments that can be efficiently stored in the index.

Each of the spoken segments is provided to a speech recognizer which uses an acoustic model and a language model to decode the spoken segments into possible text sequences at step of .

Typically speech recognizer performs the recognition based on a sequence of feature vectors that represent the speech in the spoken segments.

The feature vectors used by the speech recognizer are formed by first converting an analog speech signal into digital values using an analog to digital converter. In several embodiments the analog to digital converter samples the analog signal at 16 kHz and 16 bits per sample thereby creating 32 kilobytes of speech data per second. These digital values are provided to a frame constructor which in one embodiment groups the values into 25 millisecond frames that start 10 milliseconds apart. The frames of data created by the frame constructor are provided to a feature extractor which extracts a feature from each frame.

Examples of feature extraction modules include modules for performing Linear Predictive Coding LPC LPC derived cepstrum Perceptive Linear Prediction PLP Auditory model feature extraction and Mel Frequency Cepstrum Coefficients MFCC feature extraction. Note that the invention is not limited to these feature extraction modules and that other modules may be used within the context of the present invention.

The steps needed to form the feature vectors can be performed entirely by speech recognizer or some or all of the steps may be performed when generating spoken documents . Thus spoken documents may be stored as analog signals digital signals frames of digital signals or feature vectors.

During recognition each feature vector is applied to acoustic model which provides a probability of each of a set of phonetic units given an input feature vector. The acoustic probability of a word is determined by combining the probabilities of the phonetic units that form the word. In addition each word receives a language model score that indicates the probability of a word or a sequence of words appearing in a particular language. Using the scores provided by acoustic model and language model speech recognizer is able to form a recognition lattice that contains recognition results for a speech segment. Note that in most embodiments speech recognizer prunes unlikely word sequences from lattice as it constructs the lattice leaving only the top N recognition results in the lattice. In other embodiments speech recognizer produces an n best list of recognition results that provides a list of the n most likely word sequences given the speech segment.

Note that although the system above segments the documents before providing the segments to speech recognizer in other embodiments spoken documents are not segmented before being provided to speech recognizer . Instead speech recognizer identifies periods of silence in the speech and at such points forces the lattice to converge to a single node before beginning a new lattice for the next portion of the spoken document. In this manner speech recognizer generates a separate recognition lattice for different segments of the spoken document. In such embodiments speech recognizer will include a document and segment identifier for each recognition lattice that it produces and will update the mapping in collection descriptor file .

Every transition between states in lattice is associated with a word a start symbol or an end symbol. In addition for language models that are based on sequences of multiple words n gram models where n is greater than 1 every transition into a state must contain the same word. For example transitions and into state both contain the word very . Because of this the word on a transition can equally be associated with the ending state of the transition.

Each transition also has an associated probability for the word located on the transition given the input speech signal. This probability is a function of an acoustic model score a language model score and various other parameters used to combine and modify those scores into a single probability. In particular under one embodiment the probability of a transition tis stored as a log probability that is evaluated as 

Where log P t is the log probability for transition t log P t is an acoustic model log likelihood assigned to the word of transition t based on the correspondence between the feature vectors of a portion of the speech signal and the acoustic models of the phonetic units found in the word log P word t is the language model log probability assigned to the word on transition t LMw is a constant weight larger than 0 which compensates for difference in the range of possible values for the acoustic model and the language model log Pis an insertion penalty which compensates for the speech recognizer s tendency to select short words over longer words and FLATw is a flattening weight used to control how skewed the posterior distribution becomes on the lattice paths. In particular FLATw helps to keep the speech recognizer from assigning most of the probability to one or two paths in the lattice.

Speech recognition lattice of shows that different path lengths can end at the same state. For example there are two paths that reach state . One path includes the start symbol and the words They are in and the other path includes the start symbol and the words There in . Thus state which represents the word in can be reached when in is in the second word position in the recognized text and when in is in the third word position in the recognized text where word position is determined from the start of a word sequence. In addition a single word may appear at different states but at the same word position in those states. For example the word very enters state on transition in the fifth word position of the path They are in two very . The word very is also in the fifth word position in the transition leading into state along the path There in two very very where the last very is in the fifth word position.

In accordance with one embodiment a position specific posterior lattice PSPL is first constructed from this word lattice in order to form an index. In the position specific posterior lattice each word position in the lattice forms a bin or entry. The word position can be integer based in which the word position is based on count of the word transitions identified by the acoustic model from a reference e.g. the beginning of the speech segment . The word position can also be time based in which the word position is based on an elapsed time relative to a reference e.g. the beginning of the speech segment . All words that occupy a particular word position are placed in the bin for that word position along with the probability of the word occupying that word position in the lattice. In order to form the position specific posterior lattice each state is separated into a set of sub states with one sub state for each word position that reaches the state.

A length based or word position score is determined for each sub state. This is shown at step of and is performed by position specific posterior lattice builder PSPL Builder of .

Under one embodiment the length based scores at each state are calculated using a modification of the standard forward backward algorithm used to score paths through a lattice. In particular the probability of a word at a state n and a word position l can be calculated as 

Where represents a null transition that does not contain a word. Such null transitions are common in recognition lattices that utilize back off language models. In EQ. 2 is calculated recursively as 

The normalizing value norm LAT of EQ. 2 is the value of calculated at the end state of the speech recognition lattice. Note that the normalization is required because of the pruning performed during speech recognition.

After a length based score has been determined for each observed word position at each state the length based scores are summed at step . In particular each score that is for the same word position and for the same word is summed together to form a posterior probability that the word appears in the speech segment at that word position. This summation is expressed as LAT LAT word EQ. 7 where the summation is performed across all states n in the lattice where the length based score is greater than zero.

The words and their respective probabilities formed through the sum of EQ. 7 are then stored based on their word position l to form position specific posterior lattice as indicated at step .

An example of a position specific posterior lattice is shown in where the possible positions are shown in row and the words that occur at each position are shown below their respective position. For example the words They and There respectively having probabilities of 0.7 and 0.3 as indicated in parenthesis occur in word position l as indicated by column . The word very has probabilities of 0.7 1.0 and 0.7 of occurring in word positions and respectively as shown in columns and . Note that the position specific posterior lattice provides a more compact representation of the recognition results than the combination of lattice and the sub states of . The reason for this is that words that appear at the same word position but at different states in recognition lattice are combined into a single entry in the position specific posterior lattice of . As a result the position specific posterior lattice is an index of candidate words or sub words for the speech segment that is organized by word position where the entries corresponding to each word position includes the candidate words for that position and a probability that the candidate word appears at the word position.

The exemplary probabilities of have been normalized such that the probabilities of each entry add up to 1.0. However other probability scoring techniques e.g. non normalized or normalized to a different number can also be used.

In other embodiments the position specific posterior lattice is constructed from an n best list. The same technique described above can be used to construct the position specific posterior lattice by first forming a recognition lattice from the n best list. This can be accomplished by tying the first word of each entry in the n best list to a common start node and the last word of each entry in the n best list to a common end node.

In accordance with one embodiment the position specific posterior lattice is pruned of speech units that have a low probability of appearing in the corresponding speech segment relative to a threshold value. In general the words in the entries of the position specific posterior lattice are eliminated by a pruner of the position specific posterior lattice builder based on a comparison of their probabilities to a threshold value as indicated at step . The threshold value can be adjusted to provide the desired level of pruning of the position specific posterior lattice. A low threshold value setting will result in a smaller number of words that are eliminated during the pruning process relative to when a high threshold value is selected. Additionally a low threshold value allows for less precise candidate words to remain in the position specific posterior lattice relative to when a high threshold value is chosen.

In one embodiment a direct comparison of the probabilities of the words in the position specific posterior lattice to the threshold value or probability is made. The words having probabilities that do not exceed the threshold probability or fail to meet another predefined relationship to the threshold such as match or exceed the threshold value are eliminated from the corresponding bin or entry of the position specific posterior lattice. For example when the threshold value is set to 0.2 the words or speech units in in word position or entry two in word position or entry houses in word position or entry and end symbol in word position or entry would be eliminated when the predefined relationship required that the probability exceed the threshold value. This type of pruning can be carried out either directly on the PSPL or on the index itself as discussed below.

In another embodiment the threshold value is compared to a relative probability that is based on the probabilities of at least two of the speech units words or sub words of an entry. In one embodiment the threshold value is compared to a relative probability of a candidate speech unit of the entry that is being considered for elimination to the highest probability of the entry. When the relative probability fails to meet a predefined relationship to the threshold value e.g. is less than matches or exceeds the candidate speech unit is eliminated from the entry. This type of pruning can only be carried out on the PSPL in a computationally efficient manner.

Equation 8 illustrates one embodiment where P represents the highest probability of the entry P represents the probability of the candidate speech unit or word wof the entry and represents the predefined threshold value. When the probabilities have been normalized to 1.0 as in the exemplary entries of the log of the ratio P P can be used and can be a values from to 0 as indicated in Equation 8. The closer the setting of the threshold value to 0 the closer the probability of the candidate speech unit must be to the highest probability in order to avoid elimination. is eliminated when log 2 1 EQ. 8

For example if the speech unit into of word position or entry is selected as the candidate speech unit having a probability of 0.3 the relative probability is equal to the log of 0.3 divided by 0.6 which is the highest probability of entry corresponding to the word in which equals 0.3. Thus in accordance with the exemplary embodiment provided above the word into in entry will avoid elimination from the position specific posterior lattice only if the predefined threshold value is less than 0.3.

Other suitable relative probabilities can also be used. For example the relative probability can be a ratio of the probability of the candidate speech unit to the highest probability. In this case the candidate speech unit is eliminated when the ratio is greater than or equal to the threshold value. Similarly the relative probability can be a ratio of the highest probability to the probability of the candidate speech unit. The candidate speech unit is eliminated when the relative probability is less than or equal to the threshold value.

In one embodiment the probabilities of the words or speech units of entries of the position specific posterior lattice are renormalized after one or more of the speech units have been pruned from them. This operation simply requires a transformation of the remaining probabilities into probabilities that add up to 1.0. Thus for example if the word two is eliminated from entry following a pruning operation the respective probabilities 0.6 and 0.3 of the remaining entries in and into are renormalized by dividing them by their sum or 0.9. After renormalization entry will contain in having a probability of 0.67 and into having a probability of 0.33. Other suitable renormalization processes can be performed on the remaining entries of the position specific posterior lattice as dictated by the characteristics of the lattice.

While the position specific posterior lattice constitutes an index that organizes the speech unit data for the speech segment s by position while also providing probability information about the speech units such an index is not very useful as the index of a search service. Such systems require indexes that can be searched quickly to find results that relate to an input query.

One suitable index for such search services is an inverted index. The words or sub words in an index each constitute the entries in the index while the information provided in each entry is the location of the word or sub word in the documents represented by the index. As a result the inverted index can be considered an inversion of the position specific posterior lattice.

Embodiments of the present invention relate to building such an inverted index using the pruned or whole position specific posterior lattice described above and providing a search service using the inverted index. At step an indexer builds an inverted index based on the position specific posterior lattice. Under one embodiment this inverted index is formed by providing an entry for every word in the recognition grammar as mentioned above. In each entry information is provided for each position in the position specific posterior lattices where the entry s word appears. This information includes the document and segment identifier associated with the position specific posterior lattice the position bin in which the word is placed in the lattice and the probability associated with that word in that position.

In some embodiments each entry is stored as a separate file in order to allow easy incremental updates of the index.

The inverted index will generally be used with a search service to allow a user to search the speech index for a spoken document that is related to a search query. One embodiment is directed to providing the user with control over the precision of the search by allowing the user to prune word location entries from the inverted index that have low probabilities of appearing at the given location relative to a threshold value. This pruning happens at query run time the same query can be run at different pruning thresholds and obtain different Precision Recall trade offs.

In general the speech units words or sub words represented by the position information in the entries in the inverted index are eliminated based on a comparison of the probabilities to a threshold value . The threshold value can be adjusted to provide the desired level of pruning of the position specific posterior lattice. A low threshold value setting will generally result in a smaller number of word location entries that are eliminated during the pruning process relative to when a high threshold value is chosen. Additionally a low threshold value allows for the location of less precise candidate speech units to remain in the inverted index relative to when a high threshold value is selected.

In one embodiment a direct comparison of the probabilities of the words in the position specific posterior lattice to the threshold value or probability is made. The words having probabilities that do not exceed the threshold probability or fail to meet another predefined relationship to the threshold such as match or exceed the threshold value are eliminated from the corresponding bin or entry of the position specific posterior lattice. For example when the threshold value is set to 0.2 the words or speech units that have positions whose associated probabilities are less than 0.2 would be eliminated from the index when the predefined relationship requires that the probability exceed the threshold value.

Once the index has been constructed a search may be performed to identify a spoken document based on a search query. In particular at step of the flowchart of a search query is received by a search unit . In one embodiment the threshold value is also received and the inverted index pruning described above is performed to form the inverted index in a pruned form.

At step search unit accesses and searches the inverted index and at step retrieves the document identifier segment identifier position and probability of each sub entry for each word of the query. Any words that are outside of the speech recognizer s vocabulary are mapped to an unknown token UNK which cannot be matched in any document. The unknown token acts as a placeholder but does not provide a value in the calculation of a score for the query.

In one embodiment the positions of the retrieved entries are eliminated based on a comparison of their probabilities to the threshold value as indicated at step . In one embodiment the probabilities that fail to meet a predetermined relationship e.g. meet or exceed to the threshold value are eliminated from consideration as search results.

At step a score is determined for each document that is returned from the search of inverted index . The documents that are returned from the search can be limited such that every document that is returned includes all of the words of the query. Alternatively any document that contains at least one word of the query can be returned at this stage. Using the probabilities returned from inverted index the scores for each document are calculated by first calculating a collection of composite n gram scores for each document. Each composite n gram score is formed by summing individual n gram scores over all possible formations of an n gram in the query using 

If more than one composite n gram score is calculated for each document the separate composite n gram scores are combined in a weighted sum using 

In many embodiments the weights of the n grams increase linearly with the n gram order. However other techniques may be used to set the weights of the n grams.

The scores calculated for each document are used to rank the documents that are to be returned. The documents that are returned may be pruned by removing documents that do not provide a non zero score for the highest order composite n gram. This ensures that all of the words of the query appear in order at least once in the document. This requirement enforces a quoted functionality which requires all of the words present and in the same order as in the query in order for a document to be identified from the query. Another possibility is to allow quoting of phrases within the query such as JAPAN NUCLEAR WEAPONS entering such a query will return only documents that contain JAPAN and NUCLEAR and WEAPONS and the words NUCLEAR WEAPONS occur exactly in this order next to each other.

At step the documents identified and scored by search unit are returned as ranked documents . In many embodiments search unit accesses collection descriptor file to convert the document identifier into the path name of the location of the document. This path name is then returned.

In a further embodiment of the invention morphological analysis is performed on the query before applying the query to the index. This generates a list of different forms of the query terms including other endings for the word. For example the term weapons in a query would produce the alternative weapon in which the final s has been dropped. Different combinations of the morphologically altered terms can then be used to perform different searches of the inverted index. Each search involves forming composite n gram scores as above. The composite n gram scores for the alternative search strings are weighted much less than the composite n gram scores for the original search string. As a result documents that contain an alternative search string but not the original search string will be ranked below documents that contain the original search string.

Although the indexing technique has been discussed above with reference to complete words the same technique can be used to index any speech unit including sub word units such as phones or tri phones. In particular instead of forming a lattice of words the speech recognizer forms lattices of sub word units. These sub word units are scored in the same manner as the words above using a language model that is based on sequences of sub word units instead of words. The position specific posterior lattice will then contain individual sub word units with their associated probabilities.

Upon receiving a search query the query is decomposed into sub word units. Documents are then ranked using the scoring techniques described above with sub word units instead of words. In some embodiments each word in the query can be treated as being contained in quotations to reduce the number of documents that are returned.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. For example the PSPL is a form of an index. Thus terms used herein referring to an index can also describe the PSPL. Additionally although the embodiments have been described with reference to the PSPL indexing technique any other soft indexes of spoken documents that use hit probabilities can make use of the pruning embodiments described above. Furthermore while the speech index includes an index of words contained in spoken documents the index can also include words extracted from written documents.

