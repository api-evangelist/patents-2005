---

title: Digital license migration from first platform to second platform
abstract: A digital license is migrated from a source platform to a target platform. At the source platform, a migration image is produced to include the license and corresponding data therein, and the license is deleted from such source platform. At the target platform, permission is requested from a centralized migration service to migrate the license in the migration image to the target platform. The migration service determines whether to permit migration of the license based on predetermined migration policy. Upon receiving the requested permission as a response from the migration service, the migration image is applied to the target platform by un-tying the license from the source platform and re-tying the license to the target platform.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07805375&OS=07805375&RS=07805375
owner: Microsoft Corporation
number: 07805375
owner_city: Redmond
owner_country: US
publication_date: 20051221
---
This application claims the benefit of U.S. Provisional Application No. 60 710 185 filed Aug. 22 2005 and entitled DRM LICENSE MIGRATION PROCESS FOR PROTECTED CONTENT hereby incorporated by reference in its entirety.

The present invention relates to a method and service for migrating a digital license from a first computing platform to a second computing platform. More particularly the invention relates to such a method and service for un tying the license from the first platform and re tying the license to the second platform and for ensuring that the license cannot be employed at the first platform after being migrated to the second platform.

Rights management and enforcement is highly desirable in connection with digital content such as a digital presentation a digital audio and or video work a digital application or the like where such digital content is to be distributed to one or more users. Typical modes of distribution include tangible devices such as a magnetic floppy disk a magnetic tape an optical compact disk CD etc. and intangible media such as an electronic bulletin board an electronic network the Internet etc. Upon being received by the user on a computing device thereof such user can render the content with the aid of an appropriate operating system on the computing device.

Typically an author and or publisher of the content wishes to distribute such content to each of many users or recipients in exchange for a license fee or some other consideration. Such author publisher or other similar entity hereinafter publisher given the choice would likely wish to restrict what each user can do with such published content. For example the publisher would like to restrict the user from copying and re distributing such content to a second user at least in a manner that denies the publisher a license fee from such second user.

However after publication has occurred such publisher has very little if any real control over the content. This is especially problematic in view of the fact that practically every personal computer includes the software and hardware necessary to make an exact digital copy of such content and to download such exact digital copy to a write able magnetic or optical disk or to send such exact digital copy over a network such as the Internet to any destination.

Of course as part of a transaction wherein the content is distributed the publisher may require the user recipient of the content to promise not to re distribute such content in an unwelcome manner. However such a promise is easily made and easily broken. A publisher may attempt to prevent such re distribution through any of several known security devices usually involving encryption and decryption. However and without more it can be a relatively simple manner for a mildly determined user to decrypt the encrypted content save such content in an un encrypted form and then re distribute same.

Rights Management RM and enforcement architectures and methods have previously been provided to allow the controlled operation of arbitrary forms of digital content where such control is flexible and definable by the publisher of such content. Typically a digital license is provided to operate the content where the content cannot be actuated in a meaningful manner without such license. For example it may be the case that at least a portion of the content is encrypted and the license includes a decryption key for decrypting such encrypted portion. In addition it may be the case that the license is tied to a user a computing device an operating system on the computing device or some combination thereof hereinafter platform and such computing device includes a security feature that ensures that the terms of the license are honored. Notably by being tied to a particular platform the license cannot be employed to render the corresponding content on any other platform.

Such a digital license typically includes a set of rights and conditions that govern use of the corresponding content on the computing device. Thus each license sets forth policies that grant certain rights for specified functionality. With digital licenses then a publisher can provide a user with different rights with regard to a piece of content by providing different licenses corresponding to such different rights. For example the publisher may wish to provide a full feature license at a higher price and a limited feature license at a lower price.

In the case where a license is tied to a particular platform such tying can be achieved by any of several features. As one example it may be the case that each platform has a corresponding ID that the license includes a platform ID therein and that the license is not employed to render the corresponding content on the particular platform unless it is confirmed that the ID of the platform matches the platform ID in the license. As another example it may be the case that information that must be obtained from the license such as for example a content key for decrypting the corresponding encrypted content is itself encrypted according to a key that is only available from the particular platform. In either example and again by being tied to a particular platform the license cannot be employed to render the corresponding content on any other platform.

As may be appreciated although one or more licenses may be tied to a particular platform there may be valid and or justifiable reasons why a user of such licenses should be able to transfer or migrate same to another platform. As one example it may be that the platform includes a first computer of a user and the user wishes to migrate the rendering rights incumbent in the licenses from the first computer to a second computer. As another example it may be that the platform includes a first operating system on a computer of a user and the user wishes to migrate the rendering rights incumbent in the licenses from the first operating system to a second operating system on the computer. In either instance the publisher that issued each license is presumably not adversely affected by the migrate of such license from one platform to another and the user who has expended some amount of cost in acquiring each license does not suffer the virtual loss of such license merely because of a change of platform.

However it is to be appreciated that allowing a license to be migrated from one platform to another must be done in a manner to ensure that a user cannot abuse the ability to migrate such license from a first platform to a second platform. In particular such user must not be allowed to copy the license to the second platform and perhaps other platforms. That is the user upon migrating the license from the first platform to the second platform should after such migration have the license tied to the second platform only and not to the first platform or to any other platform.

Accordingly a need exists for a method and mechanism by a digital license is migrated from being operable to render a corresponding piece of content on a first computing platform to being operable to render the piece of content on a second computing platform. More particularly a need exists for a method and mechanism by which the license is un tied from the first platform and re tied to the second platform and for ensuring that the license cannot be employed at the first platform or any other platform after being migrated to the second platform.

The aforementioned needs are satisfied at least in part by the present invention in which a method is provided with regard to a digital license tied to a source platform where the digital license allows corresponding digital content to be rendered by the source platform. The content is encrypted and decryptable based on a decryption key KD and the license is tied to the source platform by including KD therein encrypted and decryptable according to a cryptographic key of the source platform whereby only the source platform normally can reveal KD . The method migrates the license from the source platform to a target platform.

At the source platform a migration image is produced to include the license and corresponding data therein and the license and the cryptographic key of the source platform are deleted from such source platform. Thus replacing the deleted license at the source platform would not allow rendering of the corresponding content at the source platform inasmuch as the cryptographic key of the source platform would not be available to access KD from such replaced license.

At the target platform the produced migration image is read and permission is requested from a centralized migration service remote from the target platform to migrate the license in the migration image to the target platform. The migration service determines whether to permit migration of the license based on predetermined migration policy. Upon receiving the requested permission as a response from the migration service the migration image is applied to the target platform. In particular the response includes the cryptographic key of the source platform in a form accessible by the target platform and the target platform un ties the license from the source platform with the cryptographic key of the source platform to reveal KD re ties the un tied license to the target platform by including KD therein encrypted and decryptable according to a cryptographic key of the target platform stores the re tied license at the target platform and stores the corresponding data at the target platform.

Although not required the invention can be implemented via an application programming interface API for use by a developer and or included within the network browsing software which will be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . A graphics interface such as Northbridge may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU or host processing unit and assumes responsibility for accelerated graphics port AGP communications. One or more graphics processing units GPUs may communicate with graphics interface . In this regard GPUs generally include on chip memory storage such as register storage and GPUs communicate with a video memory . GPUs however are but one example of a coprocessor and thus a variety of co processing devices may be included in computer . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which may in turn communicate with video memory . In addition to monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

One of ordinary skill in the art can appreciate that a computer or other client device can be deployed as part of a computer network. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes. The present invention may apply to an environment with server computers and client computers deployed in a network environment having remote or local storage. The present invention may also apply to a standalone computing device having programming language functionality interpretation and execution capabilities.

Distributed computing facilitates sharing of computer resources and services by direct exchange between computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for files. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices may have applications objects or resources that may interact to implicate authentication techniques of the present invention for trusted graphics pipeline s .

It can also be appreciated that an object such as may be hosted on another computing device or . Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems may be connected together by wireline or wireless systems by local networks or widely distributed networks. Currently many of the networks are coupled to the Internet which provides the infrastructure for widely distributed computing and encompasses many different networks.

In home networking environments there are at least four disparate network transport media that may each support a unique protocol such as Power line data both wireless and wired voice e.g. telephone and entertainment media. Most home control devices such as light switches and appliances may use power line for connectivity. Data Services may enter the home as broadband e.g. either DSL or Cable modem and are accessible within the home using either wireless e.g. HomeRF or 802.11b or wired e.g. Home PNA Cat 5 even power line connectivity. Voice traffic may enter the home either as wired e.g. Cat 3 or wireless e.g. cell phones and may be distributed within the home using Cat 3 wiring. Entertainment media may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and DVI are also emerging as digital interconnects for clusters of media devices. All of these network environments and others that may emerge as protocol standards may be interconnected to form an intranet that may be connected to the outside world by way of the Internet. In short a variety of disparate sources exist for the storage and transmission of data and consequently moving forward computing devices will require ways of protecting content at all portions of the data processing pipeline.

The Internet commonly refers to the collection of networks and gateways that utilize the TCP IP suite of protocols which are well known in the art of computer networking. TCP IP is an acronym for Transport Control Protocol Interface Program. The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the networks. Because of such wide spread information sharing remote networks such as the Internet have thus far generally evolved into an open system for which developers can design software applications for performing specialized operations or services essentially without restriction.

Thus the network infrastructure enables a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. Thus in computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the example of computers etc. can be thought of as clients and computer etc. can be thought of as the server where server etc. maintains the data that is then replicated in the client computers etc.

A server is typically a remote computer system accessible over a remote network such as the Internet. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server.

Client and server communicate with one another utilizing the functionality provided by a protocol layer. For example Hypertext Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW . Typically a computer network address such as a Universal Resource Locator URL or an Internet Protocol IP address is used to identify the server or client computers to each other. The network address can be referred to as a Universal Resource Locator address. For example communication can be provided over a communications medium. In particular the client and server may be coupled to one another via TCP IP connections for high capacity communication.

Thus illustrates an exemplary networked or distributed environment with a server in communication with client computers via a network bus in which the present invention may be employed. In more detail a number of servers etc. are interconnected via a communications network bus which may be a LAN WAN intranet the Internet etc. with a number of client or remote computing devices etc. such as a portable computer handheld computer thin client networked appliance or other device such as a VCR TV oven light heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device in connection with which it is desirable to process store or render secure content from a trusted source.

In a network environment in which the communications network bus is the Internet for example the servers can be Web servers with which the clients etc. communicate via any of a number of known protocols such as HTTP. Servers may also serve as clients as may be characteristic of a distributed computing environment. Communications may be wired or wireless where appropriate. Client devices may or may not communicate via communications network bus and may have independent communications associated therewith. For example in the case of a TV or VCR there may or may not be a networked aspect to the control thereof. Each client computer and server computer may be equipped with various application program modules or objects and with connections or access to various types of storage elements or objects across which files may be stored or to which portion s of files may be downloaded or migrated. Thus the present invention can be utilized in a computer network environment having client computers etc. that can access and interact with a computer network bus and server computers etc. that may interact with client computers etc. and other devices and databases .

As is known and referring now to rights management RM and enforcement is highly desirable in connection with digital content that is to be distributed to users. Upon being received by the user such user renders the content with the aid of an appropriate computing device or the like.

Typically an author or publisher of the content hereinafter publisher distributing such digital content wishes to restrict what the user can do with such distributed content . For example the publisher may wish to restrict the user from copying and re distributing such content to a second user or may wish to allow the distributed content to be rendered only a limited number of times only for a certain total time only on a certain type of computing device only by a certain type of rendering application on the computing device only by a certain type of user etc.

However after distribution has occurred such publisher has very little if any control over the content . An RM system then allows the controlled rendering of a piece of content where such control is flexible and definable by the publisher of such content . Typically the content is distributed to the user in the form of a package by way of any appropriate distribution channel. The package as distributed typically includes the content or a portion thereof encrypted with a symmetric encryption decryption key KD i.e. KD content as well as other information identifying the content how to acquire a license for such content etc.

The trust based RM system allows the publisher of the content or another to specify rules that must be satisfied before such content is allowed to be rendered on the computing device . Such license rules can for example include the aforementioned temporal requirement and or number of times requirement among other things and may also set forth rights that the user has with regard to the content such as for example the ability to print or copy and or the ability to use a particular feature of the content among other things. At any rate such rules may be embodied within a digital license or use document hereinafter license that the user user s computing device such terms being interchangeable unless circumstances require otherwise must obtain from the publisher or an agent thereof such as a licensor . Such license also includes the decryption key KD for decrypting the encrypted portion of the content typically encrypted according to a key decryptable by the user s computing device . As seen in such encrypting key may be a public key PU        such as a public key of the user of the user s computing device of an operating system of the computer device of a security system of the computer device or the like. Presumably the user s computing device or an element instantiated thereon has access to the corresponding private key PR        by which PU        KD may be decrypted.

The publisher for the content must trust that the user s computing device will abide by the rules specified by such publisher in the license . That is such publisher must trust that the content will not be rendered unless the rules within the license are satisfied and that the user is only permitted to employ the rights set forth in the rules. Preferably then the user s computing device is provided with a trusted component or mechanism that will not render the content except according to the license rules embodied in the license associated with the content and obtained by the user.

The trusted component typically has a license evaluator that determines whether the license is valid reviews the license rules in such valid license and determines based on the reviewed license rules whether the requesting user has the right to render the corresponding content in the manner sought among other things. As should be understood the license evaluator is trusted in the RM system to carry out the wishes of the publisher of the content according to the rules in the license and the user should not be able to easily alter such trusted element for any purpose nefarious or otherwise.

As should be understood the rules in the license can specify whether the user has rights to render the content based on any of several factors including who the user is where the user is located what type of computing device the user is using what operating system is calling the RM system the date the time etc. In addition the rules of the license may limit the license to a pre determined number of renderings or pre determined operating time for example. Thus the trusted component may need to refer to a clock on the computing device .

The rules may be specified in the license according to any appropriate language and syntax. For example the language may simply specify attributes and values that must be satisfied DATE must be later than X e.g. or may require the performance of functions according to a specified script IF DATE greater than X THEN DO . . . e.g. .

Upon the license evaluator determining that the license is valid and that the user satisfies the rules therein the content or a relevant portion thereof can then be rendered. In particular to render the content the trusted component or another entity obtains the private key PR        from an appropriate location and applies same to PU        KD from the license to result in the actual decryption key KD and applies the decryption key KD as obtained from the license to KD content from the package to result in the actual content . Such actual content may then in fact be rendered by an appropriate rendering application not shown on the computing device in the manner set forth in the license .

As set forth above the license with PU        KD in effect authorizes the trusted component or other entity in possession of PR        to access KD and thereby access the content encrypted according to such KD presuming of course that the entity abides by all conditions as set forth in the license . As should be appreciated then inasmuch as PR        is a private key and is thus closely tied to and held in secret by an owner thereof such PR        in effect ties the license with PU        KD therein to such owner. Put another way because the license contains PU        KD only the owner of the corresponding PR        can access the decryption key KD from such license .

Thus it may be that the owner of PR        is the trusted component in which case such trusted component is itself closely tied to the computing device and or to an operating system instantiated on the computing device and or to some other element or collection of elements incumbent in the computing device . For example such tying maybe achieved by including within the trusted component a platform ID that can only be derived from the computing device and or operating system and or the like and by requiring that the trusted component be operated only on a platform from which the platform ID can be derived where the platform represents the collection of elements of the computing device to which the trusted component is tied.

Deriving such a platform ID from the collection of elements representative of the platform of the computing device is known or should be apparent to the relevant public and therefore need not be set forth herein in any detail. For example it may be the case that the platform ID is derived from a hash of a concatenation of a number of digital IDs obtained from a platform defined to include various elements of the computing device including one or more hardware elements thereof the operating system thereof other software elements thereof and the like. Accordingly any appropriate derived platform ID may be employed to represent the platform without departing from the spirit and scope of the present invention.

By extension any appropriate collection of elements of the computing device may be employed to define the platform without departing from the spirit and scope of the present invention. Typically such collection of elements includes more prominent elements of the computing device including the operating system and the main storage device be it a hard drive or otherwise.

To summarize then the license may be tied to the trusted component of the computing device by having therein PU        KD which can only be decrypted by the trusted component as owner of the corresponding PR        . Likewise the trusted component may be tied to the platform incumbent in the computing device by having a platform ID therein derivable only from the platform . Thus and to conclude the license may be tied to such platform by way of such trusted component .

Of course the license may be tied to such platform in any other appropriate manner without departing from the spirit and scope of the present invention. As but one example the license may be directly tied to the platform by having the platform ID therein not shown . Likewise the license may be directly tied to some element of the computing device by having the digital ID of such element of the computing device therein.

As was set forth above a license is typically bound to a particular platform and thus can be employed to render corresponding content only on such particular platform. Accordingly simply moving the license from a first platform to a second platform would not in and of itself allow corresponding content to be rendered on the second platform . Thus the present invention provides a method and mechanism by which a license is not merely moved but instead is migrated from the first platform to the second platform whereby in the course of migration such license is un tied from the first platform and re tied to the second platform . In doing so and as should now be appreciated the migrated license can be employed to render the corresponding content on the second platform .

Significantly a license should be migrated for a legitimate purpose such as for example when a user wishes to move the rendering rights incumbent in the license from a first computing device to a second computing device or from a first operating system on the computing device to a second operating system on the computing device . In either instance the publisher that issued the license is presumably not adversely affected by the migration of such license and the user who has expended some amount of cost in acquiring the license does not suffer the virtual loss of such license merely because of a change of platform .

In the present invention predetermined migration policy is employed to determine whether one or more licenses on a first platform can be migrated to a second platform . While such policy may of course be any appropriate policy without departing from the spirit and scope of the present invention it is presumed that such policy represents a balance between the interests of the publisher that issues each license and the user obtaining same. Following are several examples of policy scenarios 

In the present invention then and turning now to a migration service is provided to securely effectuate migrating the license from the first platform to the second platform by un tying the license from the first platform and re tying the license to the second platform . Likewise and turning now to the present invention provides a process for establishing trust between the first and second platforms to securely effectuate such migrating and un tying re tying. Significantly with the present invention a license that has been migrated is tied to the second platform and can thus only be employed to render corresponding content on the second platform . Correspondingly such license is no longer tied to the first platform and thus cannot be employed to render corresponding content on the first platform .

The license is migrated from the first platform to the second platform as part of a signed migration image . As may be appreciated such migration may occur by way of a local network connection a remote network connection or a transferred storage medium such as a portable storage disk a portable drive such as a plug in drive or other portable medium. The first source platform creates the migration image with the license . Such migration image is applied to the second target platform only after the target platform contacts the migration service for approval. The migration service thus maintains a database for tracking migrated licenses and in particular allows such migration to occur only in accordance with predetermined migration policy. Thus the migration service among other things minimizes perpetration of fraud by any nefarious user that would attempt to copy the license to one or more platforms rather than migrate same from the source platform to the target platform .

The present invention is based on establishing trust from the source platform to the target platform by way of the migration service acting as a bridge between such platforms . Thus in the migration process RM information at the source platform is examined and if acceptable such RM information is gathered and packaged into the migration image including each license to be migrated and relevant information relating to each license including state information. At the target platform RM information is likewise examined and if acceptable the migration image is applied to complete the migration but only if the migration service authorizes such application. Note that the migration process does not require the source and target platforms to be connected. Also note that the migration image may be self signed and can be stored and transmitted in an arbitrary way. Finally note that although the migration service is contacted by the target platform for authorization to complete the migration such migration service need not necessarily be contacted by the source platform for authorization to create the migration image .

As seen in in one embodiment of the present invention both the source platform and the target platform have a migration engine for effectuating the migration process. Generally the migration engine at the source platform performs actions necessary to produce the migration image and the migration engine at the target platform performs actions necessary to consume the produced migration image by writing the licenses and other data therein to an appropriate location. However it is to be appreciated that such migration engines perform other actions as will be set forth in more detail below. Thus the actions performed by the migration engine at the source platform are likely substantially different from the actions performed by the migration engine at the target platform . Accordingly such migration engines may be different from one another. However such migration engines may also be substantially similar if not identical as is shown in for example if it would be more convenient to do so.

Each migration engine may include a user interface to allow a user to access and interact with same. At the source platform then the interface would provide instructions to a user and gather information therefrom in order to define and collect all data and settings necessary to produce the migration image . Likewise at the target platform the interface would provide instructions to a user and gather any information necessary therefrom in order to consume the produced migration image .

The migration engine at the source platform has a migration reader . As may be appreciated such reader is designed to handle specific data collection tasks at the source platform and includes interfaces and other functions that are called by the migration engine in the course of reading the licenses and other data from a store or the like at the source platform to a corresponding migration image . Note that such migration image thus represents all information from the source platform necessary to migrate the RM environment at the source platform to the target platform . Note too that such migration image may alternately be employed to recreate the RM environment at the source platform in the event such RM environment for some reason cannot in fact be migrated to the target platform .

Similarly the migration engine at the target platform has a migration writer . As may be appreciated here such writer is designed to handle specific data application tasks at the target platform and includes interfaces and other functions that are called by the migration engine in the course of writing the licenses and other data from the migration image as created at the source platform to a store or the like at the target platform . Note that the other data read written along with the licenses may include all appropriate RM data without departing from the spirit and scope of the present invention such as for example revocation lists license state data hardware ID data machine ID data and the like. Note too that each store may represent a single organized storage area within which all of such data resides or may comprise multiple such storage areas and also that each storage area may be physical in nature such as a particular memory device or conceptual in nature such as a defined element that may physically exists in several parts on one or more particular memory devices.

Referring particularly to now and in one embodiment of the present invention a method for migrating one or more licenses from a source platform to a target platform is shown. As may be appreciated shows a first part of the method the end result of which is the production of the migration image and shows a second part of the method the end result of which is the consumption of the migration image to in fact result in the licenses being migrated from the source platform to the target platform .

Preliminarily and as seen in migration from the source platform and creation of the migration image is initiated at the command of a user or the like at such source platform step after which the migration engine is instantiated at such source platform step . Particularly in the case where the migration engine may be employed both at the source platform and the target platform instantiation at the source platform as at step may include the user identifying or being prompted to identify that the migration engine is to be employed at the source platform . Once identified as being employed at the source platform then the migration engine proceeds by identifying the licenses at the source platform .

In particular the migration engine by way of the migration reader thereof locates the trusted component at the source platform and queries the located trusted component for an identification of each license at the source platform step . Such a query is known or should be apparent to the relevant public and may be performed in any appropriate manner without departing from the spirit and scope of the present invention. For example the trusted component may include a function that allows same to discover each license including an identification and location thereof and the migration reader of the migration engine may either call such function directly or indirectly by way of such trusted component .

At any rate upon receiving the identification of each license at the source platform the migration engine may present each such identified license to the user by way of the user interface and receive from such user by way of such user interface a selection of the identified licenses to be migrated step . Alternatively the migration engine may require that the user migrate all such identified licenses in which case the selecting as at step may be omitted. Note that user selection of licenses to be migrated from the source platform may be omitted to simplify matters and especially to simplify tracking migration within the tracking database . In particular if selecting is allowed the database likely must track each license at the source platform . In contrast if selecting is not allowed the database likely need only track the source platform itself.

Upon identification and perhaps selection of each license at the source platform to be migrated then the migration engine may prompt the user by way of the user interface to select a location to save the migration image to be produced based on the licenses to be migrated and the migration engine may then receive such save location step . As may be appreciated such location may be a portable medium a local medium at the source platform a remote medium away from the source platform or the like. Depending on the medium chosen then the user may intend to physically carry the migration image to the target platform electronically transmit the migration image to the target platform by way of an appropriate communications medium or electronically retrieve the migration image at the target platform .

At any rate the migration engine proceeds by producing the migration image based on the licenses to be included therewith and stores the produced migration image at the selected location. In particular the migration reader of the migration engine either directly or indirectly by way of the trusted component gathers each license to be included as well as corresponding data and places the license and the corresponding data in the migration image step . Note that in doing so the migration engine may either create the migration image at the selected location or at a temporary location and if at the temporary location the migration image would upon completion store the created migration image at the selected location step . In either case upon the migration image being created and stored at the selected location the migration engine may by way of the interface thereof notify the user that the migration image has indeed been created and stored at the selected location step after which the migration engine can be terminated.

The corresponding data that the migration reader places in the migration image may include data specific to each license in the migration image and also data specific to the source platform and may be any appropriate data without departing from the spirit and scope of the present invention. In one embodiment of the present invention such corresponding data in the migration image includes for each license and all state information relating to the license as maintained in an appropriate state store or the like. In addition such corresponding data in the migration image includes for the source platform a platform ID thereof or the like hardware information relating to such source platform software information relating to such source platform operating system information relating to the operating system of the source platform and the like.

Notably the corresponding data in the migration image should also include cryptographic keys necessary to un tie each license from the source platform so that the license may be re tied to the target platform perhaps in the form of a key file or the like. As will be set forth in more detail below such un tying and re tying is performed by the migration engine at the target platform upon receiving permission to do so from the migration service . The cryptographic keys in the migration image should be encrypted in a manner decryptable by the migration service or by an entity on behalf of the migration service . For example the cryptographic keys in the migration image may be encrypted to be decryptable by a centralized service such as for example a backup and restore service that would be required to in fact decrypt such encrypted cryptographic keys and the migration service may be in contact with such backup and restore service or the like to employ the services thereof to in fact decrypt the encrypted cryptographic keys at an appropriate time. Encrypting the cryptographic keys to be decryptable by any particular service is known or should be apparent to the relevant public and therefore need not be set forth herein in any particular detail. Such cryptographic keys may of course be encrypted to be decryptable by or on behalf of the migration service in any appropriate manner without departing from the spirit and scope of the present invention.

Note that the migration engine may create the migration image in any particular form without departing from the spirit and scope of the present invention. For example the migration image may be created as a folder containing each license as a file and perhaps the corresponding data for all of the contained licenses as another file or as a hierarchical tree structure containing each license and the corresponding data as nodes at appropriate locations within such tree structure.

Note too that the created migration image may include a digital signature or a hash based on such image or a portion thereof. As may be appreciated such signature or hash may be employed by the target platform and or the migration service for purposes of verifying that the migration image has not been altered. Such signature or hash may also at least implicitly act as an assertion from the migration engine at the source platform that the migration image was properly created as part of a migration of licenses from such source platform .

Note also that it is highly advisable if not mandatory to encrypt at least some parts of the migration image to avoid browsing thereof by an improper entity. In particular and as was set forth above inasmuch as the migration image likely includes one or more cryptographic keys that the target platform is to employ to un tie each license therein from the source platform such keys should be encrypted in a form such that only the target platform can access same and only after the migration service has provided permission to do so. Of course other portions of the migration image may also be encrypted without departing from the spirit and scope of the present invention.

In one embodiment of the present invention and as may be appreciated as part of performing the tasks of the migration engine at the source platform upon successfully creating the migration image with the licenses from the source platform must delete such licenses from the license store or the like of the source platform step . Note though that a nefarious entity may wish to avoid losing such licenses at the source platform by copying such licenses from the license store and replacing such licenses in the license store after the migration engine has deleted same. To counter such a threat and in one embodiment of the present invention the migration engine also in effect resets the trusted component at the source platform by deleting the keys thereof and providing replacement keys therefor. Thus even if a nefarious entity did attempt to replace the deleted licenses the trusted component would have no way of accessing the decryption keys therein.

Thereafter and referring now to the user may cause the created migration image to be transported in an appropriate manner from the selected location at the source platform and stored at a selected location at the target platform step . In particular and depending on the type of selected location at the source platform and as was set forth above the user may physically carry the migration image to the target platform electronically transmit the migration image to the target platform by way of an appropriate communications medium or electronically retrieve the migration image at the target platform . In any case once at the target platform the migration image is appropriately stored at the selected location at such target platform in an appropriate manner.

Note that in at least some instances the selected location at the source platform and the selected location at the target platform may be one and the same. This is particularly true in the case where the platforms are on the same computing device such as for example when an operating system on the computing device is upgraded to a newer version. This is also true in the special case where as set forth in more detail below the migration is not permitted by the migration service after which the user may move the licenses from the migration image back to the source platform which would in effect be the target platform . If indeed the selected location at the source platform and the selected location at the target platform are one and the same transporting as at step may of course be omitted.

At any rate retrieval of each license and corresponding data from the migration image at the target platform is initiated at the command of a user or the like at such target platform step after which the migration engine is instantiated at such target platform step . Particularly in the case where the migration engine may be employed both at the source platform and the target platform and similar to that which was set forth above instantiation at the target platform as at step may include the user identifying or being prompted to identify that the migration engine is to be employed at the target platform . Once identified as being employed at the target platform then the migration engine proceeds by identifying the migration image at the target platform .

In particular and as before the migration engine may prompt the user by way of the user interface thereof to identify the selected location at which the migration image is stored at the target platform and the migration engine may then receive such selected location step . Thereafter the migration engine forwards the selected location to the migration writer thereof and the migration writer reads the migration image as stored at the selected location step .

Notably the migration writer upon reading the migration image requests permission from the migration service to in fact proceed by writing the licenses in the migration image to the target platform step . Although such request may include any appropriate information without departing from the spirit and scope of the present invention it is envisioned that such request should at a minimum include a platform ID of the target platform and a platform ID of the source platform as obtained from the migration image and perhaps more details on the operating system software and or hardware at each of the source platform and target platform as may be necessary.

As should be appreciated then the migration service determines whether to approve the request based on predetermined policy notes appropriate information regarding the request and the corresponding migration in the database and returns an appropriate response to the requesting migration writer . As was set forth above such policy involves a consideration of specific details regarding the source platform and the target platform including for example for each platform the platform ID thereof as well as details regarding the hardware software and or operating system . Again such policy may be any appropriate policy without departing from the spirit and scope of the present invention but should represent a balance between the interests of the publisher that issues each license and the user.

The information regarding the request and the corresponding migration in the database as noted in the database may be any appropriate information without departing from the spirit and scope of the present invention. Presumably such information is of a type such that fraud detection can occur. In particular such information should include any data that may be necessary for a policy decision should a future request to migrate be received by the migration service regarding the source platform and or the target platform . As one example if the request is permitted and policy requires that the target platform be allowed only a single migration then the information regarding the request as noted in the database should be to the effect that the source platform has already in fact been employed as a source platform . Thus a future request for migration should not be permitted if the request identifies the source platform as source platform .

Hopefully the response is positive in which case the migration is permitted. However such response may also be negative in which case the migration is not permitted. In the latter case and as was alluded to above the user likely would wish to move the licenses from the migration image back to the source platform which would in effect be the target platform . If so the user would then perform the steps of at the source platform as the target platform .

Presuming now that the migration writer receives a response that the request is indeed permitted by the migration service step the migration writer proceeds by locating the trusted component at the target platform and querying the located trusted component for an identification of where to store each license at the target platform step . Similar to before such a query is known or should be apparent to the relevant public and may be performed in any appropriate manner without departing from the spirit and scope of the present invention. For example the trusted component may include a function that allows same to identify a license store for storing each license and the migration writer of the migration engine may either call such function directly or indirectly by way of such trusted component .

At any rate upon receiving the identification of a license store or the like for storing each license at the target platform the migration writer applies the migration image to such target platform step . In particular the migration writer either directly or indirectly by way of the trusted component retrieves each license and the corresponding data in the migration image un ties the license from the source platform and re ties the license to the target platform stores the license in the identified license store at the target platform and stores the corresponding data in an appropriate location. Upon the migration image being applied then the migration engine may by way of the interface thereof notify the user that the migration image has indeed been applied to the target platform step after which the migration engine can be terminated.

The migration writer may un tie the license from the source platform and re tie the license to the target platform in any appropriate manner without departing from the spirit and scope of the present invention. For example in one embodiment of the present invention the migration writer does so in the following manner. Preliminarily and remembering that the migration image includes cryptographic keys necessary to un tie each license from the source platform in the form of a key file or the like and also remembering that the cryptographic keys in the key file are encrypted in a manner decryptable by or on behalf of the migration service the migration writer in requesting permission from the migration service as at step includes with the request the key file from the migration image . Thus upon the migration service approving the request such migration service decrypts the cryptographic keys in such key file as appropriate and includes such cryptographic keys with the positive response to the request as at step .

Note though that such cryptographic keys should not be provided in the response in an un encrypted form but instead should be encrypted in a form decryptable by the migration writer . Accordingly in one embodiment of the present invention the migration writer and the migration service cooperatively establish a shared secret during the course of the request such as a symmetric key that may be employed both by the migration service to encrypt the cryptographic keys and by the migration writer to decrypt such keys. In another embodiment of the present invention the migration writer in requesting permission from the migration service as at step includes with the request a public key thereof PU MW the migration service encrypts the cryptographic keys with PU MW to result in PU MW cryptographic keys and the migration writer decrypts such cryptographic keys by apply a corresponding private key PR MW to PU MW cryptographic keys to reveal same.

As was pointed out above each license is tied to a particular platform by having the decryption key KD therein encrypted according to a public key of the platform PU        to result in PU        KD . Thus only the platform with the corresponding private key PR        can apply same to PU        KD to reveal KD . For each license then the cryptographic key provided by the migration service to un tie the license from the source platform is a private key of such source platform PR SP that corresponds to a public key of such source platform PU SP that encrypts the decryption key KD within the license to result in PU SP KD . Note that while such a private key PR SP normally would be closely held as a secret by the source platform such PR SP is likely the private key of the trusted component which was reset for the trusted component as part of the migration as was set forth above. Accordingly such PR SP need not be as closely held. At any rate the migration engine at the target platform as well as at the source platform is in all likelihood a trusted entity and therefore is trusted to properly handle such PR SP .

That said and as may now be appreciated for the migration writer at the target platform to un tie each license from the source platform such migration writer retrieves PU SP KD from the license retrieves PR SP as provided by the migration service in the response to the request to migrate as at step and applies PR SP to PU SP KD to reveal KD . Thereafter the migration writer at the target platform re ties the license to the target platform by retrieving a public key thereof PU TP applying such PU TP to KD to produce PU TP KD and placing such PU TP KD into the license . Thus only the target platform with a corresponding private key PR TP may apply same to PU TP KD to reveal KD . Note that by altering the license any digital signature thereof likely will fail to validate. Accordingly appropriate provision is made for the migration writer to re sign the license to produce a new digital signature that will indeed validate and also appropriate provision is made for the trusted component to refer to the new digital signature when validating the license . Such re signing and related functions are known or should be apparent to the relevant public and therefore need not be set forth herein in any particular detail. Such re signing and related functions may therefore be performed in any appropriate manner without departing from the spirit and scope of the present invention.

The programming necessary to effectuate the processes performed in connection with the present invention is relatively straight forward and should be apparent to the relevant programming public. Accordingly such programming is not attached hereto. Any particular programming then may be employed to effectuate the present invention without departing from the spirit and scope thereof.

In the present invention a method and mechanism are provided to migrate a digital license from being operable to render a corresponding piece of content on a first computing platform to being operable to render the piece of content on a second computing platform . The license is un tied from the first platform and re tied to the second platform and the license cannot be employed at the first platform or any other platform after being migrated to the second platform .

It should be appreciated that changes could be made to the embodiments described above without departing from the inventive concepts thereof. It should be understood therefore that this invention is not limited to the particular embodiments disclosed but it is intended to cover modifications within the spirit and scope of the present invention as defined by the appended claims.

