---

title: Backup search agents for use with desktop search tools
abstract: Various methods and systems for implementing agents that facilitate end user searches of a backup catalog via a desktop search tool are disclosed. One method involves: receiving a search request from a desktop search tool, which is configured for use by an end user of a backup system; searching a backup catalog, maintained by the backup system, in response to the search request; and providing a result of searching the backup catalog to the desktop search tool.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07890527&OS=07890527&RS=07890527
owner: Symantec Operating Corporation
number: 07890527
owner_city: Mountain View
owner_country: US
publication_date: 20050930
---
Backup systems are used to protect data against loss. Typically a backup system includes software that periodically copies user data to a backup storage device e.g. such as a tape drive . If data is lost e.g. due to user error or device failure the backed up copy of the data can be retrieved from the backup storage device.

Historically the retrieval of backed up data has required an administrator to intervene on behalf of an end user. For example if an end user wants to restore a file that was accidentally deleted the end user must contact an administrator to request the file from backup. This request may not be handled immediately since the administrator may already be busy with other tasks. Once the administrator has an opportunity to service the request the administrator searches for the file on the backup storage device. There may be several different versions of the file so the administrator may need to interact with the end user in order to determine which version of the file to restore. Once the appropriate version of the file has been selected the administrator restores the file by copying the file from the backup storage device to a storage device that is accessible by the end user.

The process of having an administrator retrieve backed up data on behalf of an end user is often time consuming and frustrating for both the administrator and the end user. First the end user must wait until the administrator is available and has time to respond to backup requests. Then the administrator must try to identify the appropriate version of the data to restore. This can require input from the end user so the process can be delayed while the administrator attempts to contact the end user. As this example shows improved techniques for restoring data from backups are desirable.

Various embodiments of methods and systems for implementing agents that facilitate end user searches of a backup catalog via a desktop search tool are disclosed. In some embodiments a method involves receiving a search request from a desktop search tool which is configured for use by an end user of a backup system searching a backup catalog maintained by the backup system in response to the search request and providing a result of searching the backup catalog to the desktop search tool.

In one embodiment searching the backup catalog involves searching only the portion of the backup catalog that identifies data that the end user has permission to access. Searching the backup catalog can also involve searching an index corresponding to the backup catalog. The index identifies content included in one or more files that are identified in the backup catalog.

The result of searching the backup catalog can include information identifying one or more versions of a file information identifying when each of the one or more versions of the file were backed up and or information identifying a backup device on which each of the one or more versions of the file is stored. The result of searching the backup catalog can be displayed to the end user along with an option to restore each of the one or more versions of the file from a backup device.

The foregoing is a summary and thus contains by necessity simplifications generalizations and omissions of detail consequently those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects inventive features and advantages of the present invention as defined solely by the claims will become apparent in the non limiting detailed description set forth below.

While the invention is susceptible to various modifications and alternative forms specific embodiments of the invention are provided as examples in the drawings and detailed description. It should be understood that the drawings and detailed description are not intended to limit the invention to the particular form disclosed. Instead the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims.

Backup client backup server media server and search server are coupled by a network . Network can include a WAN Wide Area Network such as the Internet one or more LANs Local Area Networks and or one or more SANs Storage Area Networks . Network can be implemented using various media including coaxial cables fiber optic cables and wireless links.

Backup client is a computing device that is coupled to a storage device volume . Volume is a physical or logical storage device that stores one or more files . Volume can include one or more physical storage devices e.g. in one embodiment volume is implemented on a storage array that includes several independent hard drives . An application not shown executing on backup client can access e.g. read and write files stored on volume . It is noted that in other embodiments the information stored on volume could be organized using data objects e.g. database records object based storage and the like other than files.

As shown backup client backup server and media server each include backup and restore client software or agents implemented by backup modules . Such agents typically receive instructions from backup server and handle the extraction and placement of data for the backup client . Together the backup and restore agents can backup and restore information stored on the client system.

Backup server includes backup module which initiates backups of client data. For example backup module can include a user interface that allows an administrator to specify when client data such as file data which is maintained by backup client should be backed up. Backup module can also operate to control media server and to interact with backup client .

Media server implements backup module which performs backup operations under direction from backup server . In this example backup module creates a backup by copying information the information stored on volume to backup media backup media is part of a pool of storage which can include various types of storage devices that is accessible to media server . As shown a point in time copy files of files can be stored on backup media . Backup media can include sequential storage media such as magnetic tape as well as random access media such as hard disk drives optical disks e.g. CDs Compact Discs and DVDs Digital Versatile Discs and the like .

In one embodiment modifications to files are prevented while a backup is being created. In such an embodiment a backup is performed by copying information directly from volume to backup media . In other embodiments a point in time copy e.g. a copy on write snapshot a mirror breakoff snapshot or the like of the information stored on volume is first created and the backup is performed by copying the information in the point in time copy to backup media . Each backup can be a full backup e.g. a complete copy of all files and other information stored on volume or an incremental backup e.g. a partial copy which includes only the files and other information that have been modified since the last backup was created .

Backup client implements a desktop search tool that is configured for use by an end user of a backup system. Desktop search tool is a tool that proves a user interface for accepting search queries from an end user as used herein an end user is a user other than an administrator whose data is backed up by a backup system . Desktop search tool can be a component of backup module a web browser a third party search tool e.g. such as Google Desktop or Windows Desktop Search or the like. An end user can enter a search query into desktop search tool in order to search for a backed up file or set of files. Desktop search tool provides the search query to backup search agent which performs the actual search. In some embodiments the end user can also use desktop search tool to search various other sets of information in addition to searching backed up files such as files web pages available via the Internet email and the like.

An end user can enter a search query in a variety of different ways. For example in one embodiment a user can enter one or more keywords as a search query. These keywords can be used to search the names and or content of backed up files. A user can alternatively enter a natural language search query. Search queries can also include date ranges e.g. to limit the search to files backed up before or after a certain date or to files backed up between a range of dates file type restrictions e.g. to limit the search to files having certain extensions such as .doc files or .txt files and the like.

If the desktop search tool can be used to search multiple different sources of information e.g. such as email web pages on the Internet backups local files and the like the desktop search tool can in some embodiments perform the requested search on all different sources of data. In other embodiments desktop search tool allows the end user to select e.g. via a pull down menu or other selection tool which set of information to search. In such an embodiment desktop search tool only sends the search query to backup search agent if the end user selects to search backed up information alternatively the end user can be provided with a set of options that allow the user to select a particular search agent such as backup search agent . If desktop search tool is a third party search tool i.e. if desktop search tool is not part of the backup system backup search agent can be registered with the desktop search tool e.g. by an administrator or end user thus providing the desktop search tool with information needed to communicate with the backup search agent.

Search server implements a backup search agent . Backup search agent receives search queries from desktop search tool and based on those queries searches a backup catalog . The search queries received from desktop search tool can include information that identifies the end user that initiated the search query.

Catalog includes metadata that is generated by backup module whenever a new backup is created. Catalog identifies which files are included in each backup. Thus catalog can be searched to determine whether a particular file has ever been backed up. Catalog can identify files by name and parent directory. Catalog also identifies whether multiple versions of a file are available in a backup. In some embodiments catalog can provide other details about each file that has been backed up such as the date of the backup the size of the backed up file the location of the backed up file the time at which the backed up file was last accessed and or modified the backup schedule associated with the backed up file and the backup policy associated with the backed up file. If several different versions of a file have been backed up the information in catalog can be used to identify for example the most recently backed up version of the file or the largest version of the file.

Catalog can also identify the permissions and ownership of each backed up file. This information can be used to determine which end users have access to a particular file.

Typically catalog is maintained in a proprietary format by backup modules . Backup search agent includes functionality that allows backup agent to either interpret the information in catalog directly or to query the backup system the term backup system is used to collectively refer to backup modules for information in catalog . For example in one embodiment backup search agent searches catalog by searching catalog directly in this embodiment backup search agent includes functionality that is able to interpret the information in catalog without communicating directly with the backup system .

In alternative embodiments backup search agent includes functionality that allows backup search agent to communicate with the backup system via an interface e.g. by sending appropriate requests to a command line interface CLI or application programming interface API provided by the backup system . In these embodiments backup search agent searches the catalog indirectly by translating the search query received from desktop search tool into one or more appropriate requests and sending those requests to the backup system. Thus backup search agent can indirectly search the catalog via interfaces provided by the backup system.

In still other embodiments the backup system provides catalog in web page format. In these embodiments backup search agent can include web search engine functionality for searching catalog .

When searching the catalog backup search agent restricts the search results to those files that the end user who initiated the search query has access to. For example if the catalog indicates that the end user does not have permission to access a file that would otherwise satisfy the search query the backup search agent will not include that file in the search results. The function of restriction the end user s access based on permissions can be performed directly by backup search agent e.g. by interpreting metadata received from the backup system or indirectly e.g. the backup search agent can identify the end user that initiated the search query when communicating with the backup system via a CLI or API and the backup system can restrict results to those files that the end user has permission to access .

After searching catalog backup search agent generates search results. The search results identify the backed up files if any that satisfy the search query submitted by the end user. The search results can also include metadata e.g. data identifying file characteristics such as size creation time and the like about each of the identified backed up files. Backup search agent formats these results in a manner that is accepted by desktop search tool. For example in one embodiment backup search agent returns results in the form of web pages e.g. Hyper Text Markup Language HTML documents . The desktop search tool then displays these results to the end user. The results can identify one or more files and or one or more versions of the same file. The results can also identify the size of each file the date on which each file was backed up the location of each file and the like.

The system illustrated in allows an end user to directly search for files that have been backed up without the intervention of an administrator. This can greatly increase the efficiency of the backup process. For example if an end user realizes that important information was accidentally deleted from a file the end user can use desktop search tool to quickly search for the prior version of the file that contained the deleted information. The information provided by backup search agent to desktop search tool that is returned to the end user as a result of the query can identify where e.g. by identifying a particular backup storage device the prior version of the file is located. The end user can then provide this information to an administrator. Thus the end user can provide the administrator with the exact version and location of the file to restore.

In some embodiments backup search agent returns information to desktop search tool that enables the end user to directly restore a file from backup without any administrator intervention at all. For example if backup media is a storage device array as opposed to a collection of magnetic tapes that is readily available backup search agent can return search results that include references e.g. hypertext links to files available on backup media . Desktop search agent can display these references to the end user. The end user can select a reference corresponding to a file that the end user wishes to restore. In response to the end user s selection a copy of the selected file can be transferred to the end user e.g. such a copy could be transferred via network and stored in volume . Thus in an embodiment that permits end users to directly restore files identified in the search results at least some restores can be performed without any administrator intervention.

It is noted that while the functionality of backup modules has been divided into client server and media server functionality in the embodiment of this functionality can be combined and or rearranged in other embodiments. For example in an alternative embodiment backup module can include media server functionality provided by backup module in eliminating the need for a separate media server. Similarly the functionality provided by backup modules and or can be combined and implemented on backup client eliminating the need for separate backup and media servers and .

Additionally the functionality provided by desktop search tool backup search agent and backup modules can be combined and or rearranged in other embodiments. For example in one alternative embodiment backup search agent is integrated with desktop search tool . Similarly backup search agent can be implemented on backup client .

Backup client backup server media server and search server can each include one or more computing devices configured to execute software implementing various applications e.g. application backup modules desktop search tool backup search agent and the like . In such embodiments each computing device can include a workstation personal computer server Personal Digital Assistant PDA cell phone storage network switch storage device storage array controller or any other device configured to execute software implementing such applications. Alternatively each computing device can be implemented from hardware e.g. logic devices such as programmable logic devices PLDs field programmable gate arrays FPGAs and the like configured to perform the functions of such applications or from a combination of hardware and software implementing the functionality of the applications.

Backup search agent includes an interface which is configured to receive search queries from desktop search tool and to return search results to desktop search tool . Backup search agent also includes a search module which is configured to search catalog .

Backup system e.g. one or more of backup modules of includes an interface catalog and an optional index . Interface is an interface e.g. a CLI or API that provides access to information in catalog .

Index is a search index that identifies content included in one or more backed up files. For example index can identify backed up files that have particular characteristics and or that include a particular keyword. Index can be used to search for particular backed up files based on content. Index can also index the metadata provided by catalog . Index can be generated by backup system or by backup search agent in the latter situation index may be stored locally to backup search agent . Index is generated by searching the catalog in order to identify backed up files and then parsing those files and or the catalog itself to generate the index.

In embodiments that provide an index backup search agent can search the catalog indirectly by searching index . Since index provides an index of the files identified in catalog searching the index can be more efficient in terms of time and or processing resources required than searching catalog directly. Since index can also include information about the content of the backed up files the use of index allows end users to search backups based on the content of the backed up files. Even if backup search agent does not generate index backup search agent can locally cache all or part of index in order to increase search efficiency.

At the backup catalog is searched according to the search request received at . The backup catalog can be searched directly e.g. by searching a file storing the catalog without communicating with the backup system or indirectly. Indirectly searching the catalog can involve communicating search requests to the backup system and or searching an index that corresponds to the catalog.

If for example the search request indicates that the end user if searching for backed up files that contain the keyword landscaping that were created before Sep. 6 2005 the catalog can be indirectly searched by searching the index for files that include the keyword landscaping. If the index also indexes metadata obtained from the catalog the index can be searched for files that were created before Sep. 6 2005. Otherwise the catalog can be searched either directly or via the backup system for this information. A list of files if any that satisfy both queries can be generated. This list of files can also include metadata obtained from the index associated with each identified file.

At the search results if any obtained by searching the catalog are returned to the desktop search tool. These search results are returned in a format that is accepted by the desktop search tool. For example in one embodiment the search results are returned in the form of web pages. In another embodiment the search results are returned in a format that allows the desktop search tool to display the backup search agent s search results in combination with search results returned by other search agents. It is noted that other operations can be included instead of and or in addition to those operations shown in .

As illustrated computing device includes one or more processors e.g. microprocessors PLDs Programmable Logic Devices or ASICs Application Specific Integrated Circuits configured to execute program instructions stored in memory . Memory can include various types of RAM Random Access Memory ROM Read Only Memory Flash memory MEMS Micro Electro Mechanical Systems memory and the like. Computing device also includes one or more interfaces . Processor memory and interface are coupled to send and receive data and control signals by a bus or other interconnect.

Interface s can include an interface to a storage device e.g. if all or part of an index or backup catalog is stored locally by backup search agent . Interface s can also include an interface to a network e.g. network of for use in communicating with a desktop search tool and or catalog e.g. if a distributed system as shown in is being implemented .

The program instructions and data implementing backup search agent can be stored on various computer readable media such as memory . In some embodiments such software is stored on a computer readable medium such as a CD Compact Disc DVD Digital Versatile Disc hard disk optical disk tape device floppy disk and the like . In order be executed by processor the instructions and data implementing backup search agent are loaded into memory from the other computer readable medium. The instructions and or data can also be transferred to computing device for storage in memory via a network such as the Internet or upon a carrier medium. In some embodiments a computer readable medium is a carrier medium such as a network and or a wireless link upon which signals such as electrical electromagnetic or digital signals on which the data and instructions implementing backup search agent are encoded are conveyed.

Although the present invention has been described in connection with several embodiments the invention is not intended to be limited to the specific forms set forth herein. On the contrary it is intended to cover such alternatives modifications and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims.

