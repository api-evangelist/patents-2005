---

title: Integrated multidimensional view of hierarchical objects
abstract: Embodiments of the present invention address deficiencies of the art in respect to the display of multidimensional structures and provide a method, system and computer program product for managing an integrated multidimensional view of a structured collection of objects. In one embodiment of the invention, a data processing system can be configured to render an integrated view of a multidimensional structured collection of objects. The data processing system can include a GUI for a host application in a computing platform and multidimensional view processing logic coupled to the host application. The logic can include program code enabled to render a single, integrated multidimensional view of a structured collection of objects in the GUI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09557887&OS=09557887&RS=09557887
owner: International Business Machines Corporation
number: 09557887
owner_city: Armonk
owner_country: US
publication_date: 20051227
---
The present invention relates to object hierarchies and more particularly to the visual presentation of a structured collection of objects in a graphical user interface GUI .

Electronic objects in a data processing system often are organized hierarchically in a parent child relationship. Specifically the earliest file systems for computing environments provided a hierarchical directory structure in which electronically stored documents could be stored in specific directories or folders. Directories and folders collectively viewed as containers could be nested to provide a level of organization for electronic documents akin to a tree having a root node leaf nodes and intermediate branches and connecting nodes.

Contemporary data structure theory expands upon the notion of the hierarchical directory structure to provide the most common form of genus species data organization not only for file storage but for general objects in memory as well. While hierarchical trees are known to be constructed programmatically in a number of ways the most common way is the linked list of nodes in a tree formation. Generally the hierarchical tree can be visually rendered in a GUI by providing collapsible nodes such that the hierarchy can be viewed merely as a root node or the hierarchy can be viewed in fully expanded form to reveal the hierarchical tree. Of course as each node in the hierarchy can be expanded or collapsed individually any portion of the hierarchical tree can be viewed within the GUI is most computing users have become accustomed to understand.

While the conventional hierarchical tree structure has proven quite effective in illustrating one dimensional parent child relationships among stored objects in a structured collection the modern GUI is at a loss to illustrate multidimensional relationships in a structured collection of objects. Yet many stored objects enjoy multi faceted relationships including not only parent child relationships but also membership and access privileges relationships date time and place relationships related resources relationships and alerts notifications and alarms relationships. For example a structured collection of tasks in an activity not only can include an ordering of tasks and nested sub tasks but also the structured collection of tasks can be viewed from the perspective of users permitted access to modify certain tasks resources required to complete certain tasks or dates times and places for performing certain tasks.

Recognizing the multidimensional nature of structured collections of objects conventional solutions propose the juxtaposition of different hierarchical trees within a GUI to provide different views of the structured collection where each hierarchical tree is of only one dimension of interest. For example in U.S. Pat. No. 6 151 024 to Alimpich et al. for DATA PROCESSOR CONTROLLED DISPLAY INTERFACE WITH TREE HIERARCHY OF ELEMENTS VIEW EXPANDABLE INTO MULTIPLE DETAILED VIEWS upon selection of a parent object in a tree hierarchy the child objects for the parent are displayed in multiple different views in separate screen regions in order to display attributes of one of the different types of child objects.

The type of solution provided by Alimpich et al. is also apparent in U.S. Pat. No. 6 281 896 to Alimpich et al. for DATA PROCESSOR CONTROLLED DISPLAY INTERFACE WITH TREE HIERARCHY OF ELEMENTS VIEW EXPANDABLE INTO MULTIPLE DETAILED VIEWS in U.S. Pat. No. 6 647 394. to Herzberg et al. for DOING BUSINESS EMPLOYED LINKED TREES HAVING RETRIEVABLE EMBEDDED INFORMATION and in U.S. Pat. No. 6 842 176 Sang udi et al. COMPUTER RELATED METHOD AND SYSTEM FOR CONTROLLING DATA VISUALIZATION IN EXTERNAL DIMENSION S . In all such cases however separate views are provided for each dimension resulting in a cluttered screen and incoherent presentation for the end user.

Embodiments of the present invention address deficiencies of the art in respect to the display of multidimensional structures and provide a novel and non obvious method system and computer program product for managing an integrated multidimensional view of a structured collection of objects. In one embodiment of the invention a data processing system can be configured to render an integrated view of a multidimensional structured collection of objects. The data processing system can include a GUI for a host application in a computing platform and multidimensional view processing logic coupled to the host application. The logic can include program code enabled to render a single integrated multidimensional view of a structured collection of objects in the GUI.

In another embodiment of the invention a method for managing an integrated multidimensional view of a structured collection of objects in a GUI can be provided. The method can include providing a view of at least a portion of objects in the structured collection of objects according to a first dimension selecting one of the objects in the provided view and embedding within the provided view an in line view of attributes of the selected one of the objects according to a second dimension. Optionally the method also can include concurrently embedding within the provided view an in line view of attributes of a different selected one of the objects according to a third dimension. Finally as yet another option selecting one of the objects in the provided view can include selecting an activatable icon from among at least two activatable icons associated with the selected one of the objects the selected activatable icon having an association with the second dimension.

Additional aspects of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. The aspects of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Embodiments of the present invention provide a method system and computer program product for managing an integrated multidimensional view of a structured collection of objects. In accordance with an embodiment of the present invention a single integrated view of structured collection of objects can be provided. Each object of the single integrated view can be configured for selectively providing an in line view of two or more different dimensions for the object. In this way different portions of the provided view can provide a sub view of the structured collection of objects according to one of many dimensions. Yet the entire single integrated view need not reflect only a single dimension.

In further illustration is a pictorial illustration of two exemplary integrated multidimensional views of a structured collection objects. In a first aspect of the invention the structured collection can be viewed in line while in a second aspect of the invention the structured collection can be viewed hierarchically in a tree view. In either case as shown in an integrated multidimensional view of objects can define a hierarchy having a root node one or more leaf nodes A B N A B N and one or more intermediate nodes A B N. Each one of the intermediate nodes A B N can define a branch of nodes for the integrated multidimensional hierarchical view . Notably each of the root node and intermediate nodes A B N can include an activatable icon A B N each of the activatable icons representing a viewable dimension for a branch of nodes below the corresponding one of the root node and intermediate nodes A B N.

In this regard the selection of one of the activatable icons A B N for a particular one of the root node and intermediate nodes A B N can result in the rendering of an in line view of a sub hierarchy of intermediate nodes A B N and leaf nodes A B N A B N based upon the dimension associated with the selected one of the activatable icons A B N. Optionally more than one of the activatable icons A B N can be concurrently selected for the root node or any of the intermediate nodes A B N. Consequently multiple hierarchies for different dimensions for the root node or any one of the intermediate nodes A B N can be displayed adjacent to one another within the a single integrated multidimensional view of the structured collection of objects .

Notably the integrated multidimensional view of a structured collection of objects can be managed within a data processing system. Specifically is a schematic illustration of a data processing system configured to manage an integrated multidimensional view of a structured collection of objects. As shown in the data processing system can include a host computing platform arranged with a graphical operating system . The graphical operating system can be configured to generate a GUI for a hosted application . In this regard as it is well known in the art the operating system can include graphical resources exposed to applications through an application programming interface that can be invoked for display by application logic.

The hosted application can be enabled to include a multidimensional data structure . The multidimensional data structure can include a structured collection of objects which can be related to one another differently depending upon a defined relationship. For instance each defined relationship can be a dimension and can include parent child membership and access privileges date time and places related resources alerts notifications and alarms to name a few different dimensions of relationship between objects in the hierarchy. Multidimensional view processing logic can be coupled to the host application and can provide a single integrated multidimensional view of the structured collection of objects in the multidimensional data structure .

In this regard the multidimensional view processing logic can provide a view of multiple activatable icons for each different dimension adjacent to each node of the integrated multidimensional view . Responsive to the activation of an activatable icon for a selected object in the structured collection of objects an in line view can be rendered within the provided view for the selected object. Importantly the in line view can be rendered according to dimension associated with the activatable icon. More particularly the objects represented by the objects of the in line view can be arranged according to the attribute defined for the dimension of the activated icon.

In further illustration is a flow chart illustrating a process for managing an integrated multidimensional view of a structured collection of objects. Beginning in block a root node for a structured collection of objects of a multidimensional data structure can be loaded and a first dimension can be selected for processing in block . In block a view of the structured collection of objects for the multidimensional data structure can be constructed according to a relationship specified by the selected dimension. Subsequently in decision block if additional dimensions remain to be considered a next dimension can be selected in block and the process can repeat in block .

In decision block when no further dimensions remain to be considered in block one of the dimensions can be selected for viewing. Subsequently in block the objects for an in line view can be rendered to reflect the selected one of the dimensions. In decision block if additional selections for different dimensions remain the process can repeat in block . Otherwise the process can end in block .

Embodiments of the invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode and the like. Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system.

For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

