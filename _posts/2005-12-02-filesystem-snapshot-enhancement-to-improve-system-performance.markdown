---

title: Filesystem snapshot enhancement to improve system performance
abstract: Reducing copy on write activity during snapshot backup processing in computer system. A snap shot of the data is created. As the backup of each file is successfully completed, the copy-on-write functionality for the file is disabled. As the backup of each other file is successfully completed, the copy-on-write for each other file is disabled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07774316&OS=07774316&RS=07774316
owner: Oracle International Corp.
number: 07774316
owner_city: Redwood Shores
owner_country: US
publication_date: 20051202
---
The present invention is generally related to data and file storage systems and in particular to snapshot technology in file system backup.

Snapshot technology is currently supported in most File systems. Snapshots provide a stable and consistent image of a file system at a specific point in time. One of the major challenges with snapshot technology is the need to handle file system changes once the snapshot has been created. All file system changes must be included in the original file system but they cannot appear in any corresponding snapshots. This is often done via Copy On Writes COW which requires additional IO and disk space to allow for file system changes while maintaining the snapshot image. One of the major consumers of snapshot technology is file system backup. Snapshots present a consistent file system for backup purposes but often at a significant cost in terms of performance and disk space utilization. All changes require additional IO and disk space to maintain multiple versions of data that changed. This includes user data and metadata.

Current snapshot backup processing requires COW activity for all file system changes for the duration of the entire backup process which can be expensive in terms of I O CPU cycles and disk space consumption.

It would be advantageous to be able to reduce COW activity during the snapshot backup process. It would also be advantageous to be able to minimize COW activity if backup prioritization were implemented. This would significantly reduce and disk space consumption for active file systems. The more active the file system the greater the benefit this would provide. Overall backup file system and system performance would improve. These advantages also hold true for other applications as well such as for example on line file system verification.

In one aspect the present invention is directed to a method and system for maintaining snapshot information in a computer system. In one embodiment the method includes generating a snap shot of data and initiating a backup of the data by duplicating the data and storing the duplicated data to a backup storage location. After completing the backup of a first file in the data the copy on write functionality for the first file is disabled. As the backup of each file in the data continues the copy on write functionality for each file is disabled as soon as the backup for the file or portion thereof is completed.

In another aspect the present invention is directed to a method of managing data in a data storage system. In one embodiment the method includes creating a snapshot of the system as of a predetermined point in time. A list of files is identified that are not relevant for a backup of the data storage system. The copy on write functionality for each of these files is disabled. A backup routine is run on the data storage system. If not previously disabled the copy on write functionality for each file that is backed up is disabled after the backup for that file is complete.

Referring to a perspective view of a system incorporating features of the present invention is illustrated. Although the present invention will be described with reference to the embodiment shown in the drawings it should be understood that the present invention can be embodied in many alternate forms of embodiments. In addition any suitable size shape or type of elements or materials could be used.

Snapshots or snapshotting as the terms are commonly understood generally comprises the creation of a consistent picture of the blocks of data in a file system such as primary system or other data facility as of a certain point in time. Copy on Write operations are implemented and carried out in order to maintain the integrity of the snapshot until the snapshot is deleted.

For example referring to a snapshot is created for backup purposes. File is being updated while the backup is being performed so all changes to File require additional COW IO and disk space to maintain a consistent snapshot image of File . This COW activity for File continues until the snapshot has been deleted usually once the entire backup process completes. In one embodiment the features of the present invention disable COW activity for File once it has been successfully backed up thus reducing overall IO and disk space consumption. In addition backup prioritization can be implemented so that the most active files in terms of updates would be processed first to minimize COW activity during the backup process. The features of the present invention could also be used for on line file system verification where snapshots are utilized to check for file system consistency

For example referring to during a backup operation in backup system of the primary system the system can disable Copy on Write operations on the fly for an entire file or range of bytes within a file stored in the primary system . Generally once the application such as the backup application knows that it no longer needs a consistent image of the file or range of bytes within a file the Copy on Write operations for that file or range of bytes within that file stored in the Snapshot Storage can be disabled. This reduces the overhead associated with maintaining snapshot images and Copy on Write operations.

As shown in . the primary system is connected to a storage device or system and snapshot storage . Storage device and Snapshot storage can be within the same storage facility or system. The storage device or system is for storing a plurality of data blocks from the primary system in one or more storage locations. The term data block will be used to describe a block of data that is written to or read from storage device . The term data block is intended to be broadly construed and should include any size or format of data. For example the data stored in an individual sector on a disk is properly referred to as a data block. The amount of data stored in a group or cluster of sectors may also properly be referred to as a data block. If the storage device is a RAM or other word or byte addressable storage device the term data block may be applied to a byte a word or multiple word unit of data.

The disclosed embodiments use a static snapshot of all or part of the storage device during the backup process and snapshot storage generally comprises a memory device for storing data blocks or files of the storage device to create a static snapshot of the storage device at a particular point in time. The snapshot storage device or system can include any suitable type of writable storage device such as RAM EEPROM or magnetic disk storage. The snapshot storage device can also be a portion of the storage device .

The backup system of generally comprises backup storage for storing data blocks and files that received from the primary system . The backup storage device can include any type of storage device capable of storing blocks of data received from a primary system. For example the backup storage device could include a storage device identical to the storage device of the primary system . In one embodiment the backup storage facility may not be separate from the primary facility . If the backup storage device is the same as or serves as the storage device of the primary system the backup storage system or device can closely mirror the storage device of the primary system . The type of storage devices that may be used for backup storage is limited only by the particular application where they are utilized.

In one embodiment in order to transfer data between the primary system and backup system a backup transport link can be used. In alternate embodiments any suitable system and method can be used to transfer data between the primary system and the backup system . The backup transport link may comprise any combination of hardware and or software needed to allow data communications between the primary system and the backup system . For example backup transport link may be a local area network LAN a wide area network WAN a dial up connection using standard telephone lines or high speed communication lines the internet or any other mechanism that allows data to flow between the primary system and the backup system .

Referring to one embodiment of a system incorporating features of the present invention is illustrated. The system generally comprises a file system or other data and information storage facility such as for example a database. The system shown in generally includes files which store or hold data and information. In alternate embodiments the original files can include any suitable number or size of files. If a snapshot is taken of the original files of the system as of a certain point in time the data is shown stored in files . In this example shown in a snapshot of the files is taken as of 12 00. This creates a SNAPSHOT file system which generally includes pointers P P that point to the actual location where the data resides. The snapshot provides a view to the way the data files appeared at 12 00.

Referring to if in the system of a change is attempted to be made file and Copy On Write enabled this results in the original 12 00 data from location being copied to another or new storage location shown as in . Before a WRITE operation occurs with respect to data block of the data from block is copied to the new storage location and the pointer P is changed to point to the new location . The data in block can then be overwritten with the new data now referred to as 12 30 data in block . The pointer P of now points in to the data block . This Copy On Write process which otherwise remains active during the entire backup process requires the allocation of additional storage copying of data files and the changing of pointers. However in order to reduce the overhead associated with this Snapshot and Copy on Write process the disclosed embodiments allow the Copy on Write functionality for a file or range of bytes within a file or files to be disabled as the backup process progresses 

Referring to one embodiment of a method incorporating features of the present invention is illustrated. In Applicant s invention a snapshot is taken of the original files as of a certain point in time which in the example related to was 12 00. As noted previously the snapshot shown in has pointers P P that point to the location of the original data as of 12 00 shown in locations . After the snapshot is taken the backup of the system commences . As the backup of the files or data of proceeds the system determines when the backup of a certain file s or portion s thereof is complete. A file can comprise any number of bytes and some files can be in the terabyte range. The disclosed embodiment can backup a file as a whole and can also segment a file into ranges of bytes. The system notifies the file system that the backup for the data in a file or range of a file is complete . Once this backup is complete the system will disable the Copy on Write capability for that file or range of a file. Thus any subsequent update to that data block is ignored from a snapshot perspective. The system determines if the backup is complete. If not complete the backup process is continued. If the backup of the original files is complete then the process ends and the snapshot can be discarded or deleted. In one embodiment an API into the file system tells the file system that the backup for a file range of files or block of data is complete and that copy on write can be disabled respectively.

For example referring to the snapshot includes the view of the system as it appeared at 12 00 and at 12 00 the backup of the original files commences. Once the backup of data block is complete at for example 1 00 the system is notified that the backup is complete and the Copy on Write capability is disabled for block . If a change is attempted to be made to block subsequent to 1 00 say for example 1 15 the WRITE operation to that block is enabled and the change to that block occurs without any Copy on Write. Referring to the block holds the 1 15 data and the snapshot does not include a pointer to block .

Another example is illustrated with respect to . A snapshot is taken of the original file system as of 12 00 and the backup commences. At 12 30 a change is attempted to be made to file of . Before any WRITE operation is enabled 12 00 data of is copied to a new location . The pointer P is similarly adjusted so that it now points to the new location of the 12 00 data that original resided in block of . Block of now holds this 12 30 data.

Referring to at 1 00 the backup of block of is complete. The Copy on Write functionality for block is disabled. If at 1 15 a WRITE operation occurs with respect to block the 12 00 data is replaced with the 1 15 data as reflected in block of .

Referring to subsequently but prior to the completion of the backup of block at 1 30 an attempt is made to WRITE to block of . Before the WRITE operation is enabled the 12 00 data of block is copied to a new location block in . The pointer P is adjusted so that it points to the new location of the 12 00 data. Block will then hold the new 1 30 data that is written.

As noted above since files and file systems can be large the disclosed embodiments can work with smaller ranges of files and file system. For example referring to the pointer P points to data block . The data block can comprise any suitably sized storage facility. For example in one embodiment data block may comprise a storage facility with a terabyte magnitude of storage capacity. In alternate embodiments block can include any size data storage device or facility other than including a terabyte magnitude of storage capacity. As shown in the data block or any other file or data block of can be divided up into one or more blocks or ranges A Z. Pointers PA PZ are shown between each range or division A Z and the snapshot .

By dividing the data block or file of into a number of smaller files A Z the backup process can backup each smaller file or range of file A Z. As the backup for each file in the range A Z is completed the Copy on Write functionality for the particular completed range can be disabled. Thus the system does not need to wait for the entirety of a particular block of data or files of to be complete before being able to disable Copy on Write. The disclosed embodiments eliminate the need to enable Copy on Write for the entirety of a particular file. Rather the backup can be completed with respect to a smaller range which can be accomplished faster than an entire file and the copy or write can be disabled with respect to that particular range.

In one embodiment the present invention allows a range or ranges of data to be backed up in a priority order. For example it may be desirable to disable Copy or Write for the most active files as soon as possible during the backup process. The files to be backed up can be sorted in the order of preference which in this example would be the most active file. In alternate embodiments any suitable ordering or preference can be utilized. As soon as each file or each designated portion or range thereof is successfully backed up the Copy on Write for the completed file or portion thereof is disabled.

In another embodiment it may be desirable to only backup some of the files subsets of files or ranges of all the original files in a system. This could occur in a testing environment when for example a new piece of software is being evaluated and it is desirable to select files for continued snapshot copy on write support while ignoring all other files. In one embodiment an application programming interface API can be created where users can select files for continued COW support. Some examples for such an API can include selection by filename directory tree and file name extension. In alternate embodiments any suitable API can be created. The API allows the user to select only files needed to be active in the snapshot.

Since it may not be possible to perform a limited snapshot of only some of the files in the system a snapshot is taken of all the files such as snapshot in . The application programming interface can then selectively turn off the Copy on Write functionality for every file except those files where the backup needs to be complete as of a certain point in time before any new changes are written. Thus the Copy on Write functionality is maintained for only those files necessary for the particular testing. As these files are backed up the Copy on Write can be disabled in accordance with the features of the disclosed embodiments.

Backup processing for very active and very large file systems would realize a significant performance improvement in terms of CPU utilization reduced IO and reduced disk consumption. Overall file system and system performance would also improve as a result of a more efficient backup process.

The present invention may also include software and computer programs incorporating the process steps and instructions described above that are executed in different computers. is a block diagram of one embodiment of a typical apparatus incorporating features of the present invention that may be used to practice the present invention. As shown a computer system may be linked to another computer system such that the computers and are capable of sending information to each other and receiving information from each other. In one embodiment computer system could include an origin server or computer adapted to communicate with a network such as for example the Internet or an Intranet. Computer systems and can be linked together in any conventional manner including a modem hard wire connection fiber optic link or such other suitable network connection. Generally information can be made available to both computer systems and using a communication protocol typically sent over a communication channel or through a dial up connection on ISDN line. Computers and are generally adapted to utilize program storage devices embodying machine readable program source code which is adapted to cause the computers and to perform the method steps of the present invention. The program storage devices incorporating features of the present invention may be devised made and used as a component of a machine utilizing optics magnetic properties and or electronics to perform the procedures and methods of the present invention. In alternate embodiments the program storage devices may include magnetic media such as a diskette or computer hard drive which is readable and executable by a computer. In other alternate embodiments the program storage devices could include optical disks read only memory ROM floppy disks and semiconductor materials and chips.

Computer systems and may also include a microprocessor for executing stored programs. Computer may include a data storage device on its program storage device for the storage of information and data. The computer program or software incorporating the processes and method steps incorporating features of the present invention may be stored in one or more computers and on an otherwise conventional program storage device. In one embodiment computers and may include a user interface and a display interface from which features of the present invention can be accessed. The display interface and user interface could be a single interface or comprise separate components and systems. The user interface and the display interface can be adapted to allow the input of queries and commands to the system as well as present the results of the commands and queries. For example primary system of may comprise processor means for executing programmable code means. The processor means may be a microprocessor or other CPU device. The processor means may also comprise various special purpose processors such as digital signal processors and the like. Primary system may also comprise other traditional computer components such as display means for displaying output to a user input means for inputting data to primary system output means for outputting hard copy printouts memory means such as RAM ROM EEPROM and the like.

In one embodiment a computer program product comprises a computer useable medium having computer readable code means embodied therein for causing a computer to reduce copy on write activity during snapshot backup processing. The computer readable code means in the computer program product can comprise computer readable program code means for causing a computer to create a snapshot of a file system computer readable program code means for causing a computer to disable copy on write processing for each file in the file system when a backup of the file is complete.

Snapshots created for backup purposes are typically deleted once the backup process has completed. Expensive COW operations are usually done to maintain the integrity of the snapshot until the snapshot is deleted. The disclosed embodiments enhance current snapshot technology by allowing applications such as backup to disable COW operations on the fly for an entire file or a range of bytes within a file. If the application knows it no longer needs a consistent image of the file in the snapshot perhaps because it has already processed that file it may wish to disable COW operations for that file thereby reducing CPU I O and disk space overhead.

It should be understood that the foregoing description is only illustrative of the invention. Various alternatives and modifications can be devised by those skilled in the art without departing from the invention. Accordingly the present invention is intended to embrace all such alternatives modifications and variances which fall within the scope of the appended claims.

