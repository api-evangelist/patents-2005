---

title: System and method for coordinating network incident response activities
abstract: The present invention provides a system and method to process information regarding a network attack through an automated workflow that actively reconfigures a plurality of heterogeneous network-attached devices and applications to dynamically counter the attack using the network's own self-defense mechanisms. The present invention leverages the security capabilities present within existing and new network-attached devices and applications to effect a distributed defense that immediately quarantines and/or mitigates attacks from hostile sources at multiple points simultaneously throughout the network. In a preferred embodiment, deployed countermeasures are automatically lifted following remediation activities.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850565&OS=08850565&RS=08850565
owner: Hewlett-Packard Development Company, L.P.
number: 08850565
owner_city: Houston
owner_country: US
publication_date: 20050110
---
The present invention relates generally to methods and apparatus for reconfiguring network devices and more particularly to coordinating countermeasures to quarantine or mitigate and survive events affecting the security of a computer network.

Benefits of the Internet and computer networking have followed Metcalfe s law which states that interconnecting n number of devices results in n squared potential value. Expanding in value networks are increasingly targeted by activists criminals terrorists and military forces. Attacks are escalating in frequency and sophistication. Pandemic societal dependence on computer networks has heightened the repercussion of successful attacks.

An attack in the context of this invention includes any event and associated consequence s which can result in network disruption or compromise. Examples include but are not limited to physical phenomena such as vandalism theft fire explosions power failure and cyber occurrences such as packet flooding subverting a system for unauthorized activities and unauthorized access to information.

Protection schemes are effective at defeating attacks that are manifested through predictable behavior and consequence. Protection schemes establish contingency courses of action before an attack takes place.

The traditional methodology for defending computer networks is deterministic where a fixed security policy based on a protection scheme leveraging prevention and detection technologies is selected then deployed. Security policies in these environments are often absolute where network traffic of a given type is either permitted or denied and change to policy is only implemented following approval from a centralized authority. This methodology is rigid and equivalent to the Maginot Line where static defenses proved ineffective in an aggressive and rapidly evolving threat environment.

Restoration schemes are needed to defeat or mitigate attacks and consequences that are not predicted and or allocated defensive resources. Restoration schemes facilitate an extensible recovery from attacks which bypass or overwhelm system defenses. Restoration schemes identify contingency courses of action during or immediately following an attack.

Survivable networks are considered attack tolerant enabling continued operations while under attack. Information assurance is achieved by ensuring confidentiality integrity and availability. The general approach to building survivable networks and providing information assurance through innovations of the prior art has focused primarily on protection schemes using prevention and detection methods. The growing trend in successful cyber attacks against enterprise and service provider networks has proven that prevention and detection technologies are increasingly defeated and therefore incapable of providing absolute immunity to attack.

Deterministic methods do not scale nor adapt to change efficiently. Complexity and operating costs increase as new software patches rule sets attack signatures and additional security controls are provisioned to prevent exploitation of potential vulnerabilities associated with maintaining and or expanding the number of users applications and interconnections across a computer network. Complicating network predictability and contingency planning are non static environments with a high rate of change as is prevalent with the advent of ubiquitous Internet accessibility wireless connectivity and mobile computing.

Any significantly complex heterogeneous network of networks such as the Internet can survive and tolerate future attacks only if defended in a non deterministic probabilistic manner where behaviors of the system are difficult to predict exactly but the probability of certain behaviors is known. Instead of considering only the most likely situations probabilistic approaches strive to compute a decision theoretic optimum in which decisions are based on all possible contingencies.

Deploying the most cost effective defense in depth solution for network survivability requires a combination of centrally managed and autonomous distributed security controls using a hybrid approach of both protection and restoration schemes implemented through a security model balancing prevention detection and incident response in accordance with the threat environment.

Warhol worms and other flash attacks have the potential to spread across the Internet and interconnected networks to impact every attached device and application within minutes or seconds. While many conventional solutions for attack prevention and detection have been developed comparable emphasis has not been placed on incident response. The many possible settings for firewalls intrusion detection devices routers switches virus scanners and other devices and applications that affect security result in a complexity far exceeding the capability of individuals to make optimum decisions in anything approaching near real time. Many organizations rely on staff and contractors to manually implement incident response actions after an attack has impacted the operation of the network. Without an effective means to immediately contain suspicious behavior or resist an attack events that circumvent preventive defenses often inflict substantial levels of damage between the time the detrimental activity is detected and the time by which countermeasures or contingency courses of action are implemented.

In view of the problems present in the related art it is a first object of the present invention to provide an Incident Response Action System IRAS that can facilitate and track incident response workflows and coordinate countermeasures in near real time to quarantine and or mitigate and survive dynamic events affecting the security of a computer network.

It is a second object of the present invention to collect and accept Attack Event Targeting Information AETI from a plurality of input sources. AETI is data specific to a given attack which is used to identify the priority source destination and or consequence of the attack.

It is a third object of the present invention to collect and accept security capabilities and topology data for different and varied communities of network attached devices and applications from a plurality of input sources.

It is a fourth object of the present invention to identify optimal countermeasures and or contingency courses of action in a non deterministic manner specific to AETI weighted against security capabilities and topology data known for varied communities of network attached devices and applications.

It is a fifth object of the present invention to deploy countermeasures across a plurality of network attached devices and applications specific to an in progress attack.

It is a sixth object of the present invention to deploy countermeasures across a plurality of network attached devices and applications specific to an attack believed to be imminent.

It is a seventh object of the present invention to remove countermeasures across a plurality of network attached devices and applications specific to an attack that no longer presents a threat to the environment.

To achieve these and other objects the present invention communicates with a plurality of varied and different input sources network attached devices and applications without requiring although optionally supporting a software agent to be loaded on these input sources network attached devices and applications and without requiring a prior deployment of devices throughout the network dedicated only to security enforcement.

The present invention will now be described more fully according to preferred embodiments. The invention may however be embodied in many different forms and should not be construed as being limited to the embodiments set forth herein. Rather the embodiments are provided so that this disclosure will be thorough and complete and will fully convey the concept of the invention to those skilled in the art.

The purpose of the present invention is to enhance network operations by providing a comprehensive Incident Response Action System IRAS built upon a highly available platform and combining the following primary components input handlers to accept Attack Event Targeting Information AETI from multiple input sources a virtual directory service for authentication and authorization of users devices and applications a knowledge base of network resources a probabilistic analysis engine and expert system a near real time transaction queue reporting and notification capabilities plug in drivers for conducting agent less reconfiguration tasks across network attached devices and applications and a communications strata virtual bus which interconnects each of these components. These primary components and their architecture are depicted in .

The preferred embodiment is designed as an information warfare multiplier providing command and control to many virtual combat support systems of varied and different capabilities. IRAS can be activated in either an autonomous automated or manually directed manner to commandeer resources throughout the virtual landscape as needed to deploy countermeasures ensuring the survivability of the network even when traditional cyber security systems of the prior art may be failing or already defeated by one or more attacks.

IRAS is designed for use during crisis specifically to support emergency operations. IRAS is best described operating on an orthogonal axis with respect to the general management plane associated with operational support systems network attached devices and applications within an organization. It is anticipated that the network attached devices and applications that IRAS calls upon to support contingency courses of action are generally operationally managed by other methods and systems during routine operations.

National Institute of Science and Technology NIST Special Publication 800 61 Computer Security Incident Handling Guide dated January 2004 identifies the incident response practice as having four steps as listed below 

The preferred embodiment is designed primarily to support the last two steps of the NIST incident response recommended practice Containment Eradication and Recovery and Post Incident Activity. Prevention and detection systems of the prior art generally support the first two steps Preparation and Detection and Analysis.

The preferred embodiment is delivered as a hardened purpose built appliance combining both hardware and software in a single product which is then attached to an organization s network. In an alternative embodiment IRAS is delivered as software which can be rapidly brought online using an existing network attached platform without requiring permanent installation through the use of a bootable Live CD Live DVD Compact Flash USB Storage Device or other portable media or electronic device. In a further alternative embodiment IRAS is delivered as licensed technology for use embedded within a larger solution.

The preferred embodiment includes various built in cyber security controls designed to safeguard the confidentiality integrity and availability of the IRAS runtime environment. These host based protections may include an internal firewall intrusion prevention detection and anti virus functions in addition to other defenses. Each built in security service records activities to the IRAS event and audit logs and may be configured to generate notifications and or trigger self defense actions if the IRAS platform comes under direct attack.

The preferred embodiment uses the Advanced Encryption Standard AES algorithm to encrypt all passwords and other sensitive data stored in the database. No clear text passwords are stored on IRAS permanent storage media to include flash memory hard disk drives and optical discs. In an exemplary embodiment the encryption software library can be easily field upgraded as improved algorithms are developed.

IRAS includes a built in function that can be exercised by an administrator to purge all operational data returning an instance to the factory default or initial state. In some embodiments IRAS provides a failsafe function for zeroing encryption keys and other sensitive information automatically when any of the built in security services detect a system or platform compromise.

Each IRAS instance is composed of multiple input and output interfaces an integrated database to support the internal directory service knowledge base transaction queue and reporting functions and various supporting back end processes including a watchdog service which provides self monitoring to restart any individual process upon failure. IRAS also includes a library of plug in device drivers generic templates and supplementary software tools for use with discovering and controlling varied and different network attached devices and applications. These underlying elements are depicted in .

The preferred embodiment optionally supports a plurality of virtual IRAS instances simultaneously running on a singular set of hardware or common platform as depicted in . Multiple instances allow for clear delineations with respect to operational authority and risk avoidance where both the administrator and operational functions of a given IRAS instance can be configured to have no implicit access whatsoever to another instance s operational functions and data.

The preferred embodiment includes a built in data backup function which can transmit an encrypted backup image of IRAS operational data in accordance with an optional schedule and also on demand when directed by an administrator. In the event an IRAS instance fails during operation the previous state can be restored to either the original new or another known good IRAS platform or virtual instance by restoring the backup image and encryption keys.

To support system tests post incident forensics analysis and war gaming what if scenarios the preferred embodiment supports point in time checkpoints and immediate rollback to a previously created checkpoint restoring the operating state of an IRAS instance to a specific moment in time. An administrator can set IRAS to establish a point in time checkpoint on demand by schedule or upon triggered event. Each checkpoint represents a full system backup of the IRAS instance created near instantly using local storage and snapshot technology. The built in backup function uses a checkpoint image to perform backups while the system continues to operate non stop requiring only a momentary pause in IRAS transaction processing.

In addition to the built in backup and point in time checkpoint functions the preferred embodiment may be set to spool all activities to a journal. By default the journal is used to maintain a copy of all transactions and changes within an IRAS instance starting from the last full system backup or checkpoint keeping a record of all change until the next full system backup or checkpoint is completed. If needed an instance can be restored first using the last available backup or checkpoint and second using the journal. Optionally the journal can be used separate of the backup and checkpoint functions in a cyclic mode where an administrator sets the journal to track the last n changes. Under both the default and cyclic modes of operation the journal enables an administrator to review undo and replay each action processed within an instance that are currently recorded within its journal.

The preferred embodiment supports optional high availability implementations where multiple IRAS instances can be configured to operate as a cluster with three clustering modes 

In the first clustering mode failover clustering two or more instances are joined in a configuration for failover where one instance operates as the primary active node while the secondary and any additional instances operate in standby ready to assume the role of the primary node in the event of failure. With failover clustering each instance is assigned a succession value that identifies which instance will operate as the primary node. Failover clustering is configured as either stateful or non stateful. Stateful failover generally requires low latency data exchange between nodes given that all changes and transactions aren t marked as complete until each action is replicated across all instances. Non stateful failover periodically replicates changes and transactions in batch mode across all instances alleviating minimum latency requirements.

In the second clustering mode distributed computing clustering any number of instances can be configured for load balancing using distributed and parallel computing techniques where one or more nodes perform load distribution across the remaining nodes in the cluster. In this distributed computing clustering mode failover clustering can also be applied across load distribution nodes to provide a chain of succession in the event an individual load distribution instance fails.

In the third clustering mode loosely coupled clustering any number of nodes can be assigned to participate in a loosely coupled cluster where multiple IRAS instances are configured to share a common object oriented data cache. When operating in this mode objects within the shared cache are replicated across all nodes within the cluster. Each object in the shared cache has an assigned owner where all nodes are granted read access to the object but only the node assigned as owner possesses write access to the object. Each node manages data exchange between its internal databases and the shared cache using a cluster relationship matrix which maps objects for import export or no action between the internal database and the shared cache.

The preferred embodiment provides a virtual directory service for storing user and system authentication credentials access rights and meta data specific to the operation of each IRAS instance. The virtual directory is comprised first of an internal directory that supports the IRAS specific role based hierarchal access control model and second facilitates access to any required external directory services. The directory structure allows for access control lists roles objects and containers. Access control lists and roles equate to permissions objects may define users devices functions and applications and containers may consist of grouped objects and or grouped containers. Permissions can be applied to any object or container.

IRAS supports interoperability with a plurality of external directories where credentials submitted by an input source or other mechanism can be authenticated against either the internal directory or one or more external systems. All communication between the IRAS virtual directory and any external directory is performed using a directory connector construct which requires a device driver for the external directory service and a directory relationship matrix. The directory relationship matrix is used to map filter and translate data for proxy import export or no action between directories. The preferred embodiment provides directory device drivers to interoperate with other IRAS instances Lightweight Directory Access Protocol LDAP Remote Authentication Dial In User Service RADIUS Terminal Access Controller Access Control System TACACS Network Information System NIS Yellow Pages and Microsoft Active Directory services.

IRAS can be configured to perform automatic directory synchronization across multiple instances. Instances are assigned to a domain . Instances may be members of only one domain. By default an independent instance is a member of its own domain and all instances within a failover cluster or distributed computing cluster are members of the same domain. Directory information is replicated across all instances within the same domain enabling centralized directory management without requiring a centralized directory. Directory replication between instances is implemented as a special type of loosely coupled clustering.

IRAS optionally supports a hierarchal implementation of one and two way trusts through the use of realms . A realm is used to establish trust relationships between domains where administrators of different domains jointly establish access to functions and resources within one domain from another. Shared access can be granted to specific actions and objects limited by roles and access control lists. Trusts are identified by realm domain function and resource. Domains may join multiple realms and a realm may consist of multiple trusts. A first domain that is trusted can access shared functions and resources as defined by the trust relationship in a second domain which is trusting. Trusts are limited to realm boundaries which prohibits a trusted domain from accessing resources or functions available within a trusting domain but which aren t assigned to the specific realm identified in the trust relationship.

Given the appropriate trust relationships both peered and hierarchal organizations can be established for domains within realms. In one example all domains in a realm are peered and allowed to share reporting information between domains. In another example many domains are subordinated to a master domain which is granted access to all available countermeasures within the given realm.

The flexibility provided through the use of clustering directory interoperability domains and realms enables IRAS to meet the varied operational control requirements present within many customer organizations.

Intelligence is a key component of information warfare. IRAS assists an organization with situation awareness by providing reporting and graphing capabilities to review all active and past countermeasure activities and AETI. The ability to visualize the virtual landscape using an overlay of the impact from deployed countermeasures across the network topology is a powerful tool serving both tactical and strategic cyber defense planning. IRAS incident reports maps and trend analysis graphs facilitate subsequent security assessments and follow up forensics investigations.

The preferred embodiment provides a built in incident handling system which provides template based incident reporting ticketing escalation and notifications. Varied and different templates can be established within IRAS to suit custom reporting and notification requirements. Report and notification formats support the previously largely human intensive dimension of the prior art incident handling process. Both automated and manually developed incident reports can be generated and maintained by the system and sent on demand by schedule and based upon a triggered event using a variety of output methods to a plurality of destinations.

The preferred embodiment supports Extensible Markup Language XML message input and output. IRAS supports requirements for the Application Vulnerability Description Language AVDL Incident Data Exchange Format IODEF Data Model and Format for INcident information Exchange FINE . IRAS is designed to transmit and receive scheduled and on demand summary and detailed reports to from subordinate adjacent higher and external organizations as needed to meet customer requirements especially within the United States Federal government and Armed Forces.

IRAS provides a web based user interface a command line interface a local console interface and a plurality of extensible application programming interfaces available through multiple protocols. IRAS includes each of these interfaces for accepting input and presenting output.

The preferred embodiment supports a variety of electronic communications from multiple input sources which are capable of providing an alert. Supported input sources include but are not limited to automated or manual operator input via the web based user interface command line interface or console interface receipt of an alert via an application programming interface receipt of an alert via one of the IRAS supported communication protocols receipt from a configured pull subscription service and or receipt from a configured push subscription service.

IRAS supports two forms of subscription service push and pull. Push subscription services are data feeds from one or more external sources that push updates to IRAS. Pull subscription services are data feeds that an IRAS instance pulls from one or more external sources.

IRAS can optionally be configured per subscription service as a proxy or gateway where an organization with multiple IRAS instances can configure one or more downstream IRAS instances to exchange subscription content through one or more proxies and or gateways. An IRAS proxy will exchange data with subscription sources on behalf of downstream instances aggregating content and optionally masking the identity of downstream instances. When operating as a gateway IRAS will relay data with subscription sources for downstream IRAS instances where downstream IRAS content is not aggregated nor identity masked as is often required to support the end to end encryption and authentication demands of a given subscription service provider.

In the preferred embodiment caching and time shifting are available options for use with the IRAS subscription proxy where subscription content is buffered at the proxy to allow asynchronous bidirectional communication between the subscription service and proxy and the proxy with downstream IRAS instances. Caching enables the proxy to optionally aggregate content exchanges in either or both directions where n exchanges with a given subscription service are reduced to fewer than n exchanges with downstream instances and vice versa.

Some embodiments provide optional filters that can be associated with specific input and output sources and data exchange actions to include trust relationships cluster and directory relationship matrices and subscription services. IRAS provides a macro and regular expression rule base for applying filters. Filtering can be used as a security control with respect to data exchange limiting which data to from a given source is permitted and or excluded. Filtering can also be used to assign priorities to the types of data received and transmitted. Filtering can be configured and applied at varying levels from specific data exchange activity to a given instance domain trust and realm.

Supported output methods for notifications incident reports and other information include but are not limited to the web based user interface command line interface local console interface Simple Network Management Protocol SNMP traps System Log SYSLOG events directed document upload and download email instant messaging pager fax voicemail and telephone. These notifications can be directed at external notification systems external management systems and users based on triggered events.

IRAS supports a number of communication protocols which allows for interoperability with varied and different external systems. Example protocols which can each be optionally enabled by the administrator include but are not limited to Rsync Telnet Secure Shell SSH Secure Copy SCP SNMP File Transfer Protocol FTP Trivial File Transfer Protocol TFTP Hyper Text Transport Protocol HTTP Secure Hyper Text Transport Protocol HTTPS Simple Object Access Protocol SOAP Extensible Markup Language Remote Procedure Call XML RPC Domain Naming System DNS Border Gateway Protocol BGP Open Shortest Path First OSPF and Real Time Inter Network Defense against Denial of Service RID DoS .

IRAS supports a variety of integration adapters for use with external systems . Integration adapters act as middleware between external systems and IRAS . Integration adapters provide a bridge between the native methods of external systems with the supported IRAS communication protocols and application programming interfaces. Integration adapters are primarily used to tie together input and or output sources between IRAS and external systems enabling in one example automating alert transmission from an external system into IRAS and providing reporting feedback back to the external system after IRAS completes processing activity associated with the given alert. The preferred embodiment will provide optional integration adapter software for external systems such as firewalls intrusion prevention and detection systems security information management systems vulnerability management systems network management systems enterprise management systems virtual private network gateways managed security monitoring sentries help desk ticketing systems customer relationship management systems and other incident handling systems. The relationships between IRAS and external systems through the use of integration adapters and device drivers are displayed in .

IRAS can be actively monitored via SNMP for use with external management systems and a documented Management Information Base MIB is provided for externally tracking and establishing thresholds for IRAS specific activities.

The preferred embodiment supports Extensible Messaging and Presence Protocol XMPP as one means of exchanging data and command structures natively between IRAS instances through the use of data streams. XMPP is a general purpose protocol not limited to its origins with instant messaging and presence and uses XML as the syntax for its protocol elements. IRAS instances can be configured as either server or client nodes with respect to XMPP. XMPP streams are unidirectional so bidirectional communication requires two separate streams. XMPP as implemented within IRAS is configured to support Simple Authentication and Security Layer SASL for authentication and Transport Layer Security TLS for encryption.

The preferred embodiment supports automatic and assisted discovery of network attached devices applications and other IRAS instances. IRAS accepts authentication credentials for accessing the devices applications and other IRAS instances during discovery and supports using previously provided values stored in the knowledge base referenced using macros.

Automatic discovery is performed using a variety of optionally enabled techniques to include ping sweeps trace routes port scans SNMP inquiries attempted HTTP and HTTPS access attempted telnet and SSH login and interrogating previously discovered devices and applications for information regarding neighboring devices. Automated discovery can be restricted by network Internet Protocol IP address ranges and or device or application types.

Assisted discovery allows the operator to provide a list of one or more device or application management IP addresses and optionally identifying the specific device or application type for each management IP address. Assisted discovery also supports importing device and application settings from a variety of data file types external management systems other IRAS instances IRAS backup archive files and additional data sources through the use of an included data import and mapping tool.

IRAS optionally supports recurring and on demand device and application re discovery and configuration polling to ensure settings maintained in the IRAS knowledge base reflect the current state of the environment. An exemplary embodiment supports recurring synchronization of the IRAS knowledge base with a plurality of network and security management systems through the use of optional integration adapters.

IRAS optionally supports accepting device or application settings and or authentication credentials embedded within electronic communications from input sources providing an alert.

Deploying countermeasures against an attack may have a negative impact on business operations. The preferred embodiment allows an organization to input a list of network address ranges host addresses hostnames protocol and application attributes scheduling timeframes and known safe AETI to ensure IRAS does not accidentally or by design deploy a countermeasure against a mission critical business application without sufficient approval authority and or a manual override. These policy based rules are in addition to macro and regular expression filtering capabilities.

IRAS accepts AETI in a variety of alert formats. Data which can be provided in an alert may include addresses described as an individual hostname or host address a Classless Inter Domain Routing CIDR network address with mask or a delimited list of individual hostnames and or host addresses and or CIDR network addresses with masks. IRAS accepts any all or some combination of the following network characteristics specific to an attack start stop and duration timeframes packet count IP protocol number source IP address destination IP address IP or higher level protocol packet header attributes regular expressions for packet payload signature and application specific values associated with select applications and protocols.

IRAS assigns a priority value to each received alert. This priority value may be weighted according to a number of different criteria to include but not limited to the identity of the originating source what priority value the originating source requested date and time the alert was received and specific AETI attributes. The priority value assigned to each alert is used throughout IRAS processing to influence the sequence in which alerts are handled.

IRAS supports two operating modes for processing alerts received from any specifically assigned input source or group of sources autonomous or assisted. In autonomous mode IRAS will parse each received alert from the given input source and automatically execute an action if applicable. In assisted mode which is the default IRAS will hold each received alert in the transaction queue awaiting either approval or rejection from either policy based rules which are applied to all queued transactions at regular intervals or review and decision from an operator or administrator with sufficient rights to review and approve or reject the specific alert.

The preferred embodiment supports workflow rules for queued transactions where higher approval can be optionally required for alerts or other events that match a specific filter which are submitted by a specific operator etc. Workflow behaviors also support automated escalation and notifications for triggered events that match specific rules. Workflow behaviors can be established to modify the priority value assigned to an alert or sequence of alerts.

The preferred embodiment uses a knowledge base to track the current state and connection relationships of available network resources all policy based rules and workflow definitions filters macros and a plurality of additional values required to support IRAS operations. This knowledge base is primarily comprised of information gathered during network attached device and application discovery configuration and status polling data received via subscriptions received alerts past and currently deployed countermeasures and information provided by the IRAS administrator.

The preferred embodiment uses a probabilistic analysis engine and expert system to review alerts in context with data within the knowledge base to first perform Source Path Isolation SPI second to identify Contingency Action Points CAP and third to assemble Command Instruction Tokens CIT which are processed within the IRAS near real time transaction queue as child transactions to the parent alert transaction.

Source Path Isolation SPI is a function which dynamically identifies a candidate set of devices and applications from the available network topology which are relevant based on AETI characteristics. IRAS benefits from SPI by reducing the number of devices and applications that must be further reviewed to determine which countermeasures are required against a given attack. In a first example SPI identifies border devices specific to an attack sourced outside the topology. In a second example SPI identifies all devices along each logical path from source to destination of an attack which transits through the topology. In a third example SPI identifies all devices within the topology which are vulnerable to a specific attack.

IRAS generates the Contingency Access Points CAP candidate coordination list through a review process that considers each device and application identified by the SPI function. This analysis determines the most effective set of countermeasures against an attack using the current state and availability of security capabilities for each device and application. The CAP list may be weighted based on asset value damage assessment potential business impact and other factors. One or more CAP assignments may be made per device or application. In the event IRAS is unable to identify a countermeasure to quarantine and or mitigate an attack an error message is generated and a default action and or notification can be performed based on settings defined by the administrator.

The probabilistic analysis engine and expert system assigns a globally unique id for each CAP. This globally unique id is used as a reference pointer for each CAP mapped to a specific countermeasure at a specific device or application within the topology. Through the use of the unique id each CAP can be managed individually if required to include transaction grouping replay rollback extending duration and reporting.

When the probabilistic analysis engine and expert system has finalized the CAP list Command Instruction Tokens CIT are assigned for each CAP. CIT represent the action required for each CAP. The probabilistic analysis engine and expert system then submits the CAP list with CIT assignments to the transaction queue which assigns a mission number . During submission the CAP list and CIT assignments may be divided into multiple transactions generally using one parent transaction for the mission and one child transaction per CAP CIT assignment in the list. Transaction relationships are maintained for each mission where a plurality of child transactions may be associated with one or more parent transactions.

Transactions are processed and tracked through the near real time transaction queue where this queue acts as the primary mission scheduler for each IRAS instance. The transaction queue uses a serialization function to ensure all transactions are evaluated serially across a given device ensuring that IRAS can communicate with multiple devices concurrently in parallel but will only communicate with any specific device in a serial manner to avoid potential race conditions between multiple transactions which act upon the given device.

All transactions have an assigned priority timestamp and state which are then reviewed and updated as each transaction passes through the queue. IRAS handles the queue using a collection of multitasking processes which divide the current number of transactions in the queue into sets where each set is ranked based on priority time sensitive requirements measured against true wall clock time and transaction state. In the event of a tie within a set or by default given no other requirements transactions are processed in a first come first served manner.

For each transaction associated with a network device or application IRAS performs the device specific aspects of the transaction through a device driver which is designed to query and or modify the given network device type and or application version.

IRAS supports varied and different communities of network attached devices and applications through the use of extensible plug in device drivers . The preferred embodiment is designed to interoperate with existing and future heterogeneous network attached devices and applications leveraging both existing and future resource investments associated with the operation of the network environment. IRAS enables an existing investment in virtual deterrence to evolve toward supporting a self defending network.

Device drivers can be added to and removed from an IRAS instance as the models and versions of network devices and applications within an organization s network change over time. With some embodiments an IRAS vendor may only provide and support drivers for a limited range of network device models and application versions where end users may develop custom drivers to manage any additional device types. In the preferred embodiment third parties may publish open source and or proprietary device drivers making these additional drivers available on the open market or bundled within value added IRAS bundles. New drivers may be released to provide additional functionality within the IRAS application.

Device drivers translate IRAS transaction syntax for each CIT into device specific communications and command instructions. Device drivers are used to execute instructions within the context of the network device or application associated with the given transaction collect and parse the response messages from each instruction and provide feedback back to the IRAS transaction queue.

In summary the preferred embodiment is designed to on demand dynamically focus all applicable security capabilities within a community of varied and different network attached devices and applications to counter an attack and to stand down those countermeasures when the attack no longer presents a threat expires or is removed via manual override. Optionally countermeasures can be handed off as security policy updates via integration with external security management systems network management systems and or enterprise management systems. The preferred embodiment is designed for use primarily during crisis operations.

The foregoing description of a preferred embodiment of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously many modifications and variations will be apparent to practitioners skilled in this art. It is intended that the scope of the invention be defined by the following claims and their equivalents.

