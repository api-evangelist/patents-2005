---

title: Business intelligence system with interface that provides for immediate user action
abstract: A business intelligence system includes a business activity monitor with a data cache to receive and store enterprise data integrated from a plurality of enterprise applications, the data cache being updated in real-time as the enterprise data changes. A computer coupled with the data cache runs a program that produces a graphical user interface on a display. The graphical user interface provides a user with a real-time report of the enterprise data and a page that allows the user to specify at least one action affecting operation of the enterprise. The page also including a button selection of which causes the computer to send a first message designating one or more selected actions to the BAM. In response, the BAM sends a second message to one or more of the enterprise applications to execute the one or more selected actions in real-time. It is emphasized that this abstract is provided to comply with the rules requiring an abstract that will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08165993&OS=08165993&RS=08165993
owner: Oracle International Corporation
number: 08165993
owner_city: Redwood Shores
owner_country: US
publication_date: 20051212
---
This application is a continuation in part of and claims priority to U.S. application Ser. 10 237 559 entitled Enterprise Link For a Software Database filed on Sep. 6 2002 now U.S. Pat. No. 7 454 423 which is incorporated herein by reference.

The present invention relates generally to information technology in a business enterprise more specifically to systems and methods that provide real time delivery of business intelligence information and a platform for resolving business problems as they arise.

A paramount concern in a modern enterprise is the ability to quickly access changing information located on disparate systems and platforms within the enterprise. That is operational managers and executives frequently require real time visibility into the status of their operations and enterprise processes. In order to properly maintain a comprehensive view of the operations and business processes within an organization however information on these systems first needs to be integrated. As an enterprise grows it requires increased flexibility of data sharing throughout its various automated business systems such as customer relationship management CRM enterprise resource planning ERP accounting inventory control and other systems. A practice known as enterprise application integration EAI enables an organization to share data throughout applications and data sources in an organization. EAI may include database linking application linking and data warehousing.

Nevertheless there have been numerous shortcomings in the integration and data sharing in information technology IT environments. Independent configuration for disparate technologies and industry standards often make integration requirements difficult to meet. Integrating an existing inventory control system to a new ERP software package for instance may be difficult due to the fact that both systems contain unique features that are customized to fit the requirements of particular areas within an organization. Moreover many EAI solutions contain a confusing web of point to point connections between different applications procedure calls file transfers and e mail type messaging to transmit organizational data. These solutions are thus high risk because of their complexity. Moreover the data within the individual systems is often locked up sometimes in proprietary form difficult to access and not correlated with other systems and platforms. This makes it difficult to obtain a consistent coherent view of all the business data across the enterprise.

Business intelligence BI systems have been developed that combine data gathering data storage and knowledge management with analytical tools to present complex and competitive information to planners and decision makers. Many conventional business intelligence systems include modules and programs that provide visual reporting of information regarding the status and operation of business processes in a full page display panel known as a dashboard . By way of example Syspro Company of Costa Mesa Calif. offers a CRM software product that includes an intuitive dashboard for displaying BI information gathered from various business activity groups marketing service sales accounting etc. . A system in which an online connection provider delivers services to sellers via a dashboard report that includes metrics such as item sales top line highlights and an executive summary is described in U.S. Patent Publication 2005 0197946. Additionally U.S. Patent Publication 2005 0108655 teaches a computer method for displaying multiple applications at a time on a window browser or dashboard display area. U.S. Patent Publication 2005 0120051 discloses an architecture and system for integrating online transactional processing OLTP systems with an analytical processing OLAP system. A user interface presentation layer of the architecture is configured for dashboard display of a report run on the OTLP and OLAP data.

A primary drawback of these prior art systems is that they require separate applications or systems for reporting the BI information on the dashboard screen and then taking direct action based on the data displayed. For example an operational manager who first learns of a problem based on information presented in a dashboard report is typically required to switch to a completely different application or system in order to take action aimed at correcting or alleviating the problem.

What is needed therefore is an enterprise system that enables a viewer of a real time business activity monitoring dashboard to take immediate action from the dashboard environment without having to employ a separate system or application.

The present invention provides a business intelligence system and method that allows a viewer of a real time dashboard display or report to take immediate action directly from the dashboard environment i.e. on the screen where the data is being displayed . In the following description numerous specific details are set forth such as the particular configurations data acquisition methods and architectural details of specific embodiments in order to provide a thorough understanding of the present invention. However persons having ordinary skill in the communication arts will appreciate that these specific details may not be needed to practice the present invention.

Practitioners in the arts will understand that specific implementations of the systems and component elements described in the present application can be realized in digital electronic circuitry integrated circuitry application specific integrated circuits ASICs computer hardware firmware software and or combinations thereof. Computer software or firmware code is typically executed on a programmable data processor that comprises a number of basic subsystems including a processor subsystem a main memory and an input output I O subsystem. Data is transferred between main memory system memory and processor subsystem over a memory bus and between the processor and I O subsystems over a system bus. Examples of the system bus may include the conventional lightning data transport or hyper transport bus and the conventional peripheral component computer interconnect PCI bus. Each computer node may also comprise other hardware units modules coupled to the system bus for performing additional functions. The processor subsystem may comprise one or more processors and a controller device that incorporates a set of functions including a system memory controller support for one or more system buses and direct memory access DMA engines.

Additionally to provide the user interface described below the systems and techniques described here can be implemented on a computer having a display device e.g. a cathode ray tube or liquid crystal display monitor for displaying information to the user and a user input device such as a keyboard and or a cursor device e.g. a mouse a touchpad or a trackball . Input commands may also be applied through the use of known speech recognition tools. Other kinds of devices can be used to provide data and sensory feedback information to the user as well for example visual feedback auditory feedback or tactile feedback.

Referring now to there is shown a block diagram of a message based event driven memory resident architecture utilized in accordance with one embodiment of the present invention. Included in is an enterprise computing runtime environment that may comprise single purpose and or multi purpose applications designed to perform various functions within an organization e.g. inventory finance accounting sales force automation human resources etc. . The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

In the example of enterprise computing runtime environment is shown including a plurality of software applications such as back office applications for enterprise resource planning ERP front office applications for customer relationship management CRM customized legacy systems and multi dimensional relational database management systems RDBMS . Enterprise computing runtime environment may also include various known applications or external systems. Each of these disparate applications systems may be coupled to one another using a local area network LAN a wide area network WAN or any other such networking environments commonplace in offices enterprise wide computer networks the intranet and the Internet. Furthermore the systems may be connected via a wireless network e.g. a wireless LAN.

The enterprise systems that comprise enterprise environment generate store a variety of different data about the organization. For example ERP system may contain data regarding essential business functions including payroll manufacturing general ledger and human resources whereas CRM system may contain core information regarding the organization s customers. As data in these various systems changes e.g. a sale is made a new employee is hired payroll is processed etc. one or more message queuing systems may be used to allow these various applications etc. to exchange information on the data being stored in their systems. By way of example in one implementation a Microsoft message Queue Server MSMQ is utilized for this purpose. Other message queuing systems may be used as well. In MSMQ messages are sent to a queue where they stay until removed and or used by another application.

Included in the architecture of is an enterprise link coupled to enterprise computing runtime environment through a network connection such as the Internet . As is noted above other network connections such as a LAN a WAN a wireless network or any other system of connections that allow one or more computers to exchange information may also be utilized. Enterprise link is a data integration engine that integrates in real time i.e. several seconds the disparate data in the message queues. Enterprise link operates continuously to move transform and load source data into an active data cache . That is enterprise link continuously accepts raw data feeds etc. from the enterprise systems of environment and then reformats synchronizes and consolidates the data.

In a traditional model the data in the message queues would only be processed through the dataflow system when a specified number of records had built up within the message queues i.e. the data would be transmitted in batch mode . According to an algorithm contained within the data flow system of the present invention however individual records are processed through to enterprise link the moment that they appear i.e. the program actively and continuously checks for messages . In this manner real time data flow is transmitted through the raw data feeds via the message queues. Enterprise link may also obtain raw data from enterprise computing runtime environment in a variety of other ways. The data sources may include HyperText Transport Protocol HTTP requests Application Programming Interface API calls or Web Services calls. Source data can also be retrieved from transactional systems data warehouses operational data stores database servers mainframe based flat files and Extensible Mark up Language XML sources. In an alternative embodiment enterprise link may include a web server to process HTTP requests and or another application or server to process API and or Web Service calls.

In addition to the above data sources enterprise link can draw historical data from conventional data warehouses via relational queries. This capability allows the business activity monitoring architecture of the present invention to generate alerts based on comparisons between real time data and rolling averages or other historically derived thresholds.

Regardless of how the enterprise link receives the raw data feeds etc. or which source it is received from enterprise link transmits the integrated data to active data cache ADC via a network connection . In one embodiment ADC is a high performance persistent transacted memory based storage system that supports active data and monitoring. This active data organized in the form in which the end user wishes to see it is the data etc. extracted from the enterprise systems of environment by enterprise link . ADC contains code which may be implemented in software such as Java Perl C or other types of programming languages that can be stored on a computer readable medium e.g. a disk to manage the data etc. that is actively changing within enterprise computing runtime environment and to make the data accessible to the end user in real time. In this way the data etc. in ADC is constantly changing such that it is synchronized in real time with the data in enterprise runtime computing environment . It should be understood that in the context of the present application the term real time refers to the fact that enterprise information is extracted from various sources integrated stored and streamed to a graphical display for viewing by a user within 2 10 seconds from the occurrence of an enterprise event. 

The architecture of further includes an active designer component that determines what data is stored within and the process by which the data etc. is transmitted to ADC . Active designer component is shown connected to enterprise computing runtime environment via the Internet and with ADC via a network connection . In essence active designer component contains one or more lists of data flow definitions or plans on how to operate on the data that is transmitted to active data cache via enterprise link . In one implementation active designer component provides a user interface that allows an architect to create data objects create and schedule data flow definitions import and create metadata and maintain the data objects. The code for the data flow definitions may be implemented in software such as JAVA Perl C C or other types of programming languages that can be stored on a computer readable medium.

To better understand this aspect of the architecture shown in when sales data arrives at ERP active designer component contains a set of data flow definitions on how to retrieve transform and display this data i.e. each data flow definition includes executable software code instructing enterprise link to retrieve the salesperson field whenever a sale is made to describe how many sales that salesperson has made for the day and then to transmit this data to the ADC . The mapping process by which the enterprise link is able to express data from multiple sources through various transformations and to transmit the transformed data to specified destinations is described in more detail with reference to below.

According to the embodiment illustrated by data flow service includes a plurality of data flow plans as well as a data repository which contains one or more lists of data flow definitions on how to operate on the data. Once the lists of data flow definitions have been created they may be stored in a data repository . Note however that it is data flow service that actually executes or edits the data flow plans etc. One exemplary data flow service that can be utilized is the one described in U.S. Pat. No. 6 243 698 entitled Extensible Database Retrieval and Viewing Architecture. Other types of data flow services may be used as well.

Data flow plans etc. include executable code for accessing manipulating and or outputting data received from the enterprise computing runtime environment . A plan monitoring service is connected to data flow service . Plan monitoring service examines the data flow plan links to datasets that are defined in ADC and causes data flow service to run the plans associated with each dataset. Plan monitoring service may also include a user interface to monitor the data flow service to ensure that all of the data flow plans etc. are being executed properly. In one embodiment user interface allows data flow plans etc. to be extensible. That is new steps can be defined through user interface without having to change the application to support the new steps. User interface can thus create a new set of transaction channels and transaction formats without having to recompile the enterprise runtime computing environment .

Enterprise link is also able to replicate existing metadata in the enterprise runtime computing environment by importing datasets definitions from the existing enterprise systems into the active designer component through network link . In this manner whenever an enterprise link is installed in an organization there is no need to define an entirely new set of metadata conforming to the existing enterprise systems.

When a data event occurs such as each time a particular player uses an identified machine the new data generated by the machine is recorded into the database. This data is then transmitted by the database server to the enterprise link over a network through a message queuing system. Alternatively the data generated by the slot machine could be sent directly to the message queuing system through some intermediate application monitoring the machine bypassing the database recording step. Using the enterprise link in the manner described herein the data associated with the event is then manipulated by the data flow service according to the executing data flow plans previously created by the active designer component. This manipulated data is then transmitted via a network connection to the ADC where it is stored and made accessible to the end user. This data may be accessed by the end user from anywhere across the enterprise or even across the globe if necessary using an Internet connection .

Continuing with the example of a network interface device is shown coupled to bus to provide a physical and logical connection between computer system and the network medium. Depending on the network environment in which computer is used this connection may comprise a server or a network router connected with another client computer.

The business activity monitoring architecture of utilizes messaging data integration active data caching analytics monitoring alerting and reporting technologies to deliver configurable information to an end user within seconds e.g. 2 10 of an enterprise event or change in status. Streaming data delivery ensures that real time reports or data displays are automatically and continually updated as changes occur in the underlying data. Thus the architecture of enables managers and business executives to monitor end to end business processes in real time and to make decisions and take immediate actions that impact overall business performance.

With continuing reference to report cache is shown coupled with ADC via a network connection and with report server via a connection . Together report cache and report server comprise a report engine that accesses data in ADC formats the data and then streams it out via network connection e.g. an Internet protocol network for a live report on a display screen of a real time dashboard . Dashboard is typically implemented by a software program or application running on a computer or downloaded from a server to create a graphical user interface GUI . Reports may be provided in a variety and combination of view types including charts columnar cross tab spreadsheets Key Performance Indicators KPIs lists and more.

When a user of dashboard requests a particular report the report cache obtains a snapshot of the most current data available in ADC . The data snapshot is then sent to dashboard by report server which continually processes the data as it changes such that those changes are integrated into the live display provided to the end user. The result is up to the second i.e. real time information delivered in a visual presentation to the user.

In the exemplary embodiment of dashboard comprises a GUI that includes an action page which can be used in the same environment to take a variety of actions in response to changing data including notifying appropriate users with alerts and or reports. In other words a user viewing the dashboard screen may take actions without leaving the user interface of the dashboard application to trigger corrective changes at the back end enterprise systems . This obviates the need to switch between different interfaces systems or applications in order to perform various actions in response to the information displayed on the dashboard screen or report. In an alternative embodiment dashboard itself functions as the action page.

In a specific implementation when a user specifies a certain action via action page an XML message is generated and sent to report server via connection . For example a contact center manager viewing dashboard may decide to reassign a set of cases from agents in one geographic region to agents located in a different region based on current demand and workload conditions. In response to the XML message that identifies the cases for reassignment report server inserts a data object in ADC via connection . The data object then generates an alert with the reassign cases message included to event engine . An appropriate alert may be generated each time data in the data object changes or when the data exceeds certain parameters thresholds. It is appreciated that multiple messages may be grouped and sent e.g. one for each reassign case as part of a single alert transaction.

Through the alert mechanism event engine is able to monitor changing conditions in the data and the system in real time based upon user defined rules. For instance in response to alert event engine may trigger one or more actions back in the enterprise systems via an external web service call . Event engine may also make changes to the data flow definitions used by enterprise link via connection . Note that for clarity reasons the active designer component is not shown in . 

A few seconds after web service call is sent and received by the enterprise systems the action is implemented and another web service call arrives at ADC e.g. via enterprise link and connection indicating a change in the data in the above example that the designated contact center cases have actually been reassigned. Thus in one aspect of the present invention real time i.e. 2 10 seconds immediate feedback of a result is delivered to the user based on action taken by the user from the dashboard environment.

Practitioners in the arts will understand that the action page itself may be filtered sorted grouped etc. based on certain items or data types presented in the dashboard or depending on particular applications. For example if an action page is invoked by a user right clicking on a mouse when the cursor is over a section of a pie chart that shows cases for the city of Vancouver the resulting action page may be filtered automatically to show only those cases that are currently in the Vancouver contact center.

In the contact center dashboard of is shown a short while later i.e. at a time When the number of cases in Canada has exceeded the available capacity. For example data field shows that 137 cases are currently in the Canadian contact center region 37 more than its capacity of 100. In response data field shows that a message has been sent alerting the appropriate person e.g. K. Gardener of this condition.

The right hand side of illustrates the steps involved when a user takes immediate action based on real time data displayed on a dashboard screen. The dashed arrow denotes that user actions are optional that is the system may continue to stream data changes to the end users without any action being taken in response. In the embodiment of actions are initiated by a user invoking an action page in the dashboard application block . Execution of the action causes an XML message to be sent to the report engine block followed by a data object being inserted into the active data cache and an alert being sent to the BAM event engine block . The event engine implements the action via web service calls to the appropriate enterprise applications or systems block which triggers a change in the data that causes the steps illustrated in blocks to be repeated i.e. a direct data feedback loop to the dashboard display .

It should be understood that elements of the present invention may also be provided as a computer program product which may include a machine readable medium having stored thereon instructions which may be used to program a computer e.g. a processor or other electronic device to perform a sequence of operations. A machine readable medium may include any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. Alternatively the operations may be performed by a combination of hardware and software. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnet or optical cards propagation media or other type of media machine readable medium suitable for storing electronic instructions. For example elements of the present invention may be downloaded as a computer program product wherein the program may be transferred from a remote computer or telephonic device to a requesting process by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

Although the present invention has been described with reference to specific exemplary embodiments it should be understood that numerous changes in the disclosed embodiments can be made in accordance with the disclosure herein without departing from the spirit and scope of the invention. The preceding description therefore is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined only by the appended claims and their equivalents.

