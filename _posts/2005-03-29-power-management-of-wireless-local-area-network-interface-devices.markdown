---

title: Power management of wireless local area network interface devices
abstract: Computer-implemented methods for power management of network interface devices are disclosed. Such methods may include dividing a time period into a plurality of time slots, determining an amount of data received by the network interface device during a first of the time slots, and determining whether the amount of data received exceeds a predefined threshold. If the amount of data received exceeds the predefined threshold, then the network interface device is caused to be awake during a subsequent time slot. The network interface device is caused to go to sleep during the subsequent time slot unless the amount of data received exceeds the predefined threshold. A number of the time slots may be defined as wakeup time slots during which the network interface device is awake. The number of time slots during the time period in which one or more packets were received by the network interface device may be compared to the number of wakeup time slots during the time period. Based on the comparison, the number of wakeup time slots may be adjusted for a subsequent time period.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07631202&OS=07631202&RS=07631202
owner: Microsoft Corporation
number: 07631202
owner_city: Redmond
owner_country: US
publication_date: 20050329
---
The invention relates to power management algorithms for IEEE 802.11 wireless local area network WLAN network interface devices NIDs such as network interface cards NICs and network interface modems NIMs .

Typical IEEE 802.11 based WLAN NIDs have two power modes a constant active mode CAM in which the device is always awake and a standard defined power saving mode PSM in which the device is asleep most of the time and awakens periodically e.g. every 100 ms.

In the CAM application performance in terms of packet throughput and latency for example may be very good. Because the NID is always awake however power consumption in CAM tends to be very high. In the PSM power consumption is much lower but at the cost of performance because data that arrives while the NID is asleep tends to be delayed. Because the NID is awake only periodically there is no correlation generally speaking between the times at which the NID is awake and the times at which data is being delivered through the NID. Consequently though the PSM may provide power savings it is well known that this kind of operation affects the downlink application s performance significantly and tends to degrade quality of service QoS . It would be desirable however to be able to save as much power as possible while maintaining acceptable performance i.e. to be able to optimize the tradeoff between power and performance.

Smart power management where the operating system awakens the NID based on some intelligence about when data is to be received is relatively easy for typical uplink applications because round trip time RTT information may be known for each packet. Consequently the operating system knows the packet arrival times and accordingly when to awaken the NID to receive data.

In typical IEEE 802.11 based WiFi systems however downlink applications such as web browsing FTP and video streaming for example are dominant. Unfortunately for typical downlink applications the RTT may be unknown and smart power management systems that work for uplink applications might not work well for downlink applications. It would be advantageous therefore if there were available systems and methods for smart power management that strike a desired balance between power savings and performance for downlink applications.

The invention provides a smart power management scheme with significant power savings and good application performance. More specifically a method according to the invention may provide the capability for the NID to wake up and sleep adaptively. It can capture the traffic arrival patterns so that the application performance will not be affected while its power reduction is comparable to the current PSM.

In an 802.11 system a beacon will occur once every beacon period. The NID may awaken at least once every beacon listen interval BLI which may be an integer times the beacon period. Each BLI may be divided into time slots. In each time slot the NID may be commanded to sleep or awaken. A slot in which the NID is awake may be referred to as a wakeup slot. 

Initially the NID is expected to be in its active mode. Accordingly every time slot may be a wakeup slot. During a BLI the amount of data received during each wakeup slot is determined. If the system determines that amount of data received exceeds a certain threshold then the NID is kept awake for the subsequent time slot. Otherwise the NID is put to sleep for the subsequent time slot.

After each BLI the number of wakeup slots is adapted for the next BLI based on information learned during the previous BLI. A ratio may be computed of the number of time slots during the previous BLI in which one or more packets were received to the total number of wakeup slots in the previous BLI. If the system determines that the ratio is less than a first threshold then the number of wakeup slots may be decreased for the next BLI. If the system determines that the ratio exceeds a second threshold then the number of wakeup slots may be increased for the next BLI. Otherwise the number of wakeup slots remains the same for the next BLI.

Such a method may be implemented on the kernel side of an operating system driver that communicates with a wireless LAN card or modem using API that delivers SLEEP and WAKE commands to the NID that cause the NID to sleep and wake accordingly.

Although not required the invention can be implemented via an application programming interface API for use by a developer or tester and or included within the network browsing software which will be described in the general context of computer executable instructions such as program modules being executed by one or more computers e.g. client workstations servers or other devices . Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs minicomputers mainframe computers and the like. An embodiment of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an example system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology compact disc read only memory CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as ROM and RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data . RAM may contain other data and or program modules.

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the example operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

One of ordinary skill in the art can appreciate that a computer or other client devices can be deployed as part of a computer network. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes. An embodiment of the present invention may apply to an environment with server computers and client computers deployed in a network environment having remote or local storage. The present invention may also apply to a standalone computing device having programming language functionality interpretation and execution capabilities.

The inventors have observed certain behaviors in the traffic patterns in downlink transmission control protocol TCP and user datagram protocol UDP traffic based applications. depict steady state TCP traffic patterns for file transfer protocol FTP and video streaming respectively. It can be seen that the traffic is rather bursty i.e. the data arrives in bursts and that the burst arrival interval i.e. the amount of time between successive arrivals of data bursts is a relatively stable during the period of a few seconds. The inventors have discovered that this behavior can be utilized to try to capture the traffic arrival pattern so that sleep pattern of the NID i.e. when the NID is asleep and when the NID is awake can be controlled in a smart way without causing any significant delay in packet transfer.

It should be understood that in an 802.11 system a beacon will occur once every beacon period e.g. 100 ms . The NID may awaken at every beacon listen interval BLI which may be an integer times the beacon period. In an example embodiment of the invention time may be divided into time slots. Each time slot may have duration of between about 10 ms and about 15 ms for example. In each time slot the NID may be commanded to sleep or awaken. Whether the NID is to sleep or awaken in a given time slot is determined by the following algorithm. The BLI may be treated as a processing period and the first and last slots in the BLI may always be wakeup slots.

Let T be defined as the sleep interval i.e. the number slots through which the NID is to sleep . Accordingly the NID may be awakened every T 1 slots. Initially e.g. at power on the NID is expected to be in its active mode. Accordingly at step the sleep interval T may be set to zero so that the NID is awake during every slot .

During a BLI the NID is awakened if necessary at step according to T. At step the number or length N of the packets received during each wakeup slot is determined. If at step the system determines that N N where Nis a predefined threshold then at step the NED is kept awake for the subsequent i.e. next time slot. Otherwise at step the NID is put to sleep for the subsequent time slot.

After each BLI the value of T is adapted based on information learned during the previous BLI. First at step a ratio p may be computed of the number of time slots during the previous BLI in which one or more packets were received to the total number of wakeup slots in the previous BLI. If at step the system determines that the ratio p is less than a first threshold 1 then at step T may be increased by an amount 1 for the next BLI. If at step the system determines that the ratio p is greater than a second threshold 2 then at step T may be decreased by an amount 2 for the next BLI. Otherwise T remains the same for the next BLI. The value of T may be constrained between zero i. e. where the NID is always awake and one less than the number of time slots in the BLI i.e. so that the NID is awake for at least one time slot every BLI . The process then repeats indefinitely for subsequent BLIs.

It should be noted that adjustments to T may be nonlinear. For example suppose that the thresholds 1 and 2 are chosen so that the number of regular wakeup times in the next BLI is adjusted i.e. increased or decreased by one. Suppose further that the BLI is 30 time slots long and T currently equals five. The number of wakeup time slots in a BLI may be computed as ceil BLI T 1 where the function ceil x rounds x up to the next nearest integer. Accordingly for BLI 30 and T 5 the number of wakeup time slots in the BLI is ceil 30 5 1 5.

To decrease the number of wakeup time slots to four T should be increased to be either seven or eight because ceil 30 7 1 4 and ceil 30 8 1 4. On the other hand to increase the number of wakeup time slots to six T should be decreased to four because ceil 30 4 1 6. Thus as shown in this example to increase by one the number of wakeup time slots in a BLI the value of T may be decreased by one. On the other hand to decrease by one the number of wakeup time slots in a BLI the value of T may be increased by more than one. Generally speaking the amount by which T is to be increased if it is to be increased need not be the same as the amount by which T is to be decreased if it is to be decreased.

Thus there have been described systems and methods for managing power in WLAN network interface devices. It should be understood that the invention has been described herein with respect to certain example embodiments and that other embodiments of the invention may fall within the scope of the following claims.

