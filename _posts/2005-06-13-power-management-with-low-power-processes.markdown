---

title: Power management with low power processes
abstract: Systems, methodologies, media, and other embodiments associated with selectively regulating power consumption by a computing system are described. One exemplary method embodiment includes receiving a signal that power regulation is desired for a computing system. The exemplary method embodiment may also include selectively causing a low power process to be executed in the computing system to cause the computing system to consume less power on average than would be consumed if the low power process was not executed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07412611&OS=07412611&RS=07412611
owner: Hewlett-Packard Development Company, L.P.
number: 07412611
owner_city: Houston
owner_country: US
publication_date: 20050613
---
Computers continue to consume more and more power. As power consumption increases so do power management and heat management concerns. Some related sets of computers e.g. rack mounted server systems may be able to consume more power than is available to them. Similarly some related sets of computers may be able to generate more heat than can be effectively removed. This may require data center designs having complicated and thus expensive power and cooling requirements. Additionally this may lead to suboptimal use of data center space if fewer computers are deployed than could be supported by data center infrastructure other than the power and cooling.

Thus various approaches to managing and selectively reducing power consumption have been taken. For example some conventional software e.g. operating system based approaches use process schedulers to move power intense processes out of a hot system and into a cooler system. Similarly process schedulers may simply remove a power intense process from a processor. However such process schedulers may require additional processors to be available may require power and heat data to be available for each processor in a system and may not be configurable to address overall power and cooling issues for a set of related computers.

Another software based approach employs conventional ACPI Advanced Configuration and Power Interface processing. ACPI is an open specification that establishes industry standard interfaces for operating system directed computer configuration and power management. ACPI incorporates conventional power management BIOS Basic Input Output System code an Advanced Power Management APM application programming interface API a plug and play BIOS API Multiprocessor Specification MPS tables and so on into a single power management and configuration interface specification. However ACPI based systems may be unaware of actual physical temperature or power conditions or thresholds and thus an operating system relying on ACPI may not be able to react to certain conditions.

Some conventional hardware based techniques for power management use temperature and or power monitoring equipment to trigger actions including frequency scaling and voltage scaling for example. However newer larger integrated circuits may get hot at different locations at different times under different conditions and thus may require multiple monitoring systems that may be too slow or too non specific to provide real time responses to changing conditions. Furthermore like conventional software approaches these hardware based techniques may not be configurable to address overall power or cooling capacity for a set of related systems.

Example systems methods media and other embodiments described herein relate to regulating power consumption e.g. usage in a computing system. Regulating power consumption may include for example selectively lowering power consumption by scheduling and or forcing a system to run processes having low power load characteristics. In one example a computing system may be a stand alone computer e.g. a personal computer . In another example a computing system may be a set of computers e.g. a dozen rack mounted servers . In another example a computing system may be a set of racks filled with servers the racks being located in a data center. A computing system e.g. a rack mounted server configuration may have a known power consumption capacity from which a heat generation capacity can be predicted. Similarly a facility like a data center may have a known power provision capacity and also a known cooling capacity. In addition a computing system in use may have an observed power consumption level that is above at or below a desired power consumption level. Therefore to facilitate reconciling power consumption with power capacity a computing system may be configured to have its power regulated by example systems and methods described herein. By regulating power heat generation may also be regulated.

The total power consumed by a computing system may be related to the number and types of processes running on the processor s available in the computing system. Furthermore the power consumed may be related to the frequency and duration with which certain high level or power intense processes run. Therefore example systems and methods may seek to manage power by controlling the types of processes running on the available processor s and the frequency with which they run. Rather than frequency and or voltage scaling rather than pre empting or stopping a certain process and rather than using an ACPI based approach example systems and methods may provide for power tempered processes to be executed. These power tempered processes may have known characteristics e.g. very low power consumption that facilitate reducing power consumption. While the example systems and methods may not rely on frequency and or voltage scaling and may not rely on ACPI in some cases the example systems and methods may interact with these types of power management systems. Therefore combinations of power management systems may provide power regulation performance superior to that achieved by individual approaches.

The number type and mix of power tempered processes that may be scheduled and executed may be related to how close a facility is to exceeding a power consumption threshold. In different examples scheduling and executing the power reduction processes may be achieved in different ways. For example user level processes system level processes and or interrupt service routines may individually and or collectively interact to facilitate regulating power.

Similarly in different examples power tempered processes may take different forms and in some cases may be configurable. For example a power tempered process may be an actual user level application with known low power requirements or may be an artificial user level application with known low power requirements produced by executing a number of processor halting instructions. In some examples a desired power regulation may be achieved by scheduling a mix of different types of power tempered processes. As mentioned above a power tempered process may be configurable. For example a first instance of a power tempered process may be configured to execute a first number of processor halting instructions over a first period of time while a second instance of the power tempered process may be configured to execute a second number of processor halting instructions over a second period of time.

The following includes definitions of selected terms employed herein. The definitions include various examples and or forms of components that fall within the scope of a term and that may be used for implementation. The examples are not intended to be limiting. Both singular and plural forms of terms may be within the definitions.

 Computer readable medium as used herein refers to a medium that participates in directly or indirectly providing signals instructions and or data. A computer readable medium may take forms including but not limited to non volatile media volatile media and transmission media. Non volatile media may include for example optical or magnetic disks and so on. Volatile media may include for example semiconductor memories and dynamic memories. Transmission media may include coaxial cables copper wire and fiber optic cables for example. Transmission media can also take the form of electromagnetic radiation like that generated during radio wave and infra red data communications or take the form of one or more groups of signals. Common forms of a computer readable medium include but are not limited to a floppy disk a hard disk a magnetic tape other magnetic medium a CD ROM other optical medium a RAM random access memory a ROM read only memory an EPROM a FLASH EPROM or other memory chip or card a memory stick a carrier wave pulse and other media from which a computer a processor or other electronic device can read. Signals used to propagate instructions or other software over a network like the Internet can be considered a computer readable medium. 

 Heuristic as used herein refers to programming based on rules e.g. common sense rules that may for example be drawn from experience. Heuristics contrast with algorithmic programs that are based on mathematically provable procedures. In some examples heuristics may include rules that are adaptable by self learning.

 Logic as used herein includes but is not limited to hardware firmware software and or combinations of each to perform a function s or an action s and or to cause a function or action from another logic method and or system. Based on a desired application or needs logic may include a software controlled microprocessor discrete logic like an application specific integrated circuit ASIC an analog circuit a digital circuit a programmed logic device and a memory device containing instructions for example. Logic may include one or more gates combinations of gates or other circuit components. Logic may also be fully embodied as software. Where multiple logical logics are described it may be possible to incorporate the multiple logical logics into one physical logic. Similarly where a single logical logic is described it may be possible to distribute that single logical logic between multiple physical logics.

NMI refers to a non maskable interrupt an interrupt that typically is not ignored in an interrupt driven system unless the system has been specifically programmed to ignore the NMI. An NMI is typically used for critical problem situations e.g. memory parity errors . Here in one example the NMI may be used when the need for a power managing operation reaches a threshold.

An operable connection or a connection by which entities are operably connected is one in which signals physical communications and or logical communications may be sent and or received. Typically an operable connection includes a physical interface an electrical interface and or a data interface. Note that an operable connection may include differing combinations of these or other types of connections sufficient to allow operable control. For example two entities can be considered to be operably connected if they are able to communicate signals to each other directly or through intermediate entities including a processor an operating system a logic and software for example. Logical and or physical communication channels can be used to create an operable connection.

 Signal as used herein includes but is not limited to electrical or optical signals analog or digital signals data computer or processor instructions messages a bit or bit stream or other means that can be received transmitted and or detected.

 Software as used herein includes but is not limited to computer or processor instructions that can be read interpreted compiled and or executed and that cause a computer processor or other electronic device to perform functions actions and or behave in a desired manner. The instructions may be embodied in various forms including routines algorithms modules methods threads and or programs including separate applications or code from dynamically linked libraries for example. Software may also be implemented in a variety of executable and or loadable forms including but not limited to a stand alone program a function call local and or remote a servelet an applet instructions stored in a memory part of an operating system or other types of executable instructions. It will be appreciated by one of ordinary skill in the art that the form of software may depend for example on requirements of a desired application the environment in which it runs and or the desires of a designer programmer. It will also be appreciated that computer readable and or executable instructions can be located in one logic and or distributed between two or more communicating co operating and or parallel processing logics and thus can be loaded and or executed in serial parallel massively parallel and other manners.

Software suitable for implementing the various components of the example systems and methods described herein may include software produced using programming languages and tools including Java C C C APIs SDKs assembly firmware microcode and or other languages and tools for example. Software whether an entire system or a component of a system may be embodied as an article of manufacture and maintained or provided as part of a computer readable medium as defined previously. Another form of the software may include signals that transmit program code of the software to a recipient over a network or other communication medium. Thus in one example a computer readable medium has a form of signals that represent the software firmware as it is downloaded from a web server to a user. In another example the computer readable medium has a form of the software firmware as it is maintained on the web server. Other forms may also be used.

SMI refers to a system management interrupt. An SMI is an NMI that pre empts and disables other interrupts. An SMI may be used to force a processor into a desired mode e.g. a system management mode SMM . Here in one example an SMI may be used when the need for a power management operation reaches a threshold.

 User as used herein includes but is not limited to a person s software computers or other devices or combinations of these that benefit from interact with provide input to and or receive output from example systems or methods.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a memory. These algorithmic descriptions and representations are the means used by those skilled in the art to convey the substance of their work to others. An algorithm is here and generally conceived to be a sequence of operations that produce a result. The operations may include physical manipulations of physical quantities. Usually though not necessarily the physical quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated in a logic.

It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms and numbers for example. It should be borne in mind however that these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise it is appreciated that throughout the description terms like processing computing calculating determining displaying and so on refer to actions and processes of a computer system logic processor or similar electronic device that manipulates and transforms data represented as physical electronic quantities.

Example methods may be better appreciated with reference to flow diagrams. While for purposes of simplicity of explanation the illustrated methodologies are shown and described as a series of blocks it is to be appreciated that the methodologies are not limited by the order of the blocks as some blocks can occur in different orders and or concurrently with other blocks from that shown and described. Moreover less than all the illustrated blocks may be required to implement an example methodology. Blocks may be combined or separated into multiple components. Furthermore additional and or alternative methodologies can employ additional not illustrated blocks. While the figures illustrate various actions occurring in serial it is to be appreciated that in different examples various actions could occur concurrently substantially in parallel and or at substantially different points in time.

Method may include at receiving a signal. The signal may be provided by an external and or internal system and or method and may indicate that method is to regulate e.g. reduce power being consumed by the computing system. The signal may be viewed as a feedback signal from the computing system concerning its power consumption. The signal may include data that facilitates selecting and arranging for power tempered processes to run on the computing system. For example the signal may include an indicator of an amount of power to be cut from the computing system. Similarly the signal may include an indicator of how urgently the power cut is desired. The amount and urgency may be related to how close the computing system is to a power consumption threshold. Thus the signal may include an indicator of how close to the threshold the computing system has approached. In one example the signal may include data that describes the desired average power consumption for the computing system. This data may be compared for example to a power consumption tracking data available to method to facilitate determining whether power regulation is required and if so in what amount and with what urgency. In one example the signal may be received from an external monitoring system while in another example the signal may be received from a system integrated with the computing system.

Method may also include at selecting a power tempered process es to execute in the computing system along with the set of processes currently executing and scheduled to execute. A power tempered process may be configured to facilitate having the computing system operate for example at an average level below a power consumption threshold. By adding power tempered processes to the set of processes running or scheduled to run on a computing system the average power consumption may be reduced. For example while the system may pass above the power consumption threshold while high power processes are running it may dip below the threshold while power tempered processes are running yielding a desired overall effect of running on average below a threshold. So as a computing system begins to consume too much power method may add power tempered processes to the mix of processes running or scheduled to run on the computing system. As these power tempered processes execute they may consume less power than other high powered or power intense processes allowing the average power consumption to drop. If the power intense processes take longer to complete than the power tempered processes then additional power regulation signals may be received and additional power tempered processes may be added. When the power intense processes do complete they may leave behind a set of processes that does not drive the computing system beyond its power consumption threshold. Thus additional power regulation signals might not be received and therefore as power tempered processes complete they might not be replaced with additional power tempered processes.

Different types of processes may be configured as power tempered processes. For example a power tempered process may be an actual user level process with known power consumption attributes. By way of illustration an application that does few computations few memory accesses and few input output operations e.g. text mode time of day clock application showing only hours and minutes may still perform useful work for a system while consuming very little power. A power tempered process may also be for example an artificial user level process with known power consumption attributes. An artificial process may be for example a process created specifically to facilitate regulating power consumption and that does no other useful work. In one example the artificial process may be a user level process that has a set of halt instructions.

A power tempered process may also be an actual system level process with known low power consumption attributes. For example certain system tasks can be completed without consuming much power because they require few computations few memory accesses few input output operations and so on. A power tempered process may also be an artificial system level process with known low power consumption attributes. Once again the artificial system level process may be specifically configured to facilitate reducing power consumption and to perform no additional useful work. Thus in one example the system level process may include a set of halt instructions.

The power tempered process may be associated with an interrupt service routine for interrupts including a non maskable interrupt NMI and a system management interrupt SMI for example. These power tempered processes may be useful for example for immediately executing a process that will facilitate cutting power consumption. User level processes may be scheduled by an operating system and thus their actual execution time may not be precisely known. Similarly system level processes may compete for system resources and once again their execution time may not be precisely known. However the time at which processing performed by an interrupt service routine associated with a high priority interrupt like an NMI and or an SMI can be more precisely determined and more immediately controlled.

Thus in one example rather than taking a conventional approach like pre empting processes a power tempered process may be selected to be added to a set of processes running and or scheduled to run on the computing system. Thus rather than being throttled an existing process may be able to run at full power frequency voltage when it executes. However it may execute less frequently because the power tempered process is also being scheduled and run. Additionally an existing process does not need to be shuffled to a different processor or immediately pre empted. Rather it can be left alone except for the fact that an additional power tempered process es may be sharing e.g. time slicing the processor s on which the existing process is running. Thus problems including those associated with relocating a process from processor to processor those associated with running a voltage intense process at a lower voltage setting and those associated with running a frequency intense process at a lower frequency setting for example may be mitigated by employing the approach of method .

In one example selecting a power tempered process at may include identifying how much power reduction is required how soon the power reduction is required and so on. Thus selecting a power tempered process at may involve determining whether information concerning amount urgency and so on is available in the signal received at . Similarly in another example selecting a power tempered process at may include identifying a power consumption level at which the computing system is targeted to run. Thus selecting a power tempered process at may include identifying a current power consumption level at which the computing system is operating and identifying a number type and or mixture of power tempered processes that will force the power consumption level down to the desired level. To facilitate creating the right type and mix of processes a power tempered process may be configurable with respect to attributes including duration intensity and priority for example.

Method may also include at arranging for power tempered processes to execute in the computing system along with the set of processes that were already executing and or scheduled to execute. In one example arranging for the power tempered processes to execute may include scheduling a power tempered process to execute and or generating an interrupt. Scheduling a power tempered process to execute may be achieved different ways. For example scheduling may include making a scheduling request via an operating system scheduler. As described above when employing an operating system scheduler attributes including the time at which the power tempered process will run the priority at which it will run the processor on which it will run and so on may not be completely controllable if controllable at all. Thus when finer grained control is desired the arranging at may involve using an interrupt service routine based scheduler. In this way an operating system scheduler may be bypassed and some run time parameters e.g. time processor may be more controllable.

In one example an interrupt service routine may even be configured to act as a power tempered process. For example an interrupt service routine associated with an NMI an SMI or other similar high priority interrupt may be configured to do very little over a period of time sufficient to reduce power consumption. Once again this may provide even finer control over scheduling achieved using lower priority interrupts or interrupt based scheduling.

While illustrates various actions occurring in serial it is to be appreciated that various actions illustrated in could occur substantially in parallel. By way of illustration a first process could receive signals a second process could select processes to execute and a third process could arrange for the selected processes to execute. While three processes are described it is to be appreciated that a greater and or lesser number of processes could be employed and that lightweight processes regular processes threads and other approaches could be employed.

In one example methodologies are implemented as processor executable instructions and or operations stored on a computer readable medium. Thus in one example a computer readable medium may store processor executable instructions operable to perform a method that includes receiving a signal to regulate an amount of power consumed by a computing system where the amount of power being consumed is related to processes running and scheduled to run in the computing system. The method may also include in response to receiving the signal selecting a power tempered e.g. low power process es to execute in the computing system along with the set of processes and arranging for that process es to execute so that average power consumption is maintained below a desired level. While the above method is described being stored on a computer readable medium it is to be appreciated that other example methods described herein may also be stored on a computer readable medium.

Thus in different examples method may be configured to interact with other systems associated with the computing system including a frequency scaling system a voltage scaling system and an ACPI system for example. These systems may individually facilitate providing a first level of power regulation for a computing system. However when method is configured to interact with these systems it may provide a second higher level of power regulation for a computing system.

Method may also include at analyzing the signal received at to facilitate determining whether power regulation should occur the degree to which it should occur the urgency with which it should occur other systems e.g. scaling systems to involve and so on.

At a determination may be made concerning whether a scheduling approach should be taken to schedule a power tempered process for execution or whether an interrupt based approach should be taken to cause a power tempered process to execute more immediately. In one example a power tempered process may be viewed as a process that is configured to drive a computing system to a quiescent state having a power level near an idle computing system power level. In one example the power tempered process may be configured to perform substantially no input output operations substantially no computations and substantially no memory accesses. In one case substantially no may refer to a minimum amount required to have a valid executable process that can be scheduled and or run. In another case substantially no may refer to zero occurrences.

While the power tempered process may drive the computing system into a quiescent state it may also be a useful process that is configured to or is known to have low power requirements when compared to other processes. Low power requirements may refer to a process consuming less power than a pre determined high power threshold. Low power requirements may be engineered by adding a number of processor halting instructions to a process ensuring certain high power instructions are not present and so on. Low power requirements may also be observed by monitoring a process in execution. Similarly low power requirements may be estimated by characterizing a process based on the type number and or mix of instructions in the process.

If the determination at is Yes that a process can be scheduled then processing may continue at where a power tempered process may be selected to be scheduled to run on the computing system where the other processes that lead to the power regulating signal being generated are running or are scheduled to run. In one example where method may be self adapting the power tempered process may be selected according to a heuristic approach. Thus over time which process es are selected to regulate power may change based on observing a cause effect relationship between scheduling processes and subsequent power regulation requests.

Power tempered processes may be configurable with respect to attributes including duration intensity and priority for example. Thus method may include at configuring the power tempered process es selected at . How a process is configured may depend at least in part on the signal received at . For example the intensity duration or priority of the process may be based at least in part on data received in the signal received at . Method may also include at scheduling the process es selected at . Scheduling the process es may include for example making a request to an operating system placing a process in a process queue and so on.

If the determination at is No that the power regulation should not be approached by scheduling a power tempered process but should be undertaken by causing more immediate execution of a power tempered process then processing may continue at . This branch may be taken if for example drastic power reduction is urgently required. At a process es may be selected and at the process es may be configured. Rather than scheduling the process es at an interrupt may be generated that facilitates more precisely and immediately causing the power tempered process to execute. For example if the process selected at is an interrupt service routine associated with an NMI then the interrupt at may be an NMI that the computing system is unlikely to ignore and is likely to process immediately.

At a determination may be made concerning whether to receive more signals. If the determination is Yes then processing may return to otherwise processing may conclude. Method may also include not illustrated sending a control signal to other systems including a frequency scaling system a voltage scaling system and an ACPI system for example.

System may include a signal logic that is configured to receive and analyze a power regulation signal. The power regulation signal may be provided by different systems or methods associated with computing system a facility like a data center in which system is located and equipment like a rack in which system is located for example. The signal may indicate that power regulation is to be attempted and may also provide information concerning the nature of the power regulation including the desired degree duration and immediacy of the power regulation for example.

System may also include a power logic that is operably connected to signal logic . Power logic may be configured to selectively control an amount of power consumed by computing system by controlling for example a number a type and a mixture of low power processes to execute on computing system . By way of illustration computing system may be executing a set of processes that includes some processes that are currently running some processes that are blocked waiting for an i o to complete some processes that are ready to run and so on. When executing set of processes causes computing system to exceed a power consumption threshold a signal may be generated that is detected by signal logic . In response to the signal power logic may decide to add a low power process es to processes in order to lower the average power consumed by computing system .

Thus power logic may be configured to select a low power process to execute on computing system . If a small amount of power reduction is requested then a single low power process configured to produce a first level of power reduction may be added to processes . However if a greater amount of power reduction is requested then several lower power processes configured to produce a second level of power reduction may be added to processes . Similarly if an even greater amount of power reduction is requested then a large number of very low power processes configured to produce a third level of power reduction may be added to processes .

Different types of processes may be configured as low power processes. For example low power processes may include but are not limited to user level processes system level processes and an interrupt service routine. Furthermore low power processes may be configurable with respect to operating attributes including duration intensity and priority for example. Thus when a process is selected to be added to processes it may be assigned a priority that makes it more or less likely to run than other processes in processes . Similarly when a process is selected to be added to processes it may be configured to run at a desired low power setting for a desired period of time.

In different examples there are different ways that power logic may control the number the type and or the mixture of low power processes that execute on computing system . For example power logic may request that an operating system schedule a low power process may add a process to an operating system process queue may interrupt a processor to cause an interrupt service routine to execute and so on. It is to be appreciated that in different examples power logic may employ these techniques individually and or in various combinations.

Like system system may include a signal logic similar to signal logic and a power logic similar to power logic . However system may have additional functionality since it may interact with additional components. Interacting with may include for example receiving data from and or providing data or control signals to the additional components. Signal logic may be configured to receive data from other sources operably connected to computing system including a frequency scaling logic a voltage scaling logic and an ACPI logic for example. Receiving data from these additional sources may facilitate coordinating the activities of system and the additional sources to provide more effective power regulation than could be achieved by the systems individually.

Thus power logic may also be configured to control at least in part frequency scaling logic voltage scaling logic and ACPI logic . While logics and are illustrated inside computing system it is to be appreciated that in different examples these logics may be located in computing system attached to computing system external to computing system operably connected to computing system and so on.

While power management logic is illustrated as a hardware component attached to bus it is to be appreciated that in one example power management logic could be implemented in software stored on disk brought into memory and executed by processor . Thus power management logic may provide means e.g. software hardware firmware for automatically determining that power regulation is desired for a computing system means e.g. software hardware firmware for selecting a power tempered process to execute on the computing system along with currently executing processes and means e.g. software hardware firmware for adding a power tempered process to a set of processes executing or scheduled to execute on the computing system.

Generally describing an example configuration of computer processor can be a variety of various processors including dual microprocessor and other multi processor architectures. Memory can include volatile memory and or non volatile memory. The non volatile memory can include but is not limited to ROM PROM EPROM EEPROM and so on. Volatile memory can include for example RAM synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM and direct RAM bus RAM DRRAM .

A disk may be operably connected to computer via for example an input output interface e.g. card device and an input output port . Disk may be for example a magnetic disk drive a solid state disk drive a floppy disk drive a tape drive a Zip drive a flash memory card and or a memory stick. Furthermore disk may be an optical drive e.g. a CD ROM a CD recordable drive CD R drive a CD rewriteable drive CD RW drive and or a digital video ROM drive DVD ROM . Memory can store processes and or data for example. Disk and or memory can store an operating system that controls and allocates resources of computer .

Bus may be a single internal bus interconnect architecture and or other bus or mesh architectures. While a single bus is illustrated it is to be appreciated that computer may communicate with various devices logics and peripherals using other busses that are not illustrated e.g. PCIE SATA Infiniband 1394 USB Ethernet . Bus can be of a variety of types including but not limited to a memory bus or memory controller a peripheral bus or external bus a crossbar switch and or a local bus. The local bus can be of varieties including but not limited to an industrial standard architecture ISA bus a microchannel architecture MSA bus an extended ISA EISA bus a peripheral component interconnect PCI bus a universal serial USB bus and a small computer systems interface SCSI bus.

Computer may interact with input output devices via i o interfaces and input output ports . Input output devices can include but are not limited to a keyboard a microphone a pointing and selection device cameras video cards displays disk network devices and so on. Input output ports may include but are not limited to serial ports parallel ports and USB ports.

Computer may operate in a network environment and thus may be connected to network devices via i o devices and or i o ports . Through network devices computer may interact with a network. Through the network computer may be logically connected to remote computers. The networks with which computer may interact include but are not limited to a local area network LAN a wide area network WAN and other networks. Network devices can connect to LAN technologies including but not limited to fiber distributed data interface FDDI copper distributed data interface CDDI Ethernet IEEE 802.3 token ring IEEE 802.5 wireless computer communication IEEE 802.11 and Bluetooth IEEE 802.15.1 for example. Similarly network devices can connect to WAN technologies including but not limited to point to point links circuit switching networks e.g. integrated services digital networks ISDN packet switching networks and digital subscriber lines DSL for example.

While example systems methods and so on have been illustrated by describing examples and while the examples have been described in considerable detail it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems methods and so on described herein. Additional advantages and modifications will readily appear to those skilled in the art. Therefore the invention is not limited to the specific details the representative apparatus and illustrative examples shown and described. Thus this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims. Furthermore the preceding description is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined by the appended claims and their equivalents.

To the extent that the term includes or including is employed in the detailed description or the claims it is intended to be inclusive in a manner similar to the term comprising as that term is interpreted when employed as a transitional word in a claim. Furthermore to the extent that the term or is employed in the detailed description or claims e.g. A or B it is intended to mean A or B or both . When the applicants intend to indicate only A or B but not both then the term only A or B but not both will be employed. Thus use of the term or herein is the inclusive and not the exclusive use. See Bryan A. Garner A Dictionary of Modern Legal Usage 624 2d. Ed. 1995 .

To the extent that the phrase one or more of A B and C is employed herein e.g. a data store configured to store one or more of A B and C it is intended to convey the set of possibilities A B C AB AC BC and or ABC e.g. the data store may store only A only B only C A B A C B C and or A B C . It is not intended to require one of A one of B and one of C. When the applicants intend to indicate at least one of A at least one of B and at least one of C then the phrasing at least one of A at least one of B and at least one of C will be employed.

