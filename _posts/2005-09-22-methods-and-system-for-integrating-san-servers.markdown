---

title: Methods and system for integrating SAN servers
abstract: Multiple servers such as a main server as well as one or more corresponding sub-servers manage configuration information associated with a storage area network. A sub-server operates differently depending on whether the sub-server has been “integrated” with a main server in the storage area network. For example, in response to detecting a presence of a main server in the storage area network and that the corresponding sub-server has been integrated with the main server, a respective sub-server initiates execution of at least a portion of function calls associated with a respective service at the main server in lieu of executing the function calls locally at the respective sub-server. In the absence of the main server and/or integration, the sub-server operates independently and executes function calls locally rather than forward function calls associated with a respective service to the main server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07668924&OS=07668924&RS=07668924
owner: EMC Corporation
number: 07668924
owner_city: Hopkinton
owner_country: US
publication_date: 20050922
---
Information services and data processing industries in general have rapidly expanded as a result of the need for computer systems to manage and store large amounts of data. As an example financial service companies such as banks mutual fund companies and the like now more than ever before require access to many hundreds of gigabytes or even terabytes of data and files stored in high capacity data storage systems. Data storage system developers have responded to the increased need for storage by integrating high capacity data storage systems data communications devices e.g. switches and computer systems e.g. host computers or servers into networks called storage networks or Storage Area Networks SANs .

In general a so called storage area network is a collection of data storage systems that are networked via a switching fabric to a number of host computer systems operating as servers. During operation the host computers access data stored in the data storage systems on behalf of client computers that request data from the data storage systems. For example according to conventional techniques upon receiving a storage access request a respective host computer accesses a large repository of storage through the switching fabric on behalf of the requesting client. An access can include a read or write of data to storage.

Conventional storage area network management applications typically include a graphical user interface GUI that enables a network manager to graphically manage control and configure various types of hardware and software resources associated with a corresponding managed storage area network. For example conventional network management storage applications generate a graphical user interface utilized by a network manager to graphically select interact with and manage local or remote devices and associated software processes associated with the storage area network.

Based on use of the graphical user interface in combination with an input device such as a hand operated mouse and corresponding pointer displayed on a viewing screen a network manager can click on managed object icons in a respective graphical user interface to manage respective hardware and software entities such as file systems databases storage devices peripherals network data communications devices etc. associated with the storage area network. In some storage area networks a network management station and associated management software allows a network administrator or systems manager a person responsible for managing the storage network to allocate and de allocate resources e.g. hardware and software resources in a storage area network. Consequently the network manager can reconfigure a SAN according to users respective present needs.

The infrastructure required to support access to data in a storage area network can be quite complex. For example as discussed above consider the number of hardware and software components that must work in harmony in order for a user s software application executing on a host computer system to successfully access data stored in a storage array of a SAN. To access such data the user application provides file system calls or requests e.g. open read write and so forth to a file system resource presented to the user application by an operating system executing on the host computer system. The file system receives the file system calls and operates to map such file system calls to a series of I O requests. The operating system on the host computer system transmits the I O requests through a host interface device resource such as an interface card e.g. SCSI or FibreChannel adapter having one or more I O port resources across an interface cable or networking medium e.g. in a storage area network implementation to a front end adapter interface card resource operating within a high capacity data storage array of the SAN. The front end adapter interface card receives the I O requests and interprets them to identify appropriate data locations within specific storage device resources contained in the storage array.

After the requested data is accessed via the storage devices respective I O responses are returned to the user application along an information or data flow path based on operations and processing functionality provided by each of the aforementioned components and resources in a reverse direction back to the application on the host computer running the client application. In this way access to data in a conventional storage area network involves reliance on a proper operation and coordination of a multitude of software and hardware resources in a storage area network to retrieve data from storage and serve the data to a client.

One conventional way to manage a respective storage area network involves use of a management control center such as a computer station to maintain storage area network configuration information at a central location of the storage area network. In general the management control center must keep track of all current configuration settings associated with the storage area network. Upon receipt of a respective query from a network administrator about current configuration information through a graphical user interface application the management control center serves appropriate configuration views to the network administrator. Accordingly the network administrator can view and modify current settings associated with the storage area network.

Management of a storage area network can be a challenge due to the complex network of corresponding resources that must be configured so that the storage area network supports proper access to stored data. For example as discussed above a storage area network typically includes a multitude of storage area network resources such as respective resources in a path between a host resource and storage array working in harmony so that a host resource e.g. server of the storage area network can access data from the storage arrays on behalf of requesting clients. If even a single resource in the storage area network is not properly configured in a long chain of respective resources a client in communication with a host resource of the storage area network may not be able to access data in the storage area network.

One drawback associated with the conventional way of managing the storage area network at a single central location is the potential tremendous amount of configuration information that must be continuously collected and maintained by a respective centrally located management control center. Collection and storage of the configuration information at a centrally located management control center requires communicating with many different types of hardware and software resources. Accordingly such a topology does not always scale well when a storage area network is expanded to include additional storage area network resources.

The following disclosure includes several useful embodiments e.g. a framework supporting distribution of management duties amongst multiple servers. More specifically one embodiment herein includes a main server as well as one or more corresponding sub servers that manage configuration information associated with a respective storage area network. A network administrator connects via a remote browser to the main server or one of the corresponding sub servers to manage the configuration information via use of a graphical user interface. Each of the one or more sub servers can operate independently of the main server to perform certain management tasks as well as operate in unison with the main server to carry out other management tasks. According to one embodiment the main server is a single authoritative server in the storage area network for coordinating amongst the multiple storage area network servers and carrying out certain management tasks.

Initially a storage area network may not include a so called main server a.k.a. an integrated server but may include one or more independently operating servers to manage the storage area network. In this embodiment a network administrator can log onto an independent server a.k.a. a standalone server and perform management functions via use of a respective graphical user interface served from the independent server to a respective browser. The application associated with the graphical user interface typically supports calls to functions that are executed locally by the independent server to carry out respective management tasks.

A storage area network can evolve over time to include a main server as discussed above. For example in certain instances the storage area network may eventually need to include a single authoritative server amongst multiple storage area network servers to carry out certain types of management tasks to avoid contention amongst multiple storage area network servers. One purpose of including the so called main server in the storage area network is to prevent lockout conditions data corruption etc.

According to one embodiment herein the initial inclusion of the main server in the storage area network amongst one or more existing independent servers prompts a need for integration of the one or more independent servers with the main server. That is the independent servers as discussed above at least to some extent become configured as sub servers e.g. subservient servers with respect to the main server after inclusion of the main server in the storage area network. Even though the independent servers become so called sub servers in the presence of the main server the sub servers can still perform certain management tasks independent of the main server as well as certain management tasks performed in cooperation with the main server.

According to one embodiment the integration process entails providing notification to each of the one or more independent servers of a presence of the main server. In response to learning of the presence of the main server rather than continue to locally execute all function calls associated with an application running on a respective sub server the respective sub server initiates execution of at least a portion of function calls at the main server. For example for a given service in which all corresponding functions calls were previously executed locally in the absence of the main server the respective sub server now designates a first portion of function calls associated with the given service to be executed by the sub server and designates a second portion of function calls associated with the given service to be executed by the remote server. Thus certain duties of executing function calls associated with the given service in the presence of the main server are split amongst the sub server and the main server.

As discussed above according to one embodiment each of multiple sub servers become integrated with the main server. According to further embodiments herein the main server as well as each of the sub servers in the storage area network each can support a common set of services used by a respective one or more applications to carry out management tasks. As mentioned the application running on the sub server uses respective function calls to implement a particular one of the common services. Thus software developers can produce respective applications which use the services that can run on any server because each server supports a common set of services. During operation of a respective application the server supporting the respective application determines whether to locally at the sub server or remotely at the main server execute the function calls for each service of the common services. As mentioned in one embodiment this depends on whether the independent server has been integrated with respect to a main server in the storage area network.

Note that techniques herein are well suited for use in applications such as management of storage area networks and specific applications as discussed herein. However it should be noted that embodiments herein are not limited to use in such applications. Thus embodiments herein and deviations thereof are well suited for other applications as well.

Other examples of the present application include a computerized device e.g. a host computer workstation etc. configured to support the aforementioned method operations disclosed herein as embodiments of the present disclosure to facilitate integration of servers in a storage area network. In such embodiments the computerized device such as a server includes a memory system a processor e.g. a processing device and an interconnect. The interconnect supports communications among the processor and the memory system. The memory system is encoded with an application that when executed on the processor produces a process that enables the server to selectively execute a respective function call or forward the function call to a remote server e.g. the main server for execution depending on whether a main server is present in the storage area network.

Yet other embodiments of the present disclosure include software programs to perform the method embodiment and operations summarized above and disclosed in detail below under the heading Detailed Description. More particularly a computer program product e.g. a computer readable medium including computer program logic encoded thereon may be executed on a computerized device to facilitate execution of a management function as explained herein.

The computer program logic when executed on at least one processor with a computing system causes the processor to perform the operations e.g. the methods indicated herein as embodiments of the present disclosure. Such arrangements as further disclosed herein are typically provided as software code and or other data structures arranged or encoded on a physical computer readable storage medium such as an optical medium e.g. CD ROM floppy or hard disk or other a medium such as firmware or microcode in one or more ROM or RAM or PROM chips or as an Application Specific Integrated Circuit ASIC or as downloadable software images in one or more modules shared libraries etc. The software or firmware or other such configurations can be installed onto a computerized device to cause one or more processors in the computerized device to perform the techniques explained herein.

One more particular embodiment of the present application is directed to a computer program product that includes a computer readable medium having instructions stored thereon for supporting management of information associated with a storage area network. The instructions when carried out by a processor of a respective computer device cause the processor to perform the steps of i detecting a presence of a remote server operating in the storage area network and ii in response to detecting the presence of the remote server for a given service of multiple services supported by the local server a designating a first portion of function calls associated with the given service to be executed by the local server and b designating a second portion of function calls associated with the given service to be executed by the remote server the local server acting as a proxy to execute the second portion of function calls at the remote server.

Other embodiments of the present application include software programs to perform any of the method embodiment steps and operations summarized above and more particularly disclosed in detail below.

It is to be understood that the system of the present application can be embodied solely as a software program or as a software program operating in conjunction with corresponding hardware. For example embodiments of the present application may be implemented in EMC s Control Center ECC software application that provides graphical management functionality of storage area network resources. Embodiments of the present application may also be implemented in computer devices that operate the Control Center ECC software. Control Center software is manufactured by EMC Corporation of Hopkinton Mass. USA.

According to one embodiment multiple servers such as a main server as well as one or more corresponding sub servers share duties of managing configuration information associated with a storage area network. A sub server e.g. a server other than the main server operates differently depending on whether a corresponding sub server has been integrated with a main server in the storage area network. For example in response to detecting a presence of a main server in the storage area network and that the corresponding sub server has been integrated with the main server a respective sub server initiates execution of at least a portion of function calls associated with a respective service at the main server in lieu of executing the function calls locally at the respective sub server. In the absence of the main server and or integration the sub server operates independently and executes function calls locally rather than forwards function calls associated with a respective service to the main server.

In addition to supporting access to stored data host entities can include hardware and or software resources to support management of storage area network resources such as storage systems . To support management of storage area network environment and its resources host entity includes application and associated services . Host entity includes application and associated services . Host entity is not configured to include an application and corresponding service. In one embodiment the associated services at each of the respective servers e.g. host entities and computer system is the same. However according to other embodiments herein the services at each respective server can be different.

Note that a respective host entity can include none one or more respective applications for managing storage area network environment depending on a respective storage area network configuration. Also according to one embodiment note again that the host entities and the computer system support a common set of services to carry out management tasks according to one embodiment herein. That is services on each different server are identical. Thus software developers can produce respective applications that utilize function calls associated with the common services so that the applications can run on any of the storage area network servers e.g. host entities and or computer system .

An example of services include services such as user account management authorization reserve auditing event management alert management event policy action management integrated service data synchronization service data collection policy and user preferences. As mentioned these services enable respective applications to manage based on user input triggering events etc. the storage area network environment .

Computer system includes application N and associated services . In general as will be further discussed the application N associated with computer system as well as application application . . . application N associated with host entities enable respective users such as network administrators at respective one or more stations to manage configuration information associated with storage area network environment . Thus duties of managing configuration information can be distributed amongst the multiple host entities as well as computer system rather than being performed only by a centrally located server such as computer system . In other words duties of managing configuration information associated with respective storage systems can be assigned to applications that each process and store respective configuration information in respective locally managed repositories .

In one embodiment the respective applications store the configuration information in one or more of storage systems in lieu of a repository residing at the same location as the host entity . Duties of managing configuration information such as zoning LUN masking etc. at the storage area network system level can be assigned to application N that stores the respective configuration information in repository of computer system .

Stations can reside at remote or local locations with respect to respective host entities and computer system . In the current example a network administrator utilizes a graphical user interface such as a browser to manage at least a portion of the storage area network resources. According to one embodiment each respective application supports generation of a respective graphical user interface e.g. a browser for viewing on a respective display screen .

As an example a network administrator at station can initiate execution of application to manage configuration information associated with storage area network environment or more specifically storage system . Upon execution application generates a respective graphical user interface on display screen for the network administrator to view and modify configuration settings of storage area network environment . In one embodiment application initiates display of information on display screen via transmission of data in respective XML Extensible Markup Language files. Other applications can operate in a similar way.

As briefly mentioned according to one embodiment the application uses services to carry out different management tasks. For example the user at station provides input such as commands through a respective graphical user interface . The commands input to application prompt execution of function calls supported by respective services . As will be further discussed the function calls generated by application can be executed locally in the respective host entity or alternatively executed remotely at a site such as computer system .

In one embodiment computer system is configured as a main server e.g. an integrated server . At least for certain tasks the host entities are subservient to the main server e.g. computer system for execution of certain management tasks in the storage area network environment . Typically the host entities each can independently manage a first set of tasks that have no effect on other servers but must rely on cooperation with the main server i.e. computer system to carry out a second set of tasks. According to one embodiment computer system is a single authoritative server in the storage area network environment for coordinating execution of certain tasks among the servers to avoid lockouts data corruption etc.

Initially a storage area network may not include computer system e.g. a main server but may include host entities and corresponding application to manage the storage area network as shown in . According to this configuration a network administrator can log onto an independent server a.k.a. a standalone server such as host entity and perform management functions via use of a respective graphical user interface served from the host entity to a respective station . In the absence of computer system a respective application associated with a host entity supports calls to functions that are executed locally by the host entity to carry out respective storage area network management tasks rather than forward a respective function call to the computer system . is an example diagram of storage area network environment prior to inclusion of computer system .

Prior to integration of host entity with a corresponding main server e.g. computer system in the storage area network the host entity can detect that a respective main server is not yet present in the storage area network. In this case for a given service of multiple services supported by the host entity the host entity designates function calls e.g. all function calls associated with one or more services to be executed at the host entity in lieu of forwarding the function calls to computer system .

A storage area network environment as shown in can evolve over time to include a main server as discussed above for . For example in certain instances the storage area network environment may eventually need a single authoritative server such as computer system amongst host entities to carry out certain types of management tasks to avoid contention amongst multiple servers attempting to perform the same task without an accounting for each other. For example as discussed computer system can serve as an arbitrator for management tasks requiring a single central authority.

According to one embodiment herein the initial inclusion of computer system in the storage area network environment amongst already existing host entities prompts integration of the one or more host entities with computer system acting as a main server. That is for some management tasks the host entities become configured to forward function calls to computer system for execution rather than execute the respective functions locally at a respective host entity.

Note however that even though the host entities become integrated and forward certain function calls with respect to corresponding services to computer system the host entities can still perform certain management tasks independent of computer system without forwarding other types of function calls.

According to one embodiment the integration process entails providing notification to each of the host entities of a presence of computer system in storage area network environment . In response to learning of the presence of computer system rather than continue to execute all function calls locally a respective host entity or more specifically application initiates execution of at least a portion of function calls at the computer system . That is for a given service of services in which all corresponding functions calls were previously executed locally in the absence of computer system the respective host entity now designates a first portion of function calls associated with the given service to be executed locally at the host entity and designates a second portion of function calls associated with the given service to be executed by a remote server in storage area network environment such as computer system . Thus certain duties of executing function calls associated with the given service in the presence of the main server are split amongst a respective host entity and computer system . As discussed above according to one embodiment each of multiple independent servers e.g. host entities can become integrated with respect to a main server in storage area network environment .

As mentioned forwarding of a respective function call to computer system is beneficial in situations that require a single authoritative source to manage tasks such as creation deletion access etc. to specific sets of data e.g. configuration information associated with storage area network environment . For example it is beneficial to include computer system in storage area network environment as a main server when host entities manage shared data and cannot guarantee a lock condition to prevent corruption of the data as a result of multiple sources simultaneously modifying the same data.

In one embodiment services of host entity query integrated services module whether to locally execute a corresponding function call received from station or forward the function call to computer system for execution. For example case A illustrates a mode in which a respective one of the services acts as a proxy and forwards the received function call to computer system for implementing a respective service. Case B illustrates a mode in which one of the respective services executes a received function call locally at host entity to implement a respective service.

As an example for case A assume that receipt of input from a user at station or input form a hardware device a software application etc. prompts the application to initiate execution of a respective function call associated with one of the services . Note that each service of services can include multiple associated function calls.

Upon receipt of the respective function call from application the respective service checks with integrated services module whether to execute the respective function call locally or forward the respective function call to computer system for execution. In this case assume that the integrated services module indicates to forward the function call from application to computer system .

In one embodiment forwarding the received function call to computer system entails putting a respective event associated with the function call onto a bus e.g. an industry standard subscription bus supported by network and corresponding communication links between host entity and computer system . Computer system monitors the bus for the event. Upon detection of the event the computer system handles the event as an application programming interface function call and returns a corresponding reply message e.g. a structured packet of information back onto the bus. Thus computer system executes the function call and sends a reply back to host entity . Note that one way of implementing the above technique of communicating between the host entity and the computer system is via use of JMS Java Messaging Service .

Via this client server type architecture in which the respective service is the client and computer system is the server the respective service originally issuing the respective function call receives the reply message e.g. by observing the bus and passes the respective information associated with the reply message up to application .

As an example for case B assume that input to application prompts the application to initiate execution of a function call associated with a respective one of the services . Note again that each service of services can include one or multiple associated function calls.

Upon receipt of a function call from application the respective service checks with integrated services module whether to execute the function call locally or forward the function call to computer system for execution. In this example for case B assume that the integrated services module indicates to service the function call locally rather than at computer system .

In one embodiment during local execution of the received function call the respective service initiates retrieval of data from repository . The respective service then passes the data to application .

In another embodiment a local execution of the function call by the respective service at host entity results in modifications to data in repository . Prior to completing the function call and making the modifications to data e.g. managed objects in repository the respective service executing the function call sets up via a handshaking type of process background task to notify other entities such as computer system and or other host entities regarding any changes that have been or will be made to repository . Storage of data modifications in repository triggers background task to distribute the data modifications to other servers. Thus background task ensures that appropriate repositories such as repository and repository in storage area network environment are synchronized.

Note that communication link failures between host entity and computer system can result in an inability of the host entity to forward function calls for execution or notify computer system of data modifications. During such an event the host entity can still operate properly at a local level e.g. to modify contents of repository even though the host entity no longer will be unable to act as a proxy that forwards certain function calls to computer system for execution. Additionally note that background task will not be able to forward modification information to the other servers in storage area network environment during the failure.

Upon revival of a previously failing communication link the services associated with host entity can propagate changes with respect to repository out to computer system or other host entities . In other words after one or more previously failing communication links is back up the host entity distributes e.g. via background task or other synchronization mechanism modifications made to repository during the link failure. If the modifications result in a data conflict then a software process associated with either or both of host entity and computer system resolves the conflicts to the extent possible. Host entity notifies a respective user at application and potentially other users or resources of any modification conflicts that are non resolvable via the software process.

Accordingly one embodiment herein involves inclusion of an integrated services module at host entity that detects a presence of a remote server e.g. computer system operating in the storage area network environment . In response to detecting the presence of the remote server and or that the host entity has been integrated with main server computer system for a given service of multiple services supported by host entity the integrated services module a designates a portion of function calls associated with the given service to be executed by the remote server and b designates a portion of function calls associated with the given service to be executed by the local server. In the first case e.g. case A the host entity e.g. local server acts as a proxy to execute the portion of function calls at the computer system e.g. remote server . In the absence of detecting a presence of computer system in storage area network environment and or that the host entity has been not been integrated with main server computer system integrated services module designates function calls associated with the services locally in the host entity instead of forwarding them to computer system for execution.

Based on the above discussion embodiments herein therefore also include a technique of detecting loss of a communication link between a local server e.g. host entity and a remote server e.g. another host entity or computer system . In response to loss of the communication link the host entity initiates local execution of a received function call in lieu of attempting to forward of the received function call to computer system for execution even though the received function call otherwise would be forwarded to the computer system for servicing. Upon detecting revival of the communication link between the host entity and computer system the host entity initiates synchronization of repository with repository by forwarding data or corresponding modification information to computer system .

Via the configuration management view the user at station can select resources from hierarchical tree e.g. a tree of resources managed by application and view respective configuration information in display region of configuration management view .

As shown a user selects resource from hierarchical tree and displays corresponding resources in display region . Filter functions e.g. selectable buttons in configuration management view enable the user to filter a selection of resources from hierarchical tree that are to be viewed in display region . Display functions in configuration management view enable the user to select a respective type of view mode in which to display configuration information on display screen for the user to view. In the present example the respective user has selected to view resources according to a topology view mode associated with the storage area network environment . Thus according to one embodiment resource B B and B represent corresponding host entities resource B represents a connectivity device such as a storage area network switch and resources B and B represent corresponding storage system . Modification functions enable the user to change configuration information or settings associated with the storage area network environment such as those in display region .

In general application uses services as discussed with respect to in order to enable management of a respective storage area network resource via use of the functions supported by configuration view . For example input to configuration management view causes application to issue the function calls to carry out different management tasks as previously discussed with respect to the other figures.

As previously mentioned according to one embodiment the host entities and corresponding application independently manage resources associated with a respective storage system e.g. Symmetrix Clarion etc. while computer system manages system level details such as zones LUN masks etc. associated with the storage area network environment . However even though the host entities independently manage a respective resource such as a respective storage system according to one embodiment the host entities still forward configuration information associated with the managed resources to the main server such as computer system . Thus in some respects the main server in storage area network environment is subservient or depends on the host entities to perform some tasks in storage area network environment .

As shown host entity of the present example includes an interconnect that couples a memory system a processor an input output interface and a communications interface . Peripheral device e.g. one or more viewer controlled devices such as a keyboard mouse etc. associated with station enables a user to provide input commands and thus generally control functions associated with graphical user interface .

As shown memory system is encoded with a services application facilitating tasks such as retrieving viewing and managing configuration information associated with respective storage area network resources. Services application may be embodied as software code such as data and or logic instructions e.g. code stored in the memory or on another computer readable medium such as a disk that support processing functionality according to different embodiments described herein.

During operation processor accesses memory system via the interconnect in order to launch run execute interpret or otherwise perform the logic instructions of services application . Execution of services application produces processing functionality in services process . In other words the services process represents one or more portions of the services application or the entire application performing within or upon the processor in the computerized device . As discussed one purpose of services is to facilitate management of resources such as managed objects in the storage area network environment .

It should be noted that the services executed in host entity can be represented in by either one or both of the services application and or the services process . For purposes of this discussion general reference will be made to the services as performing or supporting the various steps and functional operations to carry out techniques discussed herein.

It should also be noted that example configurations herein include the services application itself i.e. the un executed or non performing logic instructions and or data . The services application may be stored on a computer readable medium such as a floppy disk hard disk or optical medium. The services application may also be stored in a memory system such as in firmware read only memory ROM or as in this example as executable code in for example Random Access Memory RAM . In addition to these embodiments it should also be noted that other embodiments herein include the execution of services application in processor as the services process . Thus those skilled in the art will understand that the host entity may include other processes and or software and hardware components such as an operating system that facilitates carrying out management functions associated with the storage area network.

In step host entity or more particularly integrated services module associated with host entity detects a presence of a remote server operating in a storage area network.

In step in response to detecting the presence of computer system for a given service of multiple services supported by the host entity the host entity or more particularly the integrated services module a. designates in sub step a first portion of function calls associated with the given service to be executed by the local server and b. designates in sub step a second portion of function calls associated with the given service to be executed by the remote server. The host entity acts as a proxy to execute the second portion of function calls at the computer system .

In step of in response to initially detecting the presence of computer system operating in the storage area network environment a storage area network resource initiates integration of the host entity with the computer system .

In step the integrated services module of host entity detects that the host entity has been integrated with computer system via a query to integrated services module .

In step in response to detecting that multiple servers in the storage area network have been integrated for a given service of multiple services supported by the host entity the integrated services module i designates a first portion of function calls associated with the given service to be executed by the host entity and ii designates a second portion of function calls associated with the given service to be executed by the computer system . The host entity acts as a proxy to execute the second portion of function calls at the computer system .

In step the specific service identifies that the received function call is included in the portion of function calls to be executed by the computer system .

In step the specific service then initiates execution of a respective function associated with the received function call at the computer system in lieu of executing the respective function at the host entity .

As discussed techniques herein are well suited for use in applications such as management of storage area networks. However it should be noted that configurations herein are not limited to use in such applications and thus configurations herein and deviations thereof are well suited for other applications as well.

While this invention has been particularly shown and described with references to preferred embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims. Such variations are intended to be covered by the scope of this invention. As such the foregoing description of embodiments of the invention is not intended to be limiting. Rather any limitations to embodiments of the invention are presented in the following claims.

