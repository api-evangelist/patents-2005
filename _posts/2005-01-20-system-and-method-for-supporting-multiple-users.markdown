---

title: System and method for supporting multiple users
abstract: Systems and methods that support splitting a compute resource from its input/output and sharing among one or more users are provided. In one embodiment, a system that supports one or more user devices may include, for example, a compute engine, a first user device and a second user device. The compute engine may be adapted to provide virtualization. The virtualization may provide, for example, a first instance of a particular operating system and a second instance of the particular operating system. The first user device may be coupled to the compute engine and may access the first instance of the particular operating system. The second user device may be coupled to the compute engine and may access the second instance of the particular operating system. In one example, the user devices are input/output devices that do not run applications or operating systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07966613&OS=07966613&RS=07966613
owner: Broadcom Corporation
number: 07966613
owner_city: Irvine
owner_country: US
publication_date: 20050120
---
This application makes reference to claims priority to and claims benefit from U.S. Provisional Patent Application Ser. No. 60 537 785 entitled Computer System Architecture Supporting Multiple Users and filed on Jan. 20 2004 and U.S. Provisional Patent Application Ser. No. 60 585 360 entitled Method and System for a Thin Client and Blade Architecture and filed on Jul. 1 2004.

The above referenced U.S. patent application is hereby incorporated herein by reference in its entirety.

In a conventional desktop blade system a user desktop is coupled to a basic Ethernet switch using a thin protocol such as for example a remote desktop protocol RDP . The switch provides mapping of the user desktop to a server blade. The switch is coupled to a plurality of server blades via a blade fabric that supports 10 100 Base T access methods. The user desktop is a general purpose computer with a central processing unit CPU running a single general purpose operating system e.g. DOS Windows . The server blade operates a single general purpose operating system on which one or more applications run.

Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of ordinary skill in the art through comparison of such systems with one or more aspects of the present invention as set forth in the remainder of the present application with reference to the drawings.

Some aspects of the present invention may be found in for example systems and methods that support one or more users.

In one embodiment according to some aspects of the present invention a system may include for example a compute engine with a central processing unit CPU a chipset a fabric controller and a storage e.g. direct attached storage DAS or external storage . An I O collector unit takes the output to the local display and the optional audio output and optional other I O output e.g. USB feedback and commands to USB devices and processes it. The processing may include for example one or more of the following format changing compression adaptation to network transport adaptation to network delay and jitter and adaptation to limited network bandwidth. The I O collector may forward these signals to the fabric controller for transmission over the fabric to the remote device or devices.

In one embodiment according to some aspects of the present invention the I O collector may be implemented in a way that does not disrupt the hardware or software or operating system or application infrastructure of the compute engine. It allows use of high volume hardware and software to create the new model of remote device which may be an I O device without local application compute power.

In one embodiment according to some aspects of the present invention the remote device presents to its user a compute environment that is no different from the experience one would get with a complete local compute engine. The remote device does not necessarily need to have the ability to run an operating system or the application. It may have processing power to adapt the I O to the I O devices available to the remote user. It also may have the ability to adapt the I O to the network in a way similar to the compute engine.

In one embodiment according to some aspects of the present invention a standard machine designed for local input and output can be dissected into compute and I O. However there might be no change to the compute engine except for example adding an I O collector. The remote user can be implemented with a very low cost hardware while preserving the abilities of the larger compute engine and exposing them to its user.

In one embodiment according to some aspects of the present invention a system that supports one or more user devices may include for example a compute engine a first user device and a second user device. The compute engine e.g. one or more servers may be adapted to provide virtualization. The virtualization may provide for example a first instance of a particular operating system and a second instance of the particular operating system. The first user device may be coupled to the compute engine and may access the first instance of the particular operating system. The second user device may be coupled to the compute engine and may access the second instance of the particular operating system.

In one embodiment according to some aspects of the present invention a system that supports one or more user devices may include for example a compute engine a first user device and a second user device. The compute engine may be adapted to provide virtualization. The virtualization may provide for example a first instance of a particular operating system and a second instance of the particular operating system and or a first instance of another operating system. The first user device may be coupled to the compute engine and may access the first instance of the particular operating system. The second user device may be coupled to the compute engine and may access the second instance of the particular operating system and or the first instance of another operating system.

In another embodiment according to some aspects of the present invention a server may include for example a plurality of server blades a first user device and a second user device. The plurality of server blades may include for example a particular server blade that provides virtualization. The virtualization may provide for example a first instance of a particular operating system and a second instance of the particular operating system. The first user device may be coupled to the particular server blade via a network and may access the first instance of the particular operating system. The second user device may be coupled to the particular server blade via the network and may access the second instance of the particular operating system. The first user device and the second user device might not locally provide operating system resources. The particular server blade may provide the operating system resources for the first user device and the second user device.

In another embodiment according to some aspects of the present invention a user device may provide for example one or more of the following a user interface an input output e.g. a local input output via for example USB BlueTooth or wireless and connectivity to a compute engine. The user device may provide input via one or more input devices e.g. a keyboard and a mouse and output via one or more output devices e.g. a user display or displays and a speaker while the information for example to be presented is computed on an external host e.g. an external compute engine host with minimal processing e.g. optional video decompressing and driving a display on the user device.

In yet another embodiment according to some aspects of the present invention a method that supports multiple user devices may include for example one or more of the following virtually providing a plurality of instances of an operating system on a server coupling via a network a plurality of remote user devices with the plurality of instances of the operating system each remote user device being coupled with a respective instance of the operating system and remoting with respect to the plurality of remote user devices processing resources to the server.

These and other features and advantages of the present invention may be appreciated from a review of the following detailed description of the present invention along with the accompanying figures in which like reference numerals refer to like parts throughout.

Some embodiments according to some aspects of the present invention may relate to for example systems and methods that support one or more devices e.g. one or more user devices . Some embodiments according to some aspects of the present invention may relate to for example systems and methods that support one or more users.

Some embodiments according to some aspects of the present invention may support splitting compute resources from an input output system. Some embodiments according to some aspects of the present invention provide the ability to support a remote input output I O system where the remote I O system provides signals to the compute resource and the compute resource provides feedback to the remote I O system.

Some embodiments according to some aspects of the present invention may provide virtualization in a compute engine e.g. a server . The virtualization may provide for example multiple instances of an operating system and multiple instances of a program running on respective instances of the operating system.

Some embodiments according to some aspects of the present invention may provide that processing resources be migrated to or centralized in a compute engine. Some embodiments according to some aspects of the present invention may provide that remote user devices be simplified such that remote user devices need not provide substantial processing resources. Some embodiments according to some aspects of the present invention provide that remote user devices employ embedded systems. Some embodiments according to some aspects of the present invention provide that input signals received by remote user devices be sent via a network to a compute engine that provides processing. Some embodiments according to some aspects of the present invention provide that output signals generated by a compute engine are sent via a network to a remote user for presentation to the user.

Some embodiments according to some aspects of the present invention may provide that storage resources be migrated to or centralized via a compute engine. Some embodiments according to some aspects of the present invention may provide that remote user devices be simplified such that remote user devices need not provide substantial storage resources. Some embodiments according to some aspects of the present invention provide that the remote user devices can access over a network storage resources via a compute engine. In some embodiments according to some aspects of the present invention the storage resources may be directly attached to the compute engine or the storage resources may be coupled to the compute engine via for example a storage network. In some embodiments according to some aspects of the present invention storage resources may be coupled to a remote user device and made available to a compute engine. For example a memory stick coupled to the remote user device via a universal serial bus USB port may be made available to a compute engine.

Some embodiments according to some aspects of the present invention may provide a server system that includes for example one or more server blades. In some embodiments according to some aspects of the present invention a particular server blade in a server system may provide virtually multiple instances of an operating system. The virtually provided multiple instances of the operating system may be operating concurrently on the particular server blade. Each instance of the operating system may be associated with e.g. dedicated to or exclusively associated with a respective user device that is coupled to the particular server blade via a network.

In operation input signals received by the remote device such as for example input signals generated by a user interface e.g. a keyboard a mouse a graphical user interface microphone video camcorder digital camera etc. which can be disposed at or part of the remote device are received by the fabric controller . In some embodiments according to some aspects of the present invention little or no processing occurs in the remote device . For example the remote device might not provide a local operating system e.g. a local general purpose operating system . The fabric controller packages or frames for example the input signals which are destined for the compute engine . In some embodiments according to some aspects of the present invention security may be applied to the data for example for platform access rights and authentication and or for data security using for instance authentication and or encryption. The fabric controller then places the packets on the fabric e.g. a Gigabit Ethernet which routes the packets to the compute engine and in particular to the fabric controller of the compute engine . The fabric controller which may be coupled to the south bridge forwards the framed input signals received from the remote device to the CPU for processing for example by an operating system or a program e.g. an application running on the operating system. The input signals of the remote device may also be stored in the memory where the stored signals may be accessed by the CPU .

Some embodiments according to some aspects of the present invention provide that the CPU provides virtualization. The virtualization can provide for example multiple instances of the operating system. The virtualization can also provide for example multiple instances of a program e.g. an application such as for example a word processing application a spread sheet application a database application etc. . Each instance of the program can run on a respective instance of an operating system. Thus each remote device can access e.g. exclusively access and or concurrently access a respective instance of the operating system. Furthermore each remote device can access e.g. exclusively access and or concurrently access a respective instance of a particular program running on a respective instance of an operating system. Thus for example a first remote device can access via virtualization a first instance of a particular word processing program running on a first instance of a particular operating system a second remote device can access via virtualization a second instance of the particular word processing program running on a second instance of the particular operating system. The running of the instances of the particular operating system and the particular word processing program may be isolated from each other via virtualization.

The compute engine can also communicate with storage units or systems that are coupled to the compute engine . For example the compute engine may provide support for one or more protocols that enable communication with one or more storage units or system including for example small computer system interface SCSI Internet SCSI iSCSI remote direct memory access RDMA or other protocols e.g. proprietary protocols or customized protocols such as for example Fibre Channel. Thus the CPU can access e.g. read from or write into the storage units or systems.

The north bridge can provide a connection for example to the memory or the CPU . After processing the CPU sends the processed signals to the remote device and in particular to the fabric controller . The fabric controller distributes the signals for example to the graphics engine and or to the I O controller of the remote device . The processed signals may be for example packaged and compressed by the CPU or the north bridge or by the I O collector before being sent to e.g. routed to the graphics engine of the remote device . The graphics engine adapts for example the processed signals for output via an output device e.g. a display while the I O controller adapts other signals for output or for commands to the I O devices e.g. a printer a speaker etc. . For example the graphics engine can adapt the processed signals to generate frame signals which are sent to the frame buffer for display.

In some embodiments according to some aspects of the present invention a mouse moved by a remote user using the remote device generates input signals. The input signals generated by the mouse are processed by the I O controller and moved to the fabric controller to be are framed and to be sent to the compute engine . The compute engine processes the input signals. In some embodiments according to some aspects of the present invention through virtualization the fabric controller on the compute engine may distribute the signals to a corresponding one of the possibly multiple instances of the operating system or a program running thereon processes the input signals. In some embodiments according to some aspects of the present invention neither the CPU an operating system nor an application may be able to differentiate between the inputs generated on the remote device and those generated locally. The CPU determines the output e.g. display speaker etc. or any other consequences in view of the generated input signals by processing the input signals. Once determined output signals are sent from the compute engine to its local I O devices. The I O collector may be used to collect the I O and to feed it to the fabric controller for framing. The fabric controller sends the data to the selected remote device which then generates an output based on the output signals e.g. displays the output signals on a display of the remote device displays the changes in the output signals on the display of the remote device generates an audio output etc. . Thus in some embodiments according to some aspects of the present invention the operating system processing or the application processing is accomplished at the compute engine and not at the remote device .

Some embodiments according to some aspects of the present invention may provide for example that a plurality of remote devices are coupled to for example a compute engine . The remote devices may then share the resources of the compute engine including for example processing storage memory networking and graphics. In some embodiments according to some aspects of the present invention the resources are shared via virtualization.

Some embodiments according to some aspects of the present invention provide that the remote users share the resources of the compute engine via virtualization. Some embodiments according to some aspects of the present invention provide that the compute engine via virtualization run as many instances of the operating system as there are remote devices associated with it. Some embodiments according to some aspects of the present invention provide that via virtualization each remote device can access e.g. exclusively access with respect to other remote devices its own instance of the operating system or its own instance of the application. In some cases virtualization may allow existing applications application programming interfaces APIs and or the operating system to operate with no additional changes.

Some embodiments according to some aspects of the present invention provide that the remote devices provide the same services to is user as if the remote device locally ran the operating system and full hardware e.g. storage audio hardware visual hardware etc. . In some embodiments according to some aspects of the present invention a user of a remote device would not be able to easily ascertain whether the operating system and application were running locally or was being accessed remotely. Remoting processing resources e.g. operating system resources to the compute engine can be seamless from the point of view of the user.

Some embodiments according to some aspects of the present invention provide that the remote devices and the compute engine provide security on the communications between the remote devices and the compute engine . Security can take many forms known in the art such as for example machine authentication data authentication e.g. data authentication for keyboard and mouse traffic and privacy employing encryption e.g. using keys and authentication. In some embodiments according to some aspects of the present invention the remote devices provides a trusted platform module. The security measures secure for example one or more of the following deployment management content distribution user identity etc.

Some embodiments according to some aspects of the present invention provide a fabric management entity . The fabric management entity can be used for example to authenticate remote devices to associate remote devices with a compute engine and or to re allocate compute engine resources due to increased load or in fail over scenarios. The fabric management entity can also be used for example to grant access rights to a service an application or fabric quality of service QoS or class of service COS service level or to negotiate QoS parameters between a remote device and the fabric . The attention of a fabric administrator may be drawn to for example one or more of the following attack attempts by unauthorized remote devices access requests to unauthorized locations services applications or devices connection and usage rates quality of service issues and failures of compute engines or remote devices. A heart beat signal may be used to monitor the health of coupled devices.

In some embodiments according to some aspects of the present invention the outputs may include for example one or more of the following an additional audio device e.g. a speaker and a headset coupled to the audio playback a USB device e.g. a keyboard and a mouse coupled to the USB controller a screen coupled to the graphic controller and a network e.g. a Gigabit Ethernet coupled to the physical layer which in turn is coupled to the fabric . In some embodiments according to some aspects of the present invention some inputs may include for example one or more of the following a keyboard a mouse a Bluetooth device a video input an audio input a sensor input a user interface e.g. a graphic user interface or other input devices coupled to the input manager a network coupled to the physical layer and a USB device coupled to the USB controller . In some embodiments according to some aspects of the present invention the keyboard mouse controller in the input manager communicates e.g. sends commands with a compute engine over for example a Gigabit Ethernet. The physical layer can generate an alert. The inputs and outputs may be removable such as for example a flash disk a flash memory or a memory stick. Other inputs or outputs may include for example printer and a scanner.

Some embodiments according to some aspects of the present invention provide a graphics format that consumes approximately under 1 Gb s of Ethernet bandwidth. Some embodiments according to some aspects of the present invention provide a graphics format that consumes approximately under 10 Mb s of Ethernet bandwidth under most circumstances. Some embodiments according to some aspects of the present invention provide a graphics format characterized by low cost and high performance on the remote device . Some embodiments according to some aspects of the present invention provide a standard or a derivative graphics core on the remote device . Some embodiments according to some aspects of the present invention provide that graphic data received from the physical layer via the fabric controller is zero copied into the graphic memory .

Some embodiments according to some aspects of the present invention may provide for a high performance graphics system even while remoting the high bandwidth interface from the CPU of the compute engine to the remote device .

In some embodiments according to some aspects of the present invention the user desktop is not a general purpose computer. The user desktop can employ for example an embedded system. In some embodiments according to some aspects of the present invention the user desktop can operate software that is permanently set into a read only memory such as for example a ROM or a flash memory chip. The user desktop can include for example one or more of the following a low cost embedded processor that can run a real time operating system RTOS with a TOE enabled GbE controller that provides for example high performance graphics low latency and low power requirements as compared to a processor running TCP IP on a CPU low compute requirements by running for example graphics over RDMA and at both ends strong authentication via a TPM and encryption e.g. of keyboard mouse messages commands .

In some embodiments according to some aspects of the present invention the user desktop is coupled to the switch via a network e.g. a Gigabit Ethernet that supports a protocol that has a high bandwidth to transport for example keyboard video mouse KVM data.

In some embodiments according to some aspects of the present invention the switch provides a one or more Gigabit switch with L3 7 filters. The switch can be configured to secure communications between the user desktop and the switch . The switch is configured to support for example network data e.g. LAN data clustering data e.g. SAN data and RDMA data and storage data e.g. iSCSI data . In some embodiments according to some aspects of the present invention priority e.g. higher priority may be given to latency sensitive data such as for example mouse clicks audio and clustering data e.g. RDMA data and storage data e.g. iSCSI data . Different VLANs may be used to enable different QoS or COS.

In some embodiments according to some aspects of the present invention the blade fabric includes for example a 1 Gb 2.5 Gb 10 Gb serializer deserializer SerDes .

In some embodiments according to some aspects of the present invention the server blades provide dynamic cross blade resources allocation with virtual storage. The server blades include for example one or more of the following a desktop blade and storage blade. The storage blade can be for example an iSCSI storage blade. The iSCSI storage blade can provide for example serial at attachment SATA serially attached SCSI SAS drives redundant array of independent disks RAIDs and storage virtualization. The desktop blade can be for example a diskless desktop blade. The diskless desktop blade can provide for example one or more of the following a high performance desktop with dynamic hardware virtualization iSCSI with iSCSI boot TOE and or RDMA that can provide fast virtualization and high performance graphic.

Some embodiments according to some aspects of the present invention may provide for a reduction in cost structures by centralizing the processing power of the system. For example by centralizing the processing power in the compute engine many resources may be shared by the plurality of remote devices . In another example applications run by the CPU may be shared by the remote devices . Some embodiments according to the present invention may provide for a compute engine that employs virtualization such that each remote device may be allocated its own virtual resources e.g. its own dedicated copy of the application its own dedicated copy of the operating system virtual storage etc. .

Some embodiments according to some aspects of the present invention may provide for better manageability. For example with a centralized compute engine many issues and problems may be dealt with at a central location. Furthermore centralized resource sharing such as for example centralized storage or compute engine power sharing provides may be more manageable as well as more economical. Furthermore the remote devices may be simplified since most or all of the processing occurs in the compute engine .

One or more embodiments according to one or more aspects of the present invention may have one or more of the following advantages as set forth below.

Cost reduction for a desktop in the enterprise and consumer space where the traditional resources of a general purpose desktop or computer are split between a remote user device and a compute engine. In the enterprise space total cost of ownership TCO is reduced due to for example a reduction in capital expenditure CAPEX operational expenditures OPEX are reduced due to for example consolidation of personal computer PC storage ease of management and application deployment. In the consumer space multiple user can be supported with one compute engine deployment costs are reduced due to for example cheaper and simpler desktop configurations e.g. no need for a complete PC for each monitor foot print is reduced applications can be centrally deployed.

The user device can be shielded from changes in the OS applications or hardware since the user device may only include the user I O. Thus the blade or the compute engine can evolve or be replaced with no need to re deploy the users which may be a very large number.

Service can be provided at little or no charge because of the low cost complexity power and real estate of the remote device. For example in case of a failure the user can replace the user device instead of dispatching a technician which is typically more costly. In a consumer environment for example the number of remote devices can grow over time.

This application makes reference to U.S. patent application Ser. No. 60 537 785 filed on Jan. 20 2004 U.S. patent application Ser. No. 60 585 360 filed on Jul. 1 2004 U.S. patent application Ser. No. 60 501 794 filed on Sep. 10 2003 U.S. patent application Ser. No. 10 938 156 filed on Sep. 10 2004 U.S.patent application Ser. No. 60 527 739 filed on Dec. 8 2003 and U.S. patent application Ser. No. 11 007 063 filed Dec. 8 2004. The above identified applications are hereby incorporated by reference herein in their entirety.

While the present invention has been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the present invention without departing from its scope. Therefore it is intended that the present invention not be limited to the particular embodiments disclosed but that the present invention will include all embodiments falling within the scope of the appended claims.

