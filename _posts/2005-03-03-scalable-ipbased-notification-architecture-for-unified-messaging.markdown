---

title: Scalable IP-based notification architecture for unified messaging
abstract: A notification architecture utilizes multiple processes configured for managing notification operations based on reception of SMTP-based messages within IMAP based message stores. The notification architecture enables use of multiple instances of a notification process, each configured for receiving notification messages for respective subscribers from messaging sources according to a prescribed open protocol such as Internet Protocol. Each notification process accesses subscriber profile information from an open protocol-based subscriber directory based on the received notification messages. Each notification process determines, for each received notification message, the subscriber's notification preference based on the accessed profile information, and selectively outputs a notification delivery message according to a prescribed open protocol to at least one notification delivery process within the notification architecture based on the subscriber's notification preference. Each notification process may have access via the prescribed open protocol to multiple notification delivery processes, each configured for outputting a notification to a subscriber's notification device according to a corresponding device protocol. Multiple instances of each type of notification delivery process may also be utilized for increased capacity. Hence, subscribers may be notified of events according to their respective preferences, including subscriber device type, or time of notification. Moreover, the notification architecture can be scaled without adversely affecting any existing instances of the notification process or the notification delivery processes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07668919&OS=07668919&RS=07668919
owner: Cisco Technology, Inc.
number: 07668919
owner_city: San Jose
owner_country: US
publication_date: 20050303
---
This is a continuation of application Ser. No. 09 629 051 filed on Jul. 31 2000 now U.S. Pat. No. 6 874 011.

The present invention relates to message notification systems configured for sending a notification message to a subscriber having received a message.

The evolution of the public switched telephone network has resulted in a variety of voice applications and services that can be provided to individual subscribers and business subscribers. Such services include voice messaging systems that enable landline or wireless subscribers to record playback and forward voice mail messages. However the ability to provide enhanced services to subscribers of the public switched telephone network is directly affected by the limitations of the public switched telephone network. In particular the public switched telephone network operates according to a protocol that is specifically designed for the transport of voice signals hence any modifications necessary to provide enhanced services can only be done by switch vendors that have sufficient know how of the existing public switched telephone network infrastructure.

For example existing messaging systems such as voice mail messaging systems rely on a proprietary notification system that has limited adaptability to expanded notification schemes. For example the simplest type of notification system involves a message waiting indicator on a telephone connected to a private branch exchange PBX where the PBX asserts a message waiting indicator signal in response to receiving a proprietary command from a connected voice mail system. A more advanced system may initiate a page to a subscriber s pager indicating reception of the stored voice message. In each of these cases however the notification process necessarily relies on the proprietary features of the PBX and the associated voice mail system.

Wireless based communications system have voice messaging systems that notify a wireless subscriber via his or her wireless telephone of a stored voicemail message. Such notification systems are beneficial in cases where the subscriber was making another call on his or her wireless telephone or if the subscriber s wireless telephone was previously unavailable due to being turned off or outside a service area. Such wireless based communications systems however rely on the proprietary features of the wireless indications system in order to notify the wireless subscriber.

Short Message Services SMS have been implemented in wireless telephone communications systems as a way to send a message to a subscriber s cellular phone to notify the subscriber that he or she has received a new voice mail. A messaging server also referred to as a Short Message Service Center SMSC is configured for receiving a notification message from a messaging source according to Short Message Peer to Peer Protocol SMPP . The messaging source may be for example a voice mail system a paging system or an e mail interface resident within the wireless telephone communications system. The SMSC in response to receiving the notification message from the mess aging source transmits a short message to the cellular phone based on the destination telephone number specified within the notification message. However this arrangement still provides only limited flexibility in enabling different sources to send a notification to a cellular phone. Hence the above described arrangement still lacks sufficient flexibility and scalability to enable messaging subscribers to select the means for notification.

Unified communications systems are under development as a way of enhancing messaging services for users such as wireless telephone subscribers. A disadvantage of unified communications systems implemented as enhanced versions of the voice mail system paging system or e mail interface resident within the wireless telephone communications system is that such implementation requires detailed knowledge of the proprietary protocols associated with the voice mail systems. Hence such implementations are available only from switch vendors having knowledge of the proprietary protocols.

Use of a unified communications system implemented independent of the existing proprietary voice mail systems enables service providers to use scalable and distributed systems using recognized communication protocols. Hence the service providers may use such unified communications systems across multiple platforms independent of protocol for storage of various types of messages for example voice messages facsimile and e mail stored in a centralized messaging store. However the problem still remains that there exists several different types of notification devices such as a pager a phone indicator light stutter dial tone facsimile and telephone. Moreover for each message that enters a messaging store one or more subscribers may need to be notified over one or more different notification devices.

Another concern in developing effective unified messaging and notification systems is the scalability of the system. In particular deployment of a given notification system may be limited if the notification system needs to be duplicated with multiple systems that introduce inefficiencies in the deployed system. Hence the notification system may not be feasible in Enterprise and Solution provider systems unless the system has features that enable scalability by duplicating resources without introducing inefficiencies.

There is a need for an arrangement that provides a scalable open standards based architecture for delivering notification for unified messaging systems over a broad range of notification devices.

There also is a need for an arrangement that provides a scalable notification architecture that can provide notification to subscribers via subscriber selected devices according to subscriber selected notification requirements.

These and other needs are attained by the present invention where a notification process configured for receiving notification messages for respective subscribers from messaging sources according to a prescribed open protocol such as Internet Protocol accesses subscriber profile information from an open protocol based subscriber directory based on the received notification messages. The notification process determines for each received notification message the subscriber s notification preference based on the accessed profile information and selectively outputs a notification delivery message according to a prescribed open protocol to at least one notification delivery process based on the subscriber s notification preference. The notification process may have access via the prescribed open protocol to multiple notification delivery processes each configured for outputting a notification to a subscriber s notification device according to a corresponding device protocol. In addition the notification process or any one of the notification delivery processes may be duplicated for large scale deployment merely by adding a corresponding process able to receive messages and registering the new process with the relative sources for the new process enabling the new process sources to begin sending messages to the new process according to the open protocol. Hence scalable notification system may be deployed where subscribers may be notified of events according to their respective preferences including subscriber device type or time of notification.

One aspect of the present invention provides a notification method. The method includes obtaining a notification message having been sent from a notification source according to a first open network protocol the notification message specifying at least one notification recipient and notification information. The method also includes accessing a subscriber directory according to a second open network protocol for subscriber attribute information specifying subscriber notification preference for the specified at least one notification recipient generating based on the subscriber notification preference a notification delivery message that specifies a destination address of a corresponding notification device for the notification recipient and at least a corresponding selected portion of the notification information and outputting according to a third open network protocol the notification delivery message to a selected corresponding one of a plurality of notification delivery processes for delivery of the selected portion of the notification information to the notification device according to a corresponding device protocol. The notification delivery processes include a group of duplicate processes each configured for sending the notification information to the notification device according to the device protocol. Consequently the outputting step includes selecting one of the duplicate processes as the selected one notification delivery process. Outputting the notification delivery message according to the third open network protocol enables any multiple number of duplicate processes to be used for sending notification information according to a device protocol. Hence the notification method can be deployed on a large scale for a large number of user devices merely by selecting one of the duplicate processes as the selected one notification delivery process.

Another aspect of the present invention provides a method for deployment of a notification system for a notification source. The method includes the steps of initiating multiple notification processes and multiple notification delivery processes. Each notification process is configured for retrieving according to a first open network protocol a corresponding notification message from a corresponding primary message store. Each notification message specifies at least one corresponding notification recipient and corresponding notification information and each notification process is configured for accessing a subscriber directory according to a second open network protocol for subscriber notification preference information for the at least one corresponding notification recipient and in response generating a corresponding notification delivery message that specifies a destination address of the corresponding notification device. Each notification delivery processes is configured for retrieving according to a third open network protocol a corresponding received notification delivery message from a corresponding secondary message store and supplying a corresponding notification to a subscriber device according to a corresponding device protocol based on the corresponding received notification delivery message. The method also includes first providing each of the multiple notification processes destination address information for providing the notification delivery messages to the secondary message stores and second providing the notification source with destination address information for providing the notification messages to the primary message stores. Use of multiple notification processes and multiple notification delivery processes enables the task of generating notification delivery messages and supplying notifications to subscriber devices to be distributed across multiple servers where each server may be configured for executing any one or a number of processes. Moreover the providing of the destination address information to the notification processes and the notification source enables the notification system to be easily expanded since each messaging source merely needs to be aware of the existence of the appropriate message store location for transfer of the corresponding message to the added process transfer according to the open standards protocol. Hence the notification system can be scaled in capacity merely by starting another instance of the target process and identifying for the processes generating the messages the mailbox address of the target process by registering the mailbox address with the processes generating the messages.

Additional advantages and novel features of the invention will be set forth in part in the description which follows and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the invention. The advantages of the present invention may be realized and attained by means of instrumentalities and combinations particularly pointed out in the appended claims.

The disclosed embodiment is directed to an arrangement for providing a scalable unified notification system plus the methodology of increasing capacity in the unified notification system by utilizing open network protocols for interprocess communications. A description will first be provided of the notification architecture that utilizes open network protocols followed by a description of the method of deploying the notification system to provide a scalable unified notification system.

Each notification delivery process also has a corresponding SMTP based mailbox referred to as a secondary mailbox configured for receiving a corresponding notification delivery message . As described in detail below each SMTP based mailbox is configured for receiving according to SMTP protocol a corresponding notification delivery message that specifies selected notification information to be utilized for notification according to a corresponding device specific protocol. Although the notification delivery message is typically sent by the notification process according to accessed subscriber notification preferences described below the notification delivery message may also be sent independently by the external notification service if properly configured to supply the appropriate notification information according to the device specific protocol.

Each notification delivery process is configured for delivering a notification to a subscriber s notification device according to a corresponding device protocol based on reception of a notification delivery message in its corresponding mailbox . For example the notification delivery process is configured for sending an SMTP based notification to an e mail client using an SMTP server for distribution of the selected notification information according to the protocol of the e mail client . Similarly the notification delivery process is configured for outputting an SMS based message to the SMS server for delivery to the subscriber s cellphone The notification delivery process is configured for sending an outgoing facsimile transmission to a subscriber s fax machine using a fax server and the notification delivery process is configured for sending a command to the message waiting indicator server for asserting a message waiting light on a subscriber s telephone . The notification delivery process is configured for sending a paging command to a paging server for delivery of a wireless page to a subscriber s pager and the notification delivery process is configured for requesting an outgoing call server for example a PBX or a voice over IP call controller to place an outgoing call to a subscriber s telephone used for notification e.g. a home telephone or a secretary s telephone in order to notify the subscriber of the event specified in the notification delivery message .

The notification process is configured for outputting at least one notification delivery message to a corresponding selected secondary mailbox for delivery of a notification to the selected notification device according to the corresponding protocol. In particular the notification process regularly polls the primary mailbox for received messages from the message store or the external notification service and obtains the notification messages according to IMAP protocol. According to the disclosed embodiment the message store outputs a notification message to the primary mailbox for each message received by the message store . The notification message illustrated in specifies at least one notification recipient and notification information.

The notification process generates the notification delivery message and selects the notification delivery process for delivery of notification information to the corresponding selected notification device based on accessing subscriber attribute information that specifies the subscriber s notification preferences. In particular the notification process in response to detecting a notification message in the primary mailbox accesses a subscriber directory according to LDAP protocol for retrieval of subscriber attribute information for each notification recipient specified in the notification message .

In particular the notification process will determine for each notification recipient specified in the notification message whether the notification recipient is a notification subscriber i.e. subscribes to the notification service and the subscriber notification preferences for the notification recipient. For example the subscriber notification preferences may specify that the notification subscriber prefers an e mail notification at a first prescribed time an SMS based message at a second prescribed time and a message waiting indicator MWI at all times. Note that the prescribed times for different notification devices may overlap causing the notification process to generate multiple device specific notification delivery message for a single notification message .

Upon retrieval of the subscriber notification preferences the notification process generates at least one notification delivery message that specifies the destination address of a corresponding notification device for the notification recipient and at least a corresponding selected portion of the notification information. In particular the notification process extracts selected portions of notification information from the notification message based on the notification device specified by the subscriber notification preference and inserts the selected portions of the notification information into the notification delivery message . Items that may be extracted from the received notification message include the sender s e mail address the sender s telephone number the sender s name the subject of the message the priority of the message the message type e mail a fax voice mail the date and time of the message the total size of the message a text excerpt and a MIME encoded voice or fax attachment.

For example the notification process may generate the notification delivery message for the notification delivery process by including an SMTP header that specifies the destination e mail address of the secondary mailbox the subscriber information illustrated as the destination address of the e mail client and notification information such as the source of the original message From date and time stamp subject line and a copy of the MIME encoded message attached as a binary file in case the user wishes to play the message in the case of a .wav file or view the message in the case of a .tiff file . In addition the notification process may generate a notification delivery message for the notification delivery process by including an SMTP header that specifies the destination e mail address of the secondary mailbox the subscriber information illustrated as the telephone number of the cellphone and notification information such as the source of the original message From date and time stamp subject line and message type. Note that the contents of the notification information differs from the contents of the notification information based on the relative capabilities of the notification devices and . Hence the notification process selects the notification information based on the capabilities of the notification device.

In addition the disclosed architecture has the advantage that each of the processes and are scalable across multiple servers for large scale deployment as multiprocess systems where each process communicates with another process by sending SMTP based messages. For example multiple notification processes may be arranged to serve respective groups of subscribers where a first notification process e.g. forwards a received notification message to the primary mailbox of a second notification process e.g. if the first notification process does not serve the subscriber specified in the received notification message.

As shown in the method begins in step by the messaging server or the external notification source by sending the notification message with a copy of the stored message shown in as portions and to the primary mailbox of the notification process . The notification process regularly polls the primary mailbox implemented within the IMAP message store and obtains the notification message in step according to IMAP protocol and parses the notification message for the notification recipients.

Upon identifying the notification recipients from the notification message the notification process accesses the subscriber LDAP directory in step to determine whether the notification recipients are valid notification subscribers. If the notification recipients are valid notification subscribers the notification process accesses the subscriber LDAP directory in step for the subscriber notification preferences and all parameters associated with the device protocols to enable notification to the identified user device . If any notification recipient is not a valid notification subscriber the process is dropped with respect to that notification recipient.

The notification process parses the notification preferences in step and generates the notification delivery messages for each notification subscriber in step . In particular the notification process determines for each notification device the corresponding destination address determines the message destination address for the corresponding secondary mailbox based on the selected device and attaches the selected notification information based on the selected device. Typically the notification process will access a local table that identifies the SMTP destination address for each of the secondary mailboxes . The notification process then sends the notification delivery messages to the secondary mailboxes in step .

Each notification delivery process periodically polls its corresponding secondary mailbox according to IMAP protocol and in step obtains its corresponding received notification delivery message and parses the notification delivery message for the destination address information and the notification information . The notification delivery process then delivers the supplied notification to the corresponding associated device server according to the device server protocol in step . For example the notification delivery process would send an e mail message for transmission by the SMTP server that specifies the destination address of the e mail client and the notification information as an attachment to the e mail. The notification delivery process however would send an SMS message to the SMS message server that specifies the destination address of the cellphone and the text based notification information for display on the subscribers cellphone . The device server would then send the notification message in step to the corresponding subscriber device according to the device specific protocol.

If notification to a device should fail the notification delivery process schedules and performs any number of retries to the device . For example the information about the message and the subscriber that still needs to be notified may be written to disk plus the time at which the next retries should occur. Hence each delivery process processes any new incoming IMAP messages and processes any needed retries.

The disclosed notification architecture is built upon the open standards of Internet Message Access Protocol IMAP Lightweight Directory Access Protocol LDAP and Simple Mail Transfer Protocol SMTP . Hence the notification architecture can be made available on a large number of platforms and can be built upon any number of IMAP compliant messaging stores and LDAP compliant directory stores. In addition the number of overall LDAP lookups is minimized since the notification process obtains all necessary information at one time for each of the notification delivery processes . In addition network traffic is minimized since each notification delivery process can receive selected portions of the original stored message as needed as opposed to a complete copy. Finally the notification process and each of the notification delivery processes are accessible by any SMTP source by sending an SMTP based message with the appropriate notification information to the appropriate mailbox or . Hence the same notification system can be utilized to support unified messaging services by the message store while providing added value for external notification services

As illustrated in the notification system includes multiple instances of the notification process and multiple instances of the notification delivery process configured for supplying a notification to an e mail client according to the protocol of the SMTP server . The notification processes etc. have primary SMTP based mailboxes etc. having respective mailbox addresses for receiving notification messages from a notification source such as the message store or the external notification source according to SMTP protocol. The mailbox addresses of each of the primary mailboxes etc. are registered with each notification source in its corresponding application parameters file enabling each notification source to output a notification message to any one of the notification processes . Since each instance of the notification process operates independently the notification processes may be executed within a single server or distributed among multiple servers. Hence the operations of the notification process can be scaled merely by creating a new primary mailbox having a prescribed address initiating a new instance of the notification process with application parameters that enable the new instance to access the new primary mailbox and registering the mailbox addresses of the new primary mailbox with the configuration file to enable the notification source to send notification messages to the new instance.

Multiple instances of the notification delivery process can be established in the same manner as for the notification process . In particular The notification delivery processes etc. have secondary SMTP based mailboxes etc. having respective mailbox addresses for receiving notification delivery messages from any one of the notification processes according to SMTP protocol. The mailbox addresses of each of the secondary mailboxes etc. are registered with each notification process in its corresponding application parameters file enabling each notification process to output a notification delivery message to any one of the notification delivery processes . Each instance of the notification delivery process operates independently enabling execution within a single server or distributed among multiple servers. Hence the operations of the notification delivery process can be scaled merely by creating a new secondary mailbox having a prescribed address initiating a new instance of the notification delivery process with application parameters that enable the new instance to access the new secondary mailbox and registering the mailbox addresses of the new secondary mailbox with the configuration file to enable the notification processes to send notification delivery messages to the new instance.

The method begins in step where one or more servers initiate instances of the notification process . Each instance of the notification process loads during its initialization application parameters into its application runtime environment in step to identify runtime attributes such as the identity of its corresponding primary mailbox and the identity of the secondary mailboxes . In particular each instance of the notification process uses the identity of the corresponding primary mailbox in order to access the received notification according to IMAP protocol. Each instance of the notification process also uses the identity i.e. mailbox address of the secondary mailboxes in order to identify available destinations for notification delivery messages.

The instances of the notification delivery processes are then initiated by one or more servers in step for each device protocol. For example a server may initiate multiple instances e.g. etc. of the notification delivery process for SMTP based notification. Each instance of the notification delivery process also loads the corresponding application parameters into its application runtime environment to identify its corresponding secondary mailbox for access of notification delivery messages according to IMAP protocol. At this point the notification architecture is able to deliver notifications to the user devices as described above with respective . At this point the notification source already has loaded the mailbox addresses of the primary mailboxes from its application parameters file in order to begin SMTP based delivery of notification messages.

Assume now that there is a need to increase capacity of the notification architecture by adding another instance of either the notification process or any one of the notification delivery processes . The appropriate server initiates a new instance in step of either the notification process or one of the notification delivery processes or both . The appropriate server then supplies in step the new mailbox address for the corresponding primary mailbox or the secondary mailbox to the application runtime environment of the new instance for example by supplying the file containing application parameters as a command line argument.

The appropriate server then modifies in step the application parameters file or for either the notification source or the notification processes based on whether the new mailbox address is for a primary mailbox or a secondary mailbox respectively. Note that is not necessary to halt either the notification source or the notification processes since each server periodically rereads the appropriate application parameters file or and updates the application runtime environment of the notification source or the notification process in step enabling the updated processes to include the new mailbox address during selection of a destination mailbox for output of the corresponding message to SMTP protocol.

As shown in the application runtime environment includes a polling resource configured for issuing function calls at regular prescribed intervals for obtaining the notification messages from the primary mailbox according to IMAP protocol. The application runtime environment also includes a message parser configured for parsing the retrieved notification messages for identification of the notification recipients.

The application runtime environment also includes a message generator configured for generating the notification delivery messages based on the subscriber notification preference information retrieved from the LDAP directory and based on the notification information within the received notification message . The message generator generates a notification delivery message for a selected subscriber device having selected portions of the notification information based on a corresponding protocol specific notification template . In particular the initialization file includes a notification template for each of the notification delivery processes each notification template specifies the relevant key value pairs from the notification message to be added to the notification delivery message for the corresponding subscriber device . Hence the message generator utilizes a selected notification template based on the subscriber device specified in the subscriber notification preference information if the subscriber preference specifies an e mail client the message generator utilizes an e mail specific template that specifies the key value pairs of the notification information within the notification message that should be included within the notification delivery message to be sent to the secondary mailbox if the subscriber preference specifies an SMS based client the message generator utilizes an SMS specific template that specifies the key value pairs of the notification information within the notification message that should be included within the notification delivery message to be sent to the secondary mailbox etc. Hence the message generator is able to select portions of the notification information from the notification message to be included in the notification delivery message based on the subscriber device type specified in the subscriber notification preference information.

The application runtime environment also includes a set of libraries that may be implemented as dynamically linked libraries DLLs or application programming interface API libraries. The libraries enable the runtime environment to implement procedure calls such as issuing function calls to the IMAP directory for retrieval of the notification messages the LDAP directory for retrieval of the subscriber notification preference information and an SMTP server for sending the notification delivery messages .

According to the disclosed embodiment and open standards based notification architecture provides scalability by enabling the addition of instances of processes with no adverse effect to existing processes already executing in an application runtime environment. Scaling can be accomplished in the same manner using either a single server or multiple server systems eliminating the need for any special reconfiguration upon the addition of another server. In addition use of SMTP for interprocess communications ensures that configuration and rescaling is identical whether the servers executing the processes are running on a single machine or are distributed across the devices assuming that each of the processes are reachable using SMTP.

Hence the disclosed arrangement provides a robust scalable and open standards based notification architecture that provides maximum flexibility for enterprise and solution provider systems having different needs. Various load balancing schemes may be utilized to determine whether a message source e.g. the notification source or the notification process should output the corresponding SMTP based message to a selected duplicate process according to context independent factors e.g. cycling through the duplicate instances or random selection as opposed to context dependent load balancing where a message source selectively supplies and SMTP based message to a selected duplicate process based on the destination user. In addition multiple new instances of both notification servers and delivery servers can be started without needing to shut down any part of the existing notification system providing a robust architecture with reliable service.

While this invention has been described in connection with what is presently considered to be the most practical and preferred embodiment it is to be understood that the invention is not limited to the disclosed embodiments but on the contrary is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims.

