---

title: Method and apparatus for deploying updates to a storage server management application
abstract: According to an embodiment of the invention, a storage server management application (SSMA) includes scripting ability. The scripting ability allows functionality to be added to the SSMA by deploying scripting packages onto the SSMA. The packages may be written by a user having access to the SSMA, and deployed onto the SSMA without affecting the core functionality of the SSMA, and may be easily removed. One package allows a system administrator to monitor the configuration of storage servers monitored by the SSMA by comparing the current configuration of the filers to a standard configuration. Another package monitors best practices for redundant array of inexpensive disks (RAID) systems. Other packages may be added to the SSMA.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07752615&OS=07752615&RS=07752615
owner: NetApp, Inc.
number: 07752615
owner_city: Sunnyvale
owner_country: US
publication_date: 20050429
---
The present invention generally relates to storage server management applications SSMAs and specifically relates to a method and apparatus for updating a SSMA.

A network appliance is a processing system that may be connected to a network to provide service to other devices over the network. A file server or filer is an example of a network appliance. A filer is a form of storage server which provides file storage and file access to remote clients that request access to the data storage. Another type of storage server which may be implemented as an appliance is one which provides clients with block level access to stored data rather than file level access. Such a server can be used in a storage area network SAN for example to provide an interface between clients and mass storage devices.

A multi appliance management application MMA can be used to maintain a storage network. An MMA is a type of storage server management application SSMA that can be used to monitor data storage over a network on several different processing systems. For example an MMA can be used to monitor the storage on several filers. A system administrator can maintain the filers using the MMA ensuring that the filers continue to have adequate free space that certain users are not monopolizing storage on a filer etc. An example of such an MMA is the DataFabric Manager DFM products made by Network Appliance Inc. in Sunnyvale Calif. The MMA may provide a user interface UI such as a Command Line Interface CLI or a Graphical User Interface GUI that allows the administrator to more easily observe the condition of the filer. The MMA may comprise an application on another processing system or it may be a hardware device on the storage network.

A system administrator can use the MMA to manage one or more appliances on a storage network. The UI of the MMA allows the administrator to not only monitor the status of appliances connected to the network but also to change settings on the appliances. For example the MMA can be used to add or delete authorized users on a specific filer. The MMA may also be used to determine the type and amount of storage being used on a filer. For example the MMA may monitor the amount of storage dedicated to audio or video files and report to the administrator if the amount of storage dedicated to these files exceeds a predetermined threshold. The MMA has an overall view of the appliances and can also control the function and administration of the appliances.

An MMA may be an application deployed on a server station that is connected to one or more appliances either directly or through a network. The MMA includes a core set of functionality. The MMA may be upgraded by using software patches that modify the core functionality. These modifications may tend to reduce the reliability of the MMA since the patches modify the basic functionality of the MMA. Further the patches may be difficult to deploy and difficult to write. What is needed therefore is an improved way to add functionality to an MMA.

The present invention includes methods and apparatuses for deploying updates to a data storage management device. In one method a package is received including a script. It is then determined whether the script is a new installation or an update of an existing installation. The package is unpacked into a temporary storage location and verified. The package is then moved into an installation directory.

Other aspects of the invention will be apparent from the accompanying figures and from the detailed description which follows.

The present invention includes methods and apparatuses for deploying updates to a storage server management application. Note that in this description references to one embodiment or an embodiment mean that the feature being referred to is included in at least one embodiment of the present invention. Further separate references to one embodiment or an embodiment in this description do not necessarily refer to the same embodiment. However such embodiments are also not mutually exclusive unless so stated and except as will be readily apparent to those skilled in the art from the description. For example a feature structure act etc. described in one embodiment may also be included in other embodiments. Thus the present invention can include a variety of combinations and or integrations of the embodiments described herein.

According to an embodiment of the invention a storage server management application SSMA includes scripting ability. The scripting ability allows functionality to be added to the SSMA by deploying scripting packages onto the SSMA. A package may be for example a compressed archive such as a ZIP file. The packages may be written by a user such as a system administrator having access to the SSMA and deployed onto the SSMA without affecting the core functionality of the SSMA and may be easily removed. One package allows a system administrator to monitor the configuration of storage servers monitored by the SSMA by comparing the current configuration of the filers to a standard configuration. Another package monitors best practices for redundant array of inexpensive disks RAID systems. Other packages may be added to the SSMA.

According to one embodiment of the invention a script is a program or sequence of instructions that is interpreted or carried out by another program rather than the computer processor as a compiled program is . Some common scripting languages are Perl Rexx Javascript and Tcl Tk. In general scripting languages are easier and faster to code than compiled languages such as C or C . The scripting ability allows a user such as a system administrator to easily add functionality to a SSMA without affecting the core functionality i.e. the delivered functionality of the SSMA. The scripting ability also allows for transparency of scripts delivered to the SSMA allowing a system administrator to examine the script and modify the script before installing it.

The server may be accessed using a terminal or other computer system. The terminal may be either locally or remotely located and may access the server through a network such as a local area network LAN or a wide area network WAN such as the Internet using a serial cable etc. The terminal may be a personal computer PC or other processing system capable of accessing the MMA . The MMA may be for example a web based application that is accessible using the hypertext transmission protocol HTTP . It is understood that other configurations may be used. For example the MMA may be a hardware device rather than a software application and the MMA may be accessible using any appropriate protocol.

The MMA may provide information to a user such as a system administrator about the status and configuration of the connected filers . The MMA may be presented as a graphical user interface GUI that may be available for example through a browser such as Microsoft Internet Explorer . The MMA may monitor information such as available disk space filer operational status e.g. operating temperature uptime etc. space allocated to certain users overall filer usage etc. The MMA is used to monitor and maintain the filers or other storage servers.

Each filer manages one or more volumes . A volume is comprised of one or more physical disk drives and may be part of a redundant array of inexpensive disks RAID . Each volume stores the data on the storage network and may be designated for a certain group or purpose. For example a first volume may include home directories for a first group of users which a second volume may store data files that are accessible by anyone. The MMA has the ability to sort the volumes in this way.

The MMA allows a system administrator to exert substantial control over the filers . For example the MMA may be used to manage storage on the filers specify users allowed to access the filers etc. The users may be divided into groups based on their access control levels. For example a script installed by a system administrator may be able to push configuration to from the filer via the MMA because the system administrator has the appropriate credentials to change the configuration of the filer

The ability of the MMA to restrict access to certain functions of the MMA as described above can be used with certain embodiments of the invention. For example if a member of group A attempts to schedule a command such as executing a script that uses resources that the member does not have access to the MMA will not allow the command to be scheduled.

A package may be transmitted from the terminal to the server station . The package may be a container for transmitting a script . The script is a script created by a user such as any human being interfacing with the terminal to be installed in the MMA . The interfacing may occur for example using a keyboard mouse or other input device of the terminal . The package may be for example a ZIP file or other compressed archive. The package may also include other files or data needed to execute the script such as executable files data files other scripts etc. The server station includes a cache of scripts that stores scripts that have been transmitted to the server station and may be executed by the MMA . As will be described below a script of the scripts may be scheduled and executed by a system administrator.

The filers are monitored by a monitor . The monitor has discovery capabilities and is responsible for monitoring the filers . For example the monitor may query the filers to determine current information about the filers . The monitor may collect this information at a specified interval or the filers may notify the monitor when a change in status occurs. The monitor stores information about the filers in a database . The monitor is a standalone process that independently retrieves information about the filers and puts the information in the database . For example the information about the filers may include the amount of free space on one of the volumes the number of users on one of the filers the number of filers stored on one of the filers etc.

An event daemon monitors the database to determine when events need to be generated. An event is generated when the conditions for the event are met. An event may simply notify a system administrator that something has occurred for example that the volume has less than 100 megabytes of free space. The commands scheduled by the administrators or other users may trigger the events. The event daemon is a process of the MMA that generates events and issues them to system administrators.

For example the event daemon may be used with certain embodiments of the invention to generate an event when the configuration of one of the filers changes. A script that compares a default configuration of a filer to a current configuration of the filer is described below. An administrator may schedule this script to execute at a predetermined time or interval e.g. once at 3 p.m. today or every night at midnight . When the script executes if the condition of the script is met e.g. the configuration of the monitored filer has changed an event is generated to notify the system administrator of the changes.

A scheduler may prompt the monitor to perform certain activities. For example the scheduler may command the monitor to perform a system scan on a specific filer . Further the scheduler may perform scripting functions according to one embodiment of the invention. When a script is executed on the MMA the scheduler may execute the individual instructions. When an administrator schedules commands the scheduler executes the commands. The event daemon generates an event if the conditions of the commands e.g. a script are met. The scheduler may use an interpreter which may be separate from the MMA to execute scripts. The interpreter may be for example a practical extraction and reporting language PERL interpreter. The interpreter executes the individual commands of the script when instructed to by the scheduler .

A web server such as an Apache server executes common gateway interface CGI programs and command line interface CLI instructions from the database . The web server generates web pages such as hypertext markup language HTML or extensible markup language XML web pages and transmits them over a network which may be a local area network LAN or a wide area network WAN such as the Internet. The terminal receives the web pages which may be displayed using a browser such as Internet Explorer . An application programming interface API server may be used to generate the GUI interface of the MMA . The API server retrieves information from the database and transmits the information to the terminal .

The processor is the central processing unit CPU of the filer and thus controls the overall operation of the filer . In certain embodiments the processor accomplishes this by executing software stored in main memory . The processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

The main memory which is generally some form of random access memory RAM stores at least a portion of the operating system of the filer . Techniques of the present invention may be implemented within the operating system as described further below. The operating system may be for example the ONTAP operating system by NetApp . Also connected to the processor through the bus system are a storage adapter and a network adapter . The storage adapter allows the filer to access the external mass storage devices and may be for example a Fibre Channel FC adapter or SCSI adapter. The network adapter may include an Infiniband FC Ethernet or other adapter and may provide a connection allowing remote clients to communicate with the filer .

A network adapter allows the server to communicate with remote processing systems over a network such as the network . For example the server may communicate with the filers over the storage network . A storage adapter allows the server to communicate with storage . The storage may include for example the server s operating system as well as software to execute the MMA . It is understood that other server configurations may be used with the embodiments of the invention.

In block a script is developed. A developer may write the script using known scripting languages for a specific need of the MMA . For example the MMA may include a PERL interpreter and the script could be written in PERL or the script may be written in the extensible markup language XML . A schema for generating a sample script is shown below. The script may also include executable files that may be run separately.

In block the script is packaged into a specific format for example the ZIP format. The package may include not only the script but also any other ancillary files necessary for the execution of the script. In block the script is distributed using a known distribution channel such as through a network using protocols such as HTTP etc. After block the script has been generated and distributed. The process of describes downloading and installing the script in the MMA .

In block of the process an administrator downloads the script to the storage of the server station using the distribution method. In block the script is installed into the MMA . The process of installing the script will be explained further below when discussing . In block the script is executed by the sever station in the MMA . For example the script may be scheduled for execution by a system administrator using certain functions of the MMA . As discussed above the script may be executed when an administrator schedules a command with the MMA which will be run by the scheduler .

In block the package is unpacked into a temporary location. For example the package may be unpacked into a predetermined temporary directory on the server . A package may be a file or other data construct that is an archive of one or more files or other data constructs . For example the package may be a compressed ZIP file that includes the script and supporting files. Unpacking the package extracts the files or other data constructs expanding them if necessary into the desired location. In block the script is verified to ensure that it is properly formatted and that it will execute properly. The verification examines the script to ensure that all function calls are proper all variables are properly defined etc. The script may be written in any scripting language such as the practical extraction and reporting language PERL JavaScript etc. In block the server determines whether the MMA will be able to properly execute the script. The server may examine the script to determine the resources used by the script and determine whether the script is compatible with the configuration of the MMA . For example the server may determine that certain features of the MMA that the script needs to use are not activated. The MMA may then prompt the system administrator to activate the features in order to continue using the script.

In block it is determined whether the package includes an update or a new install of MMA functionality. When the script is written the author may include an indication of whether the script is a new installation or an update of a current version used by the MMA . If the package includes a new install of existing functionality the script should overwrite the previous installation in block . If the package includes an update of existing functionality or a new functionality the script contained in the package can be unpacked into the install directory in block .

Any of various different functionalities may be added to the MMA using scripting languages. These functionalities can expand the abilities of the MMA without disturbing the core of the MMA . For example since the scripting language is installed independently of the core of the MMA the core will not be damaged if an error affects the operation of the script. The script is run by the scripting interpreter such as a PERL or XML interpreter associated with the MMA . The interpreter executes the script which can add functionality to the base functionality of the MMA using scripting commands but does not fundamentally alter the core of the MMA . The core of the MMA includes the functionality required for operation of the MMA . The core typically includes compiled code i.e. executables that is delivered when the MMA is installed. These core functions typically include the basic functions of the MMA such as the monitoring ability the ability to generate events and report to system administrators etc. The script can also be easily removed from the MMA . Further using a scripting language to update the MMA provides transparency of scripting allowing system administrators to examine the scripts.

Administrators of the network may want to ensure that every filer behaves in the same way and therefore may want to determine that the standard configuration of the filers has not changed. This functionality may be added to the MMA using scripting as described above. is a flowchart describing the functionality of a script for monitoring configuration changes of filers. For example a standard configuration may be generated for the filers . This standard configuration may be deployed to every filer coupled to the storage network . The process describes the operation of the configuration script.

In block the standard or default configuration for the filers is retrieved. This configuration may be stored in the storage of the server for example. In block the current configuration of a filer being examined is retrieved. The configuration may be determined by examining the configuration settings of a filer . For example the filer may include several configurable settings that may be modified by administrators program applications etc. The configuration may be stored by the filer in a configuration file that is accessible by the operating system of the filer . The process retrieves the configuration file in block .

In block the default configuration is compared to the current configuration. For example the configuration of the filer may include several individual settings such as limits on the number of volumes managed by the filer limits on the number of users etc. The process compares each of these settings individually to determine whether the setting in the default configuration is the same as the setting in the current configuration. If any setting is different the process notes which setting is different and what the current setting is and places these values in a comparison file.

In block the differences if any are reported to a system administrator. As mentioned above the comparison file may include the differences between the default configuration and the current configuration of the filer . The differences may be reported by generating an event as described above.

According to another embodiment of the invention a script may be used to track changes to the configuration settings over time. According to this embodiment the current configuration is compared to a previous configuration. For example the script may instruct the filer to save the configuration of the filer at a point in time. The process could then be carried out substituting the saved configuration for the default configuration. According to this embodiment in block the previous configuration would be retrieved rather than the default configuration.

In block the script loads the best practices settings for the filer being examined. The best practices settings are a policy for the RAID managed by the filers . The policy ensures that each volume is configured properly. In block the MMA examines at least one of the volumes to determine the current configuration of the RAID arrays. The configuration of the RAID includes the number of disks per volume the size of each volume etc.

In block the script compares the current configuration to the policy for the volumes . If the script determines that one of the volumes is misconfigured in block the script generates an event to notify a system administrator of the misconfiguration.

The techniques introduced above have been described in the context of a network attached storage NAS environment. However these techniques can also be applied in various other contexts. For example the techniques introduced above can be applied in a storage area network SAN environment. A SAN is a highly efficient network of interconnected shared storage devices. One difference between NAS and SAN is that in a SAN the storage server which may be an appliance provides a remote host with block level access to stored data whereas in a NAS configuration the storage server provides clients with file level access to stored data. Thus the techniques introduced above are not limited to use in a file server or in a NAS environment.

This invention has been described with reference to specific exemplary embodiments thereof. It will however be evident to persons having the benefit of this disclosure that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. The specification and drawings are accordingly to be regarded in an illustrative rather than in a restrictive sense.

