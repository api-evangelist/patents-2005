---

title: Method and system for integrated computer networking attack attribution
abstract: A system and method for determining the point of entry of a malicious packet into a network is disclosed. An intrusion detection system detects entry of the malicious packet into the network (). A stepping stone detection system identifies stepping stones in extended connections within the network (). A traceback engine isolates the malicious packet in response to operation of the intrusion detection system (), wherein the traceback engine utilizes the identified stepping stones to determine the point of entry of the malicious packet.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07814546&OS=07814546&RS=07814546
owner: Raytheon BBN Technologies Corp.
number: 07814546
owner_city: Basking Ridge
owner_country: US
publication_date: 20050310
---
The present application claims priority to U.S. Provisional Patent Application No. 60 554 370 filed Mar. 19 2004 the entirety of which is incorporated by reference herein.

The invention described herein was made with government support. The U.S. Government may have certain rights in the invention as provided by the terms of contract No. N66001 00 8038 awarded by the National Security Agency NSA .

The present invention relates generally to communication networks and more specifically to the discovery of routes used by data transmitted over such networks.

Availability of low cost computers high speed networking products and readily available network connections has helped fuel proliferation of the Internet. This proliferation has caused the Internet to become an essential tool for both the business community and private individuals. Dependence on the Internet arises in part because the Internet makes it possible for multitudes of users to access vast amounts of information and perform remote transactions expeditiously and efficiently. Along with the rapid growth of the Internet have come problems caused by malicious individuals or pranksters launching attacks from within the network. As the size of the Internet continues to grow so does the threat posed by these individuals.

The ever increasing number of computers routers and connections making up the Internet increases the number of vulnerability points from which these malicious individuals can launch attacks. These attacks can be focused on the Internet as a whole or on specific devices such as hosts or computers connected to the network. In fact each router switch or computer connected to the Internet may be a potential entry point from which a malicious individual can launch an attack while remaining largely undetected. Attacks carried out on the Internet often consist of malicious packets being injected into the network. Malicious packets can be injected directly into the network by a computer or a device attached to the network such as a router or switch can be compromised and configured to place malicious packets onto the network.

In spite of the development of many sophisticated defense mechanisms such as intrusion detection systems and firewalls such malicious attacks continue to increase. This is due in part because of a perceived lack of accountability the anonymous nature of the Internet and its protocols makes it difficult to accurately identify the source of a network attack when the perpetrator wishes to conceal it. In fact an attacker can generate attacks that appear to have originated from anywhere or nowhere.

There are several reasons why computer networks especially the Internet are particularly prone to attacks. First since networks facilitate remote operations an attacker may be physically separated from the target. This separation provides some degree of protection. Second the design of the Internet emphasizes fault tolerance efficiency and usefulness over accountability. The legitimacy of IP source addresses is not universally enforced. Routing algorithms are purposefully stateless to facilitate rapid recovery or rerouting of traffic after failure. Login identifiers also hide identity rather than being the true name of the individual it is a handle without a strong binding to any real identifying properties at all. In fact the lack of a strong binding of user to individual is a universal problem and techniques like PKI public key infrastructure seek to make identity and authentication based on identity an integral part of the network. So far such efforts have failed to achieve traction.

Finally the sociological aspects of the Internet support the establishment and maintenance of loosely coordinated subcultures complete with group dynamics and peer pressures some of which reward daring feats. From chat rooms to hacker and cracker communities individuals say and do things they may never attempt off line because they have created an alter ego for their presence on line where real names and identities are not being revealed.

Anonymity is a liberating differentiator inhibitions are relaxed when the fear of being identified is reduced or removed. This is true for most social situations but more nefariously anonymity emboldens individuals with ill intentions to act in destructive ways. Often network based attacks are perpetrated by individuals seeking to hide their identities. One of the simplest ways to remain anonymous is to hide the source of an attack by chaining together multiple connections into an extended connection. This is typically done by logging into a remote host then from there logging into a third and fourth and so on until at the final host an attack is launched. These intermediate hosts are often referred to as stepping stones . Tracing such an attack back to the original source is difficult. Some techniques exist to trace individual connections. However tracing an extended connection requires identifying related connection pairs at each stepping stone.

The attribution problem can be divided into two parts 1 finding the source of a flow of attack packets called the IP Traceback Problem and 2 discovering which sources are acting to launder the attack called the Stepping Stone Problem. Consequently three types of attack sources may be identified an originating source stepping stones and immediate sources. The originating source of an attack also referred to as the attack source is the point of origin from which the attacker injects traffic into the network. In the presence of an extended connection the originating source is the host that initiates the first connection in the connection chain. Stepping stones include intermediate hosts or routers acting as hosts along the traversed path of an attack that are exploited to conceal the originating source. The immediate source is the actual host to issue a packet and is also referred to as the packet source. The immediate host may be either the originating source or an intermediate stepping stone. The ability to identify the immediate source of packets is a necessary first step in identifying the originating source of an attack. Yet identifying a packet s source is complicated by both legitimate actions taken upon the packet by the routers as well as the always present possibility of malicious actors along the packet s path.

There remains a need in the art for effective and efficient methods and systems for performing IP traceback and stepping stone detection so as to accurately attribute network attacks.

Systems and methods consistent with principles of the invention may identify a point of entry of a malicious packet into a network. In one implementation an intrusion detection system may detect entry of the malicious packet into the network. A stepping stone detection system may identify stepping stones in extended connections within the network. A traceback engine may isolate the malicious packet in response to operation of the intrusion detection system the traceback engine using the identified stepping stones to determine the point of entry of the malicious packet.

In another implementation consistent with the present invention in a network carrying a plurality of packets at least one of the packets being a target packet the network includes at least one network component a detection device and a traceback engine a technique is provided for determining a point of entry of a target packet into the network. The target packet is received from the detection device at the traceback engine. A query message is sent to a first component of the at least network component where the query message identifies the target packet. A reply containing information about the target packet is received from the first component. The reply is processed to extract information. A second query message is sent to a second component to identify possible correlated connections. A reply containing information about the target packet is received from the second component. The reply is processed to extract information. The point of entry is determined based on the information.

In a further aspect of the invention a computer readable medium is provided for determining a point of entry of a target packet into a network the network including a network component for generating a representation of an intruding packet a second network component for identifying correlated connection pairs in the network a traceback engine and an intrusion detection device. One or more instructions are provided for generating a query message comprising information about at least a portion of the intruding packet the query message being created by the traceback engine in response to a triggering event indicating the intruding packet was detected by the intrusion detection device. One or more instructions are provided for receiving a reply generated by the network component in response to the query message the network component matching the representation to the information in the query message and indicating a match therebetween the match indicating the intruding packet has been encountered and indicates the source and destination addresses of the intruding packet. One or more instructions are provided for generating a second query message comprising information about at least outgoing connection information for the intruding packet the second query message being created by the traceback engine. One or more instructions are provided for receiving a reply generated by the second network component in response to the second query message the second network component identifying an incoming connection correlated to the outgoing connection and indicating a representative packet and time last seen.

In yet a further aspect of the invention in a network carrying a plurality of packets the plurality of packets including a target packet having entered the network through an intrusion location a method is provided for determining the point of entry of a malicious packet into the network. A triggering event is processed to extract information about the target packet. A query is generated for placement onto the network the query including at least a representation of the information about at least a portion of the target packet. The query is sent to a network component. A reply is received from the network component the reply including at least outgoing connection information for identified matching packets. The reply is processed. A second query is generated for placement onto the network the second query including a least the outgoing connection information. The second query is sent to a second network component. A second reply is received from the second network component the second reply indicating an incoming connection associated with the outgoing connection. The second reply is processed and used to facilitate identification of the intrusion location.

The following detailed description of the invention refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following detailed description does not limit the invention. Instead the scope of the invention is defined by the appended claims and equivalents.

Methods and systems consistent with the principles of the invention may simultaneously perform IP traceback of attack packets and stepping stone detection.

Tracing an attack path through stepping stone hosts requires the discovery of an association between two connections with endpoints at that host such that these connections act as consecutive links in a chain of connections. The chain of connections between an originating or attack source and the victim form what is called an extended connection.

An extended connection is constructed by a series of individual connections linked in a pairwise fashion and related by carrying the same underlying data carried as plain text or encrypted text serially across each connection from the originating source to the ultimate destination. A connection pair is any two adjacent connections in the extended connection.

Once an extended connection has been identified the attribution process turns to identifying two connections as related links in a larger chain of connections. Three classes of intermediate hosts may be used by an attacker to launder attack data and to obfuscate the attack path stepping stones zombies and reflectors. An extended connection employed for launching an attack may involve any type and any number of such intermediate hosts.

The simplest type of intermediate host is a stepping stone host. Such a host is compromised to the extent that the attacker can log into the host and establish an outgoing interactive connection such as telnet rlogin or ssh to the next host in the attack path. The attacker s communications are not fundamentally altered though enough may change to evade some methods of detection. For instance if one or both connections are established as an encrypted session encryption will prevent use of any traceback method based on packet content. Processing delays in the host may superficially alter timing of packets. An attacker will usually chain multiple stepping stones together to further screen the attack s origin.

An attacker need not deeply compromise a host to create a stepping stone. All that is needed is access to an ordinary user s privileges to log in and to make outgoing connections. Such access can be gained for instance by dictionary attacks on password files or by snooping for passwords in Internet cafes or computer labs. Root access or equivalent is rarely required though a more permanent back door could be more easily established with such privileges.

One difficulty with the detection of stepping stones is the large number of legitimate uses of extended connections. Commonly access to hosts by legitimate users from outside a network is via a trusted gateway through which the user connects to the target host.

A zombie host can be defined as an intermediate host at which incoming communication is transformed such that the resulting outgoing communication appears to be wholly unconnected and delays measured in hours or days are introduced prior to the establishment of the outgoing communication. The attacker s incoming communication may be script and code that installs a Trojan and the attack s output might come days or months later say in response to a cron table entry . Another zombie may accept simple trigger commands from the attacker to execute previously planted code that issues entirely different output for instance as part of a distributed denial of service DDoS attack.

The lack of apparent relationship between the incoming attack stream and the outgoing attack data as well as the extremely long interval that may ensue between the end of one and the start of the other makes the traceback problem in the network a very difficult one. Consider the example of a DDoS attack being triggered by a timer. Once the attack is under way it is generally easy to determine the immediate source of the last link or two in the attack path. But once the zombie running the Trojan script is identified it is difficult to associate the attack output with the incoming communication that generated the attack. Since the incoming connection over which the Trojan was downloaded and installed could have existed weeks or more in the past the network may retain no information about it. An investigator may examine host logs if access can be obtained but even then a cleverly written Trojan may have altered those logs when installed. Even if the DDoS attack is initiated by a packet containing a trigger command there may very likely be insufficient data to associate that trigger packet with the outgoing attack connection.

It is also possible to launder an attack through an innocent intact host operating normally by using it as a reflector. For instance an attacker logged into a host possibly as part of an attack chain may generate packets with the IP address of the ultimate attack victim forged as the source of the packets. The response packets are directed to the victim and constitute the actual attack. By bouncing such spoofed packets off a large number of normally operating reflectors massive quantities of bogus responses are directed at the victim. This attack must be detected in the network as there is no need for the attacker ever to have communicated with the reflector to set up the attack hence no evidence of the attack or any tampering can be found on the host.

Attributing an attack to a particular source or set of sources requires understanding what can happen to the packets used to perpetuate the attack as they traverse the network. The IP routing infrastructure is stateless and based largely on destination addresses the source address plays virtually no role in the forwarding of a packet to its destination other than providing a return address in the case of bidirectional communication. In this respect IP packets are essentially fire and forget types of delivery mechanisms once a packet is introduced into the network there is no need for the packet to maintain any relationship with its source. The source IP address carries no semantic of trust but it is the only clue built into the network infrastructure as to the proper source. Attackers take advantage of this property of the IP protocol by manipulating either directly or indirectly the source address of attack packets to obscure their true origin.

Known stepping stone detection techniques generally attempt to determine the correlation between all pairs of connections such that the pairs related by being part of the same extended connection will have correlation scores that are higher than those that are not related. Unfortunately these techniques make several simplifying assumptions about the network that may not be valid in an operational environment. A first assumption is that the source address is valid because TCP connections require bidirectional communication. It may be true that an attacker cannot effectively use a connection especially an interactive one with a spoofed source address but this does not mean that the network is preserving the source address. Rather the source address is actively modified by the network when the source is part of a privately addressed network as one connected to the Internet via a network address translator NAT . In this case the source address may be an address from the non routable private address space as defined by RFC 1918. The attacker establishes a connection from his private network through a NAT to a compromised system in the Internet possibly also within a privately addressed or corporate network where the IP addresses are not routable or not known.

A second assumption is that connection pairs are easily stitched together to form the fully reconstructed extended connection. Consider three connections between four hosts HH HH and HH. The pair HH HH can be detected at some point where all traffic into and out of His seen. Likewise with the pair HH HH . However matching the two pairs into an extended connection assumes that given one pair the stitching algorithm knows where to find the other. The obvious clue is H s address but this suggests that there must be some global mapping of each host s address onto the data collection point handling the detection of stepping stones for that host. Outside of maintaining such a mapping the easiest and most effective way to find the data collection point is if those points are closely tied to the routing infrastructure since the mapping of hosts onto routers is fairly well understood.

Integrating stepping stone detection with IP traceback addresses these two problems. Successful IP traceback system does not rely on the source address in the packet during traceback. Since a packet can be easily associated with a connection tracing any one of the packets in a connection will find the origin of the connection even if that origin is obscured in some way. Further successful IP traceback systems assemble the entire path of a packet specifically each router that a packet passed through. This implies that the traceback system is closely integrated with or somehow relies upon the routing infrastructure of the network.

In one implementation consistent with principles of the invention an attack attribution system is provided that is comprised of several processes including one master function that monitors each of the individual processes and aggregates their results into a composite score. In this manner advantages and disadvantages inherent in the processes may be exploited or mitigated.

The master function operates to aggregate the results of these processes into a single score used to determine the correlated pairs of connections passing through a detection point. Stepping stone detection processes issue results with less than complete certainty there is some degree of likelihood associated with each result. Further each of these processes may use different methods for determining a likely connection pair. Some may use thresholds some may use probabilities and some make declarative statements. The master function may assimilate these answers may weight them and construct a representation of the consensus.

Additionally the stepping stone detection system also considers the placement of the detection systems. It can be assumed that hosts are not multi homed and therefore use a single identifiable router for all incoming and outgoing traffic. This means that the router serving a host acting as a stepping stone will see the traffic for both connections in the connection pair. This router is called a stub router herein. Given that the router is the only sure point of commonality for the traffic this can be considered the appropriate location for stepping stone detectors. Further given an IP traceback system that can determine the ingress router for a given packet this stub router may be the ingress router for packets associated with the outgoing connection originating at the host behind the router. It may also be the last router to have seen the packets on the incoming connection and therefore be the natural starting place for a trace of packets associated with that incoming connection to determine that connection s ingress point which possibly has evidence of another stepping stone and therefore another connection to trace .

Specific details regarding the manner of detecting correlated connection pairs are not disclosed herein. It should be understood that any known systems and methods for identifying or estimating such correlated pairs may be incorporated into the system of the present invention.

In one implementation the stepping stone detection architecture may be coupled with an IP traceback system that can trace single packets determine the ingress router and maintain a presence at each router in the network. In one implementation consistent with principles of the invention a Source Path Isolation Engine SPIE in is used as an IP traceback system. SPIE is a log based traceback system that uses efficient auditing techniques at network routers to support the traceback of individual IP packets. Traffic auditing is accomplished by computing and compactly storing packet digests rather than storing the packets themselves. Packets traversing a SPIE enhanced router are recorded in a digest table. Digest tables may be paged at a specified rate and are representative of the traffic forwarded by the router during a particular time interval. A cache of digest tables may be maintained for recently forwarded traffic.

If a packet is determined to be offensive by some intrusion detection system or judged interesting by some other metric a trace request is dispatched to the SPIE system which in turn queries routers for packet digests of the relevant time periods. The results of this query may be used in a simulated reverse path flooding process to build an attack graph that indicates the packet s source s .

The SPIE system may reduce the memory requirement through the use of Bloom filters. By storing only packet digests and not the packets themselves SPIE also does not increase a network s vulnerability to eavesdropping. SPIE s traffic auditing allows routers to efficiently determine if they forwarded a particular packet within a specified time interval while maintaining the privacy of unrelated traffic. Rather than hash the entire packet it has been found for IPv4 that the first 8 bytes of payload along with the immutable fields from the header are sufficient to differentiate almost all non identical packets. It should be understood that additional amounts of payload data e.g. 16 bytes 19 bytes 24 bytes etc. may also be utilized in accordance with the present invention.

The SPIE system implements digest tables using space efficient data structures known as Bloom filters. illustrates a Bloom filter having k hash functions. A Bloom filter computes k distinct packet digests for each packet using independent uniform hash functions and uses the n bit results to index into a 2single bit array. The array is initialized to all zeros and bits are set to one as packets are received.

Membership tests can be conducted simply by computing the k digests on the packet in question and checking the indicated bit positions in the single bit array. If any one of them is zero the packet was not forwarded by the router presently being queried. If however all the bits are one it is highly likely the packet was forwarded. It is possible that some set of other insertions caused all the bits to be set creating a false positive but the rate of such false positives can be controlled by only allowing an individual Bloom filter to store a limited number of digests. A saturated filter may swapped out for a new empty filter and archived for later querying.

The tasks of packet auditing query processing and attack graph generation are dispersed among separate components in the SPIE system. shows the three major architectural components of the SPIE system . Each SPIE enhanced router may include a Data Generation Agent DGA associated with it. The DGA produces packet digests of each packet as it is forwarded through the router and stores the digests in time stamped digest tables. The tables are paged or refreshed every so often and represent the set of traffic forwarded by the router for a particular interval of time. Each table is annotated with the time interval and the set of hash functions used to compute the packet digests over that interval. The digest tables are stored locally at the DGA for some period of time depending on the resource constraints of the router.

SCARs SPIE Collection and Reduction Agents may be responsible for a particular region of the network serving as data concentration points for several routers and facilitating traceback of any packets that traverse the region. When a trace is requested each SCAR produces an attack graph for its particular region. The attack graphs from each SCAR are grafted together to form a complete attack graph by the SPIE Traceback Manager STM .

STM controls the whole SPIE system . The STM is the interface to the intrusion detection system or other entity requesting a packet trace. When a request is presented to the STM it verifies the authenticity of the request dispatches the request to the appropriate SCARs gathers the resulting attack graphs and assembles them into a complete attack graph. Upon completion of the traceback process the STM replies to the intrusion detection system with the final attack graph.

Upon receipt of a traceback request STM dispatches the query to the relevant SCARs for processing act . Beginning at the SCAR responsible for the victim s region of the network STM sends a query message containing P V and T as provided by the intrusion detection system IDS . SCAR then polls each of its associated DGAs act . After processing the received query each DGA may send a reply to SCAR act . The response may indicate that a queried router has seen the target packet P or alternatively that it has not act .

If a queried DGA has seen the target packet a reply and identification ID information for the respective router DGA is associated as active path data act . Alternatively if DGA has not seen the target packet the reply is associated as inactive path data act . Replies received from queried DGAs are used to build a source path trace of possible paths taken by the target packet through the network using known methods step . The source path trace is forwarded to STM and includes a partial attack graph the time T the packet entered the SCAR s region and the entering packet itself P it may have been transformed possibly multiple times within the region act .

STM may then attempt to identify the ingress point for the target packet P act . If STM is unable to determine the ingress point of the target packet subsequent responses from participating routers located an additional hop i.e. in another SCAR s region away are processed by executing steps again act . This query uses the border router between the two network regions as its victim V and T as the time of attack. This process repeats until all branches of the attack graph terminate either at a source within the network or at the edge of the SPIE system.

Examples of source path tracing techniques that may be employed with embodiments disclosed herein are but are not limited to a breadth first search or a depth first search. In a breadth first search all routers DGAs in a region are queried to determine which routers DGAs may have observed a target packet. One or more graphs containing nodes are generated from the responses received by their associated SCAR. Where the nodes indicate locations that the target packet may have passed. Any graphs containing a node where the target packet was observed are associated as active or candidate paths i.e. paths that the target packet may have traversed. With a depth first search only routers DGAs adjacent to a location where the target path was observed are queried. Routers DGAs issuing a positive reply are treated as starting points for candidate graphs because they have observed the target packet. Next all routers DGAs adjacent to those that responded with a positive reply are queried. The process of moving the query response process out one hop at a time is referred to as a round. This process is repeated until all participating routers have been queried or all routers DGAs in a round respond with a negative reply indicating that they have not observed the target packet. When a negative reply is received it is associated as inactive path data.

Because an identified ingress point may actually be a stepping stone host the system of the present invention further enhances IP traceback accuracy by incorporating stepping stone detection at perceived ingress points. Consider any given packet or data unit that may be part of a connection. It is easy to associate that packet with all other packets in the same connection by matching the source and destination IP addresses and ports all packets that exactly share these values are for some period of time packets within the same connection. It should be noted that this is for some period of time because connection identification material can be reused after it has been held unused for an amount of time far exceeding the lifetime of any packet within the network. Nonetheless any packet that is part of a connection can be definitively identified as part of that connection. Consequently any given packet from a connection can be used by the SPIE system to trace to the source of that connection.

Once SPIE system has traced a target packet to the router nearest to the immediate source it can be assumed that any connection that is part of a stepping stone connection pair must also have come through this router. The stepping stone detection processes discussed above are therefore deployed at or near these and all other routers which serve as the first hop for any hosts. Furthermore in the manner set forth above the stepping stone detection processes and associated master function have continually produced a table of connection pairs such that given an outgoing connection the table indicates the incoming connection if any relating to the identified ingress point.

In order to continue the trace across the stepping stone STM queries the established connection pair table to determine the next connection to trace act . Since the SPIE system trace already has a representative packet P within the outgoing connection it is easy to look up the outgoing connection in the table. STM then receives corresponding incoming connection information from the table act . It should be noted that SPIE system requires a specific example of a packet to conduct the trace. Accordingly the connection pair table generated populated during stepping stone discovery should include a representative packet field.

As described above the SPIE system utilizes three pieces of information to perform an IP traceback 1. the packet 2. the time the packet was seen and 3. the last router known to have seen the packet. The table therefore returns not only the packet but also the time that packet was seen. The last router known to have seen the packet is the current router since this must be the last router used by the incoming connection.

Since the SPIE system is sensitive about the age of the packets it traces the older the packet the less likely evidence of the packet s path is still kept in the Bloom filters in the SPIE DGAs the packet that gets installed into the connection pair table should be the last packet seen on the incoming connection along with the time that packet was seen. This gives the SPIE system the best chance of completing the trace with the incoming connection s representative packet since it is the newest packet on that connection.

Upon request by the SPIE system the connection pair table will return the correlated incoming connection and one representative packet from the connection and the time the packet was seen. The SPIE system can then construct a new query based on the new target packet and time from the incoming connection act and continue the trace in the manner described above to once again find the ingress router for the connection. Again the connection pair table is consulted and additional packet traces may be launched even tracing through NAT boxes if necessary until at some point the table does not report a correlated connection. At this point the trace terminates with the last ingress router which is as far as the SPIE system can go. However since the traced packet is part of a connection and therefore must have a valid source address that can be used for returning packets such as acknowledgments the host that is the actual originating source can be easily determined act . STM then constructs a composite attack graph which it returns to the intrusion detection system act .

Methods and systems consistent with the principles of the invention may discover stepping stones within an attack path topology by examining elapsed times between one data unit or packet arrival and the most recent data unit arrivals from other nodes on a per event basis. The most recent data unit arrivals from the other nodes may be weighted so that more recent chunks are weighted higher than less recent data units.

The foregoing description of preferred embodiments of the invention provides illustration and description but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations will be apparent to those skilled in the art in light of the above teachings or may be acquired from practice of the invention.

Moreover the acts in need not be implemented in the order shown nor do all of the acts need to be performed. Also those acts which are not dependent on other acts may be performed in parallel with the other acts. No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise. The scope of the invention is defined by the claims and their equivalents.

