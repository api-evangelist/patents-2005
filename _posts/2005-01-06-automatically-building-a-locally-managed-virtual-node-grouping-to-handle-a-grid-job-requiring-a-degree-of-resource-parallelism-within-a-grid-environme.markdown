---

title: Automatically building a locally managed virtual node grouping to handle a grid job requiring a degree of resource parallelism within a grid environment
abstract: A method, system, and program for automatically building a locally managed virtual node grouping to handle a grid job requiring a degree of resource parallelism for execution within a grid environment are provided. The grid environment includes multiple resource nodes which are identified by physical location as physically disparate groups each managed by a grid manager. The grid managers include a grid virtual node grouping subsystem that enables a particular grid manager receiving a grid job that requires a particular degree of resource parallelism for execution to build a virtual node grouping of resources from across the grid environment and locally manage the resources included in the virtual node grouping. In particular, the particular grid manager accesses, from the other grid managers, a current availability and workload of each of the physically disparate resource nodes. The particular grid manager selects a selection of resource nodes to build into a virtual node grouping for executing the grid job. The virtual node grouping is built by the other grid managers enabling the particular grid manager to acquire temporary management control over the selection of resource nodes for a duration of the execution of the grid job within the virtual node grouping.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07707288&OS=07707288&RS=07707288
owner: International Business Machines Corporation
number: 07707288
owner_city: Armonk
owner_country: US
publication_date: 20050106
---
The present invention relates in general to improved grid computing and in particular to constructing virtual node groupings to handle a grid job. Still more particularly the present invention relates to providing automated building of a locally managed virtual node grouping to handle a grid job requiring a degree of resource parallelism for execution within a grid environment.

Ever since the first connection was made between two computer systems new ways of transferring data resources and other information between two computer systems via a connection continue to develop. In typical network architectures when two computer systems are exchanging data via a connection one of the computer systems is considered a client sending requests and the other is considered a server processing the requests and returning results. In an effort to increase the speed at which requests are handled server systems continue to expand in size and speed. Further in an effort to handle peak periods when multiple requests are arriving every second server systems are often joined together as a group and requests are distributed among the grouped servers. Multiple methods of grouping servers have developed such as clustering multi system shared data sysplex environments and enterprise systems. With a cluster of servers one server is typically designated to manage distribution of incoming requests and outgoing responses. The other servers typically operate in parallel to handle the distributed requests from clients. Thus one of multiple servers in a cluster may service a client request without the client detecting that a cluster of servers is processing the request.

Typically servers or groups of servers operate on a particular network platform such as Unix or some variation of Unix and provide a hosting environment for running applications. Each network platform may provide functions ranging from database integration clustering services and security to workload management and problem determination. Each network platform typically offers different implementations semantic behaviors and application programming interfaces APIs .

Merely grouping servers together to expand processing power however is a limited method of improving efficiency of response times in a network. Thus increasingly within a company network rather than just grouping servers servers and groups of server systems are organized as distributed resources. There is an increased effort to collaborate share data share cycles and improve other modes of interaction among servers within a company network and outside the company network. Further there is an increased effort to outsource nonessential elements from one company network to that of a service provider network. Moreover there is a movement to coordinate resource sharing between resources that are not subject to the same management system but still address issues of security policy payment and membership. For example resources on an individual s desktop are not typically subject to the same management system as resources of a company server cluster. Even different administrative groups within a company network may implement distinct management systems.

The problems with decentralizing the resources available from servers and other computing systems operating on different network platforms located in different regions with different security protocols and each controlled by a different management system has led to the development of Grid technologies using open standards for operating a grid environment. Grid environments support the sharing and coordinated use of diverse resources in dynamic distributed virtual organizations. A virtual organization is created within a grid environment when a selection of resources from geographically distributed systems operated by different organizations with differing policies and management systems is organized to handle a job request.

While the open standards defining grid technology facilitate sharing and coordination of diverse resources in dynamic distributed virtual organizations grid standards do not solve all of the problems associated with actually determining how to group resources into virtual organizations. This problem is further compounded when a grid job requires groups of resources that are dedicated to processing the grid job in parallel. In some cases a system administrator may decide to build a group of grid resource nodes dedicated to highly parallel job processing but dedicating a group of grid resource nodes to provide a particular degree of parallelism limits the use of those resources. In addition even if a system administrator dedicates a group of resources to highly parallel job processing that group of resources may be insufficient for the degree of parallelism required for processing a particular job requiring the grid environment to send the grid job to an external grid environment to handle the grid job. Sending a grid job to an external grid environment with groupings of resource nodes is also limited because use of the external grid environment may be expensive and may not be appropriate or desirable depending on the confidentiality required for the grid job. Further sending a grid job to an external grid environment with designated groupings of resource nodes is also limited because a company or organization may maintain a grid environment that when viewed as a whole includes sufficient resource nodes to provide the degree of parallelism but current grid technology does not provide a mechanism for automatically grouping grid nodes from physically disparate locations within a company or organization to process jobs requiring a high degree of parallelism.

Therefore in view of the foregoing there is a need for a computer automated method system and program for creating virtual temporary grid node groupings of sufficient capacity to provide the degree of parallelism required for a particular job. In particular there is a need for a computer automated method system and program for creating cost effective virtual node groupings using locally available resources and external resources accessed from trusted grid vendors with local management within the company or organization controlling the grid environment.

In view of the foregoing the present invention in general provides for improved grid computing and in particular to constructing virtual node groupings to handle a grid job. Still more particularly the present invention relates to automated building of a locally managed virtual node grouping to handle a grid job requiring a degree of resource parallelism for execution within a grid environment.

In one embodiment a grid environment includes multiple resource nodes which are identified by physical location as physically disparate groups each managed by a grid manager. The grid managers include a grid virtual node grouping subsystem that enables a particular grid manager receiving a grid job that requires a particular degree of resource parallelism for execution to build a virtual node grouping of resources from across the grid environment and locally manage the resources included in the virtual node grouping. In particular the particular grid manager accesses from the other grid managers a current availability and workload of each of the physically disparate resource nodes. The particular grid manager selects a selection of resource nodes to build into a virtual node grouping for executing the grid job. The virtual node grouping is built by the other grid managers enabling the particular grid manager to acquire temporary management control over the selection of resource nodes for a duration of the execution of the grid job within the virtual node grouping.

In particular when the particular grid manager receives a grid job that requires a particular degree of resource parallelism for execution grid manager first determines whether the local resource nodes managed by the particular grid manager already include a node grouping designated for handling the level of parallelism required. If the local resource nodes do not already include a node grouping designated for handling the level of parallelism then the particular grid manager determines whether a virtual node grouping can be formed within the local resource nodes by combining local resource nodes with physically disparate resource nodes by combining only physically disparate resource nodes or by accessing resource nodes from a trusted grid vendor outside the grid environment. Any of the virtual node groupings will still be locally managed by the particular grid manager.

In determining the selection of resource nodes to include in the virtual node grouping the particular grid manager may consider the current availability of resource nodes the workload currently affecting the performance time of resource nodes and the cost of each resource node. In addition the particular grid manager may access business policies for the grid environment and make a policy compliant selection of resource nodes.

Referring now to the drawings and in particular to there is depicted one embodiment of a computer system which may be implemented in a grid environment and in which the present invention may be implemented. As will be further described the grid environment includes multiple computer systems managed to provide resources. Additionally as will be further described the present invention may be executed in a variety of computer systems including a variety of computing systems mobile systems and electronic devices operating under a number of different operating systems managed within a grid environment.

In one embodiment computer system includes a bus or other device for communicating information within computer system and at least one processing device such as processor coupled to bus for processing information. Bus may include low latency and higher latency paths connected by bridges and adapters and controlled within computer system by multiple bus controllers. When implemented as a server system computer system typically includes multiple processors designed to improve network servicing power.

Processor may be a general purpose processor such as IBM s PowerPC processor that during normal operation processes data under the control of operating system and application software accessible from a dynamic storage device such as random access memory RAM and a static storage device such as Read Only Memory ROM . The operating system may provide a graphical user interface GUI to the user. In one embodiment application software contains machine executable instructions that when executed on processor carry out the operations depicted in the flowcharts of and others operations described herein. Alternatively the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

The present invention may be provided as a computer program product included on a machine readable medium having stored thereon the machine executable instructions used to program computer system to perform a process according to the present invention. The term machine readable medium as used herein includes any medium that participates in providing instructions to processor or other components of computer system for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Common forms of non volatile media include for example a floppy disk a flexible disk a hard disk magnetic tape or any other magnetic medium a compact disc ROM CD ROM or any other optical medium punch cards or any other physical medium with patterns of holes a programmable ROM PROM an erasable PROM EPROM electrically EPROM EEPROM a flash memory any other memory chip or cartridge or any other medium from which computer system can read and which is suitable for storing instructions. In the present embodiment an example of a non volatile medium is mass storage device which as depicted is an internal component of computer system but will be understood to also be provided by an external device. Volatile media include dynamic memory such as RAM . Transmission media include coaxial cables copper wire or fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency or infrared data communications.

Moreover the present invention may be downloaded as a computer program product wherein the program instructions may be transferred from a remote virtual resource such as a virtual resource to requesting computer system by way of data signals embodied in a carrier wave or other propagation medium via a network link e.g. a modem or network connection to a communications interface coupled to bus . Virtual resource may include a virtual representation of the resources accessible from a single system or systems wherein multiple systems may each be considered discrete sets of resources operating on independent platforms but coordinated as a virtual resource by a grid manager. Communications interface provides a two way data communications coupling to network link that may be connected for example to a local area network LAN wide area network WAN or an Internet Service Provider ISP that provide access to network . In particular network link may provide wired and or wireless network communications to one or more networks such as network through which use of virtual resources such as virtual resource is accessible as provided within a grid environment . Grid environment may be part of multiple types of networks including a peer to peer network or may be part of a single computer system such as computer system .

As one example network may refer to the worldwide collection of networks and gateways that use a particular protocol such as Transmission Control Protocol TCP and Internet Protocol IP to communicate with one another. Network uses electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are exemplary forms of carrier waves transporting the information. It will be understood that alternate types of networks combinations of networks and infrastructures of networks may be implemented.

When implemented as a server system computer system typically includes multiple communication interfaces accessible via multiple peripheral component interconnect PCI bus bridges connected to an input output controller. In this manner computer system allows connections to multiple network computers.

Additionally although not depicted multiple peripheral components and internal external devices may be added to computer system connected to multiple controllers adapters and expansion slots coupled to one of the multiple levels of bus . For example a display device audio device keyboard or cursor control device may be added as a peripheral component.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. Furthermore those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention.

With reference now to a block diagram illustrates one embodiment of the general types of components within a grid environment. In the present example the components of a grid environment include a client system interfacing with a grid management system which interfaces with server clusters servers workstations and desktops data storage systems and networks . For purposes of illustration the network locations and types of networks connecting the components within grid environment are not depicted. It will be understood however that the components within grid environment may reside atop a network infrastructure architecture that may be implemented with multiple types of networks overlapping one another. Network infrastructure may range from multiple large enterprise systems to a peer to peer system to a single computer system. Further it will be understood that the components within grid environment are merely representations of the types of components within a grid environment. A grid environment may simply be encompassed in a single computer system or may encompass multiple enterprises of systems.

It will be understood that grid environment may be provided by a grid vendor where a cost for use of resources within grid environment may be calculated based on the amount of time required for a grid job to execute or the actual amount of resources used for example. In addition it will be understood that grid environment may include grid resources supplied by a single grid vendor such as a particular business enterprise or multiple vendors where each vendor continues to monitor and manage the vendor s group of resources but grid management system is able to monitor unintended changes across all the resources regardless of which vendors provide which resources. Further it will be understood that although resource discovery mechanisms for discovering available grid resources are not depicted client system or grid management system may discover grid resources advertised from local and global directories available within and outside of grid environment .

The central goal of a grid environment such as grid environment is organization and delivery of resources from multiple discrete systems viewed as virtual resource . Client system server clusters servers workstations and desktops data storage systems networks and the systems creating grid management system may be heterogeneous and regionally distributed with independent management systems but enabled to exchange information resources and services through a grid infrastructure enabled by grid management system . Further server clusters servers workstations and desktops data storage systems and networks may be geographically distributed across countries and continents or locally accessible to one another.

In the example client system interfaces with grid management system . Client system may represent any computing system sending requests to grid management system . In particular client system may send virtual job requests or requests for a quote RFQs and jobs to grid management system . Further while in the present embodiment client system is depicted as accessing grid environment with a request in alternate embodiments client system may also operate within grid environment .

While the systems within virtual resource are depicted in parallel in reality the systems may be part of a hierarchy of systems where some systems within virtual resource may be local to client system while other systems require access to external networks. Additionally it is important to note that systems depicted within virtual resources may be physically encompassed within client system .

To implement grid environment grid management system facilitates grid services. Grid services may be designed according to multiple architectures including but not limited to the Open Grid Services Architecture OGSA . In particular grid management system refers to the management environment which creates a grid by linking computing systems into a heterogeneous network environment characterized by sharing of resources through grid services.

According to an advantageous of the invention grid management system includes a grid virtual node grouping service or controller that enables local grid managers within grid management system to build temporary virtual node groupings to handle jobs that require a particular grouping of resources such as a grouping of resource nodes with sufficient capacity to provide the degree of parallelism required for a particular job. As will be further described rather than require a grid manager to send a job to another grid environment outside of grid environment that already has a grouping of dedicated resources to handle the job grid management system can build the grouping and locally manage the grouping from a grid manager for one of multiple physically disparate grids operating within grid environment . Further as will be further described the grid virtual node grouping service enables grid management system to build a locally managed virtual node grouping that includes selections of resources within grid environment and selections of resources from trusted grid vendors outside grid environment . Building a virtual node grouping may require initializing hardware resources and installing software resources for example.

Referring now to a block diagram illustrates one example of an architecture that may be implemented in a grid environment. As depicted an architecture includes multiple layers of functionality. As will be further described the present invention is a process which may be implemented in one or more layers of an architecture such as architecture which is implemented in a grid environment such as the grid environment described in . It is important to note that architecture is just one example of an architecture that may be implemented in a grid environment and in which the present invention may be implemented. Further it is important to note that multiple architectures may be implemented within a grid environment.

Within the layers of architecture first a physical and logical resources layer organizes the resources of the systems in the grid. Physical resources include but are not limited to servers storage media and networks. The logical resources virtualize and aggregate the physical layer into usable resources such as operating systems processing power memory I O processing file systems database managers directories memory managers and other resources.

Next a web services layer provides an interface between grid services and physical and logical resources . Web services layer implements service interfaces including but not limited to Web Services Description Language WSDL Simple Object Access Protocol SOAP and extensible mark up language XML executing atop an Internet Protocol IP or other network transport layer. Further the Open Grid Services Infrastructure OSGI standard builds on top of current web services by extending web services to provide capabilities for dynamic and manageable Web services required to model the resources of the grid. In particular by implementing OGSI standard with web services grid services designed using OGSA are interoperable. In alternate embodiments other infrastructures or additional infrastructures may be implemented a top web services layer .

Grid services layer includes multiple services where in one embodiment the multiple services interacting with one another implement grid management system . For example grid services layer may include grid services designed using OGSA such that a uniform standard is implemented in creating grid services. Alternatively grid services may be designed under multiple architectures. Grid services can be grouped into four main functions. It will be understood however that other functions may be performed by grid services.

First a resource management service manages the use of the physical and logical resources. Resources may include but are not limited to processing resources memory resources and storage resources. Management of these resources includes scheduling jobs distributing jobs and managing the retrieval of the results for jobs. Resource management service monitors resource loads and distributes jobs to less busy parts of the grid to balance resource loads and absorb unexpected peaks of activity. In particular a user may specify preferred performance levels so that resource management service distributes jobs to maintain the preferred performance levels within the grid.

Second information services manages the information transfer and communication between computing systems within the grid. Since multiple communication protocols may be implemented information services manages communications across multiple networks utilizing multiple types of communication protocols.

Third a data management service manages data transfer and storage within the grid. In particular data management service may move data to nodes within the grid where a job requiring the data will execute. A particular type of transfer protocol such as Grid File Transfer Protocol GridFTP may be implemented.

Finally a security service applies a security protocol for security at the connection layers of each of the systems operating within the grid. Security service may implement security protocols such as Open Secure Socket Layers SSL to provide secure transmissions. Further security service may provide a single sign on mechanism so that once a user is authenticated a proxy certificate is created and used when performing actions within the grid for the user.

Multiple services may work together to provide several key functions of a grid computing system. In a first example computational tasks are distributed within a grid. Data management service may divide up a computation task into separate grid services requests of packets of data that are then distributed by and managed by resource management service . The results are collected and consolidated by data management system . In a second example the storage resources across multiple computing systems in the grid are viewed as a single virtual data storage system managed by data management service and monitored by resource management service .

An applications layer includes applications that use one or more of the grid services available in grid services layer . Advantageously applications interface with the physical and logical resources via grid services layer and web services such that multiple heterogeneous systems can interact and interoperate.

With reference now to there is depicted one illustration of a logical representation of the grid management system within a grid environment in accordance with the method system and program of the present invention. As depicted grid management system is logically represented by multiple grid managers and that perform the functions that provide grid management system . Each of grid managers and may provide monitoring scheduling and management to resource nodes RS such as resource nodes and . According to an advantage of the invention each of grid managers and may include a grid virtual node grouping subsystem which enables grid managers and each to build local virtual node groupings to handle jobs that require groupings of resources such as jobs that require a particular degree of parallelism.

In particular in the example grid environment includes GM that manages RS and RS and communicates with GM and GM . In particular grid virtual node grouping subsystem distributed among GM GM and GM enables communication between GM GM and GM to enable each of these GMs to build and manage a local virtual node grouping.

In addition in the example grid environment includes multiple groups of resource nodes described by grid A and grid B . In one embodiment Grid A and Grid B are physically disparate groups of resource nodes but accessible to one another within grid environment . For purposes of illustration where Grid A and grid B are physically disparate groups of resource nodes each grid may be considered a local grid to a particular physical location the GM within each grid manages a set of local resources. Thus in particular GM within grid A manages resource nodes and which are physically local to one another and GM within grid B manages resource nodes and which are physically local to one another. In another embodiment Grid A and Grid B are logically disparate groups of resource nodes.

In addition to GM GM and GM and grid virtual node grouping subsystem grid management system may include additional grid services that facilitate management of grid environment and specifically facilitate management of grids within grid environment . For example in addition to GM grid A may include a grid workload tracking agent not depicted that tracks the real time workload characteristics of RS and RS and any other resource nodes managed by GM . In another grid environment may include a central allocation controller not depicted that determines how resource nodes should be allocated within grid environment or within a particular grid of grid environment . For example the central allocation controller may detect that more resource nodes need to be allocated for performing database processing and control the allocation process

In one example a job submitted within grid environment is initially received by GM . GM determines that the job requires a grid node grouping of sufficient capacity to provide a particular degree of parallelism. In a first scenario GM locates Grid B within grid environment that has sufficient resources available to provide an execution environment of a sufficient degree of parallelism and passes the job to GM . In a second scenario GM locates Grid B within grid environment that can handle the job except for requiring an additional resource node. GM negotiates with GM for temporary management of RS as indicated by temporary management connection to build a local virtual node grouping that provides an execution environment of a sufficient degree of parallelism. Alternatively GM may negotiate for temporary or permanent access to grid resources available from a trusted grid vendor outside of grid environment for building a local virtual node grouping that provides an execution environment of a sufficient degree of parallelism.

GM GM GM and all the RSs may be part of a grid environment of resources all owned by a single enterprise or of resources all managed and owned by a single grid vendor. In another example grid environment may be the environment in which a single enterprise submits grid jobs but Grid A and Grid B are accessed from trusted grid vendors and incorporated either temporarily or permanently within grid environment .

With reference now to there is depicted a block diagram of the components of the grid virtual node grouping subsystem distributed among the grid management system for a grid environment in accordance with the method system and program of the present invention. As depicted grid virtual node grouping subsystem includes multiple subsystem controllers that may be distributed among grid managers and other modules included in the grid management system for a grid environment. In addition the controllers within grid virtual node grouping subsystem may be incorporated together or individually into modules enabled to manage a grid environment.

Grid virtual node grouping subsystem includes a grid to grid manager communication subsystem . In general grid to grid manager communication subsystem enables communication between grid managers of physically disparate grids such as Grid A and Grid B in . More specifically grid to grid manager communication subsystem is incorporated into existing grid managers or grid schedulers within a grid environment to enable communication between grid managers of physically disparate grids and enable integration of resource nodes from one physical grid to be temporarily or permanently managed by another grid manager building a virtual grid node grouping.

In one example of grid virtual node grouping subsystem a local grid manager for a grid including grid to grid manager communication subsystem such as GM for Grid B initiates the query to other grid managers for external resources in an effort to build a low cost secure virtual node grouping. In particular GM may query all other grid managers that include grid to grid manager communication subsystem . Once GM locates available external resources then GM will retain responsibility for the external resources from node group formation until node group deconstruction.

To actually enable integration of resources nodes into a virtual grid node group the grid manager responsible for initiating the virtual grid node group may also be responsible for managing network addressing and configuration changes required to add external resource nodes into a local virtual node grouping. Thus for example grid to grid manager communication subsystem within the initiating GM may add Internet Protocol IP address aliases to the network cards of each of the resource nodes such as RS added from external grids so that the external resource nodes appear as part of the local virtual grid node group.

In addition grid virtual node grouping subsystem includes a grid to grid workload tracking agent communication subsystem . A grid workload tracking agent may track real time usage and performance of a particular group of resources. In one embodiment grid to grid workload tracking agent communication subsystem enables communication of between grid workload tracking agents. In another embodiment each grid manager receives real time usage and performance of a selection of resources managed by each grid manager and grid managers relay the workload information to one another through grid to grid manager communication subsystem .

Further grid virtual node grouping subsystem includes a deterministic subsystem . In general deterministic subsystem determines when it is necessary or desirable to create or dismantle virtual node groupings. In particular when a grid job is detected deterministic subsystem analyzes real time grid activity and conditions as received from the grid workload agents and other monitoring agents in addition to business based policies and rules for the job and the grid environment to determine whether to build a virtual node grouping. In one example deterministic subsystem first performs an analysis of the real time grid activity to determine the lowest cost group of resources available to handle the job. Then deterministic subsystem further analyzes the low cost options based on additional business based criteria including but not limited to the current local grid activity levels the current local grid resource availability the priority of the new job the client relationship with the job submitter and the expected duration of the new job. As a result of the analysis deterministic subsystem may a decision such as but not limited to deciding to add or convert new local grid resources rather than create a new virtual node group deciding to add or convert local resources for inclusion in a virtual node group or deciding to create a virtual node group using only remote grid resources that are managed as local resources. In one embodiment as an alternative to incorporation in a grid manager or independent module deterministic subsystem may be incorporated into a grid resource allocation agent that specifically controls the allocation and de allocation of resources within a grid environment.

In addition grid virtual node grouping subsystem includes a comparative evaluation subsystem . In general comparative evaluation subsystem enables determination of which virtual node grouping is most efficient and cost effective if deterministic subsystem determines that a virtual node grouping should be built and multiple groups are available. In particular comparative evaluation subsystem may access the costs and time constraints of available nodes and determine the best grouping of nodes based on job requirements costs real time grid conditions and business policy based criteria. In one embodiment to access information needed to select a cost effective grouping of nodes comparative evaluation subsystem may communicate with grid managers as previously described and may additionally communicate with grid pricing controllers that determining current pricing for resources within a grid environment and grid resource allocation agents that control and schedule the allocation and de allocation of resources within a grid environment.

Further grid virtual node grouping subsystem includes a grid virtual node grouping resource monitor and manager . In general grid virtual node grouping resource monitor and manager is responsible for monitoring and managing a virtual node grouping once the virtual node grouping is built. Grid virtual node grouping resource monitoring and manager may be incorporated within the grid manager and may interface with workload tracking agents to track the completion of the job that initiated the building of the virtual node grouping and notify deterministic subsystem when the job is complete so that the virtual node grouping can be dismantled if no longer necessary.

Referring now to there is depicted an illustrative example of the built local resource node groupings in accordance with the method system and program of the present invention. In the example resource nodes from four physically disparate grids managed by four physically disparate grid managers are depicted. In particular a Grid A includes resources physically located in Atlanta a Grid B includes resources physically located in New York a Grid C includes resources physically located in Boston and a Grid D includes resources physically located in Austin.

For purposes of example resources nodes providing one of two types of operating system environments are described. In particular for purposes of the example a resource node may be allocated to providing a platform for AIX 4.3 such as resource node or AIX 5.2 such as resource node .

In one example Grid C receives a job requiring eight concurrently available AIX 5.2 resource nodes for an execution environment. Grid C only includes two local AIX 5.2 resource nodes. The grid manager for Grid C may communicate with the grid managers of Grids A B and D through the grid virtual node grouping subsystem to determine whether additional AIX 5.2 resource nodes are available and determine the most cost effective and policy compliant virtual node grouping to build. In the example a virtual node grouping is managed locally by the grid manager for Grid C but includes remote resource nodes from Grids A B and D. Once Grid C completes the job then the grid manager for Grid C may dismantle virtual node grouping and return the remote resource nodes to the grid managers for Grids A B and D.

In another example Grid B receives a job requiring eight concurrently available AIX 4.3 resource nodes for an execution environment. Grid B only includes two local AIX 4.3 resource nodes. The grid manager for Grid B may communicate with the grid managers of Grids A C and D through the grid virtual node grouping subsystem to determine whether additional AIX 4.3 resource nodes are available and determine the most cost effective and policy compliant virtual node grouping to build. In the example the comparative evaluation subsystem may access availability pricing and real time workload of the AIX 4.3 resource nodes in Grids A C and D Table 1 illustrates an example of the comparative values that may be determined by the comparative evaluation subsystem from the availability pricing and real time workload. Based on the availability pricing and workload calculated into wait time and run time in addition to policies the comparative evaluation subsystem selects to add the AIX 4.3 resource nodes available from Grid A to build a virtual node grouping that is locally managed within Grid B. It is important to note that comparative evaluation may include comparisons of multiple factors such as cost and times or a single factor such as just cost.

In yet another example Grid C receives a job requiring three concurrently available AIX 5.2 resource nodes for an execution environment. Locally within Grid C a node grouping includes two AIX 4.3 nodes. The grid manager for Grid C may initiate the grid virtual node grouping subsystem to determine whether to build a virtual node grouping with additional local resource nodes or additional external resource nodes. In the example the grid manager for Grid C determines that AIX 4.3 node should be added to virtual node grouping to handle the job.

With reference now to there is depicted a high level logic flowchart of a process and program for determining whether to build a local grid node grouping or use an existing grouping and determining which resource nodes to include in the grouping in accordance with the method system and program of the present invention. As depicted the process starts at block and thereafter proceeds to block . Block depicts a determination whether a grid manager for grid A detects a job submitted for execution. When a grid manager for grid A detects a job submitted for execution the grid manager initiates block to query and queue spot pricing for use of resources from alternate grids to build the execution environment for the job which is described in . In addition when a grid manager for grid A detects a job submitted for execution the process passes to block .

Block depicts a determination whether the required execution environment for execution of the job is already built and available in grid A. If the required execution environment is already available in grid A then the process passes to block . Block depicts calculating the cost to execute the job locally within an execution environment. Next block depicts comparing the calculated cost with the queued pricing data complied as described in . Thereafter block depicts a determination whether the local execution environment is the least expensive. If the local execution environment is the least expensive then the process passes to block . Block depicts executing the job in the local execution environment and the process ends. Otherwise at block if the local execution environment is not the least expensive then the process passes to block and proceeds as will be further described.

Returning to block if the required execution environment is not already available in grid A then the process passes to block . Block depicts a determination whether grid A includes local resources that are available to build an execution environment. If grid A does not include local resources available to build the execution environment then the process passes to block . Block depicts a determination whether any prices are available in the grid pricing queue. If prices are not available in the pricing queue then the process ends. If prices are available in the pricing queue then the process passes to block and proceeds as will be further described.

Returning to block if there are local resources available to build the execution environment required for the job then the process passes to block . Block depicts calculating the cost and required time to locally build the grouping of nodes for the execution environment. Next block depicts comparing the calculated cost with the queued pricing data. Thereafter block depicts a determination whether the local resources are faster less costly for building the node group for the executing environment. If the local resources are not faster or less costly for building the node group for the execution environment for the job then the process passes to block . If the local resources are faster or less costly for building the node group for the execution environment for the job then the process passes to block . Block depicts building a local grid resource group for the execution environment then block depicts executing the job in the local execution environment and the process ends.

Block depicts constructing a virtual node grouping for an execution environment using grids with the least costly and time consuming resources from across the multiple grids returning pricing and availability of resource information. Next block depicts executing the job within the virtual group. Thereafter block depicts a determination whether the job execution is completed. Once the job execution is completed block depicts deconstructing the virtual resource group and the process ends.

Referring now to there is depicted a high level logic flowchart of a process and program for controlling the querying of other disparate grid resource groups for available resources for constructing a virtual group of resources in accordance with the method system and program of the present invention. As depicted the process start at block and thereafter proceeds to block . Block depicts querying a grid manager for grid N for resource availability and time to access available resources. Next block depicts a determination whether the grid N resources are available to build the execution environment. If resources from grid N are available then the process passes to block . Block depicts queuing the grid N pricing data and the process passes to block . Otherwise at block if resources from grid N are available then the process passes to block .

Block depicts a determination whether all or a sufficient number of grid managers have been queried for resource availability. If all or a sufficient number of grid managers have been queried for resource availability then the process passes to block . Block depicts returning the pricing data queue to the requesting grid manager and the process ends. Otherwise at block if all or a sufficient number of grid managers have not been queried for resource availability then the process passes to block . Block depicts incrementing N to query the next grid manager in block .

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

