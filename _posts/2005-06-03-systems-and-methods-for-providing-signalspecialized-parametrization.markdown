---

title: Systems and methods for providing signal-specialized parametrization
abstract: Systems and methods are provided for optimizing a parametrization scheme in accordance with information about the surface signal. A surface parametrization is created to store a given surface signal into a texture image. The signal-specialized metric of the invention minimizes signal approximation error, i.e., the difference between the original surface signal and its reconstruction from the sampled texture. A signal-stretch parametrization metric is derived based on a Taylor expansion of signal error. For fast evaluation, the metric of the invention is pre-integrated over the surface as a metric tensor. The resulting parametrizations have increased texture resolution in surface regions with greater signal detail. Compared to traditional geometric parametrizations, the number of texture samples can often be reduced by a significant factor for a desired signal accuracy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07425954&OS=07425954&RS=07425954
owner: Microsoft Corporation
number: 07425954
owner_city: Redmond
owner_country: US
publication_date: 20050603
---
This application is a continuation of U.S. application Ser. No. 10 138 289 filed May 1 2002 now U.S. Pat. No. 7 071 936 which is hereby incorporated by reference in its entirety.

A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document Copyright 2001 Microsoft Corp.

The present invention relates to systems and methods for providing signal specialized parametrization schemes in connection with computer graphics. More particularly the present invention relates to systems and methods for providing parametrization using a signal specialized metric. A signal specialized metric generates a surface parametrization that takes into account a signal on the surface of a mesh such as a color mapped onto the surface in order to place more texture samples in area of high signal variation or high signal detail.

Texture mapping lets a color signal be imaged onto geometry giving the appearance of detail on coarse triangle meshes. Using textures is generally more efficient than refining the carrier geometry to represent the signal per vertex. While rasterization hardware has supported basic texture mapping for many years it has recently begun to offer more powerful features. Multitexturing lets several textures contribute to a pixel fragment and shader expression trees combine these textures using complex operations. In particular the trend is towards more general programmability.

With this increased rasterization functionality many surface signals other than color can be used to achieve new rendering effects including bump mapping where surface normals are the signal displacement mapping geometry irradiance shading spherical harmonics and self shadowing horizon maps . These techniques provide further motivation to compress signals defined with vertex attributes into textures parametrized over the mesh.

The goal in generating the parametrization should be to minimize the signal approximation error SAE i.e. the difference between the reconstructed signal and the original surface signal. However most surface parametrization schemes to date assume no a priori knowledge of the signal and instead minimize various geometric distortion measures.

For example Eck et al. propose the discrete harmonic map which assigns non uniform springs to the mesh edges. Duchamp et al. investigate multiresolution solution methods for computing harmonic maps. Floater proposes a similar metric with a different edge spring weighting that guarantees an embedding for convex boundaries. Haker et al. compute conformal maps onto the sphere. Hormann and Greiner propose the MIPS parametrization which attempts to preserve the ratio of singular values over the parametrization. All four of these metrics disregard absolute stretch scale over the surface with the result that small domain areas can map to large regions on the surface.

Maillot et al. base their metric on mesh edge springs of nonzero rest length where rest length corresponds to edge length on the surface. L vy and Mallet use a metric that combines orthogonality and isoparametric terms.

Sander et al. focus on making textures as small as possible for an unknown surface signal. Their geometric stretch metric minimizes undersampling by integrating the sum of squared singular values over the map. Intuitively this measures how distances in the domain get stretched when mapped onto the surface. Commonly assigned copending U.S. patent application Ser. No. 10 138 751 entitled Systems and Methods for Optimizing Geometric Stretch of a Parametrization Scheme describes various aspects of such a geometric stretch metric.

Thus most schemes for flattening a surface chart into 2D minimize a geometric distortion metric which assumes no knowledge of the surface signal. Many of these distortion metrics are tailored for the authoring problem of mapping an existing image onto a surface mesh rather than the problem of sampling a given surface signal. In any event there has been relatively little work in exploiting knowledge of the surface signal in optimizing the parametrization.

With respect to sparse existing works in the area of signal specialized chart parametrization given an existing parametrization Sloan et al. warp the square texture domain onto itself to more evenly distribute a scalar importance field. Terzopolous and Vasilescu approximate a 2D image using a warped grid of sample values. The warping is achieved using a dynamic simulation where grid edge weights are set according to local image content. Hunter and Cohen compress an image as a set of texture mapped rectangles obtained by k d tree subdivision of the image based on frequency content.

With respect to the use of multi chart parametrization to avoid excessive distortion an arbitrary mesh is generally parametrized using multiple charts. At the limit distortion can be driven to zero by making each triangle its own chart. However partitioning the surface into many charts has drawbacks. Such partitioning constrains mesh simplification requires more inter chart gutter space leads to mipmap artifacts and fails to exploit continuity across charts. Thus a balance should be achieved between parametrization distortion and the drawbacks of charts. Several existing approaches such as Eck et al. Garland et al. Krishnamurthy et al. Maillot et al. and Sander et al. directly partition the original mesh while other schemes such as Cignoni et al. Lee et al. and Sander Gu et al. define the charts using mesh simplification. For an interactive 3D painting system for example Igarashi and Cosgrove construct charts based on the history of drawing operations. The texture resolution on a surface region is selected using the viewing resolution at the time the region was last painted.

However each of the previously existing parametrization techniques suffer drawbacks relating to minimizing the difference between the reconstructed signal and the original surface signal even where the signal is taken into account. The geometric approaches of Sloan et al. Terzopolous and Vasilescu and Hunter and Cohen are inadequate because they do not take the surface geometry into account fail to adequately capture information about signal directionality which allows the parametrization to squash in the direction across the signal gradient and or restrict the chart boundary to be a square. Moreover these prior art approaches do not provide continuous solutions that adequately adapt to high frequencies along diagonal directions. Even where prior art techniques consider the signal in some respect these techniques do not scale the charts based on this content. Thus there is a need for improved parametrization in a computing system optimized in accordance with a surface signal metric for efficient and accurate parametrization and graphics reconstruction processes.

In view of the foregoing the present invention provides systems and methods for optimizing a parametrization scheme in accordance with information about the surface signal. A surface parametrization is created to store a given surface signal into a texture image. The signal specialized metric of the invention minimizes signal approximation error i.e. the difference between the original surface signal and its reconstruction from the sampled texture. A signal stretch parametrization metric is derived based on a Taylor expansion of signal error. For fast evaluation the metric of the invention is pre integrated over the surface as a metric tensor. The resulting parametrizations have increased texture resolution in surface regions with greater signal detail. Compared to traditional geometric parametrizations the number of texture samples can often be reduced by a significant factor for a desired signal accuracy.

As described in the background there are a number of pre existing techniques for parametrizing a surface for later reconstruction most of which do not take the surface signal into account. In contrast to the pre existing works of Sloan et al. Terzopolous and Vasilescu and Hunter and Cohen for example the integrated metric tensor IMT of the invention is derived directly from signal approximation error and is integrated over the surface. The IMT captures signal directionality which allows the parametrization to squash in the direction across the signal gradient and does not restrict the chart boundary to be a square. Moreover the invention considers signals mapped onto surfaces in 3D defines the parametrization on a coarser irregular mesh and stores the signal in a texture image mapped onto this mesh. Additionally the parametrization of the invention is continuous and better adapts to high frequencies along diagonal directions.

As mentioned some techniques do take the surface signal into account in some respect. However these techniques do not adequately address the problem continuously over a single chart in the manner implemented by the invention. In contrast to Igarashi and Cosgrove for example the parametrization of the invention automatically adapts to the content of the signal and scales the charts based on this content.

A main contribution of the parametrization of the invention is its ability to parametrize a single chart using a signal specialized metric. To process arbitrary meshes the invention manually delineates the surface charts as in Krishnamurthy et al. and pack their parametrizations as in U.S. patent application Ser. No. 10 138 751 except that the method s of the invention are applicable to any chartification scheme.

Thus the problem of building a surface parametrization optimized for a specific signal by directly minimizing the signal approximation error is considered herein. To make the parametrization metric of the invention view independent approximation error is integrated over the surface.

A first contribution of the invention is a signal specialized metric in connection with which 1 signal approximation error is integrated over the surface derived using a Taylor expansion of signal error see Appendix A 2 during a pre computation each mesh face is assigned an integrated metric tensor IMT which encapsulates how much the signal varies over the face and in what primary direction and 3 for fast evaluation affine transformation rules exactly transform these triangle based IMTs.

A second contribution of the invention is the provision of efficient parametrization algorithm s to minimize this metric using a multiresolution hierarchy in connection with which 1 the IMTs are computed on the fine mesh triangles and propagated fine to coarse in the hierarchy 2 the chart is parametrized using a coarse to fine optimization by transforming and evaluating the IMTs 3 the chart boundary parametrization is allowed to move during optimization while still preserving an embedding and 4 as a post process the chart is relaxed to its tightest bounding rectangle to exploit unused texture space.

The new metric and algorithm s are incorporated in a system for creating signal specialized parametrizations of meshes. By allocating greater texture density to surface regions with signal detail the resulting parametrizations reduce signal approximation error for a given texture size or permit smaller textures for a given approximation error. For examples shown in the various Figures herein the same signal accuracy can be achieved with a factor of 3 5 savings or greater in texture samples compared to a signal independent or purely geometric based parametrization.

One of ordinary skill in the art can appreciate that a computer or other client or server device can be deployed as part of a computer network or in a distributed computing environment. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes which may be used in connection with a parametrization process. The present invention may apply to an environment with server computers and client computers deployed in a network environment or distributed computing environment having remote or local storage. The present invention may also be applied to standalone computing devices having programming language functionality interpretation and execution capabilities for generating receiving and transmitting information in connection with remote or local services.

Distributed computing facilitates sharing of computer resources and services by direct exchange between computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for files. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices may have applications objects or resources that may implicate a parametrization process that may utilize the techniques of the present invention.

In a distributed computing architecture computers which may have traditionally been used solely as clients communicate directly among themselves and can act as both clients and servers assuming whatever role is most efficient for the network. This reduces the load on servers and allows all of the clients to access resources available on other clients thereby increasing the capability and efficiency of the entire network. Parametrization services in accordance with the present invention may thus be distributed among clients and servers acting in a way that is efficient for the entire network.

Distributed computing can help businesses deliver services and capabilities more efficiently across diverse geographic boundaries. Moreover distributed computing can move data closer to the point where data is consumed acting as a network caching mechanism. Distributed computing also allows computing networks to dynamically work together using intelligent agents. Agents reside on peer computers and communicate various kinds of information back and forth. Agents may also initiate tasks on behalf of other peer systems. For instance intelligent agents can be used to prioritize tasks on a network change traffic flow search for files locally or determine anomalous behavior such as a virus and stop it before it affects the network. All sorts of other services may be contemplated as well. Since graphical object s may in practice be physically located in one or more locations the ability to distribute parametrization services is of great utility in such a system.

It can also be appreciated that an object such as may be hosted on another computing device or . Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems may be connected together by wireline or wireless systems by local networks or widely distributed networks. Currently many of the networks are coupled to the Internet which provides the infrastructure for widely distributed computing and encompasses many different networks.

In home networking environments there are at least four disparate network transport media that may each support a unique protocol such as Power line data both wireless and wired voice e.g. telephone and entertainment media. Most home control devices such as light switches and appliances may use Power line for connectivity. Data Services may enter the home as broadband e.g. either DSL or Cable modem and are accessible within the home using either wireless e.g. HomeRF or 802.11b or wired e.g. Home PNA Cat 5 even Power line connectivity. Voice traffic may enter the home either as wired e.g. Cat 3 or wireless e.g. cell phones and may be distributed within the home using Cat 3 wiring. Entertainment media may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and DVI are also emerging as digital interconnects for clusters of media devices. All of these network environments and others that may emerge as protocol standards may be interconnected to form an intranet that may be connected to the outside world by way of the Internet. In short a variety of disparate sources exist for the storage and transmission of data and consequently moving forward computing devices will require ways of sharing data such as data accessed or utilized incident to the parametrization of graphics object s in connection with the present invention.

The Internet commonly refers to the collection of networks and gateways that utilize the TCP IP suite of protocols which are well known in the art of computer networking. TCP IP is an acronym for Transport Control Protocol Interface Program. The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the networks. Because of such wide spread information sharing remote networks such as the Internet have thus far generally evolved into an open system for which developers can design software applications for performing specialized operations or services essentially without restriction.

Thus the network infrastructure enables a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. Thus in computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the example of computers etc. can be thought of as clients and computer etc. can be thought of as the server where server etc. maintains the data that is then replicated in the client computers etc.

A server is typically a remote computer system accessible over a remote network such as the Internet. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server.

Client and server communicate with one another utilizing the functionality provided by a protocol layer. For example Hypertext Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW . Typically a computer network address such as a Universal Resource Locator URL or an Internet Protocol IP address is used to identify the server or client computers to each other. The network address can be referred to as a URL address. For example communication can be provided over a communications medium. In particular the client and server may be coupled to one another via TCP IP connections for high capacity communication.

Thus illustrates an exemplary networked or distributed environment with a server in communication with client computers via a network bus in which the present invention may be employed. In more detail a number of servers etc. are interconnected via a communications network bus which may be a LAN WAN intranet the Internet etc. with a number of client or remote computing devices etc. such as a portable computer handheld computer thin client networked appliance or other device such as a VCR TV oven light heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device in connection with which it is desirable to process graphical object s .

In a network environment in which the communications network bus is the Internet for example the servers etc. can be Web servers with which the clients etc. communicate via any of a number of known protocols such as HTTP. Servers etc. may also serve as clients etc. as may be characteristic of a distributed computing environment. Communications may be wired or wireless where appropriate. Client devices may or may not communicate via communications network bus and may have independent communications associated therewith. For example in the case of a TV or VCR there may or may not be a networked aspect to the control thereof. Each client computer etc. and server computer etc. may be equipped with various application program modules or objects and with connections or access to various types of storage elements or objects across which files may be stored or to which portion s of files may be downloaded or migrated. Any computer etc. may be responsible for the maintenance and updating of a database or other storage element in accordance with the present invention such as a database or memory for storing graphics object s or intermediate graphics object s processed according to the invention. Thus the present invention can be utilized in a computer network environment having client computers etc. that can access and interact with a computer network bus and server computers etc. that may interact with client computers etc. and other like devices and databases .

Although not required the invention can be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates in connection with the parametrization of graphics object s . Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs appliances lights environmental control elements minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network bus or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices and client nodes may in turn behave as server nodes.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through an non removable nonvolatile memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable nonvolatile memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A graphics interface such as Northbridge may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU or host processing unit and assumes responsibility for accelerated graphics port AGP communications. One or more graphics processing units GPUs may communicate with graphics interface . In this regard GPUs generally include on chip memory storage such as register storage and GPUs communicate with a video memory . GPUs however are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which may in turn communicate with video memory . In addition to monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked or distributed environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web enabled interface for applications and computing devices making computing activities increasingly Web browser or network oriented.

For example MICROSOFT s .NET platform includes servers building block services such as Web based data storage and downloadable device software. Generally speaking the .NET platform provides 1 the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them 2 increased interactive capability for Web sites enabled by greater use of XML rather than HTML 3 online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications such as e mail for example or software such as Office .NET 4 centralized data storage which will increase efficiency and ease of access to information as well as synchronization of information among users and devices 5 the ability to integrate various communications media such as e mail faxes and telephones 6 for developers the ability to create reusable modules thereby increasing productivity and reducing the number of programming errors and 7 many other cross platform integration features as well.

While exemplary embodiments herein are described in connection with software residing on a computing device one or more portions of the invention may also be implemented via an operating system application programming interface API or a middle man object between a coprocessor and requesting object such that parametrization services may be performed by supported in or accessed via all of .NET s languages and services and in other distributed computing frameworks as well.

As discussed above many authoring techniques associate signals with a surface mesh including texture synthesis 3D scanning 3D painting solid texturing ray tracing and procedural shading. Given such a signal the invention converts the signal into a parametrized texture image using the following two steps 1 the mesh is parametrized over a 2D texture domain by assigning texture coordinates to its vertices. It is often difficult to create this parametrization as a single unfolding so generally with the invention the surface is partitioned into charts each of which is parametrized onto a region of the domain and 2 using this parametrization the surface signal is sampled into a texture image of the appropriate resolution. Then at runtime hardware rasterization reconstructs the signal on each pixel fragment typically using bilinear interpolation of the texture samples and possibly with mipmapping and anisotropic filtering.

At the outset illustrate the advantages of the present invention over a purely geometric based approach. The parasaur of was generated from a pure geometric based metric blind to the surface signal whereas the parasaur of was generated from the signal specialized parametrization of the invention. In each case the painted surface signal is captured into a 128 128 texture. Intuitively one can observe that the geometric based technique attempts to minimize geometric stretch of the image thereby attempting to give extra mesh detail to those areas where geometry rapidly and or abruptly changes e.g. at the mouth of the parasaur however where geometry is not rapidly and or abruptly changing but there is nonetheless a great amount of detail in the signal on the surface the geometric based metric performs poorly at reconstruction. For instance at the bandana and the edges of the eye patch the geometry of the parasaur head is relatively smooth but the signal is rapidly changing and thus the geometric metric has not performed adequately. To the contrary the signal specialized metric of the invention directly minimizes the signal approximation error and thus reproduces the detail of the signal magnificently.

Commonly assigned copending U.S. patent application Ser. No. 10 137 931 filed May 1 2002 describes a technique for optimizing the geometric stretch of a parametrization scheme. Review of the geometric stretch metric herein illustrates aspects of the derivation of the signal specialized metric of the invention and thus an overview is presented below.

To find a good parametrization of a given surface S onto a texture domain D as shown by the geometric stretch metric E S is derived as follows 

The singular values and of this 3 2 Jacobian matrix represent the largest and smallest length obtained when mapping unit length vectors from the texture domain D to the surface S i.e. the largest and smallest local stretch . They are obtained as 4 max. sing. value 4 min. sing. value where

From the singular values and two norms corresponding to average and worst case local stretch are defined as .

In the setting where the surface S is a triangle mesh is piecewise linear and thus its Jacobian J is constant over each triangle. Therefore the integrated metric can be rewritten as a finite sum as follows 

Unlike the geometric stretch metric the metric of the invention considers a signal defined on the surface. As shown by let this surface signal be denoted by the function g S Q where the signal space Q can be vector valued e.g. red green blue RGB color is a 3 vector in Q.

To find a good surface parametrization the invention examines how well the function h g from the texture domain D to the signal Q is approximated when reconstructed from a discrete sampling over D. For example if the signal Q varies greatly on a region of the surface S and the region is not allocated adequate space in the texture domain D then the local texture resolution on that region may be insufficient to accurately represent the signal.

In Appendix A a metric for signal approximation error is derived defined as the difference between h and its reconstruction tilde over h from a discrete sampling with spacing in D. The derivation of the invention makes two assumptions 1 tilde over h is a piecewise constant reconstruction and 2 the sampling is asymptotically dense. Under these assumptions the squared signal approximation error at a point is 

Thus the signal specialized M metric E S builds upon the geometric stretch metric neglecting the globally constant factor 3 by using the metric tensor of the signal mapping h rather than the surface mapping which is why the metric of the invention is referred to herein as the signal stretch metric.

To compute the integrated metric tensor IMT M of the signal on each triangle the invention considers two cases. First the signal may be a piecewise linear interpolant of per vertex attributes for example as in the case of an RGB color specified at each vertex. In such a case the metric tensor M s t is constant over the triangle like the geometric tensor M s t . The IMT is thus represented by the product .

Furthermore the Jacobian Jin M JJcan be derived for a triangle whose vertices have parametrizations p p pin D and signal q q qin Q by solving the linear system

The second case is that of a more general signal which has more detail than can be described at vertices. One example is a detailed image projected onto the triangle mesh. In that case the invention computes M using numerical integration. Specifically a number of regular 1 to 4 subdivisions are applied to the triangle the signal is evaluated at all the introduced vertices and then the metric tensors of the resulting piecewise linear interpolant are summed. In the examples utilized in the Figures each mesh triangle was subdivided into 64 sub triangles to compute the IMT.

Within the optimization algorithm described below the invention repeatedly modifies the parametrizations s t of the mesh vertices and examines the change in the signal stretch functional E S . The straightforward implementation of this is to recompute the integrated metric tensors of the mesh triangles based on the modified parametrization however this is prohibitive for two reasons 1 for the case of a general nonlinear signal on the mesh the IMT is computed using expensive numerical integration and 2 with the hierarchical solver of the invention a coarse mesh face corresponds to a region of the original surface and thus the signal is also nonlinear.

Fortunately modifying the parametrization results in an affine transform of each mesh triangle so the IMT of a transformed triangle can be exactly computed from its original IMT using the following rule 

Let e D D s t s t be the local affine transform from the new triangle parametrization to the old resulting in the new maps e and h h e. Using the derivative chain rule the new Jacobian is J s t J s t J s t where Jis the Jacobian of the map e. Therefore the new metric tensor is .

If e maps triangle vertices from p p p to p p pin D its Jacobian Jcan be obtained by solving the linear system 

For the IMT pre computation described above the invention stores M with respect to a canonical parametrization of the triangle e.g. one that maps the triangle onto a right isosceles triangle in D. Then the affinely transformed IMT is since the constant multiplication by matrices Jand Jis a linear operator that can be factored out of the integration and the integration over the triangle area in 3D is unaffected by the transform.

To summarize the invention pre computes the integrated metric tensors on the original mesh faces with respect to canonical face parametrizations. During optimization the invention applies the affine transform rule to quickly evaluate the modified signal stretch metric.

The optimization algorithm of the invention minimizes the nonlinear signal stretch E S over the parametrizations s t of the mesh vertices while maintaining an embedding.

After obtaining some initial chart parametrization the nonlinear metric is minimized by repeatedly updating individual vertex s t coordinates using line searches in the domain. To prevent parametric folding each vertex is constrained to remain in the kernel of its neighbors.

With respect to the nonlinear metric E S IMTs are first computed on each triangle as described above. Perturbing a vertex during optimization induces an affine transform on each of its adjacent faces. The sum of the IMTs on these affinely transformed triangles are then minimized using the formula described in the preceding section.

However optimizing the chart parametrization using a uni resolution algorithm has slow convergence and often converges to bad local minima particularly for the signal stretch metric of the invention.

Thus both the speed and result of optimization are improved with the invention using a novel multiresolution optimization algorithm. In this regard a hierarchy is established over the chart using a progressive mesh PM representation. This PM is constructed by simplifying the chart mesh using a sequence of half edge collapses with a quadric error metric that seeks to preserve the surface signal.

Then as described in more detail below this multiresolution PM sequence is used 1 to propagate the signal IMT fine to coarse from the original mesh to all coarser meshes and 2 to apply a coarse to fine parametrization algorithm that uses these IMTs.

For the hierarchical optimization technique of the invention the IMTs defined on triangles of the fine mesh are redistributed to the triangles of the coarser meshes in the PM sequence. This redistribution is generally inexact because the triangles in the meshes at different resolutions lack any nesting property on the surface.

For IMTs to be transferred between faces they are expressed with respect to a common coordinate system. The invention utilizes the current parametrization for this purpose. The IMTs in the fine mesh triangles are affinely transformed from their canonical frames to their shapes in the current parametrization.

Then for each half edge collapse in the PM sequence the IMTs are redistributed using the simple scheme illustrated in . This heuristic scheme has the property that the sum of IMTs over mesh triangles is maintained at all levels of detail. Also the redistribution weights are independent of the current parametrization. In other embodiments more complex redistribution weights based on parametric overlap areas could be utilized however these alternate embodiments generally do not perform as well because the parametrization can initially be poor i.e. contain highly stretched triangles.

The coarse to fine algorithm of the invention is performed as follows. First an initial embedding is created for the few faces in the PM base mesh using a brute force optimization but also using the IMTs propagated from the fine mesh. Then for each vertex split refinement operation in the PM sequence the newly added vertex is placed at the centroid of the kernel of its neighborhood polygon. The placement of the added vertex and its neighbors is then optimized using IMTs. The following exemplary non limiting pseudocode describes an embodiment of the invention 

Unlike application of the geometric stretch metric the signal stretch metric can have zero gradient since the signal may be locally constant on a region of the surface. Therefore as a regularizing term the invention adds a tiny fraction of geometric stretch to the minimized energy functional. This prevents the formation of degenerate triangles and ensures that new vertices find non degenerate neighborhood kernels.

The coarse to fine CTF optimization creates a new parametrization of the fine mesh. The new parametrization modifies the transformed IMTs on the fine mesh triangles. These transformed IMTs can be propagated fine to coarse FTC to be used in another iteration of CTF optimization. This process is similar to the V cycle commonly used in multigrid optimization but applied here to irregular non nested grids.

To bootstrap this iterative optimization process an initial parametrization is required to transform the IMTs on the finest mesh. We obtain this initial parametrization using a CTF optimization with the geometric stretch metric. Since IMTs are not yet present the CTF optimization refers to the geometry of the coarse meshes i.e. x y z at each vertex. The intuition is that a simplified mesh forms a good geometric approximation and therefore its parametrization is a good starting state for parametrizing a finer mesh.

For the examples of the Figures herein ftc ctf niter was set equal to 3 iterations. This multigrid strategy is significantly faster than a single resolution optimization as shown in Table 1 below.

It is noted that one may use CTF optimization directly on the per vertex signal instead of on the IMTs. However a problem with such a technique is that the surface signal varies too much. Unlike the geometric signal the surface signal is not well approximated on a coarser mesh. As an example a color map signal usually zigzags across the unit RGB cube many times as one traverses the surface. Thus an optimized coarse mesh often fails to adequately reserve space in the parametric domain for signal detail present in the finer meshes. Thus the IMTs and their FTC propagation provide this lookahead capability as shown by the results in Table 1. For Table 1 signal approximation error was measured using 128 128 textures. The first row shows the results of the Floater technique combined with brute force computation. The final row includes the boundary rectangle optimization described in more detail below and is shown in .

To improve the parametrization quality chart boundary vertices are allowed to move in the texture domain in accordance with the invention at all levels of the coarse to fine optimization algorithm. For this to work the invention overcomes the following two problems.

First the geometric stretch and signal stretch metrics are not scale invariant. These functionals go to zero as the chart becomes infinitely large. Scale invariance is achieved by the invention by multiplying the functionals by total chart area. This is preferable to multiplying per triangle stretch by per triangle area because it is computationally more stable.

Second it is possible for the optimized chart boundary to self intersect. To prevent this when optimizing a chart boundary vertex the invention tests for intersections between the two adjacent boundary edges and the remaining boundary edges. Since there are typically square root over m boundary elements for a chart of m vertices this brute force testing is not unduly cumbersome.

One limitation of allowing the chart boundary to take on an arbitrary shape in D is that it imposes constraints on subsequent mesh simplification. More vertices need to be retained on the simplified mesh to represent the boundaries because their irregular parametric shapes are difficult to approximate with coarse polygons. The approach of the invention is thus to simplify the mesh prior to parametrizing it.

For a single chart the invention embeds its parametrization into a square texture image. For multi chart meshes the invention finds the tightest bounding rectangle around each chart and packs these rectangles within the texture. In either case some texture regions within the bounding square or rectangle are left unused. To reduce these wasted regions the invention encourages the chart to grow into the unused space which is achieved using an additional FTC CTF iteration where the chart area penalty is removed but the chart boundary is constrained to remain within the original bounding rectangle.

When optimizing multi chart meshes a separate isotropic scale is applied to each chart to minimize error over the entire mesh. Given N charts with domain areas aand error metrics E an area scale factor e.g. a 1D scale by square root over in both s and t is determined for each chart. Isotropically scaling a chart by creates the new error E E for example a chart 4 times bigger has the squared signal stretch. Thus the invention seeks to find 

The optimal chart area scalings can be derived in closed form using the method of Lagrange multipliers as the following 

Thus the present invention provides various technique s for implementing a signal specialized metric for use with parametrization. In this regard through a comparison to other parametrization schemes illustrate the effects of applying the signal specialized metric of the invention on a number of models which are summarized in Table 2 below. Each of the models of originated from 3D scanning. The signals on the parasaur and horse were created by projecting hand painted images onto the surfaces. The signals on the gargoyle and cat are normal maps. The signal on the face is scanned color data.

For most examples herein the mesh was pre simplified with a geometric quadric error metric. The signal on this coarse mesh was transferred from the fine mesh by ray shooting along the interpolated surface normal. For the gargoyle and horse models the mesh was manually partitioned into 6 and 5 charts respectively.

Signal approximation error SAE is the root mean squared rms Ldifference between the original color signal and its reconstruction over the surface. For this 8 bit channel normal map SAE ranges from 0 to 255 square root over 3 . To quantify parametrization quality the SAE is measured as the rms difference on a dense set of surface points distributed uniformly according to surface area. For each point the difference between the original surface signal and the bilinear interpolation of the four adjacent texture samples is computed. For vector valued signals the Lnorm is used.

As illustrated by the texture domain for the signal stretch parametrization of the invention shows the warping of the texture signal. The example of also demonstrates the result of the bounding rectangle growth described above. This growth optimization reduces the SAE by 13 for this example and thus represents significant efficiency savings.

Herein a signal stretch parametrization metric is provided that was derived from a Taylor expansion of signal approximation error and applied to improve parametrization processes. The metric is more challenging to optimize than traditional geometric metrics because surface signals often vary greatly. Consequently a multiresolution algorithm was introduced that accumulates the fine signal variation onto the faces of coarser meshes to provide lookahead during coarse to fine optimization. Such a lookahead technique however could be applied to any parametrization process because a look at fine detail helps to parametrize at the coarse level of detail such that there is a smooth efficient transition from a coarse level of detail to a fine level of detail and vice versa. Moreover by integrating a metric tensor the invention encapsulates signal directionality. The signal stretch parametrization optimization algorithm of the invention also accelerates the minimization of other parametrization metrics both linear and nonlinear such as the geometric stretch metric. In sum the signal specialized parametrization of the invention allocates more texture samples to mesh regions with greater signal variation. Texture resolution can be selected based on the desired signal reconstruction accuracy. Often reduction in texture space by a factor of four is possible with the invention.

The signal stretch metric is most effective on surfaces with inhomogeneous signals i.e. non uniform distribution of detail. For homogenous signals the metric reduces to the geometric stretch metric if the signal map g is an isometry. Interestingly g cannot be an isometry if the signal is scalar since JJcannot be the identity matrix for a 1 2 Jacobian J. In other words a scalar signal always has a direction of zero derivative and can therefore be locally squashed parametrically. At the same time the gradient direction may vary and the global constraint that the parametrization remain continuous restricts how much squashing can occur.

As mentioned above while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any computing device or system in which it is desirable to reconstruct signals from point samples with minimal error. Thus the techniques for providing improved signal processing in accordance with the present invention may be applied to a variety of applications and devices. For instance the algorithm s of the invention may be applied to the operating system of a computing device provided as a separate object on the device as part of another object as a downloadable object from a server as a middle man between a device or object and the network as a distributed object etc. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same similar or equivalent parametrization achieved by the invention.

The various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the present invention or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers the computing device will generally include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may utilize the signal processing services of the present invention e.g. through the use of a data processing API or the like are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer a video recorder or the like or a receiving machine having the signal processing capabilities as described in exemplary embodiments above becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.

While the present invention has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. For example while exemplary network environments of the invention are described in the context of a networked environment such as a peer to peer networked environment one skilled in the art will recognize that the present invention is not limited thereto and that the methods as described in the present application may apply to any computing device or environment such as a gaming console handheld computer portable computer etc. whether wired or wireless and may be applied to any number of such computing devices connected via a communications network and interacting across the network. Furthermore it should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate. Still further the present invention may be implemented in or across a plurality of processing chips or devices and storage may similarly be effected across a plurality of devices. Therefore the present invention should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

As explained in the body of the specification signal approximation error is the difference between the function h and its reconstruction tilde over h from a discrete sampling of the texture domain D. In this appendix it is shown that the squared pointwise error gives rise to the norm

It is assumed that the domain D contains a regular grid of sample points s t spaced 2 apart on each axis. As shown in let circumflex over t be a local coordinate system within the grid square ij about each sample such that 

Perhaps the simplest reconstruction function tilde over h in the neighborhood ij of each sample is given by the constant function tilde over h s t h s t . With this reconstruction function the pointwise squared error can be expressed as .

Normally the squared error integrated over surface area is of interest. The integral here ignores the variation of differential area dA circumflex over t within the grid square ij but that variation is insignificant for our asymptotic analysis 0 .

The error converges to 0 at a rate O . Thus neglecting the higher order terms O a measure of approximation error with piecewise constant reconstruction as 0 is as follows 3 .

While this analysis assumes h is continuously differentiable over D the analysis can also be applied heuristically to other functions such as piecewise linear ones.

