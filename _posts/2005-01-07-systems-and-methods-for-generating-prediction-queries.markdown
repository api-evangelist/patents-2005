---

title: Systems and methods for generating prediction queries
abstract: Systems and methods are provided for generating prediction queries to help a user build and execute prediction queries. A user interface (UI) is provided that is easy to use and understand in connection with the generation of a prediction query for data mining. The UI can be instantiated from a variety of disparate sources that may request query building services. While prediction queries and relational queries are quite different, the UI enables prediction queries to be built in a manner that is similar to the way relational queries are built. In one embodiment, the main screen of the UI includes four main components: (1) a table column mapping area, (3) a selection grid area, (4) a query text display area and (5) a query result grid area. In one embodiment, the query text display area and the query result grid area are initially not presented to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07640252&OS=07640252&RS=07640252
owner: Microsoft Corporation
number: 07640252
owner_city: Redmond
owner_country: US
publication_date: 20050107
---
This application is a continuation of U.S. patent application Ser. No. 10 177 824 filed Jun. 21 2002 entitled Systems and Methods for Generating Prediction Queries which is hereby incorporated by reference in its entirety.

The present invention is directed to systems and methods for generating and executing prediction queries.

A prediction query for data mining DM applies a prediction model to transactional data or other kinds of data and generates predictive results that can serve as the basis for sound business decisions in marketing operations budgeting and many other areas as well. The advantages and capabilities for data mining are similar to those of On Line Analytical Processing OLAP but break much more ground. Like OLAP DM exists to help one obtain qualitative information from otherwise dry transactional data. While OLAP achieves this by optimizing drill down queries and letting users observe patterns in data DM actively analyzes data and determines patterns on its own. DM is based in part on artificial intelligence AI principles and algorithms and is also based heavily on statistics. DM is relevant to a variety of applications including but not limited to client server applications and services data warehousing web site personalization on line customer assessment fraud detection etc.

An application or object that allows prediction models to be built using data mining algorithms is sometimes called a prediction query builder or generator. A prediction query builder typically can be applied to a variety of kinds and sizes of databases. In this regard a prediction query builder enables the incorporation of predictive data mining models DMM from wherever they may be located. A DMM is like a relational table except that it typically includes special columns that can be used for data training and prediction making i.e. the DMM enables both the creation of a prediction model and the generation of predictions. Unlike a standard relational table though which stores raw data a DMM stores the patterns discovered by the particular data mining algorithm that was utilized.

A prediction join operation is an operation that is mapped to a join query between a trained data mining model and a designated input data source so that one can generate a tailored prediction result. The prediction result can then be stored interpreted output or displayed in a variety of formats.

Whatever the platform may be to interact with the data in order to access the data to be mined a DM engine formulates a query according to the format of the platform e.g. SQL Server in which the data is stored. Regardless of the platform describing a prediction query in an unambiguous way can be challenging. Thus creating prediction queries from scratch can be a complex tedious and error prone process. Among all other data mining tools currently available in the marketplace there is no product that provides a simple graphical way to build a prediction query. Thus there exists a need in data mining products for a tool that can assist a user in building and executing a data mining prediction query in a standard manner simply and easily. There is still further a need for a prediction query builder that allows a user to build data mining queries in a manner similar to building executing relational join queries. There is thus a need for improvement over these and other deficiencies of the prior art.

In view of the foregoing the present invention provides systems and methods for generating prediction queries to help a user build and execute prediction queries. A user interface UI is provided that is easy to use and understand in connection with the generation of a prediction query for data mining and the UI can be instantiated from a variety of disparate sources that may request query building services. While prediction queries and relational queries are quite different the UI of the invention enables prediction queries to be built in a manner that is similar to the way relational queries are built. In one embodiment the main screen of the UI includes four main components 1 a table column mapping area 2 a selection grid area 3 a query text display area and 4 a query result grid area. In one embodiment the query text display area and the query result grid area are initially invisible.

As explained in the background there exists a need in data mining for a tool that can assist a user in building and executing a data mining prediction query. The prediction query builder of the present invention allows a user to build data mining queries in a manner similar to building executing relational join queries. In one aspect the data mining model is treated similarly to a relational table and predictions are treated similarly to a join operation. However instead of joining two relational tables the present invention joins a relational table with a mining model. An improved UI permits a user to use line segments to mark the join condition and build the query simply and easily. In one embodiment the main screen of the UI includes four main components 1 a table column mapping area 2 a selection grid area 3 a query text display area and 4 a query result grid area. In one embodiment the query text display area and the query result grid area are initially not presented to the user.

One of ordinary skill in the art can appreciate that a computer or other client or server device can be deployed as part of a computer network or in a distributed computing environment. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes which may be used in connection with a prediction query generation process. The present invention may apply to an environment with server computers and client computers deployed in a network environment or distributed computing environment having remote or local storage. The present invention may also be applied to standalone computing devices having programming language functionality interpretation and execution capabilities for generating receiving and transmitting information in connection with remote or local prediction query generation services.

Distributed computing facilitates sharing of computer resources and services by direct exchange between computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for files. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices may have applications objects or resources that may implicate a prediction query generation process that may utilize the techniques of the present invention.

In a distributed computing architecture computers which may have traditionally been used solely as clients communicate directly among themselves and can act as both clients and servers assuming whatever role is most efficient for the network. This reduces the load on servers and allows all of the clients to access resources available on other clients thereby increasing the capability and efficiency of the entire network. Prediction query generation and execution services and interfaces in accordance with the present invention may thus be distributed among clients and servers acting in a way that is efficient for the entire network.

Distributed computing can help businesses deliver services and capabilities more efficiently across diverse geographic boundaries. Moreover distributed computing can move data closer to the point where data is consumed acting as a network caching mechanism. Distributed computing also allows computing networks to dynamically work together using intelligent agents. Agents reside on peer computers and communicate various kinds of information back and forth. Agents may also initiate tasks on behalf of other peer systems. For instance intelligent agents can be used to prioritize tasks on a network change traffic flow search for files locally or determine anomalous behavior such as a virus and stop it before it affects the network. All sorts of other services may be contemplated as well. Since data may in practice be physically located in one or more locations the ability to distribute prediction query generation and execution services and interfaces is of great utility in such a system.

It can also be appreciated that an object such as may be hosted on another computing device etc. or etc. Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems may be connected together by wireline or wireless systems by local networks or widely distributed networks. Currently many of the networks are coupled to the Internet which provides the infrastructure for widely distributed computing and encompasses many different networks.

In home networking environments there are at least four disparate network transport media that may each support a unique protocol such as Power line data both wireless and wired voice e.g. telephone and entertainment media. Most home control devices such as light switches and appliances may use power line for connectivity. Data Services may enter the home as broadband e.g. either DSL or Cable modem and are accessible within the home using either wireless e.g. Home Radio Frequency HomeRF or 802.11b or wired e.g. Home Phoneline Networking Appliance PNA Cat 5 even power line connectivity. Voice traffic may enter the home either as wired e.g. Cat 3 or wireless e.g. cell phones and may be distributed within the home using Cat 3 wiring. Entertainment media or other data may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and digital video interface DVI are also emerging as digital interconnects for clusters of media devices. All of these network environments and others that may emerge as protocol standards may be interconnected to form an intranet that may be connected to the outside world by way of the Internet. In short a variety of disparate sources exist for the storage and transmission of data and consequently moving forward computing devices will require ways of sharing data such as data accessed or utilized incident to prediction query generation and execution in accordance with the present invention.

The Internet commonly refers to the collection of networks and gateways that utilize the Transport Control Protocol Interface Program TCP IP suite of protocols which are well known in the art of computer networking. The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the networks. Because of such wide spread information sharing remote networks such as the Internet have thus far generally evolved into an open system for which developers can design software applications for performing specialized operations or services essentially without restriction.

Thus the network infrastructure enables a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. Thus in computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the example of computers etc. can be thought of as clients and computer etc. can be thought of as the server where server etc. maintains the data that is then replicated in the client computers etc.

A server is typically a remote computer system accessible over a remote network such as the Internet. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server.

Client and server communicate with one another utilizing the functionality provided by a protocol layer. For example Hypertext Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW . Typically a computer network address such as a Universal Resource Locator URL or an Internet Protocol IP address is used to identify the server or client computers to each other. The network address can be referred to as a URL address. For example communication can be provided over a communications medium. In particular the client and server may be coupled to one another via TCP IP connections for high capacity communication.

Thus illustrates an exemplary networked or distributed environment with a server in communication with client computers via a network bus in which the present invention may be employed. In more detail a number of servers etc. are interconnected via a communications network bus which may be a LAN WAN intranet the Internet etc. with a number of client or remote computing devices etc. such as a portable computer handheld computer thin client networked appliance or other device such as a video cassette recorder VCR television TV oven light heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device in connection with which it is desirable to process or display prediction data.

In a network environment in which the communications network bus is the Internet for example the servers etc. can be Web servers with which the clients etc. communicate via any of a number of known protocols such as HTTP. Servers etc. may also serve as clients etc. as may be characteristic of a distributed computing environment. Communications may be wired or wireless where appropriate. Client devices etc. may or may not communicate via communications network bus and may have independent communications associated therewith. For example in the case of a TV or VCR there may or may not be a networked aspect to the control thereof. Each client computer etc. and server computer etc. may be equipped with various application program modules or objects and with connections or access to various types of storage elements or objects across which files may be stored or to which portion s of files or images may be downloaded or migrated. Any computer etc. may be responsible for the maintenance and updating of a database or other storage element in accordance with the present invention such as a database or memory for storing data or intermediate object s processed according to the invention. Thus the present invention can be utilized in a computer network environment having client computers etc. that can access and interact with a computer network bus and server computers etc. that may interact with client computers etc. and other like devices and databases .

Although not required the invention can be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates in connection with the prediction query generation and execution techniques of the invention. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs appliances lights environmental control elements minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network bus or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices and client nodes may in turn behave as server nodes.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to Random Access Memory RAM Read Only Memory ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disk Read Only Memory CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through an non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A graphics interface such as Northbridge may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU or host processing unit and assumes responsibility for accelerated graphics port AGP communications. One or more graphics processing units GPUs may communicate with graphics interface . In this regard GPUs generally include on chip memory storage such as register storage and GPUs communicate with a video memory . GPUs however are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which may in turn communicate with video memory . In addition to monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked or distributed environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web enabled interface for applications and computing devices making computing activities increasingly Web browser or network oriented.

For example MICROSOFT s .NET platform includes servers building block services such as Web based data storage and downloadable device software. Generally speaking the .NET platform provides 1 the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them 2 increased interactive capability for Web sites enabled by greater use of XML rather than HTML 3 online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications such as e mail for example or software such as Office .NET 4 centralized data storage which will increase efficiency and ease of access to information as well as synchronization of information among users and devices 5 the ability to integrate various communications media such as e mail faxes and telephones 6 for developers the ability to create reusable modules thereby increasing productivity and reducing the number of programming errors and 7 many other cross platform integration features as well.

While exemplary embodiments herein are described in connection with software residing on a computing device one or more portions of the invention may also be implemented via an operating system application programming interface API or a middle man object between any of a coprocessor a display device and requesting object such that prediction query generation and execution services may be performed by supported in or accessed via all of .NET s languages and services and in other distributed computing frameworks as well.

The present invention thus provides systems and methods for generating prediction queries to help a user build and execute prediction queries. A UI is provided that is easy to use and understand in connection with the generation of a prediction query for data mining and the UI can be instantiated from a variety of disparate sources that may request query building services. In one embodiment users are able to build data mining prediction queries in a way that is intuitively similar to building a join query for data restricted to relational database s .

As mentioned above there exists a need in data mining products for a tool that can assist a user in building data mining prediction queries in a standard manner. In one aspect the prediction query builder of the invention allows a user to build data mining queries in a manner similar to building executing relational join queries. The data mining model is treated like a relational table and a prediction is treated like a join operation however instead of joining two relational tables the invention enables the joining of a relational table with a mining model. At least one difference between join operations in connection with a relational query builder and join operations in connection with a prediction query builder is that a relational query builder joins the tables such that the data in each table can be related e.g. records in table A and corresponding records in table B can be related in some fashion depending on the join type whereas the prediction query builder of the invention joins lines by mapping columns from the source relational data to corresponding columns in the mining model. In the relational case both tables are input data. In the prediction query builder case mapping s are defined from at least one source table to the mining model definition so that when the query is executed the mining model receives data fed into the correct columns. Other differences may be evident from further description herein. Towards the above goal s an improved UI is provided in accordance with the invention which permits a user to specify simple two point A B or B A line segments to mark the join condition and build the query.

The invention thus helps users to build data mining prediction queries which can otherwise become a complex detail oriented query drafting task. In one embodiment the tool of the invention is similar to some relational query builder tools.

One of the open issues for data mining products is to allow user to build a prediction query. As mentioned in the background most products do not include a query language for data mining. Some other products do provide query languages for data mining prediction however these languages are very different than languages used for relational databases and it is very difficult to write without specific expertise to do so.

The invention thus proposes a way to help user to build execute data mining prediction queries in the same way as building executing relational join queries. A data mining model is thus considered in a way that is similar to the way a relational table is traditionally treated. A prediction query is thus considered a join however instead of joining two relational tables a relational table is joined with a data mining model. A user can delineate line segments by any input means e.g. mouse keyboard trackball joystick tablet pad etc. to mark the join condition. The following figures illustrate some of the main concepts of the prediction query builder tool of the invention.

For instance illustrate a prediction query builder main screen. are the main query design screen with a first portion the top part in this design and a second portion the bottom part in this design . In the top part or first portion there are two frames and with tree views. The left one is a mining model with mining model columns shown by familiar file structure . The predictable column member card in this case has a diamond icon. Frame includes a select model link to select a model in a familiar way. In other embodiments of the invention links such as links are implemented as other kinds of UI elements such as standard buttons and the like. The right frame is the schema of a relational table. Frame includes a modify join link a delete table link and a select nested table link . The nested table link enables a user to link tables having specific hierarchical and nested relationships according to their relationships. A user can then link columns between mining models and input tables by drawing line segments using any conventional input means similar to the way a user builds a join query in a relational system. The bottom part is the selection grid. With the selection grid a user can select e.g. drag and drop columns from any of the top tree views to the grid similar to the way a user builds join query in a relational system. Also similar to a relational grid and described in more detail below a user can utilize dropdown controls or other suitable controls in the grid to instead select columns of a mining model various functions or define custom expressions in the grid. Exemplary embodiments of grid are illustrated in below.

Contribution s of the invention shown in include but are not limited to the display of data mining model as a relational table and the adoption of a query builder UI familiar to users to build data mining prediction queries. No other data mining products have thus far used these concepts.

Data mining prediction is an important step in data mining and thus providing a product having new functionality with a look and feel that many users can already appreciate is an objective achieved in accordance with the invention. The invention thus adopts a classic relation query builder UI to help a user to generate execute prediction queries.

As mentioned above in connection with the main screen of the UI includes four main components 1 a table column mapping area 2 a selection grid area 3 a query text display area and 4 a query result grid area. In one embodiment the query text display area and the query result grid area are initially invisible.

The invention will now be described with reference to various more detailed but non limiting embodiments. In connection with the table column mapping area at the initial stage as shown in the user specifies the mining model based upon which prediction is going to take place by selecting link .

The select mining model list box shown in displays the list of mining models in the solution. It is possible for the user to select a mining model within the project or refer to an existing model from a server. In one embodiment the default mining model is the first one in the list of derived mining models.

Once the model is selected the hyper link to Select one or more input tables becomes enabled. The user can follow the hyper link to select the input tables based on the mining model structure selected. Thus once the mining model is selected the user can pick input tables for prediction the Select tables link is enabled . While clicking on the link the user is prompted if he wants to select the table from existing Data Source Views DSVs or from a live server.

As illustrated in when the table selection wizard is done the user is returned to the prediction query builder main screen with the columns of the input table populated as per the selections of . Columns from model and tables which have same name are then automatically mapped.

Exemplary items in the toolbar for the UI of the invention include 1 Save which saves a query 2 Open which opens a query 3 Run which executes the query Show syntax which displays the query syntax in a window and 5 Design Grid Viewer toggle which switches back to the design view or to the query result view.

In one embodiment the invention provides support for a singleton query wherein a choice is added at the bottom of the Input Table Grid which invokes a hierarchical grid with two columns Attribute and Value. The user can type the value for some attributes and when returned to the main screen the columns associated with the values are automatically mapped.

The Data Mining DM prediction query builder or generator of the invention is a data mining tool that helps a user to build and execute prediction queries. In this regard the present invention provides a user interface UI that is easy to use and understand in connection with the generation of a query for data mining and can be instantiated from a variety of disparate sources that may request query building services. It is noted that a relational query and a prediction query are unrelated in purpose and effect however in one aspect the UI of this invention includes a feel and effect similar to a relational query building model.

As mentioned above while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any computing device or system in which it is desirable to generate and execute prediction queries. Thus the techniques for providing prediction query generation and execution in accordance with the present invention may be applied to a variety of applications and devices. For instance the algorithm s of the invention may be applied to the operating system of a computing device provided as a separate object on the device as part of another object as a downloadable object from a server as a middle man between a device or object and the network as a distributed object etc. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same similar or equivalent prediction query generation and execution achieved by the invention.

The various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the present invention or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers the computing device will generally include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may utilize the signal processing services of the present invention e.g. through the use of a data processing API or the like are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer a video recorder or the like or a receiving machine having the signal processing capabilities as described in exemplary embodiments above becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.

While the present invention has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. For example while exemplary network environments of the invention are described in the context of a networked environment such as a peer to peer networked environment one skilled in the art will recognize that the present invention is not limited thereto and that the methods as described in the present application may apply to any computing device or environment such as a gaming console handheld computer portable computer etc. whether wired or wireless and may be applied to any number of such computing devices connected via a communications network and interacting across the network. Furthermore it should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate. Still further the present invention may be implemented in or across a plurality of processing chips or devices and storage may similarly be effected across a plurality of devices. Therefore the present invention should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

