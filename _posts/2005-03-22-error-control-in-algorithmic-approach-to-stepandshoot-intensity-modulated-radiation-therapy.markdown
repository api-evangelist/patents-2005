---

title: Error control in algorithmic approach to step-and-shoot intensity modulated radiation therapy
abstract: The present invention provides a method comprising the following steps: (a) partitioning an intensity modulated beam into a set of sub-IMBs; and (b) partitioning the sub-IMBs into segments, wherein steps (a) and (b) introduce no machine delivery error. The present invention also provides a method comprising the following steps: (a) recursively partitioning an intensity modulated beam into plateaus; and (b) partitioning the plateaus into segments, wherein step (a) comprises determining a tradeoff between machine delivery error and the number of segments into which the plateaus will be partitioned in step (b).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07466797&OS=07466797&RS=07466797
owner: University of Notre Dame du Lac
number: 07466797
owner_city: Notre Dame
owner_country: US
publication_date: 20050322
---
This application makes reference to and claims priority to U.S. Provisional Patent Application No. 60 554 902 entitled Method to Construct Radiation Intensity Distributions Using Uniform Fields for Radiation Therapy filed Mar. 22 2004 and to concurrently filed U.S. patent application Ser. No. 11 085 510 entitled Segmentation Algorithmic Approach to Step and Shoot Intensity Modulated Radiation Therapy the entire contents and disclosure of which are hereby incorporated by reference.

The United States Government has rights in this invention pursuant to Grant No. CCR 9988468 with the National Science Foundation.

The present invention relates generally to intensity modulated radiation therapy IMRT and more particularly to a segmentation algorithmic approach to IMRT.

The 3 D static leaf sequencing SLS problem arises in radiation therapy for cancer treatments aiming to deliver a radiation dose prescription to a target tumor both accurately and efficiently. However a problem with existing radiation therapy treatments is machine delivery error. Because there is an inverse relationship between machine delivery error and treatment time there exists a need for method that can efficiently determine the tradeoff between machine delivery error and treatment time in radiation therapy treatments. Also for radiation therapy treatments where the problem of machine delivery error is far more important than treatment time there exists a need for a method that can eliminate machine delivery error in other radiation therapy treatments.

According to a first broad aspect of the present invention there is provided a method comprising the following steps a partitioning an intensity modulated beam into a set of sub IMBs and b partitioning the sub IMBs into segments wherein steps a and b introduce no machine delivery error.

According to a second broad aspect of the invention there is provided a method comprising the following steps a recursively partitioning an intensity modulated beam into plateaus and b partitioning the plateaus into segments wherein step a comprises determining a tradeoff between machine delivery error and the number of segments into which the plateaus will be partitioned in step b .

According to a third broad aspect of the invention there is provided a method comprising the following steps a recursively partitioning an intensity modulated beam into plateaus b partitioning the plateaus into segments wherein step a comprises determining a tradeoff between machine delivery error and the number of segments into which the plateaus will be partitioned in step b and c linking the segments to thereby reduce the number of segments.

According to a fourth broad aspect of the invention there is provided a method comprising the following steps a partitioning an intensity modulated beam into a set of sub IMBs b partitioning the sub IMBs into segments wherein steps a and b introduce no machine delivery error and c linking the segments to thereby reduce the number of segments.

According to a fifth broad aspect of the invention there is provided a method comprises the following steps a generating a canonical delivery option for each set of field opening endpoints for a an intensity modulated beam b for every two consecutive intensity modulated beam columns of the intensity modulated beam determining a series of minimum cost g matchings between the canonical delivery options of the intensity modulated beam columns c determining the tradeoff curves based on the g matchings and d extracting the segments for the intensity modulated beam based on the matched field openings of the canonical delivery options from the determined g matchings in an increasing order of consecutive intensity modulated beam columns to thereby partition the intensity modulate beam.

According to a sixth broad aspect of the invention there is provided a method comprises the following steps a generating a canonical delivery option for each set of field opening endpoints for a an intensity modulated beam b for every two consecutive intensity modulated beam columns of the intensity modulated beam determining maximum matchings with no machine delivery error between the canonical delivery options of the intensity modulated beam columns and c extracting the segments for the intensity modulated beam based on the matched field openings of the canonical delivery options from the determined matchings in an increasing order of consecutive intensity modulated beam columns to thereby partition the sub IMB.

It is advantageous to define several terms before describing the invention. It should be appreciated that the following definitions are used throughout this application.

Where the definition of terms departs from the commonly used meaning of the term applicant intends to utilize the definitions provided below unless specifically indicated.

For the purposes of the present invention a value or property is based on a particular value property the satisfaction of a condition or other factor if that value is derived by performing a mathematical calculation or logical decision using that value property or other factor.

For the purpose of the present invention a minimum cost flow algorithm refers to a minimum cost flow is related to a network which is a graph that is 1 it is directed i.e. for any two vertex u and v the edge u v and v u is different the edge u v is said to be entering v and exiting u 2 there are two distinct vertices the source vertex s and the sink vertex t where there is no edge entering s and there is no edge exiting t and 3 each edge e has a capacity that is a positive number and 4 each edge e has a cost c e . The cost of a flow is the sum of the cost of each edge e which is computed as the product e c e . A flow with respect to a value is minimum if and the cost of is minimized. A minimum cost flow algorithm is a method for computing a minimum cost flow with respect to a given a value .

For the purposes of the present invention the term bipartite graph refers to a graph whose vertex set consists of two disjoint set of vertices U and V such that all of the edges only connect the vertices from U to the vertices V.

For the purposes of the present invention the term bipartite matching for a bipartite graph refers to a set of edges such that no two edges share a common vertex.

For the purposes of the present invention the term bipartite maximum matching refers to a bipartite matching with the most number of edges.

For the purposes of the present invention the term bipartite maximum matching algorithm refers to a method for computing a bipartite maximum matching.

For the purposes of the present invention the term canonical delivery option refers to A delivery option of an intensity profile is a set of field openings FOs together with an intensity level of one that created it. Mathematically each field opening can be viewed as a closed interval on the real line l r . Hence a delivery option can be viewed as a set of intervals on the real line e.g. l r l r . . . l r . A delivery option is canonical if none of its intervals is strictly contained in the interior of another interval of it.

For the purposes of the present invention the term cost of a bipartite matching refers to the sum of the cost of the edges that is in the matching.

For the purposes of the present invention the term cost of a path cover refers to the sum of the edge costs that is in the path cover.

For the purposes of the present invention the term FO endpoint refers to a field opening endpoint. Mathematically a field opening can be viewed as a closed interval l r on the real line. In this context the FO end point refers to the numbers l and r.

For the purposes of the present invention the term g matching or g bipartite matching refers to a bipartite matching with g number of edges.

For the purposes of the present invention the term g path over refers to a path cover with g number of paths.

For the purposes of the present invention the term graph algorithm techniques refers to techniques that use graph data structures to model and solve problems.

For the purposes of the present invention the term graph refers to a discrete data structure used to model complex relationships among objects and consists of vertices and edges connecting the vertices.

For the purposes of the present invention the term IMB column refers to a column of the matrix that corresponds to an IMB.

For the purposes of the present invention the term intensity map refers to an intensity modulated beam IMB .

For the purposes of the present invention the term intensity modulated beams or IMB refers to the prescribed discrete fluence distributions of radiation. An IMB along a given direction in 3 D is specified by a set of nonnegative integers on a 2 D grid.

For the purposes of the present invention the term intensity profile refers to a row of the matrix that corresponds to an IMB.

For the purposes of the present invention the term leaf sequence refers to a set of segments that creates a given set of IMBs.

For the purposes of the present invention the term maximum flow algorithm refers to A graph is called a network if 1 it is directed i.e. for any two vertex u and v the edge u v and v u is different the edge u v is said to be entering v and exiting u 2 there are two distinct vertices the source vertex s and the sink vertex t where there is no edge entering s and there is no edge exiting t and 3 each edge has a capacity that is a positive number. A flow is a function on the edges of a network that satisfies the following two condition 1 for any edge e e is less than the capacity of e and 2 for any vertex v that is neither s nor t the total flow entering it i.e. the sum of the flow values on the edges directing at v is equal to the total flow exiting v i.e. the sum of the flow values on the edges exiting v. The value of a flow function is the total flow values on the edges exiting the source vertex s. A flow function is a maximum flow if the value of the flow function is the maximum among all the flow functions. A maximum flow algorithm is a method for finding a maximum flow on a network.

For the purposes of the present invention the term minimum cost g matching refers to a g matching with the minimum amount of cost.

For the purposes of the present invention the term minimum cost g path cover refers to a path cover whose cost is the minimum among all g path covers.

For the purposes of the present invention the term mixed partitioning scheme refers to a way to partition an IMB into sub IMBs using more than one partitioning method in a dynamic programming fashion.

For the purposes of the present invention the term multileaf collimator or MLC refers to a device for delivering intensity modulated beams consisting of multiple pairs of tungsten leaves of approximately the same rectangular shape and size. Opposing MLC leaves of each pair are aligned with each other. The leaves may move up and down to form a rectilinear polygonal region that is monotone to for example the x axis.

For the purposes of the present invention the term mutually disjoint refers to two geometric curves that do not intersect each other.

For the purposes of the present invention the term path cover of a graph refers to a set of paths such that each vertex in the graph is on one and only one path.

For the purposes of the present invention the term plateau refers to sub IMB having a height of 0 or d where d is a positive number less than the height of the IMB of which the sub IMB is a portion.

For the purposes of the present invention the term segment refers to an MLC aperture shape formed by MLC leaves together with intensity levels which are delivered by the MLC aperture.

For the purposes of the present invention the term segmentation algorithm refers generally to an algorithm that finds a minimum number of segments that creates a given intensity modulated beam IMB .

For the purposes of the present invention the term shortest path algorithm refers to A path in a graph from vertex vto vis a sequence of vertices v v . . . vthat are connected by the edges v v v v . . . v v . The edges are also considered to be part of the path. When the each edge in the graph has a cost a real number that is associated with it the graph is said to be a weighted graph. The cost of a path in a weighted graph is the total sum of its edge costs. A shortest path between two vertices u and v of a weighted graph is a path between u and v with the minimum cost. A shortest path algorithm is a method for finding a shortest path between two vertices in a weighted graph.

For the purposes of the present invention the term Steiner point refers to a way in which a field opening l r is split into two new field openings l x and x r with l

For the purposes of the present invention the term step and shoot refers to a static IMRT method in which the MLC leaves stay stationary during irradiation and move to reshape the beam while the radiation is not present.

For the purposes of the present invention the term z post refers to intensity level of each grid cell of an IMB.

For the purposes of the present invention when referring to a grid cell the term intensity level refers to the number in the grid cell which correlates to the amount in unit of radiation to be delivered by the IMB to the body region corresponding to that cell.

For the purposes of the present invention the term treatment plan for a given IM consists of a set of MLC apertures together with their heights for delivering the IM.

The 3 D static leaf sequencing SLS problem arises in radiation therapy for cancer treatments aiming to deliver a prescribed radiation dose to a target tumor accurately and efficiently. The treatment time and machine delivery error are two crucial factors to the solution i.e. a treatment plan for the SLS problem. In one embodiment the present invention provides a method for determining the tradeoff between the treatment time and machine delivery error also called the tongue and groove error in medical literature for the 3 D SLS problem. In one embodiment the method of the present invention employs a 3 D SLS algorithm with error control gives the users e.g. physicians the option of specifying a machine delivery error bound and subject to the given error bound the algorithm computes a treatment plan with the minimum treatment time. In one embodiment the present invention addresses the SLS problem with error control by computing a k weight shortest path in a directed graph and building the graph by computing g matchings and minimum cost flows. Furthermore the 3 D SLS algorithm used in one embodiment of the present invention may be used with various popular radiotherapy machine models.

The 3 D static leaf sequencing SLS problem arises in intensity modulated radiation therapy IMRT . IMRT is a modern cancer therapy technique which aims to deliver a highly conformal radiation dose to a target tumor while sparing the surrounding normal tissues and sensitive structures. Performing IMRT is based on the ability to accurately and efficiently deliver prescribed discrete dose distributions of radiation called intensity maps IMs . An IM is a dose prescription specified by a set of nonnegative integers on a uniform 2 D grid see . The value in each grid cell indicates the amount in units of radiation to be delivered to the body region corresponding to that IM cell. One of the most advanced tools today for delivering intensity maps is the multileaf collimator MLC . An MLC consists of up to 60 pairs of tungsten alloy leaves of the same rectangular shape and size see . The opposing leaves of a pair are aligned to each other. The leaves can move up and down to form a rectilinear region called an MLC aperture which is monotone to say the x axis. To further reduce radiation leakage two pairs of backup metal diaphragms along the x and y axes are used to form a bounding box of each rectilinear MLC aperture. The cross section of a cylindrical radiation beam produced by a radiation machine is shaped by an MLC aperture to deliver a uniform dose to a portion of an IM. Each MLC aperture may be assumed to be associated with an integer representing the units of radiation delivered by the aperture.

Currently there are three popular MLC systems that are used for clinical cancer treatment. The systems are the Elekta Siemens and Varian MLCs. Depending on the actual MLC system in use there are some differences among the geometric shapes of the rectilinear x monotone regions that can be formed by the respective MLC. The details on the differences among these MLC systems will be described below. There are several techniques for delivering IMRT using an MLC such as those described in S. Webb. . Bristol Institute of Physics Publishing 1993 and 39. S. Webb. . Bristol Institute of Physics Publishing 1997 the entire contents and disclosures of which are hereby incorporated by reference. The most popular technique may be one called the static leaf sequencing SLS or the step and shoot technique. In the SLS approach an IM is delivered as follows 

In SLS the boundary of each MLC aperture does not intersect the interior of any IM cell. In delivering a beam shaped by an MLC aperture all the cells inside the region of the MLC aperture receive the same integral amount of radiation dose say one unit i.e. the numbers in all such cells are decreased by the same integer value. The IM is done when each cell has a value zero. Intuitively it is possible to view the above process as playing the following game An IM is a 3 D mountain made of unit cubes see and each MLC aperture corresponds to a special plateau whose uniform height is the amount of radiation it delivers the goal is to build this mountain by stacking up a set of such plateaus see for example and . It is important to note that each plateau like the 3 D IM mountain is not one whole rigid object i.e. it is made of unit cubes as well. Thus when two plateaus are stacked together some of the cubes may fall to lower positions as if they were pulled down by gravity. Geometrically the 3 D SLS problem is to partition a 3 D IM mountain into such plateaus of uniform heights.

A treatment plan for a given IM consists of a set of MLC apertures together with their heights for delivering the IM. Two key criteria are used to evaluate the quality of an IMRT treatment plan 

 1 Treatment time the efficiency Minimizing the treatment time is important because it not only lowers the treatment costs but also increases the patient throughput. Since the overhead associated with turning the beam source on off and repositioning MLC leaves dominates the total treatment time in one embodiment the method the present invention minimizes the number of MLC apertures used for delivering an IM.

 2 Machine delivery error the accuracy In one embodiment of the present invention an IM is partitioned into a set of MLC apertures that perfectly builds the 3 D IM mountain. However in reality due to the special geometric shape of the MLC leaves an MLC aperture may not be delivered as perfectly as its geometry. This gives rise to an error between the prescribed dose and actually delivered dose. This error referred to herein is the machine delivery error also called the tongue and groove error in medical literature. The nature of the machine delivery error is discussed in more detail below. Minimizing the machine delivery error is important because according to a recent study the maximum machine delivery error can be up to 10 in point dose which is well beyond the allowed 3 5 limit. Although the machine delivery error cannot be entirely eliminated carefully choosing MLC apertures may reduce the error.

The 3 D static leaf sequencing SLS problem is Given an IM and an error bound E find a set S of MLC apertures for delivering the IM such that the total machine delivery error incurred by S is E and the size S is minimized. Note one key to this 3 D SLS problem is to find a good tradeoff between the accuracy error and efficiency treatment time .

The 3 D SLS problem has received a great deal of attention from several research communities. In the medical physics community many heuristic algorithms for the SLS problem have been proposed. A method for solving the 3 D SLS problem without error control i.e. the machine delivery error is ignored is described by Xia and Verhey in the paper P. Xia et al. MLC Leaf Sequencing Algorithm for Intensity Modulated Beams with Multiple Static Segments in 25 1424 1434 1998 the entire contents and disclosure of which is hereby incorporated by reference. Xia and Verhey s algorithm has been implemented by many researchers and used as a widely accepted benchmark program for leaf sequencing software. However none of these SLS heuristics can guarantee a good quality of their output solutions.

In computational geometry Chen et al. Geometric Algorithms for Static Leaf Sequencing Problems in Radiation Therapy in 14 5 311 339 2004 hereinafter Chen et al. I paper Chen et al. Optimal Terrain Construction Problems and Applications in Intensity Modulated Radiation Therapy in 10 volume 2461 pages 270283 2002 hereinafter Chen et al. II paper Luan et al. A New Leaf Sequencing Algorithm Software for Step and Shoot IMRT. 30 6 1404 2003 and Luan et al. A New MLC Segmentation Algorithm Software for Step and Shoot IMRT. 31 4 695 707 2004 the entire contents and disclosures of which are hereby incorporated by reference herein provided geometric algorithms for the 3 D SLS problem on the Elekta model without error control. The software for the algorithms is currently used in two hospitals for clinical cancer treatments and these algorithms are described below.

In the operations research community two variations of the 3 D SLS problem the MLC problem with minimum beam on time and MLC problem with minimum beam on time plus machine setup time have been studied. Here the beam on time refers to the total amount of time when a patient is actually exposed to radiation and the machine setup time refers to the time associated with turning on off the radiation source and repositioning MLC leaves. The MLC problem with minimum beam on time is polynomial time solvable while the MLC problem with minimum beam on time plus machine setup time is NP hard. There appear to be no efficient algorithms for the MLC problem with minimum beam on time plus machine setup time.

In some situations the goal for the 3 D SLS problem is to minimize the number of MLC apertures used for delivering an IM. However the MLC problem with minimum beam on time plus machine setup time seems more general and the formulation of the 3 D SLS problem as addressed by one embodiment of the present invention also well captures the total treatment time. This is because the machine setup time for the MLC apertures dominates the total treatment time and algorithms that minimize the number of MLC apertures used are desired to reduce the treatment time.

Although it is a very important problem much less work has been done on the 3 D SLS problem with machine delivery error control. In fact none of the known approaches can systematically control the machine delivery error so far i.e. determining a good tradeoff between the error and time .

In one embodiment the present invention takes advantage of the discovery that that the 3 D SLS problem is NP hard even for the case in which the given IM consists of only one column of cells. This implies that the versions of the 3 D SLS problem under each of the three popular MLC models with or without machine delivery error control are all NP hard as described in more detail below.

In one embodiment the present invention takes advantage of the first ever modeling of the 3 D SLS problem with a tradeoff between the error and treatment time and an efficient algorithm for the problem on the Elekta model. In one solution employed by one embodiment of the present invention the 3 D SLS problem is formulated as a k weight shortest path problem on a directed graph in which each edge is defined by a minimum weight g cardinality matching. Every such k weight path specifies a set S of k MLC apertures for delivering the given IM and the cost of the path indicates the machine delivery error of the set S of MLC apertures.

In one embodiment the present invention provides methods that allow a 3 D SLS algorithm that to be used with various MLC models such as Siemens and Varian . These methods are based on computing a minimum g path cover of a directed acyclic graph.

In one embodiment the present invention provides a method for solving the 2 D case of the 3 D SLS problem in which the given IM consists of entries of only 1 or 0 i.e. partitioning a polygonal domain into a minimum set of special x monotone polygons . The solution used in the method is based on computing a minimum cost flow in a special graph.

Three popular MLC systems and their constraints the machine delivery errors associated with IMRT treatments using such MLC systems and the SLS problem and its variations will now be described.

As mentioned above there are three popular MLC systems currently used in clinical treatments the Elekta Siemens and Varian MLC systems. The mechanical structure of these MLCs although quite flexible is not perfect in that it still precludes certain aperture shapes from being used for treatment. One such constraint is called the minimum leaf separation e.g. on the Elekta or Varian MLC which requires the distance between the opposing leaves of any MLC leaf pair to be no smaller than a given value e.g. 1 cm . Another common constraint is called the no interleaf motion e.g. on the Elekta or Siemens MLC which forbids the tip of each MLC leaf to surpass those of its neighboring leaves on the opposite leaf bank. These constraints prevent opposing MLC leaves from colliding into each other and being damaged.

The Elekta MLC is subject to both the minimum leaf separation and no interleaf motion constraints see . The Siemens MLC is subject to only the no interleaf motion constraint see . Hence a degenerate rectilinear x monotone polygon can be formed by the Siemens MLC by closing some leaf pairs see . The Varian MLC is subject to the minimum leaf separation constraint but allows interleaf motion see . Thus to close a leaf pair in the Varian system it is possible to move the leaf opening under the backup diaphragms see . But the Elekta MLC cannot close its leaf pairs in a similar manner due to its no interleaf motion constraint. Geometrically on the Elekta each MLC aperture is a rectilinear x monotone simple polygon whose minimum vertical width is no smaller than the minimum separation value A while on the Siemens or Varian an MLC aperture can be a degenerate x monotone polygon i.e. with several connected components .

On most current MLCs the sides of the leaves are designed to have a tongue and groove TG interlock feature see . This design reduces the radiation leakage through the gap between two neighboring MLC leaves and minimizes the friction during leaf movement. However it also causes an unwanted underdose and leakage situation when an MLC leaf is used for blocking radiation see . Geometrically the underdose and leakage error caused by the tongue and groove feature associated with an MLC aperture is a set of 3 D axis parallel boxes w l h where w is the fixed width of the tongue or groove side of an MLC leaf lis the length of the portion of the i th leaf that is actually involved in blocking radiation and h a r is the amount of radiation leakage with a being the fixed leakage ratio and r being the amount of radiation delivered by that MLC aperture. illustrates the height of the underdose and leakage error and illustrates the width and length of the underdose and leakage error.

 1 Tongue or groove error The tongue or groove error of an MLC aperture is defined as the amount of underdose and leakage error that occurs whenever the tongue side or groove side of an MLC leaf is used for blocking radiation. The tongue or groove error of an IMRT plan i.e. a set of MLC apertures is the sum of the tongue or groove errors of all its MLC apertures.

 2 Tongue and groove error Unlike the tongue or groove error which is defined dip in the final dose distribution where a tongue and groove error occurs on each individual MLC aperture the tongue and groove error is defined by the relations between different MLC apertures. The tongue and groove error occurs whenever the tongue side of an MLC leaf and the corresponding groove side of its neighboring leaf are both used for blocking radiation in any two different MLC apertures of an IMRT plan see described below . Clearly the tongue and groove error is a subset of the tongue or groove error. Minimizing the tongue and groove error is also important because it usually occurs in the middle of the delivered intensity maps causing insufficient dose coverage to the tumor and is actually the most damaging part of the tongue or groove error.

Further if each MLC aperture is viewed as a rectilinear polygonal region on the xy plane then the tongue or groove error occurs along every vertical boundary edge of this region.

More precisely the 3 D static leaf sequencing SLS problem is Given an IM and an error bound E find a set S of MLC apertures for delivering the IM such that the machine delivery error i.e. either the tongue or groove error or the tongue and groove error is E and the size S is minimized.

Interchangeably such MLC apertures are referred to as B segments for . Each B block segment is of a rectilinear x monotone polygonal shape depending on the MLC model used of a uniform integer height h 1 h is the number of dose units delivered by the B segment . When the given IM has only 1 or 0 in its cells the 3 D SLS problem becomes a 2 D one i.e. the 2 D SLS problem and an optimal set of B segments corresponds to a minimum set of special rectilinear x monotone polygons.

A key special case of the 3 D SLS problem called the basic 3 D SLS problem is also of clinical value. This case is similar to the general 3 D SLS problem except that the height of each of its B segments is one. Note that in the general 3 D SLS problem the uniform height of each B segment can be any integer 1.

Studying the basic case is important because the maximum heights of the majority of IMs used in the current clinical treatments are around 5 and an optimal solution for the basic case on such an IM is often very close to an optimal solution for the general case.

The NP hardness of the SLS problem may be proved for the case in which the given IM has only one column of cells by showing a polynomial time reduction to it from the knapsack problem which is known to be NP complete. Since the input IM consists of only one column of cells one may simply represent this IM by an IM curve in 2 D which can be viewed as a rectilinear curve monotone to the x axis see . The SLS problem seeks a decomposition of the area enclosed by the IM curve and the x axis into a minimum set of blocks such that each block is a rectangle made of unit squares and the IM curve can be built by stacking up the blocks see . Note that the height of the IM curve at every x a is an integer value and the heights of all blocks in any decomposition of the area defined by the 2 D IM curve are also required to be integers. Given a knapsack of size K and n items of sizes s s . . . s respectively such that K s S . . . sare all integers the knapsack problem asks whether there is a subset of these n items whose total sum of sizes is exactly K. Without loss of generality assuming assume s 0 for every i 1 2 . . . n 1 see and

Lemma 1. For any decomposition D of the 2 D IM curve C the following holds 1 If there is a height increase of C at x a then D L2 If there is a height decrease of C at x a then D R 3 If there is no height change of C at x a then D L D R .

For the IM curve C constructed above there are n height increases along the left to right order of its upper boundary. By Lemma 1 for any decomposition D of C D L 1 for each value a 0 1 . . . n 1. Since

Lemma 2. Let D be an optimal decomposition of the 2 D IM curve C constructed above. Then D n if and only if the answer to the corresponding knapsack problem is yes .

Proof. I If the answer to the corresponding knapsack problem is yes then there is a subset of I of 1 2 . . . n such that s K. It is easy to verify that D B B . . . B with 1or 1 1for 1 2 is indeed a decomposition of C. Since D is optimal then D D n. Combined with the lower bound result stated above then D n.

 II In the other direction suppose D n. Let D B B . . . B and B l r h for each i 1 2 . . . n. Further assuming that l l . . . l is in increasing order. By Lemma 1 it is easy to show that Li i 1 for each i 1 2 . . . n and D L a 0 1 . . . n 1.

First it can be shown that r 0 1 . . . n 1 for each i 1 2 . . . n by contradiction. If not suppose r 0 1 . . . n 1 for some j 1 2 . . . n. Obviously D L . Since the IM curve C has no height change at x r by Lemma 1 then D R . But this is a contradiction to the fact that B l r h D R.

Next transform D is transformed to a special optimal decomposition D of C i.e. D D n such that r lfor any i j 1 2 . . . n. D enables a solution to be obtained for the knapsack problem.

Case 1 h h. Then B l r hand B l r hcan be replaced by a single block l r h which will result in a new decomposition of a size smaller than the optimal one a contradiction.

Case 2 h h. According to the construction of the IM curve C at x l there is a height increase of s. Imagine building C using blocks in a decomposition of C. Then any block B Lcauses a height increase at x l and any block B Rcorresponds to a height decrease at x l the other blocks do not contribute to the height change at x l. Bis the only block in D L which causes a height increase of hat l . Note that Bis a block in D R D Rwhich corresponds to a height decrease of hat l. Since hp hq the net effect would be a height decrease at x l contradicting to the fact that C is increasing at l.

Case 3 hpl rand r r 0 1 . . . n 1 the new decomposition has actually moved the right endpoint of a block in the decomposition D further to the right by at least one unit distance. In the resulting decomposition of C it still holds that every r 1 2 . . . n 1 the r s are labeled based on the corresponding left endpoints l s of their blocks .

From the above discussions only Case 3 is actually possible. By repeatedly applying the above transformation operation for Case 3 until the operation is no longer applicable and based on the fact that Li i 1 for each i 1 2 . . . n it can be concluded that in the resulting optimal decomposition D of C r n n 1 for each i 1 2 . . . n.

Proof. Lemma 2 shows that the knapsack problem can be transformed to the 2 D IM curve decomposition problem i.e. the SLS problem with an input IM of only one column of cells . It is obvious that the transformation can be done in polynomial time the transformation operation for Case 3 above can be repeated only a polynomial number of times since each rcan be moved to the right no more than n times until it reaches n or n 1 and since there are at most n such r s . Since the knapsack problem is NP complete the theorem follows.

Note that all relevant versions of the 3 D SLS problem namely under each MLC model and with or without error control become the same problem when the given IM consists of only one column of cells. Hence the above theorem implies that all these versions of the 3 D SLS problem are NP hard.

Algorithms in accordance with one embodiment of the present invention for the 3 D SLS problem with error control on the Elekta model which has the most constraints among the three MLC systems. The extensions of these algorithms to the Siemens and Varian models will also be described below.

For the basic 3 D SLS problem without error control the goal is to simply partition a given IM into a minimum set of B segments of a unit height. The algorithm described in the Chen et al. I paper for the Elekta model is based on the following idea and structures.

Geometrically it is possible to view a 3 D IM mountain as consisting of a series of IM mountain slices each of which is a 2 D object defined on one column of an IM grid see for examples of IM mountain slices . Let S Si i I be a set of B segments that builds a 3 D IM mountain where I is an index set. For the basic 3 D SLS problem since each B segment Shas a unit height and an x monotone rectilinear simple polygonal shape for the Elekta model Sactually builds a continuous block of a unit height on every IM column Cthat intersects the projection of Son the IM grid. Such a continuous block is denoted by an interval Bon the column C. Interchangeably such an interval Bis called a block. Note that when delivering a B segment Si each of its blocks Bis delivered by a corresponding pair of MLC leaves that is aligned with C.

Suppose the blocks created by all B segments in S on an IM column Care collected. Then this collection of blocks denoted by BS C actually builds the IM mountain slice defined on C. This collection of blocks which builds an IM mountain slice is called a block set. shows three block sets whose blocks are represented by the dark rectangles.

The basic 3 D SLS problem without error control can be solved as follows First select a good block set for building each IM mountain slice and then somehow stitch together the blocks along consecutive IM columns to form B segments. Here stitching means which of the selected blocks for column Cshould follow which block for column Cin a B segment see for an illustration . Note that if no stitching occurs then a given 3 D IM mountain can be built by letting each selected block be an individual B segment. For example the IM in may be delivered using six B segments each of which is one of the blocks dark rectangles in . However every time two blocks are stitched together without violating the MLC constraints the number of B segments used is reduced by 1. In 4 stitches may be done and hence reducing the number of B segments to 2.

It has been shown that it is sufficient to locally stitch together the blocks of the two selected block sets for any two consecutive IM columns by computing a maximum cardinality matching between the two corresponding sets of intervals. The number of B segments thus resulted is guaranteed to be minimum with respect to the selected block sets with one block set for each IM column . Every B segment consists of a sequence of blocks thus stitched together with one block from each of the selected block sets for a list of consecutive IM columns.

A shortest path in G then specifies a minimum set of B segments for the given IM with respect to the block sets used for each IM column.

The algorithm described in the Chen et al. I paper solves the basic 3 D SLS problem without error control. To handle this problem with error control the error needs to be related to the number of B segments used.

Let S be a solution for the basic 3 D SLS problem with tongue or groove error control i.e. S Si Si i Iis a set of B segments of height 1 for the given IM with I being an index set. Consider a B segment Si S. As mentioned above each B segment Si actually consists of a sequence of blocks of a unit height on every IM column Cthat intersects the projection of Si on the IM grid. Let B S B B S C j e e 1 . . . k be the set of such blocks that form S where S runs consecutively from the IM columns Cto C.

As discussed above the tongue or groove error of Soccurs along every vertical boundary edge of the polygonal region of S. Let B B denote the length of the symmetric difference between the two intervals of Band B where j e 1 e . . . kand B and B . Thus the total tongue or groove error TorG S of Sis the sum of a set of 3 D error volumes i.e. 

Thus there is the following geometric version of the basic 3 D SLS problem with tongue or groove error control Given an IM and an error bound E find a set S S i I of B segments of a unit height such that the value

Now the tongue or groove error can be related to the number of B segments by associating an error to each stitching configuration between the block sets for any two consecutive IM columns. Specifically for any two block sets BS C and BS C for columns Cand Cand each g 1 2 . . . M where Mis a maximum cardinality matching between BS C and BS C exactly g pairs of blocks are stitched together with the minimum total error. Note that every stitching configuration of exactly g block pairs between BS C and BS C with the minimum error corresponds to a matching of exactly g pairs of intervals with the minimum total weight between the two interval sets of BS C and BS C . Such a bipartite matching of intervals subject to the MLC constraints are called an optimal g matching. Hence an optimal solution for the basic 3 D SLS problem with error control is specified by a list of block sets one for each IM column and an optimal g matching between two such block sets BS C and BS C for any consecutive columns Cand C for some value g .

The following lemma is a key to one algorithm of the present invention. In fact it is a generalization of similar but more primitive observations in the Chen et al. I paper for the problem versions without error control and its correctness proof is also similar to the proofs of those observations in the Chen et al. I paper.

Lemma 3. An s to t path in the graph G with a weight k and a cost C specifies a set of k B segments of a unit height for the given IM whose total tongue or groove error is C.

Lemma 3 implies that for the basic 3 D SLS problem with a given error bound E it is possible to obtain a minimum B segment set for the given IM subject to this error bound by finding a minimum weight s to t path in G with a total cost E . This is called the constrained shortest path problem.

To compute such a set of B segments several issues must be resolved 1 How to generate all distinct block sets for each IM mountain slice 2 How to compute an optimal g matching between two block sets 3 How to find a minimum weight s to t path in G with a total cost E 

To generate all distinct block sets for an IM column an algorithm in the paper Luan et al. An Optimal Algorithm for Computing Configuration Options of One dimensional Intensity Modulated Beams in 48 15 2321 2338 2003 is used whose running time is linear in terms of the size of the output block sets. To find a desired k weight shortest s to t path in G Lawler s dynamic programming algorithm is used for constrained shortest paths. The sought path can be easily obtained from the dynamic programming table once it becomes available.

Now it will be shown how to compute the optimal g matchings. Given two block sets BSand BSfor any two consecutive IM columns a bipartite graph G R B E is constructed as follows Each block in BS resp. BS corresponds to a red resp. blue vertex in G and every stitchable block pair corresponds to an edge between the corresponding red and blue vertices. Here a red block and a blue block are stitchable if they satisfy the machine model specific MLC constraints. For each edge e u v in G let their corresponding intervals be I l r and I l r then the cost of e u v is assigned as l l r r i.e. the length of the symmetric difference between Iand I.

To compute an optimal g matching in the bipartite graph G for each g 1 2 . . . M where M is the maximum cardinality matching of G G is transformed into a unit capacity flow network and formulate the task as a minimum cost flow problem with a flow value g. The M optimal g matchings can be computed efficiently by the successive shortest path algorithm i.e. at the end of the g th stage of the algorithm 1 g M a desired optimal g matching is produced. Since the single source shortest paths in G at each stage can be computed in O m n log n time the total time for computing all the M optimal g matchings 1 g M is O M m n log n where m E and n R B .

Recall that the 2 D SLS problem on the Elekta model defined above is to partition a given polygonal domain P possibly with holes embedded on a uniform planar grid into a minimum set of x monotone rectilinear simple polygons i.e. B segments whose total tongue or groove error is subject to a given error bound E. Like the basic 3 D case all B segments for the 2 D SLS problem also have the same height hence it suffices to use the sum of the lengths of all vertical edges of the B segments to capture the associated tongue or groove error. Thus the 2 D SLS problem essentially is to partition the given polygonal domain P into a minimum set of x monotone rectilinear simple polygons subject to an error bound E on the total sum of the lengths of the newly inserted vertical edges in all the resulting monotone polygons. Specifically E E w h h where w is the fixed width of the tongue or groove side of an MLC leaf h r is the amount of radiation leakage associated with each segment with r being the height of the segment and being the leakage ratio. For example if the given length sum of the newly inserted vertical edges is zero then only horizontal edges can be used in the partition.

Chen et al. as described in the Chen et al. I paper developed an algorithm for partitioning a polygonal domain into the minimum number of x monotone simple polygons on a uniform grid. Their algorithm is based on the idea of peak eliminations. Specifically a vertical boundary edge e of a rectilinear polygon P is a left peak if the two horizontal edges of P adjacent to e are both to the left of e e.g. see . Similarly a right peak is a vertical edge of P whose two adjacent horizontal edges are both to its right. Each time a left peak is connected to a right peak the number of x monotone simple polygons is reduced by 1. Hence to obtain a minimum partition one needs to connect as many left peaks to right peaks as possible which becomes a problem of computing a maximum bipartite matching between the two sets of left and right peaks of P. In the Chen et al. I paper the sought bipartite matching is computed by finding a maximum flow on the grid graph induced by the IM grid see where the flow value directly controls the number of x monotone polygons in the resulting partition.

To solve 2 D SLS problem with error control according to one embodiment of the present invention the same grid graph model as in the Chen et al. I paper is used except that a minimum cost flow is now computed in this graph instead of a maximum flow as in paper 13 . The cost of the flow indicates the amount of tongue or groove error and the amount of flow indicates the number of the resulting x monotone polygons i.e. B segments . One key to this construction is to associate with each vertical edge in the grid graph a cost that is equal to its geometric length. In this construction all horizontal edges have a zero cost. 

Lemma 4. Each flow with a flow value F and a cost C in the grid graph thus constructed corresponds to a desired partition of the polygonal domain P possibly with holes such that the size of the resulting partition is a function of F and the tongue or groove error of the partition is a function of C.

Proof. In the Chen et al. I paper it was shown that each flow of a value F in the grid graph corresponds to an x monotone partition of the polygonal domain P with a size C F for some fixed value C Cis related to the number of the left right peaks of P . Actually the flow partitions the polygonal domain into a set of sub polygons and each such sub polygon can be partitioned into x monotone polygons by using only horizontal edges. Hence the only vertical edges that are used in the partition are either 1 the vertical edges on the boundary of the input polygonal domain whose length sum is a fixed value say C or 2 the vertical edges that are selected by the flow whose length sum is 2C. This gives a total error of 2C Cfor the x monotone partition.

Now it is possible to relate the error the flow cost to the number of the resulting x monotone polygons the flow value . Note that in Lemma 4 when the value of F increases the value of C decreases and vice versa. Of course for each flow value it is possible to find a flow with the minimum cost to minimize its error . Thus there is a minimum cost flow problem. It is clear that by varying the flow values and computing their corresponding minimum cost flows in the grid graph one obtains the sought tradeoff between the number of B segments and the tongue or groove error for the 2 D SLS problem.

Theorem 3. The 2 D SLS problem with tongue or groove error control on any IM grid of size square root over square root over can be solved in O log time .

Note that the O log factor in the running time is due to the fact that in the minimum cost flow algorithm a shortest path algorithm is used instead of a depth first search algorithm.

A heuristic algorithm for the general 3 D SLS problem with error control will now be described. This algorithm is based on the 3 D SLS and 2 D SLS algorithms described above and its spirit is somewhat similar to the heuristic 3 D SLS algorithm without error control in Chen et al. I paper. The input 3 D IM Mountain is partitioned into a set of sub IMs such that each such sub IM can be handled optimally by one of these two algorithms i.e. to use the 2 D SLS algorithm such a sub IM must have a uniform height to use the 3 D SLS algorithm of one embodiment of the present invention the maximum height of such a sub IM should be reasonably small say 5 . The difference here is when combining the solutions obtained from the sub IMs dynamic programming is used to determine the tradeoff between the number of B segments and the tongue or groove error for the entire 3 D IM mountain.

The main steps of the 3 D SLS algorithm of one embodiment of the present invention with tongue or groove error control are 

As discussed above the tongue and groove error of an IMRT plan is the intersection V V while the tongue or groove error is the sum V V where V resp. V is the error set i.e. a set of 3 D axis parallel boxes caused by the tongue sides resp. groove sides of the MLC leaves. At first sight due to the nonlinearity it might appear that the tongue and groove error is much harder to handle than the tongue or groove error. Interestingly it is possible to show that handling the tongue and groove error is in fact equivalent to handling the tongue or groove error. A key to the solution in one embodiment of the present invention is set forth in Lemma 5 below which implies that the SLS algorithms for tongue or groove error control of the present invention are also applicable to the case of tongue and groove error control.

Lemma 5. Let M be the input IM and S be a B segment set that builds M. Then the difference between the values of the tongue or groove error and tongue and groove error of S is merely a value F M that depends only on the input IM M.

Observe that Lemma 5 immediately implies that minimizing the tongue and groove error is equivalent to minimizing the tongue or groove error. Therefore the 3 D SLS algorithms for tongue or groove error control are also applicable to the case of tongue and groove error control. Below is a proof of Lemma 5 which introduces the concepts of tongue error function and groove error function . The reason for introducing such mathematical formulations of errors is that it appears quite difficult to deal with the tongue and groove error directly based on its definition due to its non linear nature. However with the help of these mathematical formulations the tongue or groove error and the tongue and groove error are simply the integrals of some mathematical combinations of these functions. Specifically the tongue or groove error is equal to

The error caused by using the tongue side of an MLC leaf for blocking radiation for the purposes of the present invention is called the tongue error and the error caused by using the groove side for blocking radiation for the purposes of the present invention is called the groove error. Observe that if one ignores the width w of the tongue or groove side of an MLC leaf then the tongue error and groove error caused by the j th MLC leaf pair with respect to a B segment Sof height r i.e. the number of radiation units delivered by Si can actually be viewed as functions that are defined on the y axis and also depend on r see . These functions are denoted by T j S and G j S and for the purpose of the present invention are called the tongue error and groove error functions respectively.

To determine the amount of tongue error TE j S or the amount of groove error GE j S of a B segment Scaused by the j th MLC leaf pair it is possible to integrate its tongue error or groove error function. That is 

For the purposes of the present invention the term j S is referred to as the tongue error function of the j th leaf pair with respect to the B segment set S and denote it by j S . Similarly for the purposes of present invention the term j S is referred to as the tongue error function of the j th leaf pair with respect to the B segment set S and denote it by j S . Note that the integral

As described above the tongue or groove error TorG s of a B segment set S is the sum of its tongue error TE s and groove error GE s . Thus 

As shown above the tongue and groove error occurs when the tongue side of an MLC leaf and the corresponding groove side of its neighboring leaf are both used for blocking radiation. Thus the tongue and groove error is related to the groove error of a leaf pair and the tongue error of a neighboring leaf pair. Consider the j th and j 1 th MLC leaf pairs. Let j S be the groove error function of the j th leaf pair and j 1 S be the tongue error function of the j 1 th leaf pair. Then it is clear that the tongue and groove error on these two leaf pairs occurs if and only if the function min g j S T j 1 S is not always zero. See for an illustration of the function min j S T j 1 S . 

Geometrically if the two functions j S and j 1 S are viewed as the polygonal regions enclosed by the y axis and their functional curves see then the tongue and groove error is actually twice the area of the intersection between these two types of regions see . A non empty intersection of such regions i.e. min g j S j 1 S is not always zero occurs in an area where the groove side of the j th leaf pair and the tongue side of the j 1 th leaf pair both block radiation in different B segments of the B segment set S.

Hence if j j 1 S is used to denote the tongue and groove error function between the j th and j 1 th leaf pairs with respect to the B segment set S then 1 2 min 1 .

Let M be an input IM of m rows and n columns of cells. Consider two cells c k j and c k j 1 of M. Note that the cell c k j is aligned to the j th MLC leaf pair and c k j 1 is aligned to the j 1 th leaf pair. Let j S be the groove error of the j th leaf pair with respect to a B segment set S and j 1 S be the tongue error of the j 1 th leaf pair. Observe that the geometric meaning of the value j S k is that j S k a more units of radiation are delivered to c k j 1 than c k j where a is the fixed leakage ratio of the tongue and groove side of an MLC leaf. This is because whenever the groove side of the j th leaf pair is used for blocking radiation the cell c k j is hidden under the j th leaf pair while the cell c k j 1 is exposed. Similarly the geometric meaning of the value j 1 S k is that j 1 S k   more units of radiation are delivered to c k j than c k j 1 . Hence the absolute difference between the two values f j S k j 1 S k is equal to h k j h k 1 where h k j and h k j 1 are the heights of the two cells c k j and c k j 1 in M respectively. See for an illustration . Hence 1 1 Observe that 1 2 min 1 1 . Let 1 1 . Then 1 1 1 . Recall that the tongue or groove error function s is of the following form

In embodiments of the present invention 3 D SLS algorithms for the Elekta MLC may be extended to the Siemens and Varian MLC models. A description will be provided below that extends the 2 D and 3 D SLS algorithms for the Elekta MLC to the Siemens and Varian MLC models. A post processing procedure to enable the extended algorithms to take full advantage of the more flexible constraints of the Siemens and Varian MLCs will also be described below.

Recall that in one embodiment basic 3 D SLS algorithm for the Elekta MLC described above that the MLC constraints are implemented when computing the stitching configurations i.e. the optimal g matchings between any two block sets for consecutive IM columns. Specifically on the Elekta model two blocks may be stitched together if and only if their corresponding intervals have an intersection of a length no shorter than the minimum separation value due to the no interleaf motion and minimum leaf separation constraints.

To extend one basic 3 D SLS algorithm of the present invention to the Siemens and Varian MLC models the way in which two intervals are stitched together in the computation of the optimal g matchings may be determined to reflect the constraints of the Siemens or Varian MLC. Specifically on the Siemens model which has the no interleaf motion constraint two blocks are stitched together if and only if their corresponding intervals have a non empty common intersection. On the Varian model since the interleaf motion is allowed any two blocks can be stitched together.

In one 2 D SLS algorithm of the present invention for the Elekta MLC the MLC constraints are modeled by properly setting the flow capacities of the edges and vertices in the grid graph used. Hence to extend this algorithm to the Siemens and Varian MLCs the capacity assignments of the grid graph are modified. Specifically for the Siemens MLC a flow capacity is assigned of 1 to all vertical edges to enforce the no interleaf motion constraint and an unlimited capacity to all horizontal edges. For the Varian MLC an unlimited capacity is assigned to all vertices and edges. It is clear that these capacity assignments model the 2 D SLS problem well for the Siemens and Varian MLCs. Note that on the Siemens and Varian models the sought x monotone polygons are stored implicitly in the flow graph. To output the actual B segments the resulting flows may be used to guide the extraction of these x monotone polygons as in the Chen et al. I paper.

Using the heuristic scheme described above and the above extensions of the basic 3 D SLS and 2 D SLS algorithms it is possible to obtain a similar general 3 D SLS algorithm for the Siemens and Varian MLCs. But this version of the 3 D SLS algorithm actually generates a set of B segments whose blocks are from consecutive IM columns. As described above know that both the Siemens and Varian models allow B segments of a degenerate polygonal shape i.e. the blocks of a B segment need not be from consecutive IM columns . Hence to take full advantage of this feature of the Siemens and Varian MLCs multiple disjoint B segments are linked into one B segment whenever possible to reduce the number of B segments used as long as the x monotonicity of the resulting B segments is not violated.

Let H be a graph in which each vertex corresponds to exactly one of the B segments computed by the above heuristic 3 D SLS algorithm. For any two vertices in H a left to right directed edge is put if their corresponding B segments can be delivered together as a single MLC aperture on a Siemens or Varian MLC the cost of this edge is the machine delivery error incurred when the two B segments are combined into one. Then it is easy to see that a g path cover with a cost C in the graph H corresponds to a set of g B segments with a machine delivery error C for the Siemens or Varian model.

Since H is a directed acyclic graph it is possible to apply the path covering technique in Boesch et al. Covering the Points of a Digraph with Point Disjoint Paths and Its Application to Code Optimization. Journal of ACM 24 3 192198 1977 the entire contents and disclosure of which is hereby incorporated by reference and transform the minimum cost g path cover problem on H into a minimum cost g cardinality matching problem on a bipartite graph which can be solved by the optimal g matching algorithm described above.

The treatment time and machine delivery error are two crucial factors of a solution i.e. a treatment plan for the SLS problem. The 3 D SLS problem is NP hard In one embodiment the 3 D SLS error correction method of the present invention employs an algorithm for solving the 3 D SLS problem based on a tradeoff between the treatment time and machine delivery error also called the tongue and groove error in medical literature . In one embodiment the 3 D SLS error correction method of the present invention gives the users e.g. physicians the flexibility of specifying a machine delivery error bound and subject to the specified error bound the algorithm computes a treatment plan with the minimum treatment time. In one embodiment the 3 D SLS error correction method of the present invention employs an algorithm that is based on the k weight shortest path minimum g matching and minimum cost flow algorithms. In other embodiments the 3 D SLS error correction method of the present invention uses a 3 D SLS algorithm in popular radiotherapy machine models with various constraints such as the Siemens and Varian systems. In one embodiment the 3 D SLS error correction method of the present invention is based on computing a minimum g path cover on a directed acyclic graph.

In one embodiment the present invention a new geometric algorithm for the 3 D static leaf sequencing SLS problem arising in intensity modulated radiation therapy IMRT a modern cancer treatment technique. The treatment time and machine delivery error are two crucial factors for measuring the quality of a solution i.e. a treatment plan for the SLS problem. In the current clinical practice physicians prefer to use treatment plans with the lowest possible amount of delivery error and are also very concerned about the treatment time. Previous SLS methods in both the literature and commercial treatment planning systems either cannot minimize the error or achieve that only by treatment plans which require a prolonged treatment time. In comparison in one embodiment geometric algorithm is computationally efficient more importantly it guarantees that the output treatment plans have the lowest possible amount of delivery error and the treatment time for the plans is significantly shorter. One solution of the present invention is based on a number of schemes and ideas e.g. mountain reduction block matching profile preserving cutting etc which may be of interest in their own right. Experimental results based on real medical data showed that one algorithm in accordance to one embodiment of the present invention runs fast and produces much better quality treatment plans than current commercial planning systems and well known algorithms in medical literature.

One popular IMRT delivery technique is called the static leaf sequencing SLS or step and shoot approach In delivering a beam shaped by an MLC aperture all cells inside the region of the MLC aperture receive the same integral amount of radiation dose say one unit i.e. the numbers for all such cells are decreased by the same integer value. The IM is done when all cells have a value zero.

Intuitively an IM is a 3 D mountain made of unit cubes see and each MLC aperture is an x monotone polygonal plateau with a height. The goal is to build this mountain by stacking up a set of such plateaus see and . Note that each plateau like the 3 D IM mountain is not one whole rigid object i.e. the mountain is made of unit cubes as well. Thus when two plateaus are stacked together some of the cubes may fall to lower levels as if they were pulled down by gravity. Geometrically the SLS problem is to partition a 3 D IM mountain into a set of such plateaus.

A treatment plan for an input IM consists of a set of MLC apertures with their heights for delivering the IM. Two key criteria are used to measure the quality of an IMRT treatment plan 

 1 Treatment time efficiency Minimizing the treatment time is crucial since it not only lowers the treatment cost of each patient but also increases the patient throughput. The overhead associated with repositioning the MLC leaves to form a different MLC aperture dominates the total treatment time. Thus in one embodiment the method of the present invention seeks to minimize the number of MLC apertures for delivering each IM.

 2 Delivery error accuracy Due to the special geometric shapes of the MLC leaves i.e. the tongue and groove interlock feature an MLC aperture cannot be delivered perfectly. Instead there is a delivery error between the planned dose and actual delivered dose also called the tongue and groove error in medical literature. Minimizing the delivery error is important because according to a recent study the maximum delivery error can be as much as 10 creating underdose overdose spots in the target region. As described in detail below any IM has a lowest amount of delivery error that is always achievable by choosing appropriate MLC apertures.

The 3 D SLS problem has received a great deal of attention in medical physics operations research and computational geometry. However most of the work has focused on minimizing the treatment time closely related to minimizing the set of MLC apertures while ignoring the issue on reducing the delivery error.

Theoretically it has been shown by Chen et al Generalized Geometric Approaches for Leaf Sequencing Problems in Radiation Therapy. In 15th Annual International Symp. on Algorithms and Computation December 2004 hereinafter referred to as the Chen et al. III paper the entire contents and disclosure of which is hereby incorporated by reference that the 3 D SLS problem in general is NP hard and the combinatorial explosion of its structure crucially depends on the height of the input IM i.e. largest value . The Chen et al. III paper gives an algorithm for the 3 D SLS problem with delivery error reduction whose focus is on the trade off between the error and number of MLC apertures used. For example subject to a given error bound it finds an MLC aperture set S such that S is minimized. The algorithm first partitions the given IM mountain into sub IMs i.e. 3 D mountains of a sufficiently small height and then solves the problem separately on each sub IM. A key case called the basic case is to deal with sub IMs of a non uniform height. The algorithm in the Chen et al. III paper for the basic case works as follows. Each 3 D IM mountain is viewed as consisting of a set of mountain slices one slice per column of the IM. Each mountain slice is delivered by an MLC leaf pair which forms a set of 3 D blocks one by one. Such a set of blocks for delivering a mountain slice is called a delivery pattern. To compute an optimal set of MLC apertures for the IM the basic algorithm builds a graph G 1 Generate all distinct patterns for each mountain slice and let every vertex of G correspond to exactly one such pattern 2 for any two patterns for two consecutive mountain slices put left to right directed edges whose weights and costs are determined by the optimal weighted matchings between the blocks of the two patterns. The basic problem is then solved by finding a minimum cost k weight shortest path in the graph G of the Chen et al. III paper.

Although the 3 D SLS algorithm in the Chen et al. III paper produces fairly good results it is not suitable for computing a set of segments without machine delivery error 

 1 When dealing with IMs of large heights the cutting schemes for partitioning an IM into sub IMs of small heights may never achieve the lowest possible amount of delivery error. For example cutting the dose profile curve called a wall of an IM row in at level 4 as in the Chen et al. III paper produces the two walls in and . As shown below the delivery error of an IM M may occur on the common boundary between any two adjacent cells Mand M 1 and the amount of error associated with this pair of cells is proportional to their absolute height difference M M . Note that by using the cutting schemes in the Chen et al. III paper the sum of absolute height differences at position e in and is 7 while that at position e in is only 1 thus the cutting adds more error to position e in and .

 2 The number of distinct patterns for delivering each mountain slice of an IM is a factorial function of its height. Thus the size of the graph G used can be very large which may significantly impact the running time of the 3 D SLS algorithm in the Chen et al. III paper. Hence it is highly desirable to reduce the size of G by discarding unnecessary patterns without sacrificing the optimality of the solution.

 3 Computing optimal bipartite matchings between the blocks of two patterns for two consecutive mountain slices is a very frequent operation in 8 performed for each edge of G . In the Chen et al. III paper such matchings are computed by the successive shortest path method for a general bipartite graph. It would be beneficial to develop a more efficient matching algorithm using the geometry of the pattern blocks.

Clinically physicians may prefer to use MLC apertures for IMs with the lowest possible error. As described below when partitioning an IM into sub IMs and MLC apertures any new error introduced will result in a treatment plan with an error larger than the lowest possible amount of delivery error. Hence a key here is to develop a new IM partition algorithm that incurs no new error.

In one embodiment the present invention provides a 3 D static leaf sequencing without new error SLSWNE method. Given an IM the method finds a set S of MLC apertures for delivering the IM such that 1 no new error is introduced by using S and 2 S is minimized. A key special case of the 3 D SLSWNE problem called the basic 3 D SLSWNE problem is also important. This case is similar to the general 3 D SLSWNE problem except that the height of each of its MLC apertures is 1. Note that for the general 3 D SLSWNE problem the height of each MLC aperture can be any integer 1. It is helpful to note that for the 3 D SLSWNE problem two IM mountains A and B are computationally equivalent if A q B for some integer q 2. This property called the shrinkability is due to the fact that two such IMs can be delivered by the same set of MLC apertures with different heights. In one embodiment the method of the present invention employs an algorithm for the 3 D SLSWNE problem based on a number of novel ideas. First in one embodiment the present invention provides a new scheme called mountain reduction for reducing a tall 3 D IM mountain to a small set of low sub IM mountains that incur no new error. The mountain reduction scheme has two important operations cutting and shrinking. In one embodiment the cutting of the present invention is profile preserving An IM M is cut into two IMs qB and C i.e. M q B C where q 2 is a chosen integer such that qB and C have the same profile as M. For the purposes of the present invention two IMs M and M have the same profile if for all i j M M M M and M M M M 

The profile preserving cutting adds no new error to the resulting IMs qB and C since they keep the same sum of absolute height differences. Instead of cutting an IM mountain into a plateau and a mountain and shrinking the plateau as in the Chen et al. III paper the cutting produces qB and C so that qB can be shrunk into B i.e. an algorithm of the present invention works on B instead of qB see and . Also in one embodiment of the present invention C has a small height so that the basic 3 D SLSWNE problem may be solved on C. The cutting method hinges on an optimal linear time algorithm for this profile preserving mountain cutting problem described below which can be formulated as a bottleneck shortest path BSP problem on a DAG G of a pseudo polynomial size. By exploiting interesting properties of this DAG it is possible to compute the BSP by searching only a small linear size portion of G . For the basic 3 D SLSWNE problem it is possible to make two major improvements. First based on new geometric observations it is possible to prove that only a small subset of patterns needs to be considered for delivering each mountain slice. More precisely all blocks of a pattern should satisfy the so called canonical condition i.e. no block is contained in the interior of another block. This significantly decreases the number of patterns used for each mountain slice and hence the size of the graph G . Second a much better bipartite block matching algorithm is achieved. The minimum weight bipartite matching problem on blocks of canonical patterns modeled by a bipartite graph of n vertices and m edges may be formulated as a shortest path problem in a special weighted grid graph G. By exploiting the properties of this grid graph it is possible to compute a shortest path in Gwithout explicitly building and searching the whole graph G in O m n time improving the previous O n m n log n time matching algorithm in the Chen et al. III paper. For the special case when the blocks can be matched without any new error it is possible to give an optimal O n time matching algorithm on such bipartite graphs.

By combining efficient solutions for the mountain reduction scheme and the basic 3 D SLSWNE problem in one embodiment the method of the present invention obtains an effective heuristic 3 D SLSWNE algorithm. Experiments and comparisons based on real medical data show that the algorithm is efficient and produces good quality treatment plans.

A mountain reduction scheme used in one embodiment of the present invention will now be described. The objective of the mountain reduction is to reduce a 3 D IM mountain of an arbitrary height into a small number of 3 D sub IM mountains of sufficiently small heights without incurring any new error in the process. Each sub IM thus resulted may then be handled by the basic 3 D SLSWNE algorithm as described in more detail below.

The given IM is first cut into two IMs of smaller heights without incurring any new error. The new IMs are then recursively cut until all resulting IMs are of a sufficiently small height say 5 . At the heart of this recursive partition procedure is the following profile preserving mountain cutting problem Given an IM A and an integer q 2 partition A into two IMs qB and C i.e. A q B C in a profile preserving manner such that the height of C is minimized. Since qB is shrinkable to B the resulting IMs B and C have much smaller heights than the original IM A.

Some useful properties of the delivery error will now be described. For any two vectors a a a . . . a and b b b . . . b in R the binary relation is define as as a b if and only if a bfor every i 1 2 . . . n. Similarly a b if and only if a bfor every i 1 2 . . . n.

In one embodiment of the present invention the delivery error of an IM is closely related to its error norm. For example when an IM A can be delivered as a single MLC aperture i.e. when no new error is added by the delivery of A the delivery error for A is precisely A where 0 is a machine dependent constant.

Property iv implies that an IM A is best delivered with an error of a A . It is possible to say that an MLC aperture set S for delivering A incurs additional error if the delivery error of S 

Constraint 3 means that A B and C are all of the same profile. Thus geometrically the PPMC problem aims to cut a 3 D IM mountain A into two 3 D IM mountains qB and C in a profile preserving manner such that the height of C is minimized.

Observe that in the PPMC problem the rows of the IMs i.e. the walls are completely independent to each other. Hence the PPMC problem can be reduced to the following optimization problem called the profile preserving wall cutting PPWC problem Given a row vector a a a . . . a Zof an IM mountain which for the purposes of the present invention is called a wall and an integer q 2 seek

The PPWC problem may be formulated as a bottleneck shortest path BSP problem in a DAG G V E of a pseudo polynomial size and then present a simple optimal O n time PPWC algorithm by exploiting a number of special properties of the DAG G. is an example of G and and illustrate 1a 1b 1c and 1 d of Lemma 6 described below.

Given an instance of the PPWC problem a a a . . . a Zand an integer q 2 a directed graph G V E is defined for a and q as follows. gives an example of such a graph G.

The vertices of G are defined as V s t v 1 i n 0 j a q . Let Ldenote the list of all vertices in the i th layer of the graph G i.e. L v V 0 j a q . Then besides s and t G has n layers of vertices. For each vertex v the vertex is associated with an integer pair

Obviously G V E is a DAG with vertex weights. Each s to t path p in G is of the form of p s v v . . . v t further p corresponds to a feasible solution b j j . . . j and c a jq a jq . . . a jq for the PPWC problem and vice versa. For any s to t path p the weight of p is defined as w p max c u u V u is on p. Then an optimal solution for the PPWC problem corresponds to an s to t path p in G such that w p is minimized. Thus the PPWC problem can be formulated as a bottleneck shortest path problem on the DAG G.

The DAG G thus defined has O n h q 1 vertices and O n h q 1 edges where h maxa. An s to t bottleneck shortest path in G can be computed in O V E O n h q 1 time in a topological sort fashion. It should be noted that this algorithm though straightforward takes a pseudo polynomial time and can be quite inefficient when h is much larger than q.

For any vertex v V define In v w w v E and Out v w v w E. For a subset UV denote by Max U the vertex in U that has the largest b index. Let V v V there is a path from s to v in G and V v V there is a path from v to t in G.

The PPWC algorithm hinges on a set of interesting observations on the DAG G defined above as stated in Lemma 6 below.

Lemma 6 6a For any vertex vin layer Li of G the vertex set Out vi j or In vi j if non empty consists of vertices with consecutive b indices i.e. forming an interval in layer L 1 or L of G. Moreover a description of Out vi j or In vi j can be computed in O 1 time. 6b For any vertices v j v j v k and v kof G j

The PPWC algorithm computes two sets of vertices uand win G i 1 2 . . . n where u Max L V is the vertex in layer Lwith the largest b index that is reachable by s and w Max L VV is the vertex in layer Lwith the largest b index that lies on some s to t path in G. It is shown below that the sought s to t bottleneck shortest path is p s w w . . . w t.

In one embodiment of the present invention the optimal PPWC Algorithm consists of two phases. The first phase goes from Lto L and determines u u . . . u one by one. Since s is connected to each vertex in L it is possible to start at u v . To determine ui from u consider two possible cases. Case 1 Vertex uhas no outgoing edge i.e. Out u then u v see . This is because there is a j 

The second phase goes from Lto L and determines w w . . . w one by one. Since there is an edge from each vertex in layer Lto let w u. To determine wfrom w consider two possible cases. Case 1 There is an edge connecting uand w then clearly w u see FIG. c . Case 2 No edge connects uand w then w Max In wi see . Note that in this case umust have a bigger b index than some vertex in In wi since wis reachable by s. By 6a of Lemma 6 umust have a bigger b index than Max In w . Hence there is a path from s to Max In w by 6c of Lemma 6 . If w Max In w then wmust have a bigger b index than Max In w and w In w . But then an s to t path passing through wwould cross the edge Max In w w making w In w by 6b of Lemma 6 a contradiction.

Therefore p s w w . . . w t is the sought s to t bottleneck shortest path. Note that w w E holds for both Cases 1 and 2 of the second phase. Thus p is indeed an s to t path in G. Since w Max L V V for any path p s v v . . . v t in G b w b v j or equivalently c w c v j holds for each i 1 2 . . . n. Hence w p w p .

Note that although it is possible to formulate the PPWC problem as a bottleneck shortest path problem on the DAG G G G is not explicitly constructed and is merely a conceptual structure to help with the description of the of the algorithm. It is easy to show that the two phases take totally O n time.

Theorem 4. Given a vector wall a a a . . . a Zand an integer q 2 the PPWC problem on the vector a can be solved in an optimal O n time.

Theorem 5. Given an m n 3 D IM mountain A a Zand an integer q 2 the PPMC problem on A can be solved in an optimal O n time.

In one embodiment of the present invention the mountain reduction scheme is based on the PPMC algorithm described above. Given a 3 D IM A of an arbitrary height one chooses an integer q 2 as the divisor and apply the PPMC algorithm to cut A into two IMs qB and C i.e. A qB C . After shrinking qB to B the result is two IMs B and C of smaller heights. The resulting IMs are then recursively cut and shrink until they are all of a sufficiently small height say 5 . Since the cutting and shrinking are profile preserving the input IM A is reduced to a set of IMs of small heights called sub IMs without incurring any new error.

Now the procedure for choosing a divisor q for each cut will be described. Note that in some embodiments of the present invention it is desirable to keep the number of sub IMs produced by the mountain reduction small. For each cut in the above recursive process several integers are tried as the candidates for q and a set of values for q is chosen that together yield the smallest number of sub IMs at the end of the recursive process based on dynamic programming.

The algorithm for the basic 3 D SLSWNE problem i.e. partitioning a given 3 D IM of a small height say 5 into a minimum set of MLC apertures of a unit height each such that no new error is added. Such an IM may be produced by the mountain reduction scheme previously described will now be described.

In one embodiment of the present invention the 3 D SLSWNE algorithm follows the same framework as described in the Chen et al. III paper but with several key changes. 1 Only a small subset of patterns are considered for each mountain slice such that all blocks of a pattern to satisfy the so called canonical condition such patterns are sufficient to guarantee the optimality see below . 2 New algorithms are given for the block matching problem by exploiting the canonical condition see below . 3 Instead of computing a minimum cost k weight shortest path as in the Chen et al. III paper an optimal MLC aperture set is obtained by computing a shortest path in a graph.

Let P I 1 i k be a delivery pattern of size k for an IM column of length m in which the i th block of a unit height is specified by a close interval I a b a b 0 1 . . . m i.e. P can be used to deliver the mountain slice of the IM column . P is called a canonical pattern if it satisfies the canonical condition For any two Iand Iin P i j neither a b a b nor a b a b no interval is contained in the interior of the other interval . Clearly the endpoints of the blocks of a canonical pattern P can be ordered such that a a . . . aand b b . . . b. Moreover this ordering can be easily obtained in linear time from the corresponding mountain slice description.

Lemma 7. For the basic 3 D SLSWNE problem it is sufficient to use only the canonical patterns for each column Cof the input IM M to compute an optimal MLC aperture set for M.

By Lemma 7 it is possible to use only canonical patterns in computing an optimal basic 3 D SLSWNE solution. Note that canonical patterns can be defined by adding Steiner points onto each IM column as described in the Chen et al. I and the Chen et al. III papers. Experiments indicate that only O 1 Steiner points are practically sufficient for each IM column. Thus in one embodiment of the present invention the 3 D SLSWNE algorithm uses only a polynomial number of canonical patterns.

The modeling of the block matching problems will now be described followed by the algorithms for the block matching problems 

First the definition of the block matching problem and its meaning will be described. Let U I I . . . I U I I . . . I be sorted canonical pattern for the j th j 1 th column of an IM T an interval I a b I a b specifies a unit height block of U U . Let G U U E be a bipartite graph and with E I I a b a b . Define the weight of a vertex v a b U U as w v a b and the weight of an edge e I I E as w e a a b b . For a matching M in G let its weight

Note that in general Gis not a complete bipartite graph due to the MLC constraints i.e. only blocks with non empty interior overlapping can be matched. Recall that the error associated with a pair of horizontally consecutive IM cells is proportional to the absolute height difference of the cells. Hence w v or w e thus defined captures the error incurred by an unmatched block or a pair of matched blocks see and and w M represents the total error incurred by the matching M. The block matching problem seeks among all matchings that incur the minimum error the one with the maximum cardinality. Of course the embodiment of the present invention be currently described the SLSWNE problem desires zero new error.

The error incurred by a matching depends on the patterns U and U involved. For any two patterns that deliver for the j th and j 1 th columns of the IM T respectively a matching between the blocks of the two patterns must incur an error whose lower bound is

The BMWNE problem is closely related to the BM problem. Let M be a solution for the BM problem on the graph G. If M is without new error then it is also a solution for the BMWNE problem otherwise no solution exists for the BMVWNE problem on G.

Below is described an algorithm for the BM problem in accordance with one embodiment of the present invention. One key observation is that because both the sets of blocks involved are canonical the BM problem has an optimal substructure which leads to a formulation of the BM problem as a shortest path problem on a special weighted grid graph. The BM problem on Gis in fact a minimum cost matching problem. Simply assign each vertex v a cost of C v w v 1 assign each edge e a cost of C e w e 1 and define the cost of a matching M as C M C M C e C v . The C M w M M p q and the BM problem becomes that of finding a matching M such that C M is minimized. The graph Gdefined above has useful properties.

Lemma 8. 8a Gis a convex bipartite graph i.e. for any k or l the set N k l I I E or N l k I I E if non empty consists of consecutive indices say from c or c to d or d . Further the sequences c d c and d are all increasing. 8b Given I I . . . Iand I I . . . I the description of all the sets N 1 N 2 . . . N p and N N . . . N can be computed in O p q time. 8c For any k

By 8c of Lemma 8 it is sufficient to consider matchings that have no crossing edges. This implies the following optimal substructure of the BM problem.

Lemma 9. Let Hbe the subgraph of Ginduced by the vertex sets I I . . . I and I I . . . I for k 1 2 . . . p and l 1 2 . . . q Let Mbe a minimum cost matching in Hand e I I . 1. If e M then M e is a minimum cost matching in H. 2. If e M then I or I is unmatched then Mis a minimum cost matching in H or H .

Let cdenote the cost of M. Then Lemma 9 implies the following recursive formula c 0 0 if 1 0 if 0 and 0 if 0 and 0 min if 1 0 and or min if 1 0 and 

Hence it is possible to transform the BM problem to a shortest path problem on a directed grid graph G see and . Each vertex gin Gcorresponds to the BM problem on H. The length of a horizontal or vertical edge g g or g g is C I or C I the length of a diagonal edge g g is C I I . Note that a diagonal edge g g is in Gif and only if I I E G . Let SPbe a shortest g to g path in G. Clearly c length SP each diagonal edge g g on SPcorresponds to the edge I I in the matching M.

It will now be shown how to compute SPin G. Observe that if every grid cell of Gis colored that contains a diagonal edge then by Lemma 8 the colored region consists of a set of x y monotone rectilinear polygons which can be connected by line segments on the grid to form a single degenerate x y monotone rectilinear polygon R see . In one embodiment of the present invention It is sufficient to compute SP q in R. This is because it is possible to always push the portion of an optimal g to gpath that lies outside R towards R until it coincides with R s boundary without changing the length of the path.

Determining the region R in the Ggrid is essentially done by computing the sets N 1 N 2 . . . N p as defined in Lemma 8 which takes O p q time. The subgraph of Ginduced by R is a DAG of size O p q E G . Thus it follows that SPcan be computed in O p q E G time.

Theorem 6. The BM problem on the bipartite graph G U U E induced by two canonical patterns U and U for any two IM columns can be solved in O U U E time.

Note that in one embodiment of the present invention the 3 D SLSWNE algorithm clearly relies on the BMWNE solution while the BM algorithm is useful to the SLS algorithm described in the Chen et al. III paper for a tradeoff between the MLC aperture number and error . Although the BMWNE problem can be solved by the BM algorithm described above due to the relation between these two problems a faster BMWNE algorithm is possible.

Recall that an MLC aperture set incurs no new error if and only if each of its MLC apertures is profile preserving. A matched block pair or an unmatched block may be viewed as an MLC aperture. Hence the BMWNE problem is to seek a maximum cardinality matching such that all matched block pairs and unmatched blocks are profile preserving. A matched block pair or an unmatched block is admissible if the corresponding MLC aperture is profile preserving. A new bipartite graph Gis defined where G U U E where E I I E I I is admissible and let the cost C v 1 or for each admissible or inadmissible vertex v and C e 1 for each edge e E . Then the BMWNE problem can be viewed as a minimum cost matching problem on G .

It can be can proven that G has all the properties stated in Lemmas 8 and 9 and some additional properties on its edge structures also the same recursive formula for computing capplies. Thus the BMWNE problem can be solved in the same spirit as the BM algorithm i.e. it is possible to transform the BMWNE problem on G to computing a shortest path SPin a directed grid graph G see . A shortest path SPin G can be computed in O p q time.

Theorem 7. The BMWNE problem on the bipartite graph G U U E induced by two canonical patterns U and U for any two IM columns of size m each can be solved in O U U m time.

The error control method of the present invention may be used with various segmentation and partition methods including the partition and segmentation methods described in concurrently filed U.S. patent application Attorney Docket No. UNND 0064 UT1 entitled Segmentation Algorithmic Approach to Step and Shoot Intensity Modulated Radiation Therapy the entire contents and disclosure of which are hereby incorporated by reference.

In one embodiment the present invention provides a method comprising the following steps a partitioning an intensity modulated beam into a set of sub IMBs and b partitioning the sub IMBs into segments wherein steps a and b introduce no machine delivery error. In one embodiment of the present invention step a further comprises the following steps c choosing a divisor q d splitting an intensity modulated beam A into two sub IMBs B and C such that A qB C where the splitting does not introduce machine delivery error and e recursively partitioning the two sub IMBs B and C until there is no sub IMB whose maximum height is more than 5.

In one embodiment of the present invention the divisor q further satisfies the following relationship 2 q I 2 where Iis the maximum entry in the intensity modulated beam. In one embodiment of the present invention step d further comprises the following steps f splitting every row of intensity modulated beam A into two sub rows and g extracting the two sub IMBs B and C from the sub rows generated. In one embodiment of the present invention step f comprises of the following steps h constructing a directed graph based on each row of intensity modulated beam A i determining a bottleneck shortest path in the directed graph 0 extracting the sub rows from the directed graph based on the bottleneck shortest path determined in step i to thereby split the row. In one embodiment of the present invention step h further comprises the following steps k constructing an empty directed graph l for each grid cell in the row adding a layer of 1 k q first vertices to the directed graph where k is the intensity level at the grid cell j assigning each vertex of said vertices with two integers a weight and an index k adding a source vertex and a sink vertex to the directed graph l adding edges to the directed graph from the source vertex to every vertex of said first vertices in the first layer and from every vertex of said first vertices in the last layer to the sink vertex and m adding edges between any two vertices in the directed graph if the vertices respectively lie in adjacent layers and if the associated integers of one vertex are all larger than or equal to the corresponding integers of the other vertex.

In one embodiment of the present invention step b comprises the following steps c generating a canonical delivery option for each set of field opening endpoints for a plurality of intensity modulated beam columns of the sub IMB d for every two consecutive intensity modulated beam columns determining a maximum matching with no machine delivery error between the canonical delivery options of the intensity modulated beam columns and e extracting the segments for the sub IMB based on the matched field openings of the canonical delivery options in an increasing order of consecutive intensity modulated beam columns to thereby partition the sub IMB. In one embodiment of the present invention in step c only one set of left and right field opening endpoints is generated for each intensity beam column. In one embodiment of the present invention in step c more than one set of left and right field opening endpoints is generated for each intensity beam column. In one embodiment of the present invention the matched field openings have no interdigitation. In one embodiment of the present invention the method further comprises choosing a number m of Steiner points for forming the sets of field opening endpoints and wherein each unique canonical delivery option contains at most m Steiner points for each set of field opening endpoints. In one embodiment of the present invention step d further comprises the following steps f constructing a directed graph based on the canonical delivery options of the intensity modulated beam columns g determining a shortest path in the directed graph constructed in step c and h extracting the optimal matching between the canonical delivery options from the shortest path determined in step d . In one embodiment of the present invention step c further comprises f constructing a directed graph of a grid of p 1 rows and q 1 columns of vertices wherein p and q are the numbers of leaf openings in the left and right canonical delivery options respectively g for any vertex pair u and v wherein u lies in the i th row and j th column and v lies in the i th row and j 1 th column in the directed graph constructed in step f adding an edge to the directed graph from u to v and assigning a weight x 1 to the edge wherein x is the length of the j th leaf opening in the right canonical delivery option h for any vertex pair u and v wherein u lies in the i th row and j th column and v lies in the i 1 th row and j th column in the directed graph constructed in step f adding an edge to the directed graph from u to v and assigning a weight y 1 to the edge wherein y is the length of the i th leaf opening in the left canonical delivery option and i for any vertex pair u and v wherein u lies in the i th row and j th column and v lies in the i 1 th row and j 1 th column in the directed graph constructed in step f if the i th leaf opening in the left canonical delivery option and the j th leaf opening in the right canonical delivery option have non empty interior overlapping adding an edge to the directed graph from u to v and assigning a weight z 1 to the edge wherein z is the symmetric difference between the two leaf openings.

In one embodiment the present invention provides a method comprising the following steps a recursively partitioning an intensity modulated beam into plateaus and b partitioning the plateaus into segments wherein step a comprises determining a tradeoff between machine delivery error and the number of segments into which the plateaus will be partitioned in step b . In one embodiment of the present invention step b comprises the following the steps c constructing a directed graph based on the plateaus d determining a series of minimum cost flows in the directed graph e determining a tradeoff between the number of segments and machine delivery errors based on the determined minimum cost flows and f extracting the segments from the directed graph based on the tradeoff determined in step e to thereby partition the plateaus. In one embodiment of the present invention step c comprises the following steps g constructing a directed graph based on intensity modulated beam grids of the plateaus of an intensity modulated beam wherein vertices of the directed graph include all intersection points of the intensity modulated beam grids of the plateaus that are either part of a peak or an interior of a polygon corresponding to the intensity modulated beam and wherein the edges of the directed graph include those edges of the plateaus whose end points are graph vertices in the directed graph h for all graph vertices corresponding to the same peak direction adding either a source vertex or sink vertex to the directed graph i adding edges to the directed graph from the source vertex or sink vertex to respective peak vertices j assigning a unit flow capacity to each graph vertex and edge of the directed graph and k to each edge that is vertical assigning a cost that is equal to the geometric length of the vertical edge and to each edge that is horizontal a cost of zero. In one embodiment of the present invention step g comprises the following steps l extracting connections between a left peak and a right peak of the polygon based on the minimum cost flow k eliminating any remaining unconnected peaks using only horizontal edges and l extracting resulting segments from the directed graph to thereby partition the plateaus. In one embodiment of the present invention for an edge involving a left peak vertex the direction of the edge is away from the left peak wherein for an edge involving a right peak vertex the direction of the edge is toward the right peak. In one embodiment of the present invention the direction of a horizontal edge that does not involve any peak vertex is from left to right. In one embodiment of the present invention the direction of a vertical edge that does not involve a peak vertex is bidirectional In one embodiment of the present invention for all left peak vertices a source vertex is added to the directed graph. In one embodiment of the present invention for all right peak vertices a sink vertex is added to the directed graph. In one embodiment of the present invention the minimum cost flow in the directed graph yields a maximum set of mutually disjoint paths. In one embodiment of the present invention the intensity modulated beam comprises a plurality of z posts and wherein step a comprises the following steps c choosing an intensity level d wherein 1 I wherein Iis the maximum intensity level of the intensity modulated beam d selecting all z posts having a height of at least d to form a set of selected z posts e cutting each selected z post whose height is d at level d to form a plateau of z posts of height d f removing the plateau of z posts from the intensity modulated beam and g recursively partitioning any remaining portion of the intensity modulated beam until there is no remaining portion of the intensity modulated beam. In one embodiment of the present invention step g comprises repeating steps c d e and f on any remaining portion of the intensity modulated beam until there is no remaining portion of the intensity modulated beam.

In one embodiment of the present invention d is a function of the maximum intensity level I. In one embodiment of the present invention 

In one embodiment of the present invention step c comprises the following steps d generating a canonical delivery option for each set of field opening endpoints for a plurality of intensity modulated beam columns of the sub IMB e for every two consecutive intensity modulated beam columns determining a series of minimum cost g matchings between the canonical delivery options of the intensity modulated beam columns f determining the tradeoff curves based on the g matchings and g extracting the segments for the sub IMB based on the matched field openings of the canonical delivery options from the determined g matchings in an increasing order of consecutive intensity modulated beam columns to thereby partition the sub IMB. In one embodiment of the present invention in step d only one set of left and right field opening endpoints is generated for each intensity beam column. In one embodiment of the present invention in step d more than one set of left and right field opening endpoints is generated for each intensity beam column. In one embodiment of the present invention the matched field openings have no interdigitation and minimum leaf separation. In one embodiment of the present invention the matched field openings have no minimum leaf separation and no interdigitation. In one embodiment of the present invention the matched field openings have interdigitation. In one embodiment of the present invention the method further comprises choosing a number m of Steiner points for forming the sets of field opening endpoints and wherein each unique canonical delivery option contains at most m Steiner points for each set of field opening endpoints.

In one embodiment the present invention provides a method comprising the following steps a recursively partitioning an intensity modulated beam into plateaus b partitioning the plateaus into segments wherein step a comprises determining a tradeoff between machine delivery error and the number of segments into which the plateaus will be partitioned in step b and c linking the segments to thereby reduce the number of segments. In one embodiment of the present invention step a further comprises the following steps d recursively partitioning an intensity modulated beam into plateaus and e partitioning the plateaus into segments wherein step a comprises determining a tradeoff between machine delivery error and the number of segments into which the plateaus will be partitioned in step b . In one embodiment of the present invention step d further comprises partitioning the intensity modulated beam into a sub IMB and wherein the method further comprises the following step f determining the tradeoff curve between the number of segments and error for the sub IMB. In one embodiment of the present invention step c further comprises the following steps d constructing a directed graph H based on the segments extracted e determining a minimum cost g path cover on the directed graph H f extracting the final segments based on the g path cover on H therefore segmenting the entire intensity modulated beam. In one embodiment of the present invention step d further comprises the following steps g introducing a vertex for each segment h introducing an edge between any two segments that can be delivered together and i assigning a cost to each edge that is the equal to the amount of machine delivery error introduced when delivering the two segments together. In one embodiment of the present invention in step h the two segments have no minimum leaf separation and no interdigitation if for Siemens MLC. In one embodiment of the present invention in step h the two segments have interdigitation.

In one embodiment the present invention provides a method comprising the following steps a partitioning an intensity modulated beam into a set of sub IMBs b partitioning the sub IMBs into segments wherein steps a and b introduce no machine delivery error and c linking the segments to thereby reduce the number of segments. In one embodiment of the present invention step b further comprises the following steps d constructing a directed graph H based on the segments extracted e determining a minimum cardinality g path cover on the directed graph H and f extracting the final segments based on the g path cover on H therefore segmenting the entire intensity modulated beam. In one embodiment of the present invention step d further comprises the following steps g introducing a vertex for each segment and h introducing an edge between any two segments that can be delivered together for any two segment that can be delivered together. In one embodiment of the present invention in step h the two segments have no minimum leaf separation and no interdigitation. In one embodiment of the present invention in step h the two segments have interdigitation.

In one embodiment the present invention provides a method comprising the following steps a generating a canonical delivery option for each set of field opening endpoints for a an intensity modulated beam b for every two consecutive intensity modulated beam columns of the intensity modulated beam determining a series of minimum cost g matchings between the canonical delivery options of the intensity modulated beam columns c determining the tradeoff curves based on the g matchings and d extracting the segments for the intensity modulated beam based on the matched field openings of the canonical delivery options from the determined g matchings in an increasing order of consecutive intensity modulated beam columns to thereby partition the intensity modulate beam.

In one embodiment the present invention provides a method comprising the following steps a generating a canonical delivery option for each set of field opening endpoints for a an intensity modulated beam b for every two consecutive intensity modulated beam columns of the intensity modulated beam determining maximum matchings with no machine delivery error between the canonical delivery options of the intensity modulated beam columns and c extracting the segments for the intensity modulated beam based on the matched field openings of the canonical delivery options from the determined matchings in an increasing order of consecutive intensity modulated beam columns to thereby partition the sub IMB.

To examine the behavior and performance of several 3 D SLS algorithms of the present invention the algorithms were implemented them using C on the Linux systems and conducted extensive experimental studies using real medical data obtained from the Department of Radiation Oncology University of Maryland School of Medicine.

For example a basic 3 D SLS algorithm with error control was implemented for the Elekta model and experimented with the program using about 120 clinical IMs. Note that most of the IMs used in current cancer patient treatments on the Elekta system have a maximum height around 5 and on such IMs the basic 3 D SLS algorithm usually produces solutions that are very close to the optimal ones for the general 3 D SLS problem. Moreover the 3 D SLS algorithm according to one embodiment of the present invention runs reasonably fast. Table 1 of shows the output results of a basic 3 D SLS program according to one embodiment of the present invention with tongue or groove error control on some clinical intensity maps. In Table 1 denotes the number of B segments denotes the tongue or groove error in cm and t denotes the estimated total treatment time in minutes for delivering the corresponding SLS plan on an Elekta SL20 series linear accelerator the estimations are based on a typical machine setup time on an Elekta SL20 MLC system . All execution times are collected on a laptop computer equipped with a 1.7 GHz Mobile Pentium 4 CPU 512 MB memory and 266 MHz frontside bus.

3 D SLS algorithms of the present invention were also compared with the current most popular commercial planning system CORVUS which also showed significant improvements. For instance on the same IM for to produce a plan with the same error as the one for CORVUS would need 52 B segments in contrast to the 14 B segments computed by the SLS program in accordance with one embodiment of the present invention an almost 4 fold improvement .

As another example the performance of the 3 D SLS algorithms of one embodiment of the present invention without error control for the Siemens and Varian MLCs were compared with the well known benchmark leaf sequencing algorithm by Xia and Verhey41 which does not consider error control . The results are given in Tables 2 and 3 of respectively. Table 2 shows SLS vs. Xia and Verhey s algorithm on a Siemens model and Table 3 shows SLS vs. Xia and Verhey s algorithm on a Varian model. For this comparison the SLS algorithms of the present invention outperform Xia and Verhey s algorithm 41 by a factor of about 8 on the Siemens model and a factor of about 7 on the Varian model.

An SLSWNE algorithm of the present invention was implemented using C on Linux systems and experimented with it on about 80 IM sets obtained from the Dept. of Radiation Oncology of the Univ. of Maryland Medical School. Comparisons were conducted with CORVUS 5.0 one of the most popular commercial leaf sequencing systems a well known algorithm by Xia and Verhey described in Xia et al. MLC Leaf Sequencing Algorithm for Intensity Modulated Beams with Multiple Static Segments. Med. Phys. 25 14241434 1998 the entire contents and disclosure of which is hereby incorporated by reference and the previous SLS algorithms described in the Chen et al. I and Chen et al. III papers.

Specifically the following aspects of these algorithms were examined 1 the number of MLC apertures 2 the execution time and 3 the amount of delivery error. Experimental results showed that the SLSWNE algorithm software in accordance with one embodiment of the present invention compares very favorably with the previous approaches. In one embodiment of the present invention the SLSWNE algorithm software can reduce the number of MLC apertures by about 50 when comparing with the CORVUS 5.0 system and about 30 when comparing with Xia and Verhey s algorithm. Note that the algorithm as presented in Xia et al. does not do error reduction and hence its treatment plans may incur additional delivery error. Table 4 of gives some comparison results on the number of MLC apertures execution time and error of these algorithms.

Table 4 provides comparison results on a head and neck cancer prescription. The dose prescription has 7 IMs the size of each IM is 25 40 and the maximum height is 5. The listed numbers are the numbers of the MLC apertures computed by the algorithms software for each IM. The error is the amount of new error introduced by the set of MLC apertures computed by the error volume percentage formula given in the Chen et al. III paper and is the average percentage error over the 7 IMs. Note that SLSdescribed the Chen et al. I paper only minimizes the number of MLC apertures but does not reduce error SLSdescribed in the Chen et al. III paper computes a tradeoff between the number of MLC apertures and amount of error in Table 4 the number of MLC apertures shown for SLSon each IM of a height 5 is when the error is driven to zero by SLS .

Comparing with the SLS algorithm without error reduction in the Chen et al. I paper SLS1 in Table 4 the SLSWNE algorithm computes about the same number of MLC apertures. Comparing with the SLS algorithm with error reduction in the Chen et al. III paper SLS2 in Table 4 the SLSWNE algorithm produces about the same number of MLC apertures in a significantly faster execution time. As mentioned above previous IM partition methods may add new delivery error. The SLSWNE algorithm according to one embodiment of the present invention uses the mountain reduction scheme that incurs no new error thus the MLC apertures that it is possible to obtain are always error free . To demonstrate this advantage of the SLSWNE algorithm experiments were conducted on IMs of height 20. Table 5 of in shows some comparison results in which the number of MLC apertures is computed by the SLSWNE algorithm in accordance with one embodiment of the present invention. The error is taken from the tradeoff curve computed by the SLS algorithm in the Chen et al. III paper when setting the number of MLC apertures exactly the same as what the SLSWNE algorithm according to one embodiment of the present invention outputs. Clearly the MLC apertures computed by the SLS algorithm in the Chen et al. III paper are not error free for IMs with large heights.

Table 5 provides comparison results on a head and neck cancer prescription The dose prescription has 7 intensity maps the size of each IM is 25 40 and the maximum height is 20. The number of MLC apertures produced by the SLS algorithm in the Chen et al. III paper for each IM is chosen to be exactly the same as the corresponding number of MLC apertures output by SLSWNE algorithm according to one embodiment of the present invention in order to show the additional error percentage incurred by the SLS algorithm in the Chen et al. III paper.

Proofs of various algorithms lemmas theorems etc. may be found in the article Chen et al. Generalized Geometric Approaches for Leaf Sequencing Problems in Radiation Therapy 2004 and in Chen et al. Mountain Reduction Block Matching and Medical Applications 2005 the entire contents and disclosures of which are hereby incorporated by reference.

All documents patents journal articles and other materials cited in the present application are hereby incorporated by reference.

Although the present invention has been fully described in conjunction with several embodiments thereof with reference to the accompanying drawings it is to be understood that various changes and modifications may be apparent to those skilled in the art. Such changes and modifications are to be understood as included within the scope of the present invention as defined by the appended claims unless they depart therefrom.

