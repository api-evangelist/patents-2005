---

title: Indexing and searching speech with text meta-data
abstract: An index for searching spoken documents having speech data and text meta-data is created by obtaining probabilities of occurrence of words and positional information of the words of the speech data and combining it with at least positional information of the words in the text meta-data. A single index can be created because the speech data and the text meta-data are treated the same and considered only different categories.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07809568&OS=07809568&RS=07809568
owner: Microsoft Corporation
number: 07809568
owner_city: Redmond
owner_country: US
publication_date: 20051108
---
The discussion below is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

There exists now an overwhelming amount of data of various types being produced exchanged and stored. This has resulted from the computing power and connectivity bandwidth now available together with the relatively inexpensive storage costs for the data. Consequently the ability to search through the data and find relevant information is emerging as a key application as more and more data is being saved.

However not all data can be accessed easily. Although text data can be indexed and thus searched relatively easily speech data being commonly untranscribed is not in a form readily searchable. Manually transcribing speech is expensive both in time and computing resources and also raises privacy concerns. Nevertheless as storage becomes yet ever cheaper more and more useful untranscribed speech data will be stored thereby increasing the demand or need to search through this data.

This Summary is provided to introduce some concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. In addition the description herein provided and the claimed subject matter should not be interpreted as being directed to addressing any of the short comings discussed in the Background.

An index for searching spoken documents having speech data and text meta data is created by obtaining probabilities of occurrence of words and positional information of the words in the speech data and combining it with at least positional information of the words in the text meta data. A single index can be created because the speech data and the text meta data are treated the same and considered only different categories.

In one embodiment a method of indexing a spoken document comprising speech data and text meta data title names of the speaker s abstract etc. includes generating information pertaining to recognized speech from the speech data. In particular the information includes probabilities of occurrence of words and positional information of the words in the recognized speech. In addition at least positional information of words in the text meta data is generated in substantially the same format as the information pertaining to recognized speech. This allows the index to be created easily since the information pertaining to the speech data and the information pertaining to the text meta data can be processed in the same manner.

Using the index spoken documents can be searched based on a received query. Returned documents are ranked by relevance however relevance is calculated by occurrence of the search query terms in the speech data and or the text meta data.

One concept herein described provides a method and or system that uses speech and text content information for document retrieval particularly but not limited to spoken document retrieval.

Referring to spoken documents such as pictorially represented at seldom contain speech data only. Rather commonly associated with the speech data and also forming part of document is text meta data . Text meta data can include a wide variety of information but generally can be considered textual information about or relating to the associated speech data . For instance as illustrated text meta data can include a title for the document the names of speaker s and an abstract or short description of the document and speech data . Nevertheless it should be understood that the foregoing are merely examples of text meta data and that text meta data can include other forms of text information such as but not limited to anchor text on http links pointing to the speech file text surrounding the speech on a given web page sponsor information location of the event date and time etc. Such text meta data can be categorized as pictorially illustrated in or grouped in any other manner as desired.

As will be described below speech data and text meta data are processed similarly and used in a framework that allows a user to query a collection of spoken documents and determine which documents of the collection are probably relevant based on the query. An indication such as a score is obtained for each document by which relevance can be ascertained. In particular analysis can include obtaining separate scores for the speech data and text meta data or portions thereof which can be combined to obtain the document score.

In the embodiment described below speech data and text meta data is processed similarly based on generating Position Specific Posterior Lattice PSPL for each type of data. By processing each type of data the same obtaining scores thereafter is consistent and efficient.

Generally use of Position Specific Posterior Lattices is a way of extending the key word search paradigm from text documents to spoken documents. The framework incorporating PSPL considers posterior probabilities of sequences of words given the acoustic evidence as a way to model intrinsic uncertainty of the spoken content. At the same time this technique is designed to carry position information in order to incorporate proximity in the scoring paradigm.

However before describing further aspects it may be useful to first describe exemplary computing devices or environments that can implement the description provided below. This description will include details regarding generating a PSPL representation for speech data and a description for generating the same for text meta data . An exemplary technique for obtaining a score for the spoken document will also be provided.

In addition to the examples herein provided other well known computing systems environments and or configurations may be suitable for use with concepts herein described. Such systems include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The concepts herein described may be embodied in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Those skilled in the art can implement the description and or figures herein as computer executable instructions which can be embodied on any form of computer readable media discussed below.

The concepts herein described may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both locale and remote computer storage media including memory storage devices.

With reference to an exemplary system includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a locale bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA locale bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier WAV or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic FR infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a locale area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be noted that the concepts herein described can be carried out on a computer system such as that described with respect to . However other suitable systems include a server a computer devoted to message handling or on a distributed system in which different portions of the concepts are carried out on different parts of the distributed computing system.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system is designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device .

In general speech data in each spoken document is a collection of speech signals that are related to each other in some manner. For example speech signals that occur at a meeting or speech signals associated with a lecture. To form some spoken documents the speech data and text meta data may be extracted from other content in a multimedia document. For example the speech data and text meta data may be removed from a movie to separate it from the video and or music score of the movie. When the speech data and text meta data i.e. spoken document is from another document having other information such as a multimedia document a mapping may be stored that links the spoken document to the multimedia document. This allows a path to the multimedia document to be returned in the search results.

The data and in particular but not limited to the speech data in a document can be very long. To assist identifying smaller relevant portions the data of each respective type e.g. speech abstract etc. can be divided into segments by a segment identifier at step . The data of each type then consists of an ordered list of segments. Under one embodiment the segments are formed by natural breaks. For instance the speech data can be segmented at periods of silence while text data can be segmented at paragraphs. Techniques for identifying periods of silence in speech are well known in the art.

At this point it should be noted that the speech data besides merely being segmented can also be further categorized based on its content. This categorization is similar to the categories of text meta data . For instance in a lecture speaker s may be categorized separately where each category may in turn be segmented. For example a main speaker may be identified and associated with a type identifier Speech A while another speaker may be identified and associated with a type identifier Speech B and while questions from the audience may be identified and associated with a type identifier Speech C . In this manner the relevance of a document may be determined based on whether or not the main speaker used the words in the query which in case may indicate that the document is more relevant than if the words were used by an audience member.

At step a document segment tagger catagorizer maps each segment category and document to an integer value and stores the mapping in a collection descriptor file . Step thus categorizes speech data with respect to itself i.e. different types of speech within speech data categorizes text meta data with respect to itself i.e. different types of text meta data within text meta data and or categorizes speech data relative to text meta data . In some embodiments collection descriptor file maps the integer value to a path name where the spoken document can be found. For spoken documents that were generated from multimedia files collection descriptor file can map the integer value to a path name where the multimedia document is stored.

Formation of Position Specific Posterior Lattice PSPL representation for speech data is indicated by step in . Generally step generates information pertaining to recognized speech from the speech data the information comprising probabilities of occurrence of words and positional information of the words in the recognized speech. Each of the segments pertaining to speech data i.e. spoken segments is provided to a speech recognizer which uses an acoustic model and a language model to decode the spoken segments into possible text sequences at step of .

Typically speech recognizer performs the recognition based on a sequence of feature vectors that represent the speech in the spoken segments. The feature vectors used by the speech recognizer are formed by first converting an analog speech signal into digital values using an analog to digital converter. In several embodiments the analog to digital converter samples the analog signal at 16 kHz and 16 bits per sample thereby creating 32 kilobytes of speech data per second. These digital values are provided to a frame constructor which in one embodiment groups the values into 25 millisecond frames that start 10 milliseconds apart. The frames of data created by the frame constructor are provided to a feature extractor which extracts a feature from each frame.

Examples of feature extraction modules include modules for performing Linear Predictive Coding LPC LPC derived cepstrum Perceptive Linear Prediction PLP Auditory model feature extraction and Mel Frequency Cepstrum Coefficients MFCC feature extraction. Note that the invention is not limited to these feature extraction modules and that other modules may be used.

The steps needed to form the feature vectors can be performed entirely by speech recognizer or some or all of the steps may be performed when generating spoken documents . Thus spoken documents may be stored in part as analog signals digital signals frames of digital signals or feature vectors.

During recognition each feature vector is applied to acoustic model which provides a probability of each of a set of phonetic units given an input feature vector. The acoustic probability of a word is determined by combining the probabilities of the phonetic units that form the word. In addition each word receives a language model score that indicates the probability of a word or a sequence of words appearing in a particular language. Using the scores provided by acoustic model and language model speech recognizer is able to form a lattice pertaining to recognition i.e. recognition lattice that contains recognition results for a spoken segment. Note that in most embodiments speech recognizer prunes unlikely word sequences from the recognition lattice as it constructs the lattice leaving only the top N recognition results in the recognition lattice. In other embodiments speech recognizer produces an n best list of recognition results that provides a list of the n most likely word sequences given the speech segment.

Note that although the system above segments the speech data before providing the spoken segments to speech recognizer in other embodiments speech data of the spoken documents are not segmented before being provided to speech recognizer . Instead speech recognizer identifies periods of silence in the speech and at such points forces the lattice to converge to a single node before beginning a new lattice for the next portion of the speech data. In this manner speech recognizer again generates a separate recognition lattice for different segments of the speech data. In such embodiments speech recognizer will include a document and segment identifier for each recognition lattice that it produces and will update the mapping in collection descriptor file .

Every transition between states in lattice is associated with a word a start symbol or an end symbol. In addition for language models that are based on sequences of multiple words n gram models where n is greater than 1 every transition into a state contains the same word. For example transitions and into state both contain the word very . Because of this the word on a transition can equally be associated with the ending state of the transition.

Each transition also has an associated probability for the word located on the transition given the input speech signal. This probability is a function of an acoustic model score a language model score and various other parameters used to combine and modify those scores into a single probability. In particular under one embodiment the probability of a transition ti is stored as a log probability that is evaluated as 

Where log P t is the log probability for transition t log P t is an acoustic model log likelihood assigned to the word of transition tbased on the correspondence between the feature vectors of a portion of the speech signal and the acoustic models of the phonetic units found in the word log P word t is the language model log probability assigned to the word on transition t LMw is a constant weight larger than 0 which compensates for difference in the range of possible values for the acoustic model and the language model log Pis an insertion penalty which compensates for the speech recognizer s tendency to select short words over longer words and FLATw is a flattening weight used to control how skewed the posterior distribution becomes on the lattice paths. In particular FLATw helps to keep the speech recognizer from assigning most of the probability to one or two paths in the lattice.

Speech recognition lattice of shows that different path lengths can end at the same state. For example there are two paths that reach state . One path includes the start symbol and the words They are in and the other path includes the start symbol and the words There in . Thus state which represents the word in can be reached when in is in the second word position in the recognized text and when in is in the third word position in the recognized text where word position is determined from the start of a word sequence. In addition a single word may appear at different states but at the same word position in those states. For example the word very enters state on transition in the fifth word position of the path They are in two very . The word very is also in the fifth word position in the transition leading into state along the path There in two very very where the last very is in the fifth word position.

In order to construct an index from this recognition lattice a Position Specific Posterior Lattice PSPL representation is constructed. In the PSPL representation each word position in the lattice forms a bin. All words that occupy a particular word position are placed in the bin for that word position along with the probability of the word occupying that word position in the recognition lattice. In order to form the PSPL representation each state is separated into a set of sub states with one sub state for each word position that reaches the state.

A length based or word position score is determined for each sub state. This is shown at step of and is performed by position specific posterior lattice builder PSPL Builder of .

Under one embodiment the length based scores at each state are calculated using a modification of the standard forward backward algorithm used to score paths through a lattice. In particular the probability of a word at a state n and a word position can be calculated as 

Where represents a null transition that does not contain a word. Such null transitions are common in recognition lattices that utilize back off language models. In EQ. 2 is calculated recursively as 

The normalizing value norm LAT of EQ. 2 is the value of calculated at the end state of the recognition lattice. Note that the normalization is required because of the pruning performed during speech recognition.

After a length based score has been determined for each observed word position at each state the length based scores are summed at step . In particular each score that is for the same word position and for the same word is summed together to form a posterior probability that the word appears in the speech segment at that word position. This summation is expressed as word EQ. 7 where the summation is performed across all states n in the lattice where the length based score is greater than zero.

The words and their respective probabilities formed through the sum of EQ. 7 are then stored based on their word position to form PSPL representation .

An example of a PSPL representation is shown in where the possible positions are shown in row and the words that occur at each position are shown below their respective position. For example the words They and There occur in word position as indicated by column . The word very occurs in word positions and as shown in columns and . Note that the PSPL representation provides a more compact representation of the recognition results than the combination of lattice and the sub states of . The reason for this is that words that appear at the same word position but at different states in recognition lattice are combined into a single entry in the position specific posterior lattice of .

In other embodiments the PSPL representation for each recognition lattice is constructed from an n best list. The same technique described above can be used to construct the position specific posterior lattice by first forming a recognition lattice from the n best list. This can be accomplished by tying the first word of each entry in the n best list to a common start node and the last word of each entry in the n best list to a common end node.

PSPL lattices can also be used to represent text meta data . However with text meta data there is no document content uncertainty and consequently the equivalent PSPL lattice representation has only one entry for every position bin with position specific probability equal to 1. Thus creation of the PSPL representation for each segment of each category of text meta data is much simpler than that of the speech data described above.

In creation of text meta data PSPL representation for each segment of each category is represented at step . Like step generally step generates information pertaining to the text meta data that includes positional information and probability information however as indicated above the probability in each instance is one. Nevertheless the information generated at step is particular beneficial because the format thereof herein by example a PSPL representation is substantially in the same format as that of the information pertaining to speech data generated at step . Herein substantially means that the information generated by step and the information generated by step can be easily combined as discussed below to form a single index.

In a text lattice builder is illustrated as constructing a corresponding lattice which in turn is used by PSPL builder to construct a corresponding PSPL representation . However it should be understood that text lattice builder could generate the PSPL representation directly in view of the certainty of the words in the text meta data .

At step an indexer builds an inverted index based on the PSPL representations . Under one embodiment this inverted index is a single index formed by providing an entry for every word in the recognition grammar and text meta data . In each entry information is provided for each position in the position specific posterior lattices where the entry s word appears. This information includes the document category and segment identifier associated with the PSPL representation the position bin in which the word is placed in the lattice and the probability associated with that word in that position.

Once the index has been constructed relevance of the speech data and text meta data to a given search query can be determined. In particular at step a search query is received by a search unit . Search unit accesses inverted index and retrieves the document identifier category type segment identifier position and probability of each sub entry for each word of the query. It should be noted any words that are outside of the speech recognizer s vocabulary are mapped to an unknown token UKN which cannot be matched in any document. The unknown token acts as a placeholder but does not provide a value in the calculation of a score for the query.

At step a score is determined for the each document that is returned from the search of inverted index . The documents that are returned from the search can be limited such that every document that is returned includes all of the words of the query. Alternatively any document that contains at least one word of the query can be returned at this stage. Using the probabilities returned from inverted index the scores for each document are calculated by first calculating a collection of composite n gram scores for each document. Each composite n gram score is formed by summing individual n gram scores over all possible formations of an n gram in the query using 

If more than one composite n gram score is calculated for the different category types k 1 . . . ST the separate composite n gram scores are combined in a weighted sum using 

where wis the weight associated with a particular N gram where the summation of wequals 1 and K is the number of words in the query.

In many embodiments the weights of the n grams increase linearly with the n gram order. However other techniques may be used to set the weights of the n grams.

A global spoken document score for a collection of different category types S Sis a linear combination of the category type scores EQ.10 

At step the documents identified and scored by search unit are returned as ranked documents . In many embodiments search unit accesses collection descriptor file to convert the document identifier into the path name of the location of the document. This path name is then returned.

The documents that are returned may be. pruned by removing documents that do not provide a non zero score for the highest order composite n gram. This can be used to ensure that all of the words of the query appear in order at least once in the document. This requirement can be used to enforce a quoted functionality which requires all of the words be present and in the same order as in the query in order for a document to be identified from the query. Another possibility is to allow quoting of phrases within the query such as JAPAN NUCLEAR WEAPONS entering such a query will return only documents that contain JAPAN and NUCLEAR and WEAPONS and the words NUCLEAR WEAPONS occur exactly in this order next to each other.

It should noted in a further embodiment morphological analysis can be performed on the query before applying the query to the index. This generates a list of different forms of the query terms including other endings for the word. For example the term weapons in a query would produce the alternative weapon in which the final s has been dropped. Different combinations of the morphologically altered terms can then be used to perform different searches of the inverted index. Each search involves forming composite n gram scores as above. The composite n gram scores for the alternative search strings are weighted much less than the composite n gram scores for the original search string. As a result documents that contain an alternative search string but not the original search string will be ranked below documents that contain the original search string.

Although the indexing technique has been discussed above with reference to complete words the same technique can be used to index any speech unit including sub word units such as phones or tri phones. In particular instead of forming a lattice of words the speech recognizer forms lattices of sub word units. These sub word units are scored in the same manner as the words above using a language model that is based on sequences of sub word units instead of words. The position specific posterior lattice will then contain individual sub word units with their associated probabilities.

Upon receiving a search query the query is decomposed into sub word units. Documents are then ranked using the scoring techniques described above with sub word units instead of words. In some embodiments each word in the query can be treated as being contained in quotations to reduce the number of documents that are returned.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not limited to the specific features or acts described above as has been held by the courts. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

