---

title: Access control for elements in a database object
abstract: A method, for controlling access to elements in a database object are provided. The method provide for receiving a request from a user to access the database object, determining whether an access restriction is imposed on the database object, and controlling access to the elements in the database object by the user based on the access restriction. The access restriction specifies one or more users to which the access restriction is applicable, defines a dynamic condition the one or more users must satisfy in order to access the database object, and identifies one or more of the elements in the database object accessible to the one or more users when the dynamic condition is satisfied.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07865521&OS=07865521&RS=07865521
owner: International Business Machines Corporation
number: 07865521
owner_city: Armonk
owner_country: US
publication_date: 20051212
---
The present invention relates generally to database management systems. More particularly the present invention is directed to controlling access to elements in a database object.

In a Database Management System DBMS data is stored in tables made up of records e.g. rows having one or more fields e.g. columns . A view is a logical construct imposed over a table and is defined by metadata in the DBMS known as a view definition. The view definition contains mappings to one or more rows and columns in one or more tables stored in a database. Tables and views are considered to be database objects.

Fine Grained Access Control FGAC is a mechanism by which the DBMS controls access to database object records and or fields based on the identity of the user attempting to access the database object. FGAC complements the traditional Discretionary Access Control DAC implemented by many DBMS by allowing the DBMS to enforce two levels of access control DAC is enforced at the object level e.g. does the user have the right to access that table and FGAC is enforced at the element level e.g. does the user have the right to access that row or column .

Traditional methods of implementing FGAC within DBMS have relied upon the use of views. A view can be used to alter or restrict the data seen by a user using the view to access the underlying table s . Views however have a number of shortcomings. For example when the number of different restrictions is numerous view definitions may become quite complex in an effort to incorporate all of the restrictions in one view which strains system limits and makes maintenance of the view difficult.

Additionally if a large number of simple views are desired e.g. each one implementing a unique view of a table based on the restrictions for a specific set of users the routing of user requests becomes difficult with the solution often being resolved within the database application rather than the DBMS. Furthermore a user may be able to bypass the FGAC implemented through the views by accessing the base tables directly.

Another known implementation of FGAC is the use of user attributes to modify queries by adding predicates into the queries. A predicate is a condition that must be satisfied for the DBMS to return a value. In this approach the user attributes e.g. user identifier are compared against a security policy defined within a procedure provided by the user on a table or view to make decisions regarding access to data. This approach allows row restrictions traditionally handled by views to be dynamically added to queries without requiring application modification.

One drawback of the query modification approach is that it only allows the DBMS to control access at the row level. Views still have to be used to control access at the column level. Additionally the approach requires user programming of a strictly defined predicate producing procedure in order to implement a security policy. Moreover query modification interferes with dynamic query caching because the modified queries will no longer match the original text of the queries which makes query matching problematic and impacts the performance benefits of caching.

Further the solutions described above fail to address the requirements from emerging privacy applications. Generally a privacy policy indicates who can access what information for what purpose and resulting in what obligations. For example a user John Doe may be allowed to access the credit card column from a customer table if he is using the billing application to process a customer order but he may not be allowed to access that column for the purpose of sending marketing information to the customer. Existing FGAC solutions cannot address this requirement because they either do not support controlling access at the column level or they provide control access at the column level but only for columns that have been statically defined i.e. view based techniques . Hence a user is always restricted to a set of columns regardless of the purpose for which he or she is accessing those columns.

Privacy applications are only one example where such flexibility is needed. Recent user requirements in the area of database security indicate that there is a need for database vendors to provide the notion of a session context. A session context is uniquely identified by a set of session attributes that may include the ID of the user who established that session the IP address of the computer from which the user initiated the session as well as other attributes as dictated by a particular implementation or scenario. Within a particular context a user can have one or more privileges on one or more database objects that are not necessarily available to them within a different context. Thus it is only natural that the next logical user requirement would be to allow certain columns to be accessible within one context but not within another context. Currently the only way to accomplish this would be to define a set of views that restrict access to certain columns and grant access on those views to users depending on their session context. Maintaining several views however has the same drawbacks mentioned earlier.

Accordingly there is a need for a flexible mechanism to control access to elements in a database object based on one or more dynamic conditions such as a session context or an access purpose without requiring the creation and maintenance of static views or the modification of queries. The present invention addresses such a need.

A method computer program product and system for controlling access to elements in a database object are provided. In this document a group of one or more users is denoted as a user group and a set of one or more of the elements in a database object is denoted as an element set in the database object. The method computer program product and system provide for receiving a request from a user to access the database object determining whether an access restriction is imposed on the database object the access restriction specifying a first user group to which the access restriction is applicable defining a first dynamic condition the first user group must satisfy in order to access the database object and identifying a first element set in the database object accessible to the first user group when the first dynamic condition is satisfied and controlling access to the elements in the database object by the user based on the access restriction.

Controlling access to elements in a database object using access restrictions rather than views or modified queries eliminates the worries concerning the creation and maintenance of complex views the users bypassing restrictions by accessing underlying tables directly the difficulties associated with routing user requests when there is a large number of views the ability to control access at both the row and column level the need to program strictly defined predicate producing procedures and the problems of dynamic query caching interferences. In addition because the access restrictions are defined using one or more dynamic conditions the flexibility needed to address current privacy and security concerns is achieved.

Particular implementations can include controlling access to the elements in the database object by confirming whether the user is in the first user group when the access restriction is imposed on the database object verifying whether the user satisfies the first dynamic condition when the user is in the first user group and allowing the user to access the first element set when the user satisfies the first dynamic condition.

Verifying whether the user satisfies the first dynamic condition may include obtaining one or more session variables associated with the user when the user is in the first user group and comparing the one or more session variable associated with the user to the first dynamic condition to determine whether the user satisfies the first dynamic condition. In an implementation allowing the user to access the first element set in the database object comprises generating a dynamic pseudo view of the database object comprising only the first element set in the database object when the user satisfies the first dynamic condition and responding to the request from the user using the dynamic pseudo view of the database object.

In some embodiments the database object is a table or a view at least one element in the first element set is a column the first dynamic condition is a session context or a session purpose associated with a user in the first user group and the access restriction is stored in a database. Additionally the access restriction can further define an additional dynamic condition the first user group must satisfy in order to access the first element set.

In other implementations the access restriction further defines a second dynamic condition the first user group must alternatively satisfy in order to access the database object and further identifies a second element set in the database object accessible to the first user group when the second dynamic condition is satisfied. At least one element in the first element set may also be an element in the second element set.

Further aspects may include determining whether another access restriction is imposed on the database object the other access restriction specifying a second user group to which the other access restriction is applicable. The other access restriction can also define another dynamic condition the second user group must satisfy in order to access the database object and identify another element set in the database object accessible to the second user group when the other dynamic condition is satisfied. In one embodiment at least one user in the first user group is also a user in the second user group.

Another implementation also includes deciding whether an exception to the access restriction is applicable to the user requesting access to the database object and permitting the user to access the elements in the database object when the exception to the access restriction is applicable to the user.

The present invention relates generally to database systems and more particularly to controlling access to elements in a database object. The following description is presented to enable one of ordinary skill in the art to make and use the invention. Various modifications to the preferred implementations and the generic principles and features described herein will be readily apparent to those skilled in the art. Thus the present invention is not intended to be limited to the implementations shown but is to be accorded the widest scope consistent with the principles and features described herein.

Access to the elements in the database object by the user is controlled based on the access restriction when the access restriction is imposed on the database object and the user is in the first user group . In some implementations the database object is a table or a view at least one element in the first element set is a column and the first dynamic condition is a session context or a session purpose associated with a user in the first user group.

A session purpose could be determined based on the type of application the user is employing when requesting access to the database object for example a purchasing application or a marketing application. A session context could be the location from which the user is requesting access to the database object for instance from the office or at home. The location may be determined based on the IP address of the computer from which the user is requesting access.

Session context and session purpose are just two examples of dynamic conditions. A dynamic condition can also be a function. For example the condition can be F current time is TRUE where F is a function that compares the current time to the time of the day when access can be granted.

Illustrated in is a system including a server interconnected to clients to via a network . Server and clients to may be any data processing system such as computers workstations and handheld portable devices. In addition system may include more or less clients in other embodiments. Network may be the Internet or World Wide Web WWW in some implementations.

System also includes a database and resources . Each resource may be a storage media a database a set of XML eXtensible Markup Language documents a directory service such as LDAP Lightweight Directory Access Protocol server or a backend system. Other embodiments of system may include more or less databases and or resources.

Database and resources are coupled to server . The interface between server and database and resources may be a local area network Internet a proprietary interface or any combination of the foregoing. Clients to can access database and resources through server . Any of server database resources and clients to may be located remotely from one another or may share a location.

The configuration of system is not intended as a limitation of the present invention as will be understood by those of ordinary skill in the art from a review of the following detailed description. For example network may comprise a wireless link a telephone communication a radio communication or a computer network e.g. a Local Area Network LAN or a Wide Area Network WAN .

In one implementation database is operable to store a database object comprising a plurality of elements and server is operable to receive a request from a user to access the database object. The request may be submitted by the user through one of clients to . Server is also operable to determine whether an access restriction is imposed on the database object. The access restriction specifies a first user group to which the access restriction is applicable defines a first dynamic condition the first user group must satisfy in order to access the database object and identifies a first element set in the database object accessible to the first user group when the first dynamic condition is satisfied.

Server is then operable to control access to the elements in the database object by the user based on the access restriction when the access restriction is imposed on the database object and the user is in the first user group. In some embodiments database is further operable to store the access restriction. The access restriction may be stored in a catalog of database not shown .

If no access restriction is imposed on the database object the user is permitted to access the elements in the database object . However if the access restriction is imposed on the database object process confirms whether the user is in the first user group to which the access restriction is applicable . When the user is not in the first user group process proceeds to and the user is permitted to access the elements in the database object.

When the user is in the first user group process verifies whether the user satisfies the first dynamic condition . If the user does not satisfy the first dynamic condition the user is prohibited from accessing the elements in the database object . If the user does satisfy the first dynamic condition process verifies whether the user satisfies the additional dynamic condition . When the user fails to satisfy the additional dynamic condition process proceeds to and prohibits the user from accessing the elements in the database object.

A dynamic pseudo view of the database object comprising only the first element set is generated when the user satisfies the first dynamic condition and the additional dynamic condition . The request from the user is then responded to using the dynamic pseudo view of the database object . A dynamic pseudo view is a view like entity with attributes similar to a predefined regular view. However because it is dynamically created it does not exist in a database such as database in and has no dependencies.

Depicted in is another process for controlling access to elements in a database object. At a request is received from a user to access the database object. A determination is then made at as to whether an access restriction is imposed on the database object. The access restriction specifies a first user group to which the access restriction is applicable defines a first dynamic condition the first user group must satisfy in order to access the database object and identifies a first element set in the database object accessible to the first user group when the first dynamic condition is satisfied.

In the embodiment the access restriction also defines a second dynamic condition the first user group must alternatively satisfy in order to access the database object and identifies a second element set in the database object accessible to the first user group when the second dynamic condition is satisfied. In some implementations at least one element in the first element set is also an element in the second element set.

When no access restrictions are imposed on the database object the user is permitted to access the elements in the database object . When the access restriction is imposed on the database object process confirms whether the user is in the first user group . If the user is not in the first user group process proceeds to and permits the user to access the elements in the database object.

If the user is in the first user group one or more session variables associated with the user is obtained . In one embodiment when the user establishes a session through some application a session start trigger will populate one or more session variables associated with the user with the appropriate values based on information from the user and the application. The session start trigger is a program that is automatically executed when a session is established. Process then compares the one or more session variables associated with the user to the first dynamic condition to determine whether the user satisfies the first dynamic condition .

The user is allowed to access the first element set in the database object when the user satisfies the first dynamic condition i.e. the one or more session variables match or correspond to the first dynamic condition . When the one or more session variables do not match the first dynamic condition process compares them to the second dynamic condition . If they also fail to match the second dynamic condition the user is prohibited from accessing the elements in the database object . However if the one or more session variables associated with the user match the second dynamic condition the user is allowed to access the second element set in the database object .

If no access restrictions are imposed on the database object the user is permitted to access the elements in the database object . If however the access restriction has been imposed on the database object process decides whether an exception to the access restriction is applicable to the user requesting access to the database object . When the exception to the access restriction is applicable to the user at block a determination is made as to whether another access restriction is imposed on the database object the other access restriction specifies a second user group to which the other access restriction is applicable . In an implementation at least one user in the first user group is also a user in the second user group.

The other access restriction may further define another dynamic condition the second user group must satisfy in order to access the database object and identify another element set in the database object accessible to the second user group when the other dynamic condition is satisfied. Additionally the other element set in the database object may be a subset of the first element set.

Process will proceed to to permit the user to access the elements in the database object when no other access restrictions are imposed on the database object. However it will decide whether an exception to the other access restriction is applicable to the user requesting access to the database object when the other access restriction is also imposed on the database object . The user is permitted to access the elements in the database object if the exception to the other access restriction is applicable to the user . In contrast access to the elements in the database object by the user is controlled based on the other access restriction if the exception to the other access restriction is inapplicable to the user .

When the exception to the access restriction is not applicable to the user at block a determination is made as to whether another access restriction is imposed on the database object . If no other access restrictions are imposed on the database object access to the elements in the database object by the user is controlled based on the access restriction . However if another access restriction is imposed on the database object process will decide whether an exception to the other access restriction is applicable to the user requesting access to the database object .

Access to the elements in the database object by the user will be controlled based on the access restriction when the exception to the other access restriction is applicable to the user . Conversely access to the elements in the database object by the user will be controlled based on both access restrictions when the exception to the other access restriction is not applicable to the user .

Shown in is a sample database object with elements . Database object is a table called customer data with a column for names a column for addresses a column for phone numbers and a column for credit card numbers. Table has n number of rows to . Embodiments of the present invention enables access restrictions to be created such that it becomes possible to express which elements in database object are accessible by a user and under what condition.

For example suppose a user named Bob is allowed to access columns and in table for the purpose of Billing and only columns and for the purpose of Marketing. The following Structured Query Language SQL statement illustrates how an access restriction can be created to limit user Bob s access to columns in table based on the purpose of access.

Thus when table is queried by user Bob server in for example can determine that an access restriction applies for user Bob. Server may then look up a session variable SessionVariablePurpose associated with user Bob and read its value. If it is set to Billing server will implement access restriction r in the query plan as if that restriction was statically defined as follows 

However if the value of the session variable SessionVariablePurpose was Marketing then server will implement restriction r in the query plan as if that restriction was statically defined as follows 

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In one aspect the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include DVD compact disk read only memory CD ROM and compact disk read write CD R W .

Memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories that provide temporary storage of at least some program code in order to reduce the number of times the code must be retrieved from bulk storage during execution. As shown input output or I O devices including but not limited to keyboards displays pointing devices etc. are coupled to data processing system . I O devices may be coupled to data processing system directly or indirectly through intervening I O controllers not shown .

In the embodiment a network adapter is coupled to data processing system to enable data processing system to become coupled to other data processing systems or remote printers or storage devices through communication link . Communication link can be a private or public network. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

Various implementations for controlling access to elements in a database object have been described. Nevertheless one of ordinary skill in the art will readily recognize that various modifications may be made to the implementations and any variations would be within the spirit and scope of the present invention. For example the above described process flows are described with reference to a particular ordering of process actions. However the ordering of many of the described process actions may be changed without affecting the scope or operation of the invention. Accordingly many modifications may be made by one of ordinary skill in the art without departing from the spirit and scope of the following claims.

