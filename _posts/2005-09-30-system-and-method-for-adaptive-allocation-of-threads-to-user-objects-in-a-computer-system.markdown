---

title: System and method for adaptive allocation of threads to user objects in a computer system
abstract: A method for optimizing enterprise server resources in a computer system is described. The method comprises monitoring at least one metric of the computer system capable of indicating a performance level thereof; determining whether the performance level needs to be improved; and responsive to a determination that the performance level needs to be improved, implementing a best method to improve the performance level by adaptively manipulating one or more threads in a pool of threads in the computer system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08127010&OS=08127010&RS=08127010
owner: Research In Motion Limited
number: 08127010
owner_city: Waterloo
owner_country: CA
publication_date: 20050930
---
This nonprovisional application claims priority based upon the following prior United States provisional patent application entitled ADAPTIVE THREADING Application No. 60 616 067 filed Oct. 4 2004 in the name s of Anand Sinha which is hereby incorporated by reference.

This application is related to U.S. patent application Ser. No. 11 240 204 filed Sep. 30 2005 now published as U.S. Patent Application Publication No. 20060075405 which is hereby incorporated by reference in its entirety.

The present disclosure relates in general to computer systems and in particular to a system and method for adaptive allocation of threads to user objects in such computer systems.

Threads are instances of software processes operating on a computer system. In operation when a first user object has a task that needs to be performed a master thread associates an available worker thread with the user object. Once the task has been completed the first user object is placed in a wait state until it has another task to be performed and the worker thread is returned to a thread pool to be associated with another user having a task to be performed. When the first user object has another task to be performed it is likely that a different thread will be assigned thereto to perform that task. A problem exists in that a thread can get hung or hung up . This can occur for many reasons. One reason is that there is contention for system resources such as memory resources processor resources and network resources. For example assuming a first thread locks a resource when a second thread needs to use the same resource the second thread will wait for the first thread to release or unlock the resource. If the first thread crashes or is for some other reason unable to unlock the resource the second thread will get hung.

Additionally a thread could get hung due to an error in a communications subsystem such as a mail application programming interface API . When a thread makes a call to the subsystem the thread is locked in and at the mercy of that subsystem. If there is a crash in the subsystem the thread will be hung. The same scenario also applies on the case of operating systems. It is also possible that the subsystem could get hung itself which would hang the calling thread.

Finally a thread could get hung as a result of a network request taking an excessively long time to complete due to poor network conditions or hardware issues such as domain controllers being down routers repeaters being down for example. In this scenario the thread gets hung waiting for the network to return.

Hang up conditions waste valuable processing time and create undesirable overhead as a result of the need to track and monitor the threads that are hung. For the foregoing and other reasons there exists a need to optimize thread processing so as to diminish the likelihood of a thread getting hung.

Method and system described herein provide effective thread processing in an enterprise server system environment via adaptive threading i.e. manipulation of threads in a pool of threads based on certain performance criteria or conditions which will be described below in an exemplary context of data item redirection as may be employed in a mobile communications environment. The enterprise server associates threads for each user. A user object e.g. a user name describes the user. Adaptive threading is based on the ability of a master thread to continually obtain metrics for the operation of the system. Initially the enterprise server system runs with a single thread pool which can service the user objects properly such that the number of unassigned threads is minimized or eliminated. If the system begins to perform poorly the master thread determines the best method of assigning or creating threads to increase performance. Adaptive threading ensures that processing resources in the enterprise server environment are efficiently utilized.

As indicated above as the system becomes loaded the master thread obtains various metrics including but not limited to those related to mail delivery latency CPU utilization per thread overall CPU utilization thread wait counts which are a measure of the amount of time a thread spends waiting for outside processes to be performed during which that thread is locked up and effectively removed from the pool memory usage peak memory usage disk I O and any other metric that could be used to evaluate system performance.

The various metrics are maintained and tracked over a period of time e.g. hours or days . Moving average mean and standard deviation are calculated and used to determine whether the performance of the system has been degraded to an unacceptable level. If so a determination is made as to the best method to improve performance. For example to combat increased mail delivery latency which indicates that work is being added to the system faster than the system can process it the best method may be to increase the number of worker threads in the system. The work is spread out over all of the users in a shotgun spread fashion. By increasing the worker threads more threads are available to work on the queued up requests.

On the other hand this would not necessarily be the best course of action if for example the increased mail delivery latency were due to faulty network connection. This situation would be evidenced by increased mail latency for some but not all users and higher than expected wait counts while the thread worked on that same set of users. The best method to combat this situation could be to create a new thread pool and to move the affected users to the new thread pool.

In a case in which poor system performance is due to fail over of the mail file and the resulting longer than expected access time to native databases a thread affinity redistribution of users may have to occur. It is also possible that some of the metrics may point to other system deficiencies such as low disk space resulting in problems with swapping memory. Low disk space could also result in insufficient temporary disk storage for other enterprise server operations. The enterprise server could then reduce the number of threads to allow for reduced use of the low disk space. This would likely result in high latency so the algorithms would have to work together to prevent a thrashing situation.

The basic function of the adaptive threading is to detect trends in performance to attempt to predict an impending degradation in performance situation and to take steps to prevent this situation from being noticed by the system administrators.

As used in this application the term host system refers to a computer system on which software for redirecting user data items to a user s MDCD redirector software is operating. In one embodiment the host system is a user s PC in an alternative embodiment the host system is a network server connected to a user s PC via a local area network LAN . In yet another alternative embodiment the host system could be any other system that is in communication with a user s PC.

Instead of warehousing or storing a user s data items at the host system and then synchronizing the user s MDCD to data items stored at the host system when the mobile device requests that such items of information be communicated to it the exemplary application of the present disclosure employs a push paradigm that continuously packages and retransmits the user s data items to the MDCD in response to a triggering event detected at the host system. Wireless MDCDs especially those that can return a confirmation signal to the host that the pushed data has been received are especially well suited for this type of push paradigm. Due to bandwidth limitations of wireless networks redirection of only a portion of a data item may be desirable with the user given the option of then retrieving the entire data item or some other portion of the data item from the host system.

An embodiment of an enterprise server may include a redirection system or redirector software operating at the host system that enables the user to cause certain user selected data items or parts of data items to be redirected or mirrored from the host system to the user s MDCD upon detecting that one or more user defined triggering events has occurred. Also operating at the host system are various subsystems that may be configured to create triggering events such as a screen saver subsystem or a keyboard subsystem as well as subsystems for repackaging the user s data items for transparent delivery to the MDCD such as a Transmission Control Protocol Internet Protocol TCP IP subsystem or one or more E Mail subsystems. Other subsystems for creating triggering events and repackaging the user s data items could also be present at the host system. The host system also includes a primary memory store where the user s data items are normally stored.

Using the redirector software of an enterprise server the user can select certain data items for redirection such as E mail messages calendar events meeting notifications address entries journal entries personal reminders and others. Having selected the data items to be redirected the user can then configure one or more event triggers to be sensed by the redirector software to initiate redirection of the selected data items. These user defined event triggers include external events internal events and networked events.

Examples of external events include receiving a message from the user s MDCD to begin redirection receiving a similar message from some external computer sensing that the user is no longer in the vicinity of the host system or any other event that is external to the host system. Examples of internal events include a calendar alarm screen saver activation a keyboard timeout timeout of a programmable timer or any other event that is internal to the host system. Networked events are user defined messages that are transmitted to the host system from another computer coupled to the host system via a network to initiate redirection. These are just some of the examples of the types of user defined events that can trigger the redirector software to push data items from the host system to the MDCD. Although in a particular embodiment it is anticipated that the configuration that specifies which data items will be redirected and in what form will be set or modified at the host system it is within the scope of this disclosure that such configuration may be set or modified through data sent from the MDCD.

In addition to the functionality noted above the redirector software may provide a set of possibly software implemented control functions for determining the type of MDCD and its address for programming a preferred list of message types that are to be redirected and for determining whether the MDCD can receive and process certain types of message attachments such as word processor or voice attachments. The determination of whether a particular MDCD can receive and process attachments is initially configured by the user of that MDCD at the host system. This configuration can be altered on a global or per message basis by transmitting a command message from the MDCD to the host system. If the redirector software is configured so that the MDCD cannot receive and process word processor or voice attachments then the redirector software will route such attachments to an external machine that is compatible with the particular attachment such as an attached printer or networked fax machine or telephone.

Other types of attachments could be redirected to other types of external machines in a similar fashion depending upon the capabilities of the MDCD. For example if a user is traveling and receives a message with an attachment that the user s MDCD cannot process or display the user may send a command message from the MDCD to the host system indicating that the attachment is to be sent to a fax machine at a hotel where the user will be spending the evening. This enables the user to receive important E mail attachments as long as the host system is provided with sufficient information about the destination to which the attachment is to be forwarded.

Once an event has triggered redirection of one or more of a user s data items the host system may then repackage these items in a manner that is transparent to the MDCD so that information on the MDCD appears similar to information on the user s host system. One repackaging method includes wrapping the user data items in an E mail envelope that corresponds to the address of the MDCD although alternatively other repackaging methods could be used with the present disclosure such as special purpose TCP IP wrapping techniques or other methods of wrapping the data items. The repackaging preferably results in E mail messages generated by the user from the mobile device to be transmitted from the host system thus enabling the user to appear to have a single E mail address such that the recipients of messages sent from the mobile communications device do not know where the user was physically located when the message was first sent. The repackaging also permits both messages sent to the MDCD and messages sent from the MDCD to be encrypted and decrypted as well as compressed and decompressed.

In an alternative system and method the redirector software executes on a network server and the server is programmed to detect numerous redirection event triggers over the network from multiple user desktop computers coupled to the server via a LAN. The server can receive internal event triggers from each of the user desktops via the network and can also receive external event triggers such as messages from the users MDCDs. In response to receiving one of these triggers the server redirects the user s data items to the proper MDCD. The user data items and addressing information for a particular mobile device can be stored at the server or at the user s PC. Using this alternative configuration one redirector software can serve a plurality of users. This alternative configuration could also include an internet or intranet based redirector software that could be accessible through a secure web page or other user interface. The redirector software could be located on an Internet Service Provider s system and accessible only through the Internet.

In another alternative configuration of the exemplary application of the present disclosure a redirector software operates at both the host system and at the user s MDCD. In this configuration the user s mobile device operates similarly to the host system described below and is configured in a similar fashion to push certain user selected data items from the mobile device to the user s host system or some other computer upon detecting an event trigger at the mobile device. This configuration provides two way pushing of information from the host to the mobile device and from the mobile device to the host.

Referring now to the drawings is an example system diagram showing the redirection of user data items such as message A or C from a user s office PC host system A to the user s MDCD where the redirector software A is operating at the user s PC. Message A in represents an internal message sent from desktop to the user s host system A via enterprise network . Message C in represents an external message from a sender that is not directly connected to the enterprise network such as the user s MDCD some other user s mobile device not shown or any user connected to the Internet . Message C also represents a command message from the user s MDCD to the host system A. The host system preferably includes along with the typical hardware and software associated with a workstation or desktop computer the redirector software A a TCP IP subsystem a primary message store an E mail subsystem a screen saver subsystem and a keyboard subsystem .

In the host system A is the user s desktop system typically located in the user s office. The host system A is connected to an enterprise network which may be a packet switched network and which can include one or more geographic sites and in the illustrated embodiment is organized as a local area network LAN for serving a plurality of corporate users. A number of application servers represented in by an application server disposed as part of the enterprise network are operable to provide or effectuate a host of internal and external services such as email video mail Internet access corporate data access messaging calendaring and scheduling information management and the like. Accordingly a diverse array of personal information appliances such as desktop computers laptop computers palmtop computers et cetera collectively represented in by desktop computers and may be operably networked to one or more of the application servers with respect to the services supported in the enterprise network .

Additionally a remote services server B may be interfaced with the enterprise network for enabling a corporate user to access or effectuate any of the services from a remote location via the MDCD .

The enterprise network is connected to a wide area network WAN preferably the Internet which is defined by the use of TCP IP to exchange information but which alternatively could be any other type of WAN. The connection of the enterprise network to the WAN is via high bandwidth link typically a T or T connection. The WAN in turn is connected to a variety of gateways via connections . A gateway forms a connection or bridge between the WAN and some other type of network such as an RF wireless network cellular network satellite network or other synchronous or asynchronous land line connection.

In the example of a wireless gateway is connected to the Internet for communicating via wireless link to a plurality of wireless MDCDs . Also shown in is machine which could be a FAX machine a printer a system for displaying images such as video or a machine capable of processing and playing audio files such as a voice mail system. The present disclosure includes the ability to redirect certain message attachments to such an external machine if the redirector software configuration data reflects that the MDCD cannot receive and process the attachments or if the user has specified that certain attachments are not to be forwarded to MDCD even if such device can process those attachments. By way of example consider an E mail sent to a user that includes three attachments a word processing document a video clip and an audio clip. The redirector software could be configured to send the text of the E mail to the remote device to send the word processing document to a networked printer located near the user to send the video clip to a store accessible through a secure connection through the internet and to send the audio clip to the user s voice mail system. This example is not intended to limit the breadth and scope of the disclosure but rather to illustrate the variety of possibilities embodied in the redirection concept.

The MDCD may be a hand held two way wireless paging computer a wirelessly enabled palm top computer a mobile telephone with data messaging capabilities or a wirelessly enabled laptop computer but could alternatively be other types of MDCDs capable of sending and receiving messages via a network connection . Although the system may operate in a two way communications mode certain aspects of the disclosure could be beneficially used in a one and one half or acknowledgment paging environment or even with a one way paging system. The MDCD may be configured for example via software program instructions to work in conjunction with the redirector software A to enable the seamless transparent redirection of user selected data items.

In an alternative embodiment of the present disclosure not explicitly shown in the drawings the MDCD also includes redirector software. In this embodiment user selected data items can be replicated from the host to the mobile device and vice versa. The configuration and operation of the MDCD having redirector software is similar to that described herein with respect to .

A user of the present disclosure can configure the redirector software A to push certain user selected data items to the user s MDCD when the redirector A detects that a particular user defined event trigger or trigger point has taken place. User selected data items preferably include E mail messages calendar events meeting notifications address entries journal entries personal alerts alarms warnings stock quotes news bulletins etc. but could alternatively include any other type of message that is transmitted to the host system A or that the host system A acquires through the use of intelligent agents such as data that is received after the host system A initiates a search of a database or a website or a bulletin board. In some instances only a portion of the data item is transmitted to the MDCD in order to minimize the amount of data transmitted via the wireless network . In these instances the MDCD can optionally send a command message to the host system to receive more or all of the data item if the user desires to receive it.

Among the user defined event triggers that can be detected by the redirector software A are in the preferred embodiment external events internal events and networked events. External events preferably include 1 receiving a command message such as message C from the user s MDCD to begin redirection or to execute some other command at the host such as a command to enable the preferred list mode or to add or subtract a particular sender from the preferred list 2 receiving a similar message from some external computer and 3 sensing that the user is no longer in the vicinity of the host system although alternatively an external event can be any other detectable occurrence that is external to the host system. Internal events could be a calendar alarm screen saver activation keyboard timeout programmable timer or any other user defined event that is internal to the host system. Networked events are user defined messages that are transmitted to the host system from another computer coupled to the host system via a network to initiate redirection. These are just some of the events that could be used with the present disclosure to initiate replication of the user selected data items from the host system to the MDCD .

Assuming that the redirector software A is activated and has been configured by the user either through the sensing of an internal network or external event to replicate certain user data items including messages of type A or C to the MDCD when the message A is received at the host system A the redirector software A detects its presence and prepares the message for redirection to the MDCD . In preparing the message for redirection the redirector software A could compress the original message A could compress the message header or could encrypt the entire message A to create a secure link to the MDCD .

Also programmed into the redirector software A is the address of the user s MDCD the type of device and whether the device can accept certain types of attachments such as word processing or voice attachments. If the user s type of mobile device cannot accept these types of attachments then the redirector software A can be programmed to route the attachments to a fax or voice number where the user is located using an attached fax or voice machine .

The redirector software A may also be programmed with a preferred list mode that is configured by the user either at the host system A or remotely from the user s MDCD by transmitting a command message C. The preferred list contains a list of senders other users whose messages are to be redirected or a list of message characteristics that determine whether a message is to be redirected. If activated the preferred list mode causes the redirector software A to operate like a filter only redirecting certain user data items based on whether the data item was sent from a sender on the preferred list or has certain message characteristics that if present will trigger or suppress redirection of the message. In the example of if desktop computer was operated by a user on the preferred list of host system A and the preferred list option was activated then message A would be redirected. If however desktop computer was operated by a user not on the host system A s preferred list then message A would not be redirected even if the user of the host system A had configured the redirector to push messages of type A. The user of the host system A can configure the preferred list directly from the desktop system or alternatively the user can then send a command message such as C from the MDCD to the host system A to activate the preferred list mode or to add or delete certain senders or message characteristics from the preferred list that was previously configured it should be appreciated that a redirector program A could combine message characteristics and preferred sender lists to result in a more finely tuned filter. Messages marked as low priority or that are simple return receipts or message read receipts for example could always be suppressed from redirection while messages from a particular sender would always be redirected.

After the redirector software A has determined that a particular message should be redirected and it has prepared the message for redirection the software A then sends the message A to a secondary memory store located in the MDCD using whatever means are necessary. In the preferred embodiment this method is to send the message A back over the enterprise network WAN and through the wireless gateway to the MDCD . In doing so the redirector preferably repackages message A as an E mail with an outer envelope B that contains the addressing information of the MDCD although alternative repackaging techniques and protocols could be used such as a TCP IP repackaging and delivery method most commonly used in the alternative server configuration shown in . The wireless gateway requires this outer envelope information B in order to know where to send the redirected message A. Once the message A in B is received by the MDCD the outer envelope B is removed and the original message A is placed in the secondary memory store within the MDCD . By repackaging and removing the outer envelope in this manner the present disclosure causes the MDCD to appear to be at the same physical location as the host system A thus creating a transparent system.

In the case where message C is representative of an external message from a computer on the Internet to the host system A and the host system A has been configured to redirect messages of type C then in a similar manner to message A message C would be repackaged with an outer envelope B and transmitted to the user s MDCD . In the case where message C is representative of a command message from the user s MDCD to the host system A the command message C is not redirected but is acted upon by the host system A.

If the redirected user data item is an E mail message as described above the user at the MDCD sees the original subject sender s address destination address carbon copy and blind carbon copy. When the user replies to this message or when the user authors a new message the software operating at the MDCD adds a similar outer envelope to the reply message or the new message to cause the message to be routed first to the user s host system A which then removes the outer envelope and redirects the message to the final destination such as back to computer . In the preferred embodiment this results in the outgoing redirected message from the user s host system A being sent using the E mail address of the host mailbox rather than the address of the mobile device so that it appears to the recipient of the message that the message originated from the user s desktop system A rather than the MDCD . Any replies to the redirected message will then be sent to the host system A which if it is still in redirector mode will repackage the reply and resend it to the user s mobile data device as described above.

In this alternative configuration server B preferably maintains a user profile for each user s desktop system including information such as whether a particular user can have data items redirected which types of message and information to redirect what events will trigger redirection the address of the users MDCD the type of mobile device and the user s preferred list if any. The event triggers are preferably detected at the user s desktop system and can be any of the external internal or network events listed above. The desktop systems preferably detect these events and then transmit a message to the server computer B via enterprise network to initiate redirection. Although the user data items are preferably stored at the server computer B in this embodiment they could also or alternatively be stored at each user s desktop system which would then transmit them to the server computer B after an event has triggered redirection.

As shown in desktop system generates a message A that is transmitted to and stored at the host system B which is the network server operating the redirector software B. The message A is for desktop system but in this embodiment user messages are stored at the network server B. When an event occurs at desktop system an event trigger is generated and transmitted to the network server B which then determines who the trigger is from whether that desktop has redirection capabilities and if so the server operating the redirector software uses the stored configuration information to redirect message A to the mobile computer associated with the user of desktop system .

Additional details regarding the exemplary redirection system may be found in U.S. Pat. No. 6 219 694 to Lazaridis et al. which is hereby incorporated by reference herein.

As previously noted threads are instances of software processes such as the redirector software A B that operate on a computer system. In particular as used herein the term threads refers to instances of software processes that operate on the business enterprise server.

More particularly referring to first the CPU utilization of all threads is checked block . The CPU utilization of threads may be monitored by hardware software or a combination of hardware and software. A software module may be used to monitor the amount of time that has transpired for a thread and the amount of activity that has occurred such as by checking latency of the mail processing block . Other characteristics of the process may include checking responsiveness of the threads wait counts block . Other metrics such as those listed above may be checked as well although not explicitly shown in . Various calculations may be made on the collected data such as determining statistical average mean highest use value and standard deviation etc. for each metric block . The metrics are then examined and a determination is made as to the performance of the system block . If the system is not performing well the best method to increase performance is determined block . If the system is performing well the system waits for the next poll time block and the process is repeated.

The above described embodiments of disclosure are intended to be examples only. Alterations modifications and variations may be effected to particular embodiments by those of skill in art without departing from scope of disclosure which is defined solely by claims appended hereto.

