---

title: Application programming interface combining asset listings
abstract: A system, method and API for processing and providing a unified list of the content offerings of multiple content sources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07849064&OS=07849064&RS=07849064
owner: TVWorks, LLC
number: 07849064
owner_city: Philadelphia
owner_country: US
publication_date: 20050411
---
This application claims the benefit of U.S. provisional patent application Ser. No. 60 564 703 filed on Apr. 23 2004. This application is also a continuation in part of U.S. patent application Ser. No. 11 038 298 filed on Jan. 19 2005 which is incorporated herein by reference in its entirety and which claims the benefit of U.S. provisional patent application Ser. No. 60 564 703 filed on Apr. 23 2004.

The invention relates generally to information delivery systems and more particularly to providing a unified list of broadcast and other events available to a user of a set top box.

There is a wide variance in the hardware capabilities of set top boxes STBs coexisting on a single radio frequency RF network such as a cable television or satellite television distribution system. All of these STBs typically require the basic data normally associated with for example an interactive program guide IPG application operating within a middleware environment such that provided by Liberate Technologies Inc. of San Mateo California. The basic data includes several descriptor fields for each program such as program title rating description showing times and the like. This commonality of basic data leads to a database design geared towards the lowest common denominator of boxes. Such a database design while useful in serving a group of STBs or other clients is far from optimal in serving at least the higher capability STBs or other clients.

Various deficiencies of the prior art are addressed by the present invention of an application programming interface API and method that allows retrieval of broadcast and VOD events optionally along with other accessible recorded content. An application utilizing the API may specify any combination of available data sources. In this manner the combination of the data sources may be performed at a server if possible responding to the query rather than forcing a set top box application such as an EPG application or middleware API implementation to perform this merge on the set top box unnecessarily.

A method according to one embodiment of the invention comprises receiving a filter object indicative of search criteria querying each of a plurality of data sources using the filter object merging record sets provided by the queried data sources into a unified list and providing a notification that the unified list of record sets is available.

The present invention will be generally described within the context of an information distribution system that propagates content e.g. movies sports and the like various services e.g. video on demand Interactive Program Guide and the like and applications e.g. billing and other services to clients or set top boxes associated with users. It will be appreciated by those skilled in the art that while the invention has specific utility within the context of the systems described herein the invention has broad applicability to any system which queries multiple distinct data sources for data items with a set of common base data fields.

The server is used to store and provide various assets such as audio visual content music data applications and the like to the head ends . The server may be associated with individual or multiple content suppliers and or application providers. The server communicates with the various head ends via a provisioning network . The provisioning network may comprise any network topology supporting the conveyance of information to and from the server . Moreover while depicted as separate components the invention may be implemented within a system wherein the server and head end are implemented within the same functional element. Generally speaking the server operates in part to provide information to and receive information from the STBs via their respective head ends and network . The information propagated between the server and STBs is processed as appropriate by the head end and network .

Each of the head ends is associated with a neighborhood of STBs. For simplicity only those STBs associated with the second head end are shown and described herein. Each head end operates to communicate content and other data to its respective neighborhood of STBs by broadcast channels received by all STBs narrowcast channels received by some of the STBs or point cast channels received by individual STBs. The head ends also interact with their STBs to establish and tear down sessions with the STBs as necessary to enable the delivery of content information services applications and the like. Generally speaking the head ends operate to distribute content and other information provided by the server to the set top boxes as appropriate as well as return STB messages billing information and other data to the server.

Each head end communicates with the STBs within its neighborhood via a relatively high bandwidth forward or downstream communications channel DOWN and a relatively low bandwidth reverse or upstream communications UP. The downstream DOWN and upstream UP communications channels are supported by a network topology such as a hybrid fiber coax cable television distribution system a satellite distribution system e.g. using a telephone network or reverse satellite link for upstream communications and the like. While not shown in an out of band OOB forward communications channel may also be supported by the network topology . In such an implementation of the network topology control messages and other information may be supplied to the STBs via in band messaging using the downstream communications channel DOWN or via out of band messaging using a forward communications channel not shown .

The STBs operate to receive broadcast to most or all STBs narrowcast to a region or defined group of STBs or pointcast to one STB also known as a unit singlecast information from the head ends via the network using the downstream communications channel DOWN or out of band forward channel .

Second STB within the neighborhood associated with second head end is depicted as including a plurality of application programs application programs . The application programs may comprise any of the applications used within the context of an STB such as an interactive program guide IPG application a VOD selection billing application and the like. Where an optional PVR is utilized a PVR database is included within or associated with the STB . The PVR database includes information pertaining to recorded assets e.g. title record channel record time duration and the like . Additional information for the PVR database may include a searchable list of recorded content available to the STB. The list may include information such as found in other databases such as title genre director actors MPAA or other rating key words program description and the like.

Within the system of the clients or STBs may comprise illustratively heavy set top boxes or thin set top boxes where a heavy STB or client has significant computational and or memory resources while a thin STB or client has constrained memory and or computational resources. Rather than simply heavy or thin set top boxes many more classes of set top boxes may be deployed. To simplify the discussion it will be assumed that within the system of three classes of set top boxes are deployed.

The controller of comprises a processor as well as memory for storing various control programs and other programs and data . The memory may also store an operating system supporting the programs .

The processor cooperates with conventional support circuitry such as power supplies clock circuits cache memory and the like as well as circuits that assist in executing the software routines stored in the memory . As such it is contemplated that some of the steps discussed herein as software processes may be implemented within hardware for example as circuitry that cooperates with the processor to perform various steps. The controller also contains input output I O circuitry that forms an interface between the various functional elements communicating with the controller .

Although the controller is depicted as a general purpose computer that is programmed to perform various control functions in accordance with the present invention the invention can be implemented in hardware as for example an application specific integrated circuit ASIC or field programmable gate array FPGA . As such the process steps described herein are intended to be broadly interpreted as being equivalently performed by software hardware or a combination thereof.

Topologies such as those depicted with respect to the controller of may be advantageously employed within the context of the server head end network and or STB . That is by utilizing appropriate operating systems programs and or data the topology depicted with respect to controller is used to realize the functional elements discussed herein with respect to the various figures. As noted in the I O circuitry communicates with network as part of a server function communicates with network and network as part of a head end function and communicates with input device display device network and PVR as part of an STB function.

The invention may be implemented as a computer program product wherein computer instructions when processed by a computer adapt the operation of the computer such that the methods and or techniques of the present invention are invoked or otherwise provided. Instructions for invoking the inventive methods may be stored in fixed or removable media transmitted via a data stream in a broadcast media or other signal bearing medium and or stored within a working memory within a computing device operating according to the instructions.

According to an embodiment of the present invention basic data records or structures area adapted to include an Extension Record which refers back to an original basic record and has specific data associated with it. For example a basic event record i.e. a basic record associated with an event such as a pay per view event or VOD asset may be extended to include a promotional image or jacket art. This solution allows the addition of new data fields to an existing record without requiring changes to the middleware supporting an application or service. Instead a new extension type is defined on the server for all applicable set top box classes and an application request the appropriate extension record for each applicable base record to access the new fields.

In order to allow low powered set top boxes to provide as much data as possible such as interactive program guide data the data records themselves are minimized and all set top boxes use the same records to conserve bandwidth i.e. broadcasting multiple versions of the data for different boxes is wasteful . For this reason we choose to extend the basic data provided for each data record with optional data extension records that can either be accepted or ignored by each set top box.

In one embodiment of the invention for each type of data record provided by a database or i.e. Event Service Event Details Message Application etc. a corresponding number of Extension types are provided. Each record type extension type pair on creation at the server is assigned one of four priorities never store low high or always store for each of the three set top box classes low end mid range high end .

In one embodiment of the invention for each specific record of a given type if the record has data applicable to one of the extension records the server formats that data as an extension record. The extension record is accessed by an applet or other client program which client program has the ability to interpret and otherwise process the extra data. Thus data structures suitable for use within the context of the present invention may be utilized by an application programming interface API within a middleware environment e.g. on a set top box . For example in one embodiment for Event Records an Extension Type contains an image. This is assigned a low priority on all but high end boxes where illustratively the records are to be always stored. In this case an applet such as an applet implementing an interactive program guide when displaying details for a given event may request the extension type for the current event identifier and will be returned data which the applet then interprets as illustratively an image to display promotional artwork related to the event.

The invention provides several advantages such as 1 additional data geared to high end boxes may be provided without encumbering low end boxes with the data or duplicating basic information for the high end boxes 2 additional data fields can be added to the data schema without requiring changes to the middleware and 3 a server UI component allows the addition of new extension record types dynamically so changes can be driven from third party applications and 4 third party software developers to may extend existing listing or other data without needing changes to either the middleware or server e.g. they can dynamically add new fields targeted to the set top boxes on which they want their application to run .

The base record portion comprises basic data from a database associated with a service provider such as a video on demand VOD provider broadcast listing provider application provider or other service provider. The basic data within the base record comprises data that is to be used by every set top box within an information distribution system regardless of class level i.e. thin client thick client and the like .

The extension portion s is used to store extended data or a pointer address or other indicator to the location of the extended data. The extended data may comprise still or moving imagery e.g. promotional imagery and the like content related information such as title genre actors and the like as well as other data useful in implementing an advanced service or function within the client device. Generally speaking extended data stored within or pointed to by the extension portion of the data structure comprises any data that may be used to supplement the service or application supported by the basic data within the base record portion .

The priority portion includes priority per class identifier data. Specifically use of the extended data is optionally divided into a plurality of priority levels depending on the type of extended data provided. Some extended data may be crucial such as billing information while other extended data may be merely useful to provide. Additionally the priority level of the extended data is optionally related to the capability or class of a set top box receiving the data structure .

For illustrative purposes four priority levels are used namely Never Store NS low L high H and Always Store AS . Extended data associated with a NS priority level is never stored by the set top box while extended data associated with an AS priority level is always stored by the set top box. High priority data is preferentially stored before low priority data and then only if memory remains after the storage of the always store data. The priority levels are used to provide guidance to the STB during the processing of extended data.

For illustrative purposes the set top boxes are divided into three classes namely Low End LE Mid Range MR and High End HE set top boxes. A low end set top box may be considered to be a thin client set top box i.e. severely constrained computational and or memory resources . A high end set top box may be considered to be a thick client i.e. ample computational and or memory resources . A mid range set top box may be considered as having some constraints on memory and or computational ability. The STB classes are used to differentiate between set top boxes based upon a capability level such as a capability level identified according to processing and or memory constraints.

It should be noted that a single base record may be associated with multiple extension records and that each of the multiple extension records may be associated with a different set of priorities. For example an event record may have an image extension to be stored on heavy set top boxes only and a third party data extension to be stored on all set top boxes e.g. to enable access to a third party application by all set top boxes .

Generally speaking the invention operates to provide services functions at a level of functionality appropriate to each set top box. Basic services are nominally provided via the base record portion of the data structure . Where additional processing and or memory resources are available at the STB enhanced services and or functions are provided via the extension record portion of the data structure . The suitability of extended data for use in a particular set top box is based on the importance of the extended data to an application or service i.e. the priority as well the ability of the set top box to process the extended data i.e. the STB class . In this manner basic application of functionality is delivered to each class of set top box while those set top boxes capable of or benefiting from additional features are given the opportunity to utilize such features via extended data delivery within the extension portion of the data structure .

At step a next base record is received and stored. Referring to box the next base record is identified via a basic data record operating as a table of contents block which identifies all data blocks available including those for base records and extension records. Other means of identifying the next base record may also be used e.g. a linked list approach .

At step the priority class indicator is examined to determine at step whether the extended data included within or referred to by the extension record is appropriate to the set top box. If the extended data is not appropriate then the method proceeds to step to retrieve and store the next base record.

If the extended data is appropriate to the set top box then at step the extended data is retrieved and processed. Referring to box the extension portion includes either the extended data or information to be utilized or an address or other identification of the extended data or information to be utilized. That is the contents of the extension portion of the data structure may contain the specific information needed to invoke an advanced service or application function e.g. a promotional file and the like or an address or other indicator that is used merely to identify the specific information needed. If an address or indicator is provided then at step the STB propagates a signal back to the server to retrieve the specific information needed to invoke the advanced service or application function. The server processing of this request is discussed below with respect to .

At step the extended data is stored according to the priority per class identifier. That is extended data denoted as always store high priority and or low priority is stored as discussed above with respect to .

The routine of of is adapted to enabling a set top box to retrieve process and optionally store extended data records that are associated with basic data or base records. This processing is performed in a prioritized manner and according to the capabilities of the set top box. Thus the underlying structures utilized by a service or application may be the same for that application irrespective of the set top box within which that application is executed. The application only processes the extended data appropriate to its host set top box. In this manner portability of applications portability of data structures and commonality of application services may be provided within the context of an information distribution system including set top boxes or clients having different capabilities.

At step data records from a services database are received. Referring to box the services database may comprise a video on demand VOD database a broadcast listings database or some other application or services database.

At step those records associated with a particular extension type are identified. Referring to box the particular extension type may comprise an event type a service type an event detail an application type or some other type. Numerous extension types may be defined.

At step the received data records are adapted to include the extension data. That is at step the received data records are adapted to include a base record portion and an extension portion including a type identifier. Such adaptation may comprise for example the segmentation of application data into the basic data necessary to implement the application and extended data useful in providing enhanced application features or functions.

At step the data records are adapted to include priority levels for each set top box class. Referring to box the priority levels comprise illustratively a never store NS low L high H and always store AS priority level as previously discussed. More or fewer priority levels may be utilized. Referring to box the STB classes may comprise low end mid range high end as previously discussed. More or fewer STB classes may be utilized.

At step the adapted records are stored or forwarded to set top boxes per broadcast narrowcast and or point cast channels. That is at step the information provided by the modified data structure is propagated towards the set top boxes for subsequent processing and or storage as appropriate to the service or application.

At step a request for extended data item s is received from a client or more specifically a middleware API operating within the client to support an application or the application applet itself.

At step a request is propagated to the services database or listing proxy associated with the extended data item s . For example a listing proxy may comprise an application or functional entity that integrates content listings for both VOD and broadcast to provide an integrated listing. On those set top boxes where VOD operation is available one application is the generation of such an integrated listing in a timely and accurate manner. Other services databases may be accessed to provide appropriate information in response to the STB request.

The above methods be used independently or in any combination. More specifically various functional elements within the system of may be used to perform all or only a portion of the processing tasks described with respect to the various Figures. For example using the method of the proxy servers may be used to create merged VOD broadcast listing IPG data. The data may be further processed by the server to provide additional IPG application data.

One embodiment of the invention relates to a JAVA application programming interface for providing unified access to video on demand electronic program guide and personal video recorder listings databases at a client device such as a set top box. The embodiment discussed herein with respect to a unified electronic program guide may be implemented using one or more of the techniques discussed above with respect to . It is also noted that the teachings discussed herein with respect to the unified electronic program guide structure may also be performed without using the above described techniques data structures methods and the like.

In order to promote the assets available to users via video on demand VOD multiple system operators MSOs would like those assets to be displayed along with normal TV events where possible. For example if a user searches for movies not only should the movies being shown on regular broadcast TV be included in a subsequently presented list the VOD movie assets and optionally any personal video recorder PVR assets that are available should also be displayed.

Generally speaking the PVR VOD and normal broadcast information are all stored in different locations and traditionally have been accessed by separate application programming interfaces APIs and via separate user interfaces. That is a user must access different user interface screens to access content available from the different sources. There may be commonality in data structures but there is no commonality in usage or access.

An electronic program guide EPG application may provide this functionality by querying a broadcast listing database may be on a server or stored in a STB as part of a standard EPG database and then querying a VOD asset server to produce two respective results. The EPG application then combines the results for display. A VOD asset is treated as a broadcast event except that the VOD asset is not associated with a particular channel or start time since the asset is available at any time on demand though typically provided via a special VOD channel .

However this multiple step process provides unnecessary complication to the EPG application and that complication must be repeated for each application in which listings from both broadcast television and VOD are desired.

Within the context of the present invention VOD assets personal video recorder PVR assets and the like are integrated into a listings database for events from which listings database are retrieved broadcast events VOD assets PVR assets and the like. VOD and or PVR assets are optionally associated with additional data fields such as provided by the data extension mechanisms described above with respect to . Thus an application requesting a mixed set of VOD assets and broadcast events from the listing database forwards the request to a listings proxy. The proxy in turn forwards the request to both the VOD asset provider and the listings provider which responsively provide the respective listings. The proxy then merges the received listings and provides the merged listing to the requesting application. In this manner the process appears seamless to the application while providing a mix of events such as VOD assets and broadcast events. Thus by treating VOD assets as a broadcast event without a channel or start time optionally including the additional data if desired seamless access to VOD and broadcast events from an application point of view is provided.

The method is entered at step where a user interacts with an EPG to enter content search criteria such as referring to box all or portions of title genre actor name and the like. At step the EPG application creates a filter object using the search criteria. At step the EPG passes the filter object to the middleware. At step the middleware queries all available data sources using the filter object such data sources may comprise referring to box personal video recorder PVR sources video on demand VOD sources broadcast television or content sources and other sources or service providers.

At step the middleware merges the resulting record sets into a unified list and sends a notification to the EPG application that the requested data is ready. At step the middleware supplies the first N records to the EPG for formation into a first EPG page where N is an integer. The number N of records to be returned may be a default value or a value selected by the STB in response to a user preference e.g. a user does not want records for time slots beyond 1 week where 3 weeks might otherwise be provided or a value selected by the EPG application based on user interface constraints .

At step the middleware supplies an additional N records to the EPG application for formation into a next EPG page. Referring to box such additional N records supplied at step are provided in response to EPG requests comprising a page up page down previous page or other command indicative of the user desire for a different EPG page. A page up down request is adapted to retrieve a page containing the prior next time slots or channel groups. A previous page request is adapted to retrieve the page most recently viewed.

The above described method of contemplates the retrieval and processing of information from various databases by a middleware platform. However in an alternate embodiment described below the middleware platform utilizes a server or other proxy to access the databases.

At step a user interface retrieves the criteria to be searched. At step an EPG application passes the criteria to the middleware. At step the middleware requests a merge list from a server or other proxy illustratively server in the system of . At step the server queries VOD and broadcast databases utilizing the search criteria. At step the server merges the two record sets resulting from the queries made to the databases. At step the server sends a unified list to the middleware which in turn adds any additional listing data to the unified list e.g. PVR listings data . At step the middleware notifies the EPG application that the search results are ready. At step the EPG application requests next previous records in response to user input indicative of up down scrolling of EPG pages. Generally speaking at step the middleware requests n elements of the merged list from the server and at step the server returns up to n elements. At step when the EPG requests next previous the middleware goes back to step and asks for the next previous n elements if the previous n received can t satisfy the new request.

At step the application sends criteria to the middleware API illustratively a search on titles beginning with the letter F. At step the search criteria is forwarded to the proxy . At step and the proxy forwards the search criteria to respectively the broadcast database and the VOD database . In response each of these databases provides the titles and related requested data pertaining to any movies or assets conforming to the search criteria. At step the middleware API forwards the search criteria to the PVR database which responsively provides the titles and related requested data pertaining to any PVR movies or assets conforming to the search criteria.

At step a results list is generated incorporating the search results from each of the two databases. At step the proxy notifies a middleware API that the results list has been formed and at step the API in turn notifies the application . At step a fetch command is propagated from the application to the API which is in turn propagated to the proxy at step . At step at least a portion of the results list is retrieved by the proxy and forwarded to the middleware API where it is subsequently merged with the PVR list and delivered to the application . While not shown the middleware API propagates a fetch command to the PVR database retrieves a results list from the PVR database and delivers the requested data either by itself or in a merged list with other requested database data to the application .

In various embodiments the proxy performs a unification of the broadcast and VOD database results and sends that partial list back to the middleware. The middleware performs a merge between the server list and the PVR database results. It is noted that STBs with PVR functionality are typically high powered boxes and the number of assets in the PVR database is relatively small on the order of 10s whereas Broadcast and VOD databases will have thousands if not tens of thousands of entries to merge.

In various embodiments the STB reduces the amount of downstream traffic necessary to satisfy STB requests by limiting the results list associated with a request. This is accomplished by illustratively adapting the criteria to reflect a desire for a limited amount of returned data to the STB e.g. upcoming day or week .

In various modifications to the above embodiments the filter criteria sent from the middleware API to the proxy server or other server includes a starting index and maximum count value. The server creates a unified list but only returns a maximum count of elements e.g. n beginning from the starting index position e.g. a certain time or title . When an EPG application asks for a next previous page the existing filter criteria is propagated to the server with a different starting index where the index is modified in a manner adapted to retrieving a next or previous page of EPG data.

In various embodiments of the invention the queries and associated results list are cached by the server. For example where a limited amount of data is desired the server may obtain more that the limited data e.g. more days or weeks and cache the extra data in anticipation of a request for the data via for example a next page command.

While the foregoing is directed to certain embodiments of the present invention these embodiments are meant to be illustrative not limiting. Other and further embodiments of the invention may be devised without departing from the basic scope thereof which is to be determined by the following claims.

