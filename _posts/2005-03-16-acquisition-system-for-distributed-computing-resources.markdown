---

title: Acquisition system for distributed computing resources
abstract: In a resource acquisition system, computing resources are located in different domains, and a resource manager is located in each domain. A scheduler receives a resource acquisition request from a client via a network, and determines at least one administrative domain and transmits to the network a verification request specifying a computing resource and an operation. The resource manager is responsive to the verification request for performing reconfiguration of the specified resource according to the specified operation and verifying that the resource is legitimately reconfigurable, and transmitting back to the scheduler a verification report containing the identifier of the reconfigurable resource. The scheduler is responsive to the verification report for transmitting a reconfiguration request to the resource manager to perform reconfiguration on the verified resource. The scheduler and the resource manager may repeatedly exchange verification requests and verification reports for successively reconfiguring each successive resource according to dependent relationships between computing resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08024740&OS=08024740&RS=08024740
owner: NEC Corporation
number: 08024740
owner_city: Tokyo
owner_country: JP
publication_date: 20050316
---
The present invention relates to a resource acquisition system and method for distributed computing resources.

As described in a document titled A Resource Management Architecture for Metacomputing Systems Karl Czajkowski et al Proc. 4th IPPS SPDP Workshop on Job Scheduling Strategies for Parallel Processing pp. 62 82 1998 the prior art resource acquisition system for distributed computational resources is essentially composed of a broker an information service provider and a number of resource allocation managers located in respective administrative domains all of which are interconnected by a communications network. The information service provider maintains resource information which is periodically updated by the resource allocation managers. For the management of its local computing resources each resource allocation manager is provided with a gatekeeper a job manager a local resource manager and a reporter. In resource acquisition resource user s data is entered to a client terminal and a resource acquisition request is sent from the terminal via the network to the broker inquiring it about computing resources that satisfy the client s requirements. The broker acquires necessary information from the information service provider and selects appropriate resources and sends information back to the client indicating the selected resources.

Next the client terminal requests one or more resource allocation managers to perform reconfiguration on the selected resources by specifying a particular job such as starting up of an application program or guaranteeing a network bandwidth . In each resource allocation manager the gatekeeper is responsible for receiving the client s job and activating the job manager which in turn hands it over to the local resource manager to perform the job on the target resources. However the following shortcomings exist in the prior art system.

First if a resource reconfiguration involves a consecutive series of operations whose executions are constrained to a particular order due to their hierarchically dependent relationships such as between selection of servers and selection of routes for linking the servers it usually takes a long time to complete. If one operation fails subsequent operations cannot proceed and a rollback or compensation must be performed on all reconfigured resources to restore them to original configuration. This represents a substantial waste of time to both users and resource providers.

Therefore a need does exist to allow users to check in advance to see if all steps of reconfiguration can successfully proceed.

Second if target resources are scattered over different domains and the intended reconfiguration is such that hierarchically dependent relations exist between different domains a central management entity such as the broker would take responsibility for obtaining resource information from all domains. However the amount of burden the central management entity would take in selecting resources would become enormous as the distributed computing system grows in size and complexity.

Therefore there exists a need to allow inter domain reconfiguration operations to proceed without concentrating processing loads on a single management entity.

It is therefore an object of the present invention to provide a resource acquisition system and method for a distributed computing system capable of communicating to users an advance report that indicates whether intended reconfiguration can or cannot successfully proceed.

Another object of the present invention is to provide a resource acquisition system and method for a distributed computing system capable of balancing processing loads when requested target resources are scattered across different administrative domains.

A further object of the present invention is to provide a resource acquisition system and method for a distributed computing system capable of reducing average time taken to reconfigure computing resources by separating the whole sequence into a verification preparation phase and a reconfiguration phase.

A further object of the present invention is to provide a resource acquisition system and method for a distributed computing system capable of reducing average time taken to reconfigure computing resources inter related between different domains by successively selecting computing resources in order based on a reconfiguration workflow and in order based on hierarchically dependent relationships between inter domain resources.

A still further object of the present invention is to provide a resource acquisition system and method for a distributed computing system in which a scheduler is responsible for selecting an administrative domain or domains and a resource manager in the selected domain is responsible for selecting individual computing resources so that resources are interactively and hierarchically acquired between the scheduler and the resource manager.

A still further object of the present invention is to provide a resource acquisition system and method for a distributed computing system capable of reducing possibility of accessibility check errors by separating the whole reconfiguration sequence into verification and reconfiguration phases and making a comparison between the results of verification and reconfiguration.

According to a first aspect of the present invention there is provided a resource manager comprising verification mechanism responsive to a verification request for reconfiguring a computing resource verifying that the computing resource is reconfigurable if the reconfigured resource is legitimately accessible and formulating a verification report containing the identifier of the verified computing resource and reconfiguration mechanism responsive to a reconfiguration request which is formulated in response to the verification report for reconfiguring the verified computing resource.

According to a second aspect the present invention provides a resource acquisition system comprising a communications network a first entity connected to the network for receiving a resource acquisition request from a client terminal determining at least one location of computing resources indicated in the resource acquisition request and transmitting to the at least one determined location a verification request specifying a resource and an operation and a second entity connected to the network in the determined location for receiving the verification request and performing reconfiguration of the specified resource according to the specified operation and verifying that the resource is reconfigurable if the reconfigured resource is legitimately accessible and transmitting back to the first entity a verification report containing the identifier of the reconfigurable resource. The first entity is further responsive to the verification report from the second entity for transmitting to the second entity a reconfiguration request to perform the reconfiguration on the verified resource.

The first entity and the second entity may repeatedly exchange the verification request and the verification report for successively reconfiguring each of a plurality of computing resources according to hierarchically dependent relationships that exist between the successively reconfigured computing resource.

According to a third aspect the present invention provides a resource acquisition system comprising a communications network a plurality of distributed computing resources located in a plurality of administrative domains and a plurality of resource managers respectively located in the administrative domains and connected to the network each resource manager performing management of the computing resources located in the same domain as the resource manager. A scheduler is connected to the network for receiving a resource acquisition request from a client terminal via the network determining at least one administrative domain and transmitting to the network a verification request specifying a computing resource and an operation. At least one of the resource managers is responsive to the verification request for performing reconfiguration of the specified resource according to the specified operation and verifying that the resource is legitimately reconfigurable and transmitting back to the scheduler a verification report containing the identifier of the reconfigurable resource. The scheduler is responsive to the verification report for transmitting a reconfiguration request to the at least one resource manager to perform reconfiguration on the verified resource.

According to a fourth aspect the present invention provides a method of performing reconfiguration on distributed computing resources. The method comprises the steps of a receiving a verification request specifying a successive group of resource operation pairs and performing reconfiguration of the specified resource according to the specified operation b verifying that the specified resource is reconfigurable if the reconfigured resource is legitimately accessible c formulating a verification report containing the identifier of the reconfigurable resource and d receiving a reconfiguration request which is formulated in response to the verification report and performing reconfiguration of the verified resource.

According to a fifth aspect the present invention provides a method of performing reconfiguration on distributed computing resources comprising the steps of a receiving a verification request and selecting a computing resource according to the received request b making a reference to a resource database performing reconfiguration of the referenced resource and verifying that the referenced resource is legitimately reconfigurable if accessibility to the reconfigured resource is established c transmitting a verification report containing the resource identifier of the reconfigurable resource and d receiving a reconfiguration request containing the resource identifier and updating the resource database with the resource identifier.

According to a further aspect the present invention provides a resource acquisition method comprising the steps of a at a first location transmitting a verification request specifying each group of multiple reconfiguration groups of resource operation pairs b at a second location receiving the verification request and performing reconfiguration of the specified resource according to the specified operation c at the second location verifying that the specified resource is reconfigurable if the resource can be legitimately accessible d at the second location formulating a verification report containing the identifier of the reconfigurable resource and transmitting the verification report to the first location e at the first location receiving the verification report and transmitting a reconfiguration request to the second location and f at the second location receiving the reconfiguration request and performing reconfiguration of the verified resource.

In there is schematically shown a resource acquisition system for distributed computing resources according to the present invention. The system is comprised of a client terminal a scheduler and a plurality of resource managers associated with multiple computing resources such as host computers switches routers load balancers bandwidth controllers and storage devices located in respective administrative domains . A communications network such as WAN wide area network or LAN local area network or a combination of both establishes connections between the client terminal the scheduler and the resource managers .

Alternatively the computing resources may be connected to the associated resource managers via the communications network and the scheduler may be directly connected to the resource managers.

Scheduler includes a processor connected to the network via a line interface a workflow template memory and a resource database . Workflow template memory maintains a plurality of workflow templates corresponding to different patterns depending on application types.

As described later the processor at scheduler responds to a resource acquisition request from the client terminal by retrieving a workflow template from the workflow template store . One example of the workflow template is shown in . The example workflow template comprises a plurality of reconfiguration steps which are divided into successive groups and in which parent child relationships are established between the groups as indicated by arrowhead lines as represented by a directed acyclic graph a directed graph with no path that starts and ends at the same vertex known as DAG. Each reconfiguration step specifies target resources corresponding in number requested by the client and an operation to be performed on the specified target resources.

The reconfiguration workflow may be manually prepared in advance so that both dependent relationship between resource selections and dependent relationships between reconfiguration operations are satisfied.

Processor adds necessary information to the template according to the contents of the received message to generate an initial workflow as shown in . In this initial workflow the target resources are specified in a categorical term such as hosts with a serial number and the specific operation to be performed on the specified target resources. All stages of the initial workflow are indicated as . Scheduler selects one of the groups of reconfiguration steps in the hierarchical order.

Resource database maintains resource data representing the locations of computing resources available in the resource acquisition system. Using the resource database the processor determines destination domains and identifies destination resource managers and formulates a verification request message with the selected group of reconfiguration data and transmits the verification request to each of the destination resource managers .

Each resource manager includes a processor connected to the network via a line interface a resource database and a reconfiguration data memory . Resource database maintains the database of the associated computing resources which is updated when the computing resources are reconfigured. Reconfiguration data memory is used for mapping reconfiguration steps requested by the client to reconfiguration steps verified by the resource manager.

Processor is responsive to the verification request from the scheduler for performing a verification reconfiguration feasibility test on the target resources specified in the received request and sends a test report back to the scheduler .

If the verification test is proved to be successful the scheduler updates the initial workflow with the actual resource names and their identity contained in the test report and replaces the mark with a mark. The verification test is repeated on the next group of reconfiguration steps if the previous test is proved to be successful. As a result if all reconfiguration steps are verified the initial workflow will be updated as a final workflow as shown in .

When verification tests are repeated between the scheduler and each resource manager the processor of the resource manager updates its resource database successively. Corresponding to the workflows of the resource database is updated as shown in . Details of A C will be described later.

The operation of the resource acquisition system proceeds generally according to the sequence diagram of and more specifically according to the flowcharts of and A D.

As illustrated in the whole sequence is generally divided into a verification phase in which resource selection verification testing and request cancellation if necessary are performed and a reconfiguration phase in which verified steps of reconfiguration are executed. During the verification phase resource selection is first performed by the scheduler which determines an administrative domain from which to acquire target computing resources and then jointly by the scheduler and the resource manager located in the determined domain. In successive hierarchical order the scheduler and the resource manager select a group of target resources according to resource type and resource quantity in an interactive manner until all groups of target resources are selected. If target resources are located in separate domains the scheduler is responsible for directly selecting the target resources from each domain.

If a selected target resource is verified by a resource manager that it can be legitimately acquired for the client the resource manager communicates the ID of the verified resource to the scheduler. The verification process may be repeated a number of times passes . If the target resources are servers and network elements a number of servers are selected in a first pass and then network elements are selected in a second pass. If verification fails in a resource manager the scheduler is so informed and sends a cancellation request to the resource manager to request it to cancel the received verification request.

When all the requested resources are verified the scheduler is so informed and selects during the reconfiguration phase a group of reconfiguration steps according to hierarchical order and requests one or more resource managers to perform the selected reconfiguration steps on specified target resources. If a resource manager fails to reconfigure a verified resource it performs a rollback operation on the verified resource and sends back a reconfiguration report to the scheduler for indicating that the requested reconfiguration has failed.

In response to a resource acquisition request from the client terminal the scheduler performs a workflow generation subroutine . In the scheduler proceeds from block to block to make a search through the template memory for a workflow template corresponding to application type contained in the received request message block . If a corresponding workflow template is not found in the memory flow proceeds to block to send a failure report to the client terminal . If the decision is affirmative in block the scheduler proceeds to block to retrieve the corresponding workflow template from the memory and sets the quantity of the requested computing resources such as the number of servers or network bandwidth to produce an initial reconfiguration workflow .

Scheduler proceeds to workflow updating subroutine in in which it selects from the initial workflow a group of reconfiguration steps which depends on a parent group which is indicated by a mark block . If the group is at the highest rank in the hierarchical order there is no parent group. If this is the case the first group of reconfiguration steps is selected. In the case of the scheduler initially selects the first group of reconfiguration steps and .

In block the scheduler selects an administrative domain and formulates a verification request with the address of the resource manager of the selected domain such as the host name and URL uniform resource locator and with the selected reconfiguration steps block and transmits the verification request to the selected resource manager block as indicated by numeral in and waits for a verification test report from the resource manager . If more than one administrative domain exists for the requested computing resources the same verification request will be sent simultaneously to a number of resource managers.

Referring to the resource manager performs resource selection and verification subroutine in response to the verification request starting with block in which the resource database is searched for candidate computing resources of the requested type and equal or greater in quantity than the requested quantity. If the number of available candidate resources is smaller than that requested block flow proceeds to block to send a failure report to the scheduler . If the number of candidate resources is equal to or greater than that requested flow proceeds to block to exclude resources from the selected group of resources that are not verified in the previous test. In block scores are assigned to candidate computing resources of the selected group according to CPU performance and storage capacity and charges for example. Then the resource manager selects in block a plurality of candidate computing resources in descending order of score equal in number to the requested quantity. If all requested resources are not selected block flow proceeds to block to send a failure report to the scheduler . If all requested resources are selected flow proceeds from block to block to formulate a group of reconfiguration steps indicating the identifiers of the selected resources and operations.

In the resource manager creates a resource status table as illustrated in in the resource database for mapping resource IDs to their current states which are initially idle and their new states which are initially indicated none block . In block the resource manager selects a step from the formulated group of reconfiguration steps and performs the operation specified in the selected reconfiguration step on the specified resource and updates the status of the reconfigured resource in the resource status table. In blocks and ownership right of access check is made on the reconfigured resource to verify that the target resource can be legitimately reconfigured.

One example of the ownership check involves the use of an access control list to verify that the user ID of the requesting terminal is contained in the access control list. Another ownership check involves a comparison between user identifiers if such identifiers are contained in the current and new state fields of the resource status table. Assume that a front end server SERVER ID is reconfigured as add on to a back end server SERVER ID . The new state field of the front end server will be indicated as reconfigured as add on to back end server while the new state field of the back end server is indicated as none . Then the resource manager determines whether the user ID contained in the new state field of SERVER ID matches the user ID contained in the current state field of SERVER ID. If they match ownership right of access is granted.

If it is determined that the target resource can be legitimately reconfigured flow proceeds to block to update the resource status table by setting the reconfigured state of the resource in the new state field of the table as shown in . Otherwise flow returns to block to repeat the resource selection process for a further search through the resource database for another list of available computing resources.

After all reconfiguration operations of the group are performed block the new state fields of the resource status table will be completely filled in with information representing the status of the reconfigured resources as shown in . In block the resource manager stores the data of the verified reconfiguration steps and the identifiers of the verified resources in the reconfiguration data memory and proceeds to block to transmit a verification report to the scheduler containing the identifiers of the verified target resources and the reconfiguration operation to be performed.

Afterwards when reconfiguration is actually performed in response to a reconfiguration request from the scheduler the current states of all entries of the resource status table will be updated with the information of the new state fields and the new states will be marked none as shown in .

Returning to the scheduler receives a verification success report or a verification failure report from the resource manager block . If the scheduler receives a verification report for the selected group of reconfiguration steps flow proceeds to block to update the initial workflow by replacing the mark on the verified group of reconfiguration steps with a mark and replacing the resource names with the resource identifiers contained in the verification report as shown in . Flow proceeds to block to check to see if all reconfiguration steps are verified. If not flow returns to block to repeat the process on the next group that depends on the determined parent group. As a result a second group of reconfiguration steps and is selected block and the same process is repeated. If reconfiguration steps and are verified reconfiguration step will be selected and checked for verification.

If the resource manager receives a failure report block flow proceeds from block to block to determine whether the non verified computing resources can be replaced with other resources. If the decision is affirmative flow returns to block to repeat the process. Otherwise flow proceeds to block to transmit a cancellation request to the associated resource manager for canceling the previously transmitted verification request and transmit a failure notification to the client terminal block . As a result verification requests and verification reports are exchanged a number of times successively on a group by group basis in hierarchical order between the scheduler and the associated resource managers .

If all reconfiguration steps are verified the scheduler proceeds from block to block to workflow execution subroutine by selecting a group of reconfiguration steps from the verified reconfiguration steps contained in the verification report. In block a reconfiguration request is formulated with the selected group of reconfiguration steps and transmitted to the resource manager waiting for a returning reconfiguration report block . When a reconfiguration report is received from the resource manager block the scheduler determines if the report indicates that the requested reconfiguration steps are successfully performed. If the decision is affirmative flow proceeds to block to check to see if all groups are selected. If not flow returns to step to repeat the process. If all groups are selected flow proceeds to block to transmit an end of reconfiguration message to the client terminal . If the reconfiguration report indicates that the requested reconfiguration has failed flow proceeds from block to block to transmit a cancellation request to the resource manager and a failure notification to the client terminal block .

In the resource manager receives the reconfiguration request from the scheduler to perform reconfiguration subroutine by storing the received request in the reconfiguration data memory block . In block a sequence of reconfiguration steps is read out of the reconfiguration data memory corresponding to the reconfiguration steps contained in the stored reconfiguration request and one of the reconfiguration steps is selected from that sequence block and the operation specified by the selected step is executed on the target resources specified by the selected step block . If the specified operation is executed successfully on the specified resources block flow proceeds to block to update the current and new states of the entry corresponding to the reconfigured resource in the resource status table as shown in . Blocks to are repeated until all reconfiguration steps are executed block . When the all reconfiguration steps are executed flow proceeds to block to delete the reconfiguration request from the reconfiguration data memory and transmits a reconfiguration report to the scheduler indicating that the requested computing resources are successfully reconfigured block .

If one of the selected reconfiguration steps is not successfully executed the decision in block is negative and flow proceeds to block to perform a rollback operation so that the target resources and resource database are restored to original state. Resource manager deletes the reconfiguration request from the reconfiguration data memory block and transmits a reconfiguration report to the scheduler block indicating that reconfiguration has failed.

In the resource manager receives a cancellation request from the scheduler during the verification phase block . As mentioned earlier with respect to block of the scheduler transmits a cancellation request to the resource manager when a verification feasibility test indicates that it has failed in verifying reconfiguration. In response to the received cancellation request the resource manager searches through a message queue provided in the line interface for a verification request that corresponds to the cancellation request. If the corresponding verification request is detected flow proceeds from block to block to delete the corresponding verification request from the message queue and a cancellation report is sent back to the scheduler block . If no corresponding verification request is detected flow proceeds to block to search through the reconfiguration data memory for a corresponding sequence of verified reconfiguration steps. If the resource manager detects the corresponding sequence it erases the update data from the new state field of the resource status table block . This cancellation process is in reverse to what is performed by blocks to of . Flow proceeds to block to delete the detected sequence of verified reconfiguration steps detected in block from the reconfiguration data memory . A cancellation report is also sent back to the scheduler either when block is executed or when negative decision is made in block .

In response to the cancellation report the scheduler returns a failure notification to the client terminal block .

The following is a description of a first example of resource acquisition with reference to B C A B and C. In this example the present invention is implemented in a WWW application in which five World Wide Web WWW servers are acquired as front end processors and one application server is acquired as a back end processor. Such a WWW application is extensively used on the Internet as shopping service and electronic commerce. In this application another target resource is the load balancer. Each of the WWW servers operates on a program known as Apache HTTP Server distributed from Apache Software Foundation and the application server operates on a program known as Tomcat distributed from the same source. The WWW servers may execute a process requested from an HTTP client by calling the application server. Each WWW server maintains the address of the application server as a destination and the destination address of a WWW server is maintained in an application. Each server is provided with an agent program for providing start stop control on each application program according to a message from the associated resource manager.

The load balancer is responsible for balancing traffic loads connection requests on the WWW servers. The load balancer may be provided with an agent program for providing add delete configuration control on the WWW servers in response to a command message from the associated resource manager. The network administrator at the client terminal enters the number of required WWW servers to be reconfigured into the WWW application and the number of required application servers to be reconfigured into the WWW application. These items of control data are included in a resource acquisition request and transmitted to the scheduler using a protocol known as SOAP Simple Object Access Protocol . Client terminal may use an API Application Programming Interface such as JAX RPC Java API for XML Based Remote Procedure Call for transmitting a request message via SOAP.

On receiving the resource acquisition request the scheduler performs workflow generation subroutine in which it retrieves a workflow template as shown in from the template memory block and enters the quantity data into the workflow template and indicates all reconfiguration steps as and all unknown target resources and their identity as for example to produce an initial workflow block .

Specifically as illustrated in reconfiguration step indicates target resources identified as and and an operation specifying an instruction to reconfigure the target resources as WWW servers.

Reconfiguration step indicates one target resource identified as and an operation for reconfiguring the target resource as an application server.

Reconfiguration step which depends on steps and indicates target resources identified as and and an operation for setting the identity of to the target resources of step .

Reconfiguration step which depends on parent steps and indicates the resource of step i.e. as its target resource and an operation for setting the identities of all target resources of step to .

Reconfiguration step which depends on parent steps and indicates the load balancer as its target resource and an operation for setting the identities of all target resources of step to the load balancer.

In workflow update subroutine the scheduler transmits a verification request to the resource manager and receives a verification report from the resource manager. By repeating the exchange of these requests and reports the initial workflow is successively updated on a group by group basis producing a final workflow in the scheduler and an initial resource status table in the resource manager . In the illustrated example of reconfiguration steps and are first verified determined and then steps and and finally step .

Therefore in the first exchange of verification request and verification report reconfiguration steps and are performed and and are determined for and respectively and is determined for and the resource status table of the resource manger is updated as shown in .

In the second exchange of verification request and verification report reconfiguration steps and are performed and the identity of is set in the new state fields of the entries of and and the identities of and are set in the new state field of entry of .

In the final exchange of verification request and verification report the identities of and are set in the load balancer.

During subsequent workflow execution subroutine the scheduler formulates a reconfiguration request on a group by group basis using the workflow of and transmits the request to the resource manager as in the previous verification subroutine. Therefore a total of three reconfiguration requests are sent to the resource manager first for reconfiguration steps and second for reconfiguration steps and and finally for reconfiguration step . Therefore in response to the first reconfiguration request the resource manager updates the current state fields of all entries with reconfigured server names. In response to the second reconfiguration request the current state fields of all WWW servers are updated with the identifier of application server and the current state field of application server is updated with the identifiers of all WWW servers. After reconfiguration the resource status table appears as shown in .

Since reconfigurations are performed on a group by group basis during the reconfiguration phase in the same order as in the verification phase a possible failure in reconfiguration can be reduced to a minimum.

The present invention can be advantageously used for building an electronic conferencing system as shown in with distributed computing resources.

As illustrated in the electronic conferencing system is implemented with computing resources located in administrative domains and in which resource managers and are respectively associated with electronic conferencing servers A and A which relay audio and video information between terminals of conference participants at remote locations. More than one server is used in each location as a load balancer to distribute traffic among the terminals.

In the domains and bandwidth controllers B and B are respectively provided for connecting the associated resource managers and servers to the network .

As shown in the scheduler generates a workflow template in response to a resource acquisition request from the client terminal . The request contains information requesting two electronic conferencing servers A and one bandwidth controller B for domain and three electronic conferencing servers A and one bandwidth controller B for domain . The bandwidth controller is designed to guarantee a desired bandwidth to a number of network traffic and is known under the trade names of PacketShaper Packeteer Inc and NetEnforcer Allot Communicaitons Ltd. .

An initial workflow is produced when the scheduler sets the quantity data of the required target resources in the entries of reconfiguration steps and . A bandwidth of 100 Mbps is set in the steps and .

Scheduler transmits a first verification request containing reconfiguration step to the resource manager and a first verification request containing reconfiguration step to the resource manager .

In response to the first verification request the resource manager performs verification on the requested target resources and sends back a first verification report to the scheduler if the requested resources are verified. The first verification report contains identifiers SERVER ID and SERVER ID . Resource manager generates a resource status table as shown in mapping these verified servers to current idle and new state none and then updates the table after verification as illustrated in .

Likewise the resource manager responds to the first verification request by performing verification on the requested target resources and sends back a second verification report to the scheduler if the requested resources are verified. The second verification report contains identifiers SERVER ID SERVER ID and SERVER ID . Resource manager generates a resource status table as shown in mapping these verified servers to current idle and new state none and then updates the table after verification as illustrated in .

Using the received verification reports the scheduler updates the initial workflow with the received identifiers and replaces the mark of steps and with a mark. Then the scheduler transmits a second verification request containing reconfiguration step to the resource manager and a second verification request containing reconfiguration step to resource manager .

In response to the second verification requests the resource managers and perform verification on the requested bandwidth controllers B and B respectively. If they are verified the resource manager sends back a verification report to the scheduler and updates its resource status table as shown in with the verified bandwidth of 100 Mbps as a new state and available bandwidth of 800 Mbps for example set in the current state field of the table. Resource manager sends back a verification report to the scheduler and updates its resource status table as shown in with the verified bandwidth of 100 Mbps as a new state and available bandwidth of 100 Mbps for example set in the current state field of the table.

As a result the scheduler sets the bandwidth of 100 Mbps in the entries of steps and of the workflow and replaces their pending marks with marks as illustrated in .

In the subsequent reconfiguration phase the scheduler formulates reconfiguration requests based on the final workflow and transmits them to the resource managers and respectively to perform reconfiguration on the verified target resources. Since all reconfiguration steps are divided into two groups the scheduler successively transmits two reconfiguration requests to each of the resource managers in the same manner as in the verification phase.

Each resource manager responds to first and second reconfiguration requests from the scheduler. Resource manager first updates its resource status table of so that the current state of the two servers are indicated as electronic conferencing server and subsequently updates the current state of the table by setting 700 Mbps and none in the new state field as shown in . In a similar manner the resource manager first updates its resource status table of so that the current state of the three servers are indicated as electronic conferencing server and subsequently updates the current state of available bandwidth as zero Mbps and the new state field as none .

