---

title: Communication of information via an in-band channel using a trusted configuration space
abstract: Communication of information via an in-band channel using a trusted configuration space is provided. The introduction of using a trusted configuration space associated with a computer bus system, such as PCI Express® (PCIe™), for example, enables the design of trusted computing platforms capable of providing compliant devices with assurance that their trusted configuration registers can only be accessed by software running in the trusted software environment. Establishing device trust in the software that initiates trusted configuration requests makes it possible to secure and control access to certain secret, sensitive, or personally-identifiable information these devices may contain (e.g., a uniquely-identifying public key, as described above or certificate which the device provides for revocation purposes).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07779275&OS=07779275&RS=07779275
owner: Microsoft Corporation
number: 07779275
owner_city: Redmond
owner_country: US
publication_date: 20051123
---
Components within a computer system are typically connected to each other using a bus. A first component communicates data to a second component by writing data to the bus. A second component then receives the data by reading the bus. More than two components may be connected to a bus so conventions exist that allow a given component to determine whether the data on the bus is destined for that component or for a different component. However the architecture of many such busses is such that any component can connect to the bus and can request and receive data off the bus even if the data is not intended for that component. Thus the bus provides an opportunity for spoofing devices and or snooping or modifying data so typical busses may not be appropriate for transmitting private data in the clear.

One context in which it may be undesirable to place data on a typical bus is where the data could identify the user based on a unique hardware identifier. For reasons of privacy many users are wary of unique hardware identifiers and resist using hardware that employs such identifiers. However some hardware components employ unique public private key pairs in order to engage in encrypted communication. While identifying the user is not the primary purpose of the key pair the public key is in fact substantially unique to the hardware and could be used for such an identifying purpose. Since the public key must be transmitted to the entity that will use the key to encrypt information the typical transmission of the key over a bus provides an opportunity for this potentially identifying information to be divulged. Thus there is a probability that unauthorized by the machine s owner user software could initiate requests for such unique IDs then use the IDs in malicious ways to correlate profile user activity on the internet etc.

The present invention provides for communication of information via an in band channel using a trusted configuration space. In one example the communication of information via an in band channel using a trusted configuration space occurs between a first component such as a trusted software application for example and a second component such as a trusted device for example . The first component and second component are communicatively connected to each other through a bus that is accessible to components other than the first component and the second component. A communication connection is established between the first component and the second component wherein the communication connection transmits information through the bus. A datum is transmitted between the first component and the second component using a protected address space i.e. a trusted configuration space associated with the bus such that using the protected address space only allows the first component under special conditions to communicate with the second component.

The protected address space is protected via an access restriction mechanism that only allows access to the protected address space through read or write requests from the first component and second component if the first and second components are identified as trusted components.

Transmitting the datum between the first component and the second component using a protected address space involves communication via protected address space transaction layer packets that are differentiable from transaction layer packets of the non protected address space. The relationship between the first and second component may for example be a requester fulfiller relationship. There is discussion in the specification of establishing ensuring exclusive access to the trusted configuration space TCS mechanisms for the requester i.e. software running in a trusted software environment TSE . However what it means to be a trusted fulfiller i.e. trusted device could be that that the device must provide a TCS and handle the requisite requests or the meaning of trusted could in a more traditional sense include use of an authenticated identity mechanism as a way of establishing identity of the device in a trustworthy fashion.

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes game consoles programmable consumer electronics network PCs minicomputers mainframe computers embedded systems distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules and other data may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The processing unit may represent multiple logical processing units such as those supported on a multi threaded processor. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include the PCI Express PCIe bus. The system bus may be implemented as a point to point connection switching fabric or the like among the communicating devices.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

As discussed above in connection with a computer typically contains a system bus through which different components of computer communicate. Each device or component is often connected to a central root complex via a point to point link. In general when data is to be sent from one component to another the data is written to bus by the sending component and read from bus by the receiving component. shows an example of components and which are connected to bus and may communicate with each other by way of bus . For example component may send data to component by writing the data to bus . The data may then be read from the bus by component . These components and may be software as well as hardware devices.

In order for components to engage in private communication they may establish a communication of information via an in band channel using a trusted configuration space. Specific techniques for establishing communication of information via an in band channel using a trusted configuration space are discussed below in connection with .

In order to ensure that information sent from trusted component to graphics processor cannot be intercepted trusted component encrypts the information prior to sending it. The encrypted information is then decrypted at graphics processor . In the example of graphics processor is physically associated with a public private key pair . Public private key pair comprises a public key and a private key . As is known in the art a variety of algorithms exist that enable information to be encrypted with public key such that the encrypted information is only decryptable with private key . In order to allow trusted component to encrypt information destined for graphics processor graphics processor provides trusted component with public key . Trusted component is then able to send graphics processor encrypted data .

It will be appreciated that if every graphics processor had the same key pair then information encrypted with public key would be vulnerable to a variety of attacks. In particular if someone were to discover private key then this key could be made widely available and no instance of graphics processor would ever be able to rely on key pair for secure communication. Thus part of the security model for graphics processor is that each instance of graphics processor has its own key pair . However since this fact implies that each user s hardware can be identified by a particular number i.e. the public key stored in that user s instance of graphics processor many users feel this number constitutes an electronic fingerprint for the user himself and for privacy reasons are wary of allowing such a number to be divulged. As discussed above in connection with information written to a bus can be intercepted by unintended parties and thus it is desirable to communicate the public key by some mechanism that provides for the trustful location identification and configuration of installed devices such as those like the graphics processor of . One such mechanism is communication of information via an in band channel using a trusted configuration space. which are discussed below show an example involving the PCIe bus of how communication of information via an in band channel using a trusted configuration space can be implemented.

PCI Express or PCIe is an Input Output I O interconnect bus standard which includes a protocol and a layered architecture that expands on and doubles the data transfer rates of original PCI. PCI Express is a two way serial connection that carries data in packets along two pairs of point to point data lanes compared to the single parallel data bus of traditional PCI that routes data at a set rate. Initial bit rates for PCI Express reach 2.5 Gb s per lane direction which equate to data transfer rates of approximately 200 MB s. PCI Express was developed so that high speed interconnects such as 1394b USB 2.0 InfiniBand and Gigabit Ethernet would have an I O architecture suitable for their transfer high speeds. PCI Express also known as 3GIO for third generation Input Output is compatible with existing PCI systems.

PCI Express builds on PCI making it possible to transfer data faster and more efficiently. PCI Express is a serial interconnect standard allowing for low pin count devices and fewer board traces. The PCI Express standard is a dual simplex link meaning data can be transferred in both directions at the same time with lane widths of x1 x2 x4 x8 x12 x16 and x32.

The development of PCI Express was driven by the need to move more data faster than ever before. PCI based systems are reaching their functional limit due to factors such as signal integrity and practicality. Shared buses like PCI can only tolerate so many devices per bus before signal integrity begins to degrade. For a typical 64 bit 66 MHz PCI bus the number of devices is limited to about five per bus segment. To increase the number of devices bridges must be added to another bus segment. Adding bridges adds latency to the system and degrades performance. Also to increase bandwidth in a shared parallel bus system the clock speed or amount of signals must be increased to scale up the bandwidth. A 64 bit PCI or PCI X card already has about 90 signals to contend with so it is becoming impractical to increase bandwidth by adding more signals.

To solve these issues PCI Express is a point to point switch fabric based protocol. Data is sent as a serial bit stream at rates of 2.5 Gb s on each lane. Various lane widths are supported and each lane consists of a pair of differential signals in each direction. A x1 link consists of one signal pair in both the transmit and receive direction making a total of 4 signals. Similarly a x32 link consists of 32 signal pairs in both the transmit and receive directions making a total of 128 signals. The transmit and receive widths on a given link must be symmetrical but devices of different lane sizes can communicate with each other. During link training the lane width of each device is negotiated and the link between the two devices will match the lane width of the smaller device. Because PCI Express is a point to point interconnect switches are used to connect multiple devices in a system. Switches are intermediate devices in the system allowing communication from the root complex to the various end points and vice versa.

PCI Express uses packets to move information through the system which allows for in band communication between applications and devices. Data is encapsulated into packets and sent as a serial stream on the link. The packets contain information such as the destination address amount of data being sent or being read cyclic redundancy checking CRC and the command. PCI Express commands are based largely on familiar commands from PCI. PCI Express uses a split transaction protocol. This means for non posted transactions the receiving device will return a completion allowing the transmitting device to recognize the transaction was completed successfully. Commands available in PCI Express are based on the different address spaces supported. PCI Express supports the same address spaces found in PCI which are configuration IO and memory along with the addition of message address space.

Referring next to shown is a diagram illustrating as an example the PCI bus configuration address space and the PCI Express bus extended configuration address space. PCI Express makes use of the same configuration space model as PCI. The PCI configuration space consists of 256 bytes. Because PCI Express uses this same defined space it ensures that legacy operating systems OSs and device drivers can run on a PCI Express system. For new OSs and device drivers PCI Express extends the 256 byte configuration space to 4 KB . New OSs and device drivers can make use of this extended space to add more flexibility to the system.

Referring next to communication via an in band channel between trusted applications and devices posits and describes the creation and addition of a new optional closely protected address space called Trusted Configuration Space TCS . Unlike conventional standard PC configuration space such as standard PCI Express configuration space shown in TCS address space only allows trusted software under special conditions to identify configure and communicate with trusted system hardware devices. It is important to note that the term trusted is not used herein necessarily in the literal sense but means that a certain set of attributes or security features and or level of security has been agreed to by both the sending and receiving side of the information that is being communicated. How TCS is used to accomplish allowing such communication is described below by using an implementation with PCI Express as one example.

Referring next to shown is a tree diagram illustrating a high level view of an architecture of a system in which communication of information via an in band channel using a trusted configuration space may be implemented. depicts the trusted CPU root complex interface which is in communication with bridges over which trusted in band messages can be delivered and the trusted device interface that may receive or send the trusted in band messages.

Referring next additionally to shown is a block diagram illustrating the architecture of a system embodying the basic flow of . shows how communication of information via an in band channel using a trusted configuration space TCS may be implemented using standard and trusted software environments.

The system uses TCS to communicate from a Trusted Software Environment TSE running on the system to PCI Express trusted devices for example. In the PCI Express example provided herein TCS is an additional PCI Express address space that allows software running in a TSE to configure and communicate with PCI Express trusted devices by issuing trusted configuration requests . These requests use read and write transaction layer packet TLP types that only originate from a TSE . Access to TCS within a trusted software environment is provided via a Trusted Configuration Access Mechanism TCAM . The introduction of TCS enables the design of trusted computing platforms capable of providing compliant devices with assurance that their trusted configuration registers can only be accessed by software running in the TSE . Establishing device trust in the software that initiates trusted configuration requests makes it possible to secure and control access to certain secret sensitive or personally identifiable information these devices may contain e.g. a uniquely identifying public key as described above or certificate which the device provides for revocation purposes . While a full description of a TSE is platform specific the following requirements are provided as an example to apply to a system implementing a TSE capable of issuing trusted configuration transactions 

Referring again to the TCS is for example 4 KB in size and consists of a fixed size header starting at offset 000 h and is followed by a linked list of variable sized capabilities. The header contains the offset of the first trusted capability. Trusted configuration requests are routed by ID bus number device number function number . While TCS address space is independent of standard configuration address space a trusted device may have certain registers that map into both address spaces while a standard device has registers that only map into standard configuration space. Switches such as PCI Express switches for example that support routing of trusted configuration requests also referred to as TCS routing route these trusted configuration requests downstream and do not propagate upstream any trusted configuration requests arriving at one of their downstream ports. This is the same behavior as for configuration requests.

The root complex shown in initiates trusted configuration requests and only in response to a request from a trusted software environment . In the present example no other PCI Express entity is permitted to initiate a trusted configuration request .

Support of TCS may be optional for devices such as the standard device shown in and support for routing of trusted configuration requests may be optional for root ports and switches. An upstream trusted configuration request received at a downstream port may be considered a malformed transaction layer packet TLP and handled accordingly. Also a downstream trusted configuration request received at the upstream port of a switch that does not support TCS routing may also be considered a malformed TLP. Trusted configuration requests are not transmitted to any device that does not indicate support for trusted configuration space or through any switch port that does not indicate support for TCS routing. Trusted configuration requests are not transmitted through a root port that indicates a lack of support for TCS routing.

Switches do not modify trusted configuration requests nor do they convert other types of requests to trusted configuration requests . This also applies to debug modes of the switch. Root complexes implement trusted configuration space only on platforms that provide a Trusted Software Environment .

Host bridges shown in support the TCAM by translating memory mapped host processor accesses into trusted configuration transactions . The TCAM provides a flat memory mapped address range to generate trusted configuration requests . The TCAM closely parallels the Enhanced Configuration Access Mechanism ECAM that handles standard configuration space requests only the TCAM uses a different base address and is usable only by software running within a TSE . For systems that provide a processor architecture specific firmware interface for accessing standard configuration space instead of providing an ECAM a firmware interface would be provided for accessing TCS instead of providing a TCAM . In such implementations the firmware supports execution from within the TSE . Also if a platform allows software outside of the TSE to run concurrently with software inside the TSE then the platform must provide a mechanism for software running in the TSE to monitor and or control configuration changes e.g. bus number assignment that occur during the time TCAM is being used.

Also because root complex implementations are not required to support the generation of trusted configuration requests from memory space accesses that cross DW boundaries or that use locked semantics the generation of such requests are not caused when using the TCAM unless it is known that the root complex implementation being used supports the translation.

Referring next to shown is a diagram of a trusted configuration space index register utilized in communication of information via an in band channel using a TCS . A 32 bit TCS index register created for example at 0xFED48000 selects which device s configuration space is targeted by accesses to the 4Kb TCS data page. Read and writes to this page are then translated into trusted configuration accesses addressed to the device selected by the 32 bit TCS index register . This index register selects a single device s configuration space using its trusted bus number device number and function number in the PCI Express example as described below 

Transaction layer packet TLP types used in implementing communication of information via an in band channel using a trusted configuration space with the PCI Express bus consist of two new added trusted configuration packets TCfgRd and TCfgWr shown below .

Alternatively referring next to shown is a chart illustrating as an example transaction layer packet TLP types used in an alternative implementation of communication of information via an in band channel using a trusted configuration space with the PCI Express bus. The new TLP types are trusted configuration TLPs analogous to standard PC configuration space TLPs with type 0 1 read and writes together with trusted completions. The communication of information via an in band channel using a trusted configuration space with the PCI Express bus is cognizant of the hierarchical nature of the bus. Trusted bus numbers are used to route trusted configuration TLPs . Trusted configuration packets implement RequestorID in terms of the trusted bus number.

The TCS headers follow the same header format as traditional type 0 and 1 headers. Many registers are now entirely reserved e.g. command and status registers not used . This allows for the future definition of trusted memory and I O spaces. For Type Bridge headers bus number registers are used by trusted software to program trusted bus numbers. Root Ports that route TCS requests set a TCS Routing Supported bit in their PCI Express capabilities register for both upstream and downstream ports.

Referring again to and Configuration Access Correlation CAC capability is an extended capability that is implemented by a device that provides a TCS . The CAC is used to validate accesses made to the device via the TCAM . Contained within the CAC is a read only 32 bit value that is used by software running within the TSE to validate that standard configuration space accesses performed via ECAM are targeting the same device as TCS accesses performed via the corresponding TCAM . Referring next to and shown are diagrams detailing as an example the allocation of register fields in a CAC capability structure and CAC trusted capability structure respectively. Devices that implement the CAC capability also implement the corresponding CAC trusted capability in TCS . Both capabilities access the same register for the device correlation. It is by this means that correlation is verified by software running in the TSE .

The exemplary implementation using PCI Express described above is merely one example of how communication of information via an in band channel using a TCS may be accomplished. The example provided above highlights the ability to remain closely similar to a current standard i.e. traditional PC configuration space implementations which are more familiar to implementing practitioners. Other implementations and embodiments are possible. Furthermore it is noted that the foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to various embodiments it is understood that the words which have been used herein are words of description and illustration rather than words of limitations. Further although the invention has been described herein with reference to particular means materials and embodiments the invention is not intended to be limited to the particulars disclosed herein rather the invention extends to all functionally equivalent structures methods and uses such as are within the scope of the appended claims. Those skilled in the art having the benefit of the teachings of this specification may effect numerous modifications thereto and changes may be made without departing from the scope and spirit of the invention in its aspects.

