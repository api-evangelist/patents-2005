---

title: System and method of measuring the reliability of a software application
abstract: A computer automated system for measuring software reliability is provided. The system comprises a data store including mean-time-between-failure and mean-time-to-repair metrics for applications and an analysis component. The analysis component determines a reliability index for an application and generates a report associating the reliability index with the application. The reliability index is determined based on dividing the mean-time-between-failure of the application by the mean-time-to-repair of the application. An embodiment of the computer automated system further includes a maintenance financial index that is used to evaluate the development plan, where the maintenance financial index is based on the product of the reliability index multiplied by a delivery rate metric. The delivery rate metric is proportional to a software size metric and inversely proportional to a software development effort metric.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07464119&OS=07464119&RS=07464119
owner: Sprint Communications Company L.P.
number: 07464119
owner_city: Overland Park
owner_country: US
publication_date: 20050728
---
This application includes subject matter related to U.S. patent application Ser. No. 10 867 074 entitled Productivity Measurement and Management Tool filed Jun. 14 2004 by Abdul G. Akram et al which is incorporated herein by reference for all purposes.

The present disclosure is directed to computer software and more particularly but not by way of limitation to a system and method for measuring the reliability of software.

A number of factors are involved in the quality of computer programs computer applications and or computer software. Some of these factors include correctness reliability efficiency usability maintainability testability flexibility portability re usability and interoperability. Correctness may be defined as the extent to which the subject software complies with specifications and user objectives for the software. Reliability may be defined as the extent to which the software is expected to perform its intended function. Efficiency may be defined as the amount of computing resources the software consumes while executing. Usability may be defined relative to how much effort is required to learn operate prepare input and prepare output. Maintainability may be defined by the effort required to locate and resolve operational issues for example bugs or crashes. Testability may be defined by the effort required to test the software. Flexibility may be defined by the effort required to modify the software to add functionality. Portability may be defined by the effort required to install the software on a different execution platform and bring it into service. Re usability may be defined by the extent to which software can be used in other applications. Interoperability may be defined by the effort required to interface one software system with another software system.

A computer automated system for measuring software reliability is provided. The system comprises a data store including mean time between failure and mean time to repair metrics for applications and an analysis component. The analysis component determines a reliability index for an application and generates a report associating the reliability index with the application. The reliability index is determined based on dividing the mean time between failure of the application by the mean time to repair of the application. An embodiment of the computer automated system further includes a maintenance financial index that is used to evaluate the development plan where the maintenance financial index is based on the product of the reliability index multiplied by a delivery rate metric. The delivery rate metric is proportional to a software size metric and inversely proportional to a software development effort metric.

A method of maintenance and productivity management is provided. The method comprises determining a reliability index of an application the reliability index proportional to a mean time between failure of the application and inversely proportional to a mean time to repair of the application. The method also comprises evaluating the performance of a development team based on the reliability index.

A computer automated system for measuring application delivery efficiency is also provided. The computer automated system comprises an analysis component operable to determine a maintenance financial index of an application based on dividing a first product by a second product the first product based on multiplying a mean time between failure by a size of the application and the second product based on multiplying a mean time to repair of the application by a development effort of the application. The analysis component is also operable to generate a report associating the maintenance financial index with the application wherein the development effort the mean time between failure and the mean time to repair are based on statistics reported on the application.

These and other features and advantages will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an exemplary implementation of one embodiment of the present disclosure is illustrated below the present system may be implemented using any number of techniques whether currently known or in existence. The present disclosure should in no way be limited to the exemplary implementations drawings and techniques illustrated below including the exemplary design and implementation illustrated and described herein.

Measurements of work products and or work processes also referred to as metrics may be used to evaluate completed projects or delivered products. A completed project for example may be a data mining application that has been completed tested and brought into service. A delivered product for example may be a wireless handset that has been designed manufactured and shipped to distribution centers and or retail outlets for sale. Metrics may also be used to compare between alternative courses of action. Metrics may be used to define a goal for a project for example a project to be completed by an outsourcing company. A plurality of factors may contribute to the success of a project and identifying a metric that represents several factors concurrently is useful. This disclosure describes a reliability index RI metric that is proportional to a mean time between failure MTBF of a product and inversely proportional to a mean time to repair MTTR of the product. The larger the value of the reliability index the higher the quality of the product. A delivery rate DR metric is also disclosed that represents the efficiency of delivering a work product and is proportional to the size of the work product and inversely proportional to the effort consumed in delivering the work product. Again the larger the value of the delivery rate metric the higher the productivity or delivery rate for the subject product.

This disclosure further describes a maintenance financial index MFI that combines the reliability index metric with the delivery rate metric thereby joining an indication of quality of the product with an indication of productivity or efficiency. The maintenance financial index metric is proportional to the product of the reliability index and to the delivery rate. The maintenance financial index may be used to specify expectations of a work team either an in house work team or an outsourced work team and or to evaluate the success of a completed work effort.

Turning now to a block diagram of a system that may be used to determine the maintenance financial index for one or more products is depicted. The system maintains a plurality of basic metrics on each of a plurality of products for example a computer program or application that are collected for each product over the life of the product. The basic metrics include a mean time between failure a mean time to repair an effort and a size . In an embodiment the system may maintain basic metrics on other items such as electronic components electronic assemblies mechanical components mechanical assemblies and or other components and assemblies.

In an embodiment the length of time in hours of uninterrupted service of each product between failures of that product is accumulated and the mean time between failure metric is calculated as an average of time between failure for each product. The failure events which terminate uninterrupted service intervals may be defined to be failures that result in a failure report or repair ticket being generated. In other embodiments other criteria for determining that a failure event has occurred may be employed. A failure severity level may be employed in determining that a failure has occurred. In an embodiment the length of time in minutes consumed repairing each product is recorded for each failure event and the mean time to repair metric is calculated as an average of repair times for each product.

In an embodiment the effort metric expended in developing or otherwise producing the products is accumulated. The effort metric may be quantified as a number of labor hours expended to deliver the product. In an embodiment the effort may be quantified by accumulating labor hours multiplied by a labor cost to take account of different labor wage rates within the product or application development labor pool.

The size metric of the products may be determined differently depending on the product. The size metric may be evaluated based on a physical volume of the product on a physical weight of the product or some other dimension of the product. For software products or computer applications the size metric may be evaluated using function point analysis a business operation point analysis and or a lines of code count or other techniques known to those of skill in the art.

Function point analysis is a standardized means of determining the size metric of a software application that involves identifying and counting functionalities or function points to be delivered by an application based on a requirements document or other statement of deliverable functionality. The more function points to be delivered the greater the size metric. The employment of function point analysis to determine the size metric may have some disadvantages. For example determining the size metric based on function point analysis may be a highly subjective and manually intensive process. Personnel may have to analyze documents and perform the function point analysis manually a labor intensive and time consuming activity. Additionally the criteria for identifying function points may be ambiguous. It sometimes happens that different analysts working on the same proposed project functionality may arrive at different function point counts. U.S. patent application Ser. No. 10 867 074 entitled Productivity Measurement and Management Tool filed Jun. 14 2004 by Abdul G. Akram et al discloses an embodiment that is directed to a tool that can automatically generate a level of effort estimate based on objective criteria that may be used in determining the size metric. The tool allows organizations to readily and accurately identify all the functionality required by a new application or project to be developed by an outsourced supplier. The tool also identifies any of the functionality that has already been developed such as in a previous project to accurately assess development costs and avoid being charged by an outsourcing provider for developing functionality that may have already been developed.

A business operation point BOP is defined to be a communication or an interaction described in an analysis model where the communication is between any two applications or within an application between any two components. A modeled communication request is a business operation point and a modeled communication response to the request is another business operation point. The modeled communication may be a method call or an application programming interface API call invoked by one application or component. The modeled communication may be a return from a method call or an API call such as a response provided by one application or component. Since the business operation points are defined to be part of the analysis model counting business operation points may be performed prior to the implementation phase of the project and may be used to determine the size metric.

The system includes an analysis component that has access to the mean time between failure the mean time to repair the effort and the size metrics. The analysis component may calculate one or more intermediate metrics based on the mean time between failure the mean time to repair the effort and the size metrics. In an embodiment the analysis component calculates a reliability index RI based on the mean time between failure and the mean time to repair . The reliability index may be calculated as RI MTBF MTTR where the mean time between failure MTBF metric is represented in hours and the mean time to repair MTTR metric is represented in minutes. In another embodiment however the mean time between failure metric and the mean time to repair metric may be represented in different time units or in some specific time increment or time interval. The reliability index grows larger as the mean time between failure increases. The reliability index also grows larger as the mean time to repair grows smaller. The reliability index is proportional to MTBF and inversely proportional to MTTR. In an embodiment the reliability index may be scaled by dividing by a scaling factor to make the magnitude of the number more manageable. For example a reliability index having a value that is generally in the range from 0 to 10 may be more easily included in reports and or other communications than a value in the range from 0 to 100 000. In an embodiment where MTBF is represented in hours and MTTR is represented in minutes the scaling factor may have a value in a range from about two to about fifty. In another embodiment a scaling factor may be arbitrarily selected to provide a number whose size is preferable or manageable. More ideally the scaling factor may use a logarithmic representation of the value of the reliability index to allow for the reduction in the magnitude scale as well as for easier initial comprehension.

A reliability index above a threshold high value may not be useful or meaningful. In an embodiment where the reliability index is calculated as RI MTBF 10 MTTR Where MTBF is represented in hours and MTTR is represented in minutes the maximum value of the reliability index may be limited to a value in a range from about twenty to about one hundred. The minimum value may be about 0.1 or in a range of from about 0.001 to about 0.5. In other embodiments other scaling factors other time units and other maximum values may be used. The reliability index metric provides a figure of merit for evaluating the quality of a product or software application. In particular the reliability index metric may be useful for comparing the quality or reliability of two or more similar products or software applications.

In an embodiment the analysis component calculates a delivery rate DR metric based on the size and the effort metrics as DR size effort The units may vary depending on the method by which the basic metrics the effort and the size metrics are determined. The delivery rate metric may be scaled as appropriate to produce a manageable number. The delivery rate metric provides a figure of merit for evaluating the efficiency of producing or developing a product or software application. In particular the delivery rate metric may be useful for comparing the development efficiency of two or more similar products or software applications.

In an embodiment the analysis component calculates a maintenance financial index MFI that is proportional to both the reliability index and the delivery rate. In an embodiment the maintenance financial index may be determined as MFI RI DR The scaling of the reliability index and the delivery index provides scaling of the maintenance financial index. In the preferred embodiment a scaling factor is applied to the reliability index and delivery index before the maintenance financial index is calculated. In other embodiments the scaling factor may be multiplied times the product of the reliability index times the delivery rate to obtain the maintenance financial index. The maintenance financial index provides a figure of merit for evaluating the quality and or reliability of a product in combination with the efficiency of product development. In particular the maintenance financial index may be useful for comparing between two or more different developments or substantially similar products. The maintenance financial index may be useful for specifying expectations to an outsourcing provider or to an internal development group. For example management may challenge an internal development group to achieve a five percent increase in the maintenance financial index for a second product development cycle relative to a first product development cycle. Alternatively management may provide a bonus incentive to an outsourcing provider for increasing and or a penalty for reducing the maintenance financial index of products produced in a later development cycle versus an earlier development cycle. In the past focusing on quality alone or delivery rate alone has been observed to lead to sacrificing the alternate parameter undesirably. Depending on past or recent experience a scaling factor could be applied individually to one or the other of the reliability index RI or delivery rate DR to increase the focus on that result to achieve a desired balance. In an embodiment the maintenance financial index may be represented by logarithmic values to make the magnitude of the number more manageable.

The maintenance financial index may also be employed for performing engineering trade studies. For example a project may be analyzed for cost sensitivity to reliability index changes. It may be that reducing a project requirement to achieve a reliability index of. down to a reliability index of 45 may reduce project costs by 30 percent. If this reliability index of 45 is still acceptable to management substantial savings may be realized thereby increasing the maintenance financial index.

In an embodiment the analysis component may produce a report containing various combinations of a reliability index metric a delivery rate metric and a maintenance financial index metric for each of a plurality of products.

Turning now to a flow diagram depicts a method of determining and using the reliability index the delivery rate and the maintenance financial index metrics. The method begins at block where a maintenance productivity metric objective is specified for a software application. In an embodiment the maintenance productivity metric may include the reliability index RI and the maintenance financial index MFI metric. In an embodiment specifying the maintenance productivity metric objective may include specifying a performance bonus for exceeding the maintenance productivity metric objective and or specifying a performance penalty for failing to achieve the maintenance productivity metric objective. For example in an embodiment an outsourcer may be offered a fixed award for exceeding the maintenance productivity metric objective by fifteen percent or more and a fixed deduction for falling short of the maintenance productivity metric objective by more than fifteen percent. In other embodiments other reward and penalty arrangements may be employed including a proportional scale including maximum reward and penalty amounts. The objective may also be referred to as a target. While in a development of a software application is depicted and described in another embodiment it is contemplated that these metrics and this process may be applied to other kinds of projects and development efforts.

The method proceeds to block where the mean time between failure the mean time to repair the effort and the size metrics are determined for the application in production. The effort and the size metrics may be determined at or shortly after completion time. The mean time between failure and the mean time to repair metrics may be determined from logistical analysis based on the rolling up of mean time between failure and mean time to repair metrics of component parts. Alternatively the mean time between failure and the mean time to repair metrics may be determined from maintenance records accrued over a representative period of service for example over a year of service.

The method proceeds to block where the reliability index RI is determined for the application in production as RI MTBF MTTR.

The method proceeds to block where the maintenance productivity metric for example the maintenance financial index MFI is determined based on the mean time between failure the mean time to repair the effort and the size metrics of the product. The maintenance productivity metric is proportional to the mean time between failure and the size metrics and is inversely proportional to the mean time to repair and the effort metrics. In an embodiment scaling factors may be applied to calculating the maintenance productivity metric directly or to individual base metrics.

The method proceeds to block where the maintenance productivity metric achieved by the product development is compared to the maintenance productivity metric objective specified in block for example comparing the target reliability index to the actual reliability index and the target maintenance financial index to the actual maintenance financial index. This activity may involve determining a percentage of variance either plus or minus from the maintenance productivity metric objective.

The method proceeds to block where the percentage variance from the maintenance productivity metric objective is optionally used to determine a performance bonus or to levy a performance penalty. In other embodiments the outsourcer may be paid a variable rate such as per hour for software development adjusted based on the quality as determined for example by the maintenance productivity metric objective. Thus the outsource supplier developer has an economic incentive to continually monitor and improve the quality of software and systems provided by the outsourcer. The method then exits.

The system described above may be implemented on any general purpose computer with sufficient processing power memory resources and network throughput capability to handle the necessary workload placed upon it. illustrates a typical general purpose computer system suitable for implementing one or more embodiments disclosed herein. The computer system includes a processor which may be referred to as a central processor unit or CPU that is in communication with memory devices including secondary storage read only memory ROM random access memory RAM input output I O devices and network connectivity devices . The processor may be implemented as one or more CPU chips.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs which are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data which are read during program execution. ROM is a non volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage. The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage .

I O devices may include printers video monitors liquid crystal displays LCDs touch screen displays keyboards keypads switches dials mice track balls voice recognizers card readers paper tape readers or other well known input devices. The network connectivity devices may take the form of modems modem banks ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA and or global system for mobile communications GSM radio transceiver cards and other well known network devices. These network connectivity devices may enable the processor to communicate with an Internet or one or more intranets. With such a network connection it is contemplated that the processor might receive information from the network or might output information to the network in the course of performing the above described method steps. Such information which is often represented as a sequence of instructions to be executed using processor may be received from and outputted to the network for example in the form of a computer data signal embodied in a carrier wave

Such information which may include data or instructions to be executed using processor for example may be received from and outputted to the network for example in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embodied in the carrier wave generated by the network connectivity devices may propagate in or on the surface of electrical conductors in coaxial cables in waveguides in optical media for example optical fiber or in the air or free space. The information contained in the baseband signal or signal embedded in the carrier wave may be ordered according to different sequences as may be desirable for either processing or generating the information or transmitting or receiving the information. The baseband signal or signal embedded in the carrier wave or other types of signals currently used or hereafter developed referred to herein as the transmission medium may be generated according to several methods well known to one skilled in the art.

The processor executes instructions codes computer programs scripts which it accesses from hard disk floppy disk optical disk these various disk based systems may all be considered secondary storage ROM RAM or the network connectivity devices .

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein but may be modified within the scope of the appended claims along with their full scope of equivalents. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

Also techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be coupled through some interface or device such that the items may no longer be considered directly coupled to each other but may still be indirectly coupled and in communication whether electrically mechanically or otherwise with one another. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

