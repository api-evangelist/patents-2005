---

title: System for abstracting audio-video codecs
abstract: A game system utilizes a codecs abstraction laver (CAL) to allow the game system to accommodate new and/or modified codecs without requiring the game application code to be modified. The CAL, functioning as an application programming interface (API), operates between media sources and the game application. The game application interacts with the CAL and not the codec. Differences between codecs are transparent to the game application. New codecs can be introduced and used by existing applications without modifying the existing application code. The CAL processes media from a variety of sources such as memory, files, http sources, queues, custom sources, external drives, or game media sources (e.g., XMedia). The CAL determines the source of the media, the type of media being received (e.g., audio, video, image, animation, or game), and the codec used to compress the media. The CAL provides the decoded media to the game application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07634727&OS=07634727&RS=07634727
owner: Microsoft Corporation
number: 07634727
owner_city: Redmond
owner_country: US
publication_date: 20050426
---
The present invention generally relates to game systems and more specifically to an application programming interface API for interfacing a game system application with a variety of codecs.

Game systems are known in the art. Example game systems include Microsoft Corporation s Xbox and Xenon game systems. The ever changing dynamic multi media industry is having an impact on game systems. Further user preferences change. What is popular today may not be popular tomorrow. New and improved multi media formats and compression schemes are continuously being marketed. For example new improved codecs are frequently developed and implemented. A codec is a compression and decompression algorithm that can be implemented in software hardware or a combination thereof. Typically a codec is used to translate media e.g. video audio image game between its stored or transmitted compressed form and its rendered uncompressed form. Generally as new codecs are implemented applications interfacing with the new codecs must be modified to be compatible with them. This can be time consuming burdensome and expensive. This is especially true in game systems because game systems already in the hands of users are not readily modifiable.

As new codecs are developed as existing codecs are modified or as user preferences change it would be advantageous for game systems to be compatible with the new modified codecs without requiring modification of the game application. Thus a game system allowing implementation of new and or modified codecs without requiring a modification to the game application code is desired.

In an exemplary embodiment of the present invention a codecs abstraction layer is implemented between a media source and a game application. The codecs abstraction layer CAL is implemented in the form of a computer program or programs and in an exemplary embodiment is implemented as an application programming interface API . The CAL is capable of processing media from a variety of sources encoded in accordance with a variety of codecs. The CAL is also capable of decoding the encoded media in accordance with the appropriate codec. The CAL provides the decoded media to the game application. The CAL determines the source of the media the type of media being received and the codec used to compress the media. Media sources include memory a file an http source a queue a custom source an external drive or a game media source e.g. XMedia for example. Media types include audio media video media image media animation game media or a combination thereof for example. The CAL ensures that media is appropriately obtained and formatted from the media source and that the encoded media is properly decoded for rendering via a game media player. The game application interacts with the CAL and not the codec. Differences between codecs are irrelevant to the game application. New codecs can be introduced and used by existing applications without modifying the existing application code.

As technology improves and user demands increase new codecs will be developed and existing codecs will be modified. Thus it would be advantageous for game developers to develop game systems capable of accommodating new codecs and modified codecs. A game system in accordance with an exemplary embodiment of the present invention is capable of accommodating new and modified codecs without requiring modifications to the game application. This is accomplished by implementing an extensible codecs abstraction layer CAL . The CAL manages the different codecs and media formats such that the game application interacts with the CAL and not a specific codec.

Codec is an abbreviation for compression and decompression. Media is compressed to reduce the size or amount of the media information. Compressed media is decompressed to obtain the original media or an approximation to the original media. Typically compression techniques are lossy meaning that information that is redundant or is not perceivable to a user is discarded and not retrievable. Compression and decompression are typically more sophisticated than the names may imply. Compressing media involves encoding the media in accordance with sophisticated signal processing techniques and decompressing the compressed media involves decoding the media in accordance with sophisticated signal processing techniques of the same codec.

Many types of codecs are currently in existence and many existing codecs are used with a variety of formats. For example Pulse Code Modulation PCM is used for transmitting and storing uncompressed media. PCM is a generic algorithm used by many applications and devices such as CDs and digital audio tapes DATs for example. Variations of PCM include differential pulse code modulation DPCM and adaptive differential pulse code modulation ADPCM . DPCM is a lossy compression technique that uses the difference between consecutive samples of the media. ADPCM is similar to DPCM except that the number of bits used to represent the difference between samples varies depending upon characteristics of the media signal. PCM and its variants are commonly used for WAV files. A WAV file is a default format used on WINDOWS PCs. WAV files can also be encoded in the MP3 format. MP3 is a moving picture experts group MPEG Layer III format. MP3 provides a relatively high level of compression and thus is commonly used to provide media over the Internet to store media on devices having limited storage capacity and on portable players. Advanced Audio Coding AAC also referred to as MP4 is an encoding decoding technique that provides better quality media at lower bit rates than MP3. Another format known as law compression is a lossy format that can be used on WAV files. Further Microsoft Corporation has developed codecs for use with media formatted in accordance with the Windows Media Audio WMA format.

Media is provided to the system via media source . The media source can comprise a single media source or multiple media sources. Example media sources include a file a queue memory e.g. semiconductor memory registers an HTTP source a game source e.g. Xmedia an external drive e.g. a hard disk drive a DVD player a CD player a memory stick a custom media source a network or a combination thereof. The media provided to the system can be in accordance with any combination of the following formats WAV MP3 AAC MP4 WMA PCM DPCM and ADPCM. The system is capable of accommodating at least the aforementioned media formats. The media provided to the system can comprise any combination of multiple types of media. Example types of media include audio media video media image media e.g. JPEG format BMP format TIFF format game media e.g. Xmedia animation media movie media multi media or a combination thereof. As described in more detail below media provided to the system by media source can be raw formatted encoded or a combination thereof.

Media is provided to the receiver portion . The receiver portion can comprise any appropriate receiver capable of receiving media from the media source s . In an exemplary embodiment of the present invention the receiver formats received media into streaming media. As is known in the art streaming media is provided in a constant flow. Streaming media is advantageous for use with many types of media because uninterrupted flow of media is achievable. Streaming media is particularly applicable to game media because users do not want to experience gaps or interruptions during game play. Although media provided by the receiver portion is depicted as streaming media it is not limited thereto. Media provided by the receiver portion also can be provided in discrete entities e.g. downloaded .

The decoder portion receives media from receiver portion . If the media is encoded the decoder portion decodes the media in accordance with an appropriate decoder. The decoder portion decodes media in accordance with any of the above described decoding techniques.

The memory portion receives the decoded media from the decoder portion . The memory portion can comprise any appropriate memory. Examples of appropriate memory include semiconductor memory magnetic memory static memory volatile memory optical memory a register or a combination thereof. In an exemplary embodiment of the present invention the memory portion is implemented as a memory queue. The decoder portion provides decoded media to respective memory queues. That is for each codec type the decoded media is provided to a separate and dedicated memory queue. The dedication of a separate memory queue for each type of decoded media facilitates expeditious processing of media.

Decoded media is provided to the renderer via the memory portion . The renderer processes and or formats the media for the media player . The system can comprise one or more media players . The renderer appropriately renders media for each media player implemented. For example if the media player comprises a DVD player the renderer processes and formats media such that it can be rendered by the DVD player. If the media player is a game media player e.g. Xenon the renderer processes and formats the audio video and or animation media such that it can be properly rendered by the game media player.

The stream object is used to load media from a given media source e.g. file a queue memory e.g. semiconductor memory registers an HTTP source a game source e.g. Xmedia an external drive e.g. a hard disk drive a DVD player a CD player a memory stick a custom media source a network and expose it to the other objects. The decoder object takes an encoded media stream and decodes it using an appropriate codec. As described below there is a decoder class for each codec envisioned to be utilized by the game system e.g. Xenon . The renderer object takes a stream output from the decoder object and provided via the memory queue and renders the decoded media e.g. via audio and video outputs as controlled by the medial player object . One renderer class is implemented for each base class of decoder. For example there is a base class decoder from which all audio decoders are derived and there is a corresponding audio renderer class. The player object is a client of the other classes designed for a specific task such as playing audio playing video or playing DVD movies for example. The media player object provides control to the decoder object the memory queue and the renderer object via control signals and respectively.

Although the description of the present invention has been in the context of an exemplary game system capable of accommodating a plurality of codecs it is also applicable to more generic computing environments wherein a plurality of codecs can be accommodated. illustrates an example of a suitable computing system environment in which an exemplary embodiment of the present invention can be implemented. The computing system environment is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Neither should the computing environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment .

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The invention can be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules and other data may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . In an exemplary embodiment of the present invention the computer comprises a game console. Components of computer can include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus can be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Associaiion VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

The computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and non volatile media removable and non removable media. By way of example and not limitation computer readable media can comprise computer storage media and communication media. Computer storage media includes both volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or non volatile memory such as ROM and RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer can also include other removable non removable volatile non volatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable non volatile magnetic media a magnetic disk drive that reads from or writes to a removable non volatile magnetic disk and an optical disk drive that reads from or writes to a removable non volatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile non volatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user can enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown can include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but can be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which can comprise a graphics processing unit GPU and video memory . In addition to the monitor computers can also include other peripheral output devices such as speakers and printer which can be connected through an output peripheral interface .

The computer can operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer can be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted include a LAN and a WAN but can also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the internet. The modem which can be internal or external can be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof can be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.

As mentioned above while exemplary embodiments of the present invention have been described in connection with various computing devices the underlying concepts can be applied to any computing device or system in which it is desired to accommodate a new and or modified codecs without requiring modification of application code utilizing media processed via the new and or modified codecs.

The various techniques described herein can be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the present invention or certain aspects or portions thereof can take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers the computing device will generally include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. The program s can be implemented in assembly or machine language if desired. In any case the language can be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus of the present invention can also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer or the like the machine becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally any storage techniques used in connection with the present invention can invariably be a combination of hardware and software.

A CAL in accordance with an exemplary embodiment of the present invention provides a unified simple interface to multiple codecs coming from different sources. The complexity of adding new codecs is reduced. Low level codecs libraries can be replaced at any time without the need to revise client application code. Development time is reduced due to the ability to reuse code. The CAL provides a simple and unified mechanism for any codec to be exposed to game developers via XMedia library APIs. Input and output from CAL objects is abstracted via stream class which can be almost anything such as a memory file a network a queue or a user defined input for example. Implementation of the CAL improving system testing because by feeding data to and from the stream it can be can be easily verified if individual components are working correctly.

While the present invention has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments can be used or modifications and additions can be made to the described embodiments for performing the same function of the present invention without deviating therefrom. For example an exemplary embodiment of the present invention can comprise a media source extraction layer MSAL implemented between the media source and the stream object as depicted for example in . The stream object would interact with the MSAL and not the media source. Differences between media sources would be irrelevant to the stream object. New media sources could be introduced and used by the stream object without modifying the stream object. Thus the present invention should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

