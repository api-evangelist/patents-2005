---

title: Method and apparatus for speech synthesis without prosody modification
abstract: A speech synthesizer is provided that concatenates stored samples of speech units without modifying the prosody of the samples. The present invention is able to achieve a high level of naturalness in synthesized speech with a carefully designed training speech corpus by storing samples based on the prosodic and phonetic context in which they occur. In particular, some embodiments of the present invention limit the training text to those sentences that will produce the most frequent sets of prosodic contexts for each speech unit. Further embodiments of the present invention also provide a multi-tier selection mechanism for selecting a set of samples that will produce the most natural sounding speech.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07127396&OS=07127396&RS=07127396
owner: Microsoft Corporation
number: 07127396
owner_city: Redmond
owner_country: US
publication_date: 20050106
---
The present application is a divisional of and claims priority from U.S. patent application Ser. No. 09 850 527 filed May 7 2001 now U.S. Pat. No. 6 978 239 which claims priority from a U.S. Provisional Application having Ser. No. 60 251 167 filed on Dec. 4 2000 and entitled PROSODIC WORD SEGMENTATION AND MULTI TIER NON UNIFORM UNIT SELECTION. 

The present invention relates to speech synthesis. In particular the present invention relates to prosody in speech synthesis.

Text to speech technology allows computerized systems to communicate with users through synthesized speech. The quality of these systems is typically measured by how natural or human like the synthesized speech sounds.

Very natural sounding speech can be produced by simply replaying a recording of an entire sentence or paragraph of speech. However the complexities of human languages and the limitations of computer storage make it impossible to store every conceivable sentence that may occur in a text. Because of this the art has adopted a concatenative approach to speech synthesis that can be used to generate speech from any text. This concatenative approach combines stored speech samples representing small speech units such as phonemes diphones triphones or syllables to form a larger speech signal.

One problem with such concatenative systems is that a stored speech sample has a pitch and duration that is set by the context in which the sample was spoken. For example in the sentence Joe went to the store the speech units associated with the word store have a lower pitch than in the question Joe went to the store Because of this if stored samples are simply retrieved without reference to their pitch or duration some of the samples will have the wrong pitch and or duration for the sentence resulting in unnatural sounding speech.

One technique for overcoming this is to identify the proper pitch and duration for each sample. Based on this prosody information a particular sample may be selected and or modified to match the target pitch and duration.

Identifying the proper pitch and duration is known as prosody prediction. Typically it involves generating a model that describes the most likely pitch and duration for each speech unit given some text. The result of this prediction is a set of numerical targets for the pitch and duration of each speech segment.

These targets can then be used to select and or modify a stored speech segment. For example the targets can be used to first select the speech segment that has the closest pitch and duration to the target pitch and duration. This segment can then be used directly or can be further modified to better match the target values.

For example one prior art technique for modifying the prosody of speech segments is the so called Time Domain Pitch Synchronous Overlap and Add TD PSOLA technique which is described in Pitch Synchronous Waveform Processing Techniques for Text to Speech Synthesis using Diphones E. Moulines and F. Charpentier Speech Communication vol. 9 no. 5 pp. 453 467 1990. Using this technique the prior art increases the pitch of a speech segment by identifying a section of the speech segment responsible for the pitch. This section is a complex waveform that is a sum of sinusoids at multiples of a fundamental frequency F. The pitch period is defined by the distance between two pitch peaks in the waveform.

To increase the pitch the prior art copies a segment of the complex waveform that is as long as the pitch period. This copied segment is then shifted by some portion of the pitch period and reinserted into the waveform. For example to double the pitch the copied segment would be shifted by one half the pitch period thereby inserting a new peak half way between two existing peaks and cutting the pitch period in half.

To lengthen a speech segment the prior art copies a section of the speech segment and inserts the copy into the complex waveform. In other words the entire portion of the speech segment after the copied segment is time shifted by the length of the copied section so that the duration of the speech unit increases.

Unfortunately these techniques for modifying the prosody of a speech unit have not produced completely satisfactory results. In particular these modification techniques tend to produce mechanical or buzzy sounding speech.

Thus it would be desirable to be able to select a stored unit that provides good prosody without modification. However because of memory limitations samples cannot be stored for all of the possible prosodic contexts in which a speech unit may be used. Instead a limited set of samples must be selected for storage. Because of this the performance of a system that uses stored samples without prosody modification is dependent on what samples are stored.

Thus there is an ongoing need for improving the selection of these stored samples in systems that do not modify the prosody of the stored samples. There is also an ongoing need to reduce the computational complexity associated with identifying the proper prosody for the speech units.

A speech synthesizer is provided that concatenates stored samples of speech units without modifying the prosody of the samples. The present invention is able to achieve a high level of naturalness in synthesized speech with a carefully designed speech corpus by storing samples based on the prosodic and phonetic context in which they occur. In particular some embodiments of the present invention limit the training text to those sentences that will produce the most frequent sets of prosodic contexts for each speech unit. Further embodiments of the present invention also provide a multi tier selection mechanism for selecting a set of samples that will produce the most natural sounding speech.

Under those embodiments that limit the training text only a limited set of the sentences in a very large corpus are selected and read by a human into a training speech corpus from which samples of units are selected to produce natural sounding speech. To identify which sentences are to be read embodiments of the present invention determine a frequency of occurrence for each context vector associated with a speech unit. Context vectors with a frequency of occurrence that is larger than a certain threshold are identified as necessary context vectors. Sentences that include the most necessary context vectors are selected for recording until all of the necessary context vectors have been included in the selected sub set of sentences.

In embodiments that use a multi tier selection method a set of candidate speech segments is identified for each speech unit by comparing the input context vector to the context vectors associated with the speech segments. A path through the candidate speech segments is then selected based on differences between the input context vectors and the stored context vectors as well as some smoothness cost that indicates the prosodic smoothness of the resulting concatenated speech signal. Under one embodiment the smoothness cost gives preference to selecting a series of speech segments that appeared next to each other in the training corpus.

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer .

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic FR infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one preferred embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device within the scope of the present invention.

Under the present invention a speech synthesizer is provided that concatenates stored samples of speech units without modifying the prosody of the samples. The present invention is able to achieve a high level of naturalness in synthesized speech with a carefully designed speech corpus by storing samples based on the prosodic and phonetic context in which they occur. In particular the present invention limits the training text to those sentences that will produce the most frequent sets of prosodic contexts for each speech unit. The present invention also provides a multi tier selection mechanism for selecting a set of samples that will produce the most natural sounding speech.

Before speech synthesizer can be utilized to construct speech it must be initialized with samples of speech units taken from a training text that is read into speech synthesizer as training speech .

As noted above speech synthesizers are constrained by a limited size memory. Because of this training text must be limited in size to fit within the memory. However if the training text is too small there will not be enough samples of the training speech to allow for concatenative synthesis without prosody modifications. One aspect of the present invention overcomes this problem by trying to identify a set of speech units in a very large text corpus that must be included in the training text to allow for concatenative synthesis without prosody modifications.

Initially large corpus is parsed by a parser semantic identifier into strings of individual speech units. Under most embodiments of the invention especially those used to form Chinese speech the speech units are tonal syllables. However other speech units such as phonemes diphones or triphones may be used within the scope of the present invention.

Parser semantic identifier also identifies high level prosodic information about each sentence provided to the parser. This high level prosodic information includes the predicted tonal levels for each speech unit as well as the grouping of speech units into prosodic words and phrases. In embodiments where tonal syllable speech units are used parser semantic identifier also identifies the first and last phoneme in each speech unit.

The strings of speech units produced from the training text are provided to a context vector generator which generates a Speech unit Dependent Descriptive Contextual Variation Vector SDDCVV hereinafter referred to as a context vector . The context vector describes several context variables that can affect the prosody of the speech unit. Under one embodiment the context vector describes six variables or coordinates. They are 

Under one embodiment the position in phrase coordinate and the position in word coordinate can each have one of four values the left phonetic context can have one of eleven values the right phonetic context can have one of twenty six values and the left and right tonal contexts can each have one of two values. Under this embodiment there are 4 4 11 26 2 2 18304 possible context vectors for each speech unit.

The context vectors produced by generator are grouped based on their speech unit. For each speech unit a frequency based sorter identifies the most frequent context vectors for each speech unit. The most frequently occurring context vectors for each speech unit are then stored in a list of necessary context vectors . In one embodiment the top context vectors whose accumulated frequency of occurrence is not less than half of the total frequency of occurrence of all units are stored in the list.

The sorting and pruning performed by sorter is based on a discovery made by the present inventors. In particular the present inventors have found that certain context vectors occur repeatedly in the corpus. By making sure that these context vectors are found in the training corpus the present invention increases the chances of having an exact context match for an input text without greatly increasing the size of the training corpus. For example the present inventors have found that by ensuring that the top two percent of the context vectors are represented in the training corpus an exact context match will be found for an input text speech unit over fifty percent of the time.

Using the list of necessary context vectors a text selection unit selects sentences from very large corpus to produce training text subset . In a particular embodiment text selection unit uses a greedy algorithm to select sentences from corpus . Under this greedy algorithm selection unit scans all sentences in the corpus and picks out one at a time to add to the selected group.

During the scan selection unit determines how many context vectors in list are found in each sentence. The sentence that contains the maximum number of needed context vectors is then added to training text . The context vectors that the sentence contains are removed from list and the sentence is removed from the large text corpus . The scanning is repeated until all of the context vectors have been removed from list .

After training text subset has been formed it is read by a person and digitized into a training speech corpus. Both the training text and training speech can be used to initialize speech synthesizer of . This initialization begins by parsing the sentences of text into individual speech units that are annotated with high level prosodic information. In this is accomplished by a parser semantic identifier which is similar to parser semantic identifier of . The parsed speech units and their high level prosodic description are then provided to a context vector generator which is similar to context vector generator of .

The context vectors produced by context vector generator are provided to a component storing unit along with speech samples produced by a sampler from training speech signal . Each sample provided by sampler corresponds to a speech unit identified by parser . Component storing unit indexes each speech sample by its context vector to form an indexed set of stored speech components .

Under one embodiment the samples are indexed by a prosody dependent decision tree PDDT which is formed automatically using a classification and regression tree CART . CART provides a mechanism for selecting questions that can be used to divide the stored speech components into small groups of similar speech samples. Typically each question is used to divide a group of speech components into two smaller groups. With each question the components in the smaller groups become more homogenous. The process for using CART to form the decision tree is shown in .

At step of a list of candidate questions is generated for the decision tree. Under one embodiment each question is directed toward some coordinate or combination of coordinates in the context vector.

At step an expected square error is determined for all of the training samples from sampler . The expected square error gives a measure of the distances among a set of features of each sample in a group. In one particular embodiment the features are prosodic features of average fundamental frequency F average duration F and range of the fundamental frequency F for a unit. For this embodiment the expected square error is defined as EQ. 1 where ESE t is the expected square error for all samples X on node t in the decision tree E E and Eare the square error for F F and F respectively W W and Ware weights and the operation of determining the expected value of the sum of square errors is indicated by the outer E .

Each square error is then determined as j a b c EQ. 2 where R F is a regression value calculated from samples X on node t. In this embodiment the regression value is the expected value of the feature as calculated from the samples X at node t R F E F X node .

Once the expected square error has been determined at step the first question in the question list is selected at step . The selected question is applied to the context vectors at step to group the samples into candidate sub nodes for the tree. The expected square error of each sub node is then determined at step using equations 1 and 2 above.

At step a reduction in expected square error created by generating the two sub nodes is determined. Under one embodiment this reduction is calculated as EQ. 3 where WESE t is the reduction in expected square error ESE t is the expected square error of node t against which the question was applied P t is the percentage of samples in node t ESE l and ESE r are the expected square error of the left and right sub nodes formed by the question respectively and P l and P r are the percentage of samples in the left and right node respectively.

The reduction in expected square error provided by the current question is stored and the CART process determines if the current question is the last question in the list at step . If there are more questions in the list the next question is selected at step and the process returns to step to divide the current node into sub nodes based on the new question.

After every question has been applied to the current node at step the reductions in expected square error provided by each question are compared and the question that provides the greatest reduction is set as the question for the current node of the decision tree at step .

At step a decision is made as to whether or not the current set of leaf nodes should be further divided. This determination can be made based on the number of samples in each leaf node or the size of the reduction in square error possible with further division.

Under one embodiment when the decision tree is in its final form each leaf node will contain a number of samples for a speech unit. These samples have slightly different prosody from each other. For example they may have different phonetic contexts or different tonal contexts from each other. By maintaining these minor differences within a leaf node this embodiment of the invention introduces slender diversity in prosody which is helpful in removing monotonous prosody.

If the current leaf nodes are to be further divided at step a leaf node is selected at step and the process returns to step to find a question to associate with the selected node. If the decision tree is complete at step the process of ends at step .

The process of results in a prosody dependent decision tree of and a set of stored speech samples indexed by decision tree . Once created decision tree and speech samples can be used under further aspects of the present invention to generate concatenative speech without requiring prosody modification.

The process for forming concatenative speech begins by parsing a sentence in input text using parser semantic identifier and identifying high level prosodic information for each speech unit produced by the parse. This prosodic information is then provided to context vector generator which generates a context vector for each speech unit identified in the parse. The parsing and the production of the context vectors are performed in the same manner as was done during the training of prosody decision tree .

The context vectors are provided to a component locator which uses the vectors to identify a set of samples for the sentence. Under one embodiment component locator uses a multi tier non uniform unit selection algorithm to identify the samples from the context vectors.

At step the N samples with the closest context vectors are retained while the remaining samples are pruned from node array to form pruned leaf node array . The number of samples N to leave in the pruned nodes is determined by balancing improvements in prosody with improved processing time. In general more samples left in the pruned nodes means better prosody at the cost of longer processing time.

At step the pruned array is provided to a Viterbi decoder which identifies a lowest cost path through the pruned array. Under a single tier embodiment of the present invention the lowest cost path is identified simply by selecting the sample with the closest context vector in each node. Under a multi tier embodiment the cost function is modified to be 

The smoothness cost in Equation 5 is defined to provide a measure of the prosodic mismatch between sample j and the samples proposed as the neighbors to sample j by the Viterbi decoder. Under one embodiment the smoothness cost is determined based on whether a sample and its neighbors were found as neighbors in an utterance in the training corpus. If a sample occurred next to its neighbors in the training corpus the smoothness cost is zero since the samples contain the proper prosody to be combined together. If a sample did not occur next to its neighbors in the training corpus the smoothness cost is set to one.

Using the multi tier non uniform approach if a large block of speech units such as a word or a phrase in the input text exists in the training corpus preference will be given to selecting all of the samples associated with that block of speech units. Note however that if the block of speech units occurred within a different prosodic context the distance between the context vectors will likely cause different samples to be selected than those associated with the block.

Once the lowest cost path has been identified by Viterbi decoder the identified samples are provided to speech constructor . With the exception of small amounts of smoothing at the boundaries between the speech units speech constructor simply concatenates the speech units to form synthesized speech . Thus the speech units are combined without having to change their prosody.

Although the present invention has been described with reference to particular embodiments workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention. In particular although context vectors are discussed above other representations of the context information sets may be used within the scope of the present invention.

