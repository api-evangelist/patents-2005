---

title: Method, system and program product that utilize a hierarchical conceptual framework to model an environment containing a collection of items
abstract: A method, system and program product are disclosed for enabling a user to construct a conceptual hierarchical framework representing a virtual or physical environment. The framework may then be populated with a collection of items. Users may graphically and intuitively view and manipulate various subsets of the environment's space as well as items placed within the modeled environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08010571&OS=08010571&RS=08010571
owner: Verizon Business Global LLC
number: 08010571
owner_city: Basking Ridge
owner_country: US
publication_date: 20050527
---
The present application is a continuation of U.S. patent application Ser. No. 09 995 193 filed Nov. 27 2001 which is a continuation in part of U.S. patent application Ser. No. 09 702 184 filed on Oct. 31 2000 which is a continuation of U.S. patent application Ser. No. 08 823 561 filed on Mar. 25 1997 and entitled System and Method to Automate Equipment Placement at Remote Sites. The present application is also related to the following U.S. patents which are assigned to the assignee of the present application and incorporated herein by reference in their entireties U.S. Pat. Nos. 5 930 779 5 991 759 6 089 050 6 169 987 and 6 023 699.

The present invention relates in general to data processing and in particular to a data processing system method and program product that utilize a hierarchical conceptual framework to model an environment containing a collection of items.

Affordable technology and in particular the availability of powerful commercially affordable computer systems and associated data storage has revolutionized business practices and management over the preceding decades. This revolution has affected all aspects of business including data management in accounting payroll and human resources systems business communication business forecasting and market modeling warehouse supply chain and product distribution management and facility management.

The above referenced patents represent a significant advance in facility management by disclosing a software tool referred to herein as SiteVu that can be utilized not only for general site planning of an organization s physical plant but also to specifically record maintain and view the placement of and information of interest associated with specific physical assets within the physical plant. SiteVu provides these features through a hierarchical conceptual framework that enables a user to intuitively create and maintain a detailed data model of an organization s physical assets.

Although SiteVu has definite applicability to the design and management of telecommunications field sites as discussed above the present invention recognizes that its use is by no means limited to such applications. Rather the hierarchical conceptual framework employed by SiteVu is broadly applicable to the creation display and management of a collection of items in a modeled environment.

The present invention provides a method system and program product for modeling an environment containing a collection of items. In accordance with a preferred embodiment of the method of the present invention an environmental hierarchy describing a model environment a product catalog containing data describing a plurality of items that may be utilized to populate the modeled environment and a configuration library containing data describing a spatial relationship between first and second items among the plurality of items in the product catalog are created. The modeled environment is then populated by storing in a database data representative of the spatial relationship between the environmental hierarchy and a collection of items including the first item.

In the figures like reference numbers generally indicate identical functionally similar and or structurally similar elements. The figure in which an element first appears is indicated by the leftmost digit s in the reference number.

The present invention is directed to a data processing system method and program product that allow a user to construct a conceptual hierarchical framework representing a virtual or physical environment and then populate the environment with a collection of items. The present invention permits users to graphically and intuitively view and manipulate various subsets of the environment s space as well as items placed within the modeled environment. The user is also able to create and store tabular information describing the configuration of the graphical objects and the items represented by the graphical objects. The detailed description is arranged as follows 

The present invention is described herein with reference to an exemplary embodiment in which a software application suite named SiteVu is executed by a data processing system having an input device and display to provide all of the features of the present invention. The description in such terms is provided for convenience only and is not intended to limit the present invention. In addition the present invention is principally described herein as applied to the telecommunications industry. However as made clear by the range of exemplary applications set forth in Section XI the present invention is not limited to application within the telecommunications industry but is instead applicable to other industries and environments. In fact after reading the following description other embodiments and applications of the present invention will become apparent to persons skilled in the relevant art s .

In some embodiments of the present invention network can be a company wide intranet. In other embodiments local area networks LANs or wide area networks WANs such as multiple LANs linked together with bridges routers or the like can be used as network . In addition network can include switched networks and other forms of common carrier transmission lines and equipment that can link remote computers such as the remote workstations to relational database .

Also depicted in are file server log and a storage device storing architectural drawings. In a preferred embodiment each computer system executes software that performs computer aided drafting and design CADD functions. As described below the CADD software is controlled by the SiteVu program in a preferred embodiment of the present invention. In this example architectural drawings may be stored on local storage devices in each of workstations or in a central file server such as file server . This aspect of the present invention is described below.

In this example relational database is coupled to a database server . Relational database can be implemented for example with an Oracle relational database supplied by Oracle Corporation. Further Microsoft Windows available from Microsoft Corporation of Redmond Wash. can be used as the operating system for computer systems used to execute the SiteVu suite including the SiteVu placement tool and the CADD programs. Finally in a preferred embodiment the CADD program used is Microstation CADD manufactured by Bentley Systems Inc.

Referring first to the logical components of database are depicted according to a preferred embodiment of the present invention. Specifically in this example database comprises a site hierarchy repository a product catalog a configuration library a placement library user security pick lists connections and power tables . A more detailed description of a database for telecommunications applications is subsequently described below in section VIII with reference to .

Referring now to exemplary SiteVu components and their associated inputs and outputs are illustrated.

As indicated in SiteVu central database is preferably a relational database management system. The SiteVu tool comprises the following components SiteVu Power Pages SVPP SiteVu Rackface tool SVRF SiteVu Administrative tool SVAD SiteVu Placement tool SVPL and SiteVu Report Generator SVRP .

As shown in power page reads data from and stores data in database . Power page provides power estimates for remote field sites. In a preferred embodiment a web browser is used to input data into power page from workstation and to output data from power page to workstation .

As depicted in rackface tool reads data from and stores data in database . Rackface tool is used to define components for product catalog . Further rackface tool is used to define configured shelves using empty shelves and modules from product catalog and store configured shelves in the configuration library . In addition rackface tool is used to define configured racks from rails and configured shelves from the product catalog and configuration library respectively. Such configured racks also referred to as racks are stored in configuration library .

In addition rackface tool is used to operate on footprints. As stated footprints are racks that have been placed in remote sites via placement tool described below . Specifically in a preferred embodiment rackface tool is used to display information about footprints and to replace one footprint with another footprint as described below.

In a preferred embodiment rackface tool is implemented using the Microsoft Windows operating system. Thus Windows Application Programming Interface is used to implement the functions provided by the rackface tool on a workstation .

In addition rackface tool reads data from the product catalog to create shelf configurations that are stored in the configuration library . Further configured shelf data from configuration library is used to create rack configurations that are also stored in configuration library . Site hierarchy data are read from the site hierarchy repository and used to replace generic footprints with manufacturer specific footprints. Further placement data are read from the placement library and used to display footprint information and replace generic and manufacturer specific footprints as described below.

User and security data are read by rackface tool to determine access rights and the like for particular users. In addition placement data are read from the placement library when rackface tool replaces generic footprints as described below.

Examples of data output from rackface tool as indicated by data out list include product catalog data configured shelves data and configured rack data. For example rackface tool is used to create components for product catalog . An example of a process that can be used to create components in product catalog is described below with reference to .

Similarly rackface tool is used to create entries in the configuration library . An example of a process that can be used to create data entries for configuration library is described below with reference to B and .

Another example of data output from rackface tool includes data used to update placement library . For example placement library is updated when a generic footprint is replaced with a manufacturer specific footprint as described below.

As shown in administrative tool reads data from and stores data in database . Administrative tool is used to create and update pick lists user security data and site hierarchy repository . In a preferred embodiment administrative tool is implemented using the Windows operating system. Thus Windows Application Programming Interface is used to implement the functions provided by administration tool on a workstation .

As indicated by data out list administrative tool creates and updates pick lists and user security data . In addition this tool can be used to create part of the site hierarchy that is stored in site hierarchy repository as described below. Specifically the sites buildings or structures and the non graphical portion of the floor level hierarchies if any can be created utilizing administrative tool .

As indicated by placement tool reads data from and stores data to database . Specifically placement tool can be used to create footprints i.e. equipment placed on the floor space by placing racks in remote sites. Such data are stored in placement library . In a preferred embodiment placement tool is also implemented using the Windows operating system. In addition graphics are provided by a CADD program such as Microstation CADD as previously described.

As indicated by data out list placement tool uses a site hierarchy e.g. from a site down to a floor established by administrative tool to create graphical and database representations of remote sites buildings floor zones rows specifically row segments and footprints. Placement tool can also be used to update both the graphical representations and the database data associated with these objects. Therefore the tool can be used to update site hierarchy data configuration data pick list data and placement data .

As indicated in report generator reads data from database to generate reports. In the illustrated embodiment report generator is implemented using Microsoft Access . Reports can be printed on a printer .

As noted above in telecommunications applications of SiteVu network equipment to be managed within remote sites is typically arranged and mounted in equipment racks. is an illustration depicting a typical equipment rack . Equipment rack comprises a plurality of shelves generally . In this example shelf comprises a plurality of vertically positioned slots generally . Typically circuit cards such as circuit card are installed in slots .

As described below with reference to data related to particular modules that can be used to configure shelves according to a preferred embodiment of the present invention are stored in product catalog . For example circuit card is an example of a type of module that is preferably represented in product catalog . Other examples of modules can be represented in product catalog are workstation and modem . As shown in modules and belong to the configuration of shelves according to a preferred embodiment of the present invention.

In the illustrated exemplary embodiment zones typically represent physical locations in which equipment of a particular class is placed. In a preferred embodiment racks cannot be placed unless the equipment class of the rack matches the equipment class of the zone in which the rack is being placed. This restriction can be overridden however by a user with superuser permissions.

In this example planning units are specified so that multiple users can define row segments in the same zone at the same time. In a preferred embodiment database is shared by multiple users. However in order to maintain data integrity certain precautions must be taken. In this example when a user is in the process of defining rows and placing row segments via placement tool as described below other users are prevented from accessing certain portions of site hierarchy repository . In particular the site hierarchy level immediately above the row level being defined is preferably locked. Because of this locking planning units are implemented in the site hierarchy between row levels and zone levels . As a result planning unit is locked from other users instead of the zone level . In this manner several users can work simultaneously to define row segments within the same zone .

Further in this example footprints can only be created in row segments . As described below a physical row in a site may comprise one or more row segments . In the simple example shown in there is a one to one correspondence between physical rows and row segments . However a site hierarchy level called a row segment is used in a preferred embodiment of the present invention to prevent users from placing racks in areas that have physical obstructions. For example suppose a physical obstruction such as a building support column is present within a particular row in a field site. In this case the physical row is represented by two row segments that are placed to avoid the obstruction. In this fashion since racks can only be placed within row segments a user cannot inadvertently place a rack in the same position as the obstruction.

As noted above an implementation of the present invention provides a means for defining components including modules shelves and rails which are stored in product catalog . Preferably detailed information pertaining to each component within the product catalog is defined during a data entry process.

Examples of attributes that can be specified in step include identifying attributes physical attributes electrical and connection attributes and status attributes. Identifying attributes include for example manufacture s name manufacturer s model number service provider s identifier bar code identifier manufacture s part number manufacturer s description face label equipment class code and equipment subclass code.

Physical attributes generally include height width depth and weight. Typical electrical attributes include voltage type a voltage quantity current and current quantity. Further in a preferred embodiment additional data fields are included that indicate whether or not the attributes have been completely specified.

In step the user specifies a unique identifier for the newly created component. Next step indicates the component is stored in product catalog . The process ends with step .

The process begins with step . In step the user specifies a unique name for the new shelf configuration. Typically this name must be unique in database . In addition values are specified for required fields. For example in a preferred embodiment required fields include a manufacturer an equipment class and an equipment subclass. Note that in a preferred embodiment a value for manufacturer or generic is used for generic racks as previously described.

Next in step a pick list comprising a list of predefined components from product catalog is displayed to the user. Thus components that have been created according to the process depicted in are listed in step .

Specifically in this example a list of shelf components is presented to the user. In a preferred embodiment sort find and filter options are provided to assist the user in finding a particular component listed in product catalog . In any case the user is prompted to select a particular shelf from the pick list presented in step .

Next as step indicates if a desired shelf cannot be found in product catalog control passes to step . This can occur for example if a user desires to use a particular shelf that has not yet been created via the data entry process depicted in . Accordingly the user has the option to create a new product catalog component as indicated by step . Process steps that can be used to create a product catalog component are presented in as previously described.

On the other hand as indicated by step if the pick list in step contains the desired shelf component the user selects the shelf component in step . Control then passes to step . In step the user adds modules to the selected shelf.

A process that can be used to add modules to a selected shelf is presented in . The process begins with step . In step the user is presented with a pick list that contains a list of predefined modules from product catalog . In a preferred embodiment sort find and filter options are provided to assist the user in finding a particular module from product catalog . Examples of predefined module types include circuit cards computer terminals and other equipment such as modem . Modules are components that are generally installed on shelves .

As step indicates if the desired module is included in the list presented in step control passes to step where the user selects the module. If not once again the user has the option to create a product catalog component as indicated by step .

After a module has been selected in step control passes to step . In step the selected module is placed in the first available slot on the configured shelf . Next as step indicates the user is presented with a graphical representation of the shelf and the module as selected from steps and respectively. Control then passes to step . In step the user has the option to modify the shelf. As step indicates this includes for example adding moving and deleting modules. In addition the user can list information about the configured shelf. As indicated by step if the user chooses to add more modules to the shelf control passes to step and steps are repeated.

As stated above in a preferred embodiment users edit a configured shelf in step by directly manipulating graphical representations of the selected modules from step . For example in one implementation users drag graphical representations of the selected modules to particular locations within the graphical representation of the selected shelf. Preferably a mouse or other pointing device is used to accomplish this task.

After the user has completed modifying the shelf control passes to step . In step the configured shelf is stored in configuration library and the process ends at step . In a preferred embodiment the user also has the option to store the shelf as a work in progress to be completed later. In addition other status such as pending approval standard or special can be specified. Preferably only configured shelves with a status of approved standard i.e. standard configured shelves that have been approved or special can be used in a configured rack. After one or more shelves have been configured and stored in the configuration library according to the process in the configured shelves can be used to create configured racks.

If a rail is selected in step control passes to step . In step the user is presented with a list of the available configured shelves from configuration library . In a preferred embodiment only shelves that are compatible with the selected rail are presented. Further as previously noted in a preferred embodiment only configured shelves having a status of approved standard or special will be presented in the list in step . Note that the configured shelves presented in the pick list in step are shelves that have been configured according to the process depicted in as previously described. In step the user selects a configured shelf from the pick list presented in step .

In step a graphical representation of the selected shelf and rail is presented to the user. This graphical representation is presented to allow the user to directly manipulate and modify the configured rack as described below with reference to step . In step the user has the option to modify the rack. As step indicates this includes for example adding moving and deleting shelves. In addition the user can list information about the configured rack. As indicated by step if the user wishes to add additional shelves to the rack control passes to step and steps are repeated.

As stated above in a preferred embodiment users modify a configured rack in step by directly manipulating the graphical representations of the selected shelves from step . For example in one implementation users drag graphical representations of the selected shelves to particular locations within the graphical representation of the selected rail. After racks have been configured for example by using the process depicted by the flowchart in the racks can be placed within a site. The explanation of how an environment hierarchy e.g. a site hierarchy is built and how graphical objects such as racks are placed within the environmental hierarchy is presented in sections VIII and X below.

Referring now to there are illustrated a number of boxes that each represent a specific database table. Accordingly each database table comprises the names of specific data fields that are defined for each table according to a preferred embodiment of the present invention. For example table represents remote sites in a portion of database referred to above as site hierarchy repository .

In this example the name of each data field is descriptive of the type of data it represents. For example the first three data fields in site table are named SITE ID SITE CD and SITE TYP CD respectively. These three data fields hold information related to a site identification number a site code and a site type code for each site stored in site table . As such for the most part by reading the descriptive names of the data fields illustrated in the function and purpose of each data field will be apparent to those skilled in the relevant arts.

Typically data fields in a relational database are conceptualized as columns in a database table. Likewise data entries stored therein are conceptualized as rows in a database table. Thus the term row is used herein to describe a single data entry within a database table. Accordingly the term row and the term entry are synonymous. For example a single row or entry in the site database table represents data describing the details of a single remote site. A complete description of the remote site comprises specific values for each of the data fields associated with database table . However it is generally not necessary to provide values for every data field associated with a database table. This choice generally depends on each specific implementation of the present invention which will typically define data fields as being either required or optional.

The lines interconnecting database tables shown in represent relationships among tables. It should be noted that for the most part the database tables shown in are self explanatory to those skilled in the relevant art s . Accordingly after reading the brief description below and examining FIGS. C N it would be apparent to those skilled in the relevant art s how to implement database for various application of SiteVu.

As stated interconnections between database tables shown in represent relationships among the tables in database . For example a line is shown connecting site table to plant table . In this example plant table represents power plants that are installed in each site. The circle at the end of line represents a one to many relationship between the rows of site table and the rows of plant table . Accordingly each entry in the site table may be associated with more than one entry in plant table . In other words each site may have more than one power plant installed therein.

Tables and represents pick list tables for specific data fields within site table . Specifically pick list tables are associated with data fields used to define a responsible department and a geographical state for a particular site listed in the table . In this example pick list tables comprise a list of valid values that are used to fill in particular data fields. A pick list table such as the pick list table is used to assist in the data entry process. Typically a pick list table is associated with one or more data fields. For example pick list table is associated with a data field STATE CD within table as depicted by dotted line . Preferably pick list tables are used during data entry to provide users with a drop down list box or the like comprising textual representations of predefined values that can be specified for the row or rows associated with the pick list table.

Accordingly using the example described above a pick list comprising states containing remote sites is presented to the user during a data entry phase. Preferably after the user selects an item from the pick list in this case the name of a state the associated value is automatically stored in the associated row within the database table. Typically in such cases users are restricted to values contained in the pick list tables. That is for such data fields that have pick lists associated with them values other than those contained in the pick list maybe considered invalid. However this choice depends on particular implementations of the present invention.

Referring now to table is a pick list table associated with the site table for providing valid values for the data field used to store site types. Table represents structures or buildings within sites. Typically each site represented by a single entry or row in the site table comprises multiple buildings that are each represented by a single entry in the building table . Therefore building table typically comprises multiple rows for each row in site table .

Table represents floors within structures represented by table . Typically floor table comprises multiple entries for each entry in structure table . Table represents floor points for the floors represented by floor table . This information is used in a preferred embodiment of the present invention for rendering graphical representations of floors as described above. In one embodiment each entry in the floor point table contains the x y coordinates of a portion of a polygon that is used to graphically represent the associated floor. Typically floor point table comprises multiple rows for each entry in floor table .

Table represents zones within floors represented by floor table . Typically zone table comprises multiple entries for each entry in floor table . Table represents zone points for the zones represented by zone table . This information is used in a preferred embodiment of the present invention for rendering graphical representations of zones. In one embodiment each row in zone point table contains x y coordinates for a portion of a polygon that is used to graphically represent the associated zone. Typically zone point table comprises multiple entries for each entry in zone table .

Referring now to table represents planning units within zones represented by zone table . Typically planning unit table comprises multiple entries for each entry in zone table . Table represents points for planning unit table . This information is typically used for rendering graphical representations of planning units. In one embodiment each row in planning unit point table contains x y coordinates for a portion of a polygon that is used to graphically represent the associated planning unit. Typically planning unit point table contains multiple entries for each entry in the planning unit table .

Table represents rows within planning units. Typically row table comprises multiple entries for each entry in planning unit table . Table represents row segments within rows. Typically row segment table comprises multiple entries for each entry in the row table . As will be shown below configured racks are placed within row segments.

Referring now to a number of tables are depicted that form a portion of database referred to herein as product catalog . Specifically table represents components such as modules shelves and racks as previously described. Data fields within the product catalog table preferably contain detailed information about each component stored therein such as a part number a classification and physical dimensions of the component. In a preferred embodiment information common to all types of components is stored in product catalog table and information specific to predefined component types are stored in database tables .

For example shelf table represents additional information particular to shelf components such as the quantity of wire coaxial and fiber connectors. Card table represents additional information particular to cards or module components. In this example information such as actual and nominal electrical and power input and output requirements are stored in shelf table .

Likewise rail table represents additional information particular to racks such as the dimensions of the rack header and rack footer areas. In addition the HVAC rack table represents additional information about HVAC heating ventilation and air conditioning racks. In this example such additional information includes quantities for airflow BTUs per hour airflow capacity and coolant specifications.

Tables depicted in H J and K represent portions of the database referred to herein as configuration library and portions of the database used to store footprint information as described above. Specifically the portion of database referred to herein as configuration library is primarily represented by configured racks table and configured shelves table .

As shown by interconnecting lines both the configured racks and the configured shelves table and respectively are related to product catalog table . Specifically as previously stated configured racks and configured shelves include components e.g. modules shelves and racks from product catalog that have been interrelated. In a preferred embodiment the interrelationships for configured racks and shelves are defined utilizing rackface tool .

Configured rack item table represents individual rack positions used to hold shelves for each rack defined in configured rack table . In a preferred embodiment configured shelves that are installed in particular rack positions are defined by configured shelves table . Accordingly each entry in configured shelves table can correspond with a single entry in configured rack item table . Note however that entries within configured shelves table can be associated with multiple entries in configured rack item table . This would be the case for example if the same configured shelf is used in multiple rack positions in a single rack or used in multiple racks.

Configured shelves item table represents individual shelf positions that are used to hold modules for each shelf defined in configured shelves table . In a preferred embodiment modules that are installed in particular shelf positions are defined by product catalog table . Accordingly each entry in product catalog table can correspond with an entry in configured shelf item table . It should be noted however that in a preferred embodiment each entry within product catalog is typically associated with multiple entries in configured shelf item table .

A particularly novel and advantageous feature of a preferred embodiment of the present invention is provided by placement library . Specifically placement library contains placement data for racks table placement data for cards table and placement data for shelves table . Placement data for racks table is used to place configured racks from configured racks table in particular row segments within row segment table . In this example one or more racks can be placed in a particular row segment. This feature is preferably implemented by creating a footprint using a placement tool as previously described above.

Preferably specific data fields within the placement data for racks table are used for planning purposes. Such data fields are used to define specific time related events such as planned and actual installation activation decommission and removal dates. This allows site planners to view data related to the configuration and placement of equipment in remote sites on a time dependent basis. Moreover in a preferred embodiment of the present invention such information is provided at the rack shelf and module level.

As described above placement data for rack tables provides such time dependent data for field equipment at the rack level. Similarly placement data for shelves table provides such time dependent data for field equipment at the shelf level. Likewise placement data for modules table provides time dependent data for field equipment at the module level. Using this feature of the present invention site planners and other groups can view data related to field sites on a time dependent basis. Preferably each card or module shelf and rack that is placed within a remote site will have associated planned and actual installation activation decommission and removal dates. In this manner users for example can view the configuration and placement of equipment within remote field sites at a particular past present or future date.

A footprint is the union of an object such as a configured rack described above and a specific location on the floor space. In other words a footprint refers to the space or area occupied by a configured rack at a site. As will become apparent from the discussion presented below the primary purpose of placement tool is to create a plan e.g. a five year plan that describes a physical and environmental map of configured racks at a given site. The primary product of the placement tool is the placement of footprints on the floor space.

Referring to in the preferred embodiment administrative tool is software written in C that runs on a Windows operating system and uses a Windows Application Programming Interface to implement its functions on workstation . Before the placement of any graphical objects such as floor graphical objects zone graphical objects planning unit graphical objects row segment graphical objects and footprint graphical objects it is necessary to use administrative tool to establish a base site structure floor hierarchy in database . In this manner at least a minimum amount of non graphical tabular information must be established regarding the site structure floor hierarchy before any structures can be graphically represented. For example in one embodiment the user must name a site if the site does not exist name a structure within the site and name a floor within the structure. Administrative tool 1 creates site table structure table and floor table in database as shown in and 2 fills in the first fields for these tables corresponding to the names of the tables as described in Sections X.A X.B and X.C. The user can also fill in numerous other database fields as described in these sections.

In addition while using administrative tool the user can associate with a site structure floor an accompanying architectural also known as civil drawing. An architectural drawing provides the architectural layout of the floor from a plan top view including the existence of columns that support the building fire escapes air vents doorways and other entrances. In addition the architectural drawings detail the location of power cables and HVAC units. Referring to section X.C.4 the name of the file containing the architectural drawing is stored in floor table as shown in .

In the preferred embodiment placement tool is implemented as application software running on a Windows operating system. In a preferred embodiment placement tool is implemented using the Microstation Development Language MDL . MDL is a high level host language that Microstation incorporates for developing programs that interface with the CADD functions provided by the Microstation CADD program. For example to allow a user to trace out a floor or a zone or some other type of graphical object placement tool submits a corresponding MDL command to instruct Microstation to allow the user to render a graphical representation of the traced object on the display or other device.

In addition placement tool comprises software written for interfacing with database . Hence when a graphical object is created and drawn by Microstation placement tool can update database with specific information pertaining to the dimensions of the graphical object. For example when a user creates or updates the graphical representation of a floor placement tool creates or updates non graphical logical information in floor points table which is described in section X.D and shown in . Therefore the graphical information is stored in non graphical tabular form which is used to recreate the graphical representation of that information so that a user can bring up and modify the floor at a future date.

In addition placement tool allows the user to add numerous other pieces of information to database that are generally not represented graphically. For example as discussed in section X.C.6 floor table shown in stores the date the floor object was created the user who created the floor object the last user who updated the floor object and the last date the floor object was updated. As described below all information in the site hierarchy is readily accessible to the user while using placement tool .

There are also functions performed by the placement tool that combine the function of CADD program and database . For example when a user uses the mouse to graphically layout a floor placement tool uses Microstation to calculate the area of the floor and further uses database to store this information. As described in section X.C.5 this information is stored in floor table as area quantity field . The details of placement tool will become more apparent from the detailed discussion below.

The process begins with step . In step a user specifies a predefined site. This is preferably accomplished by selecting a site from a pick list of sites that have been defined via the administrative tool . The data related to the site is stored by administrative tool in site hierarchy repository of database . The data is specifically stored in site table as shown in and explained in section X.A.

In should be noted that placement tool can provide a security feature to prevent unauthorized individuals from creating and updating any type of graphical or non graphical information. For example when a user desires to add a graphical object to a site and selects a site from the pick list of sites placement tool can ensure that the user is authorized to access information about the site for example by matching a user s department with the department responsible for the site. Use of the security measure is also available for determining whether an individual is authorized to create or update any other level in the hierarchy as well. For example should a user desire to create a new floor object as described below placement tool can require the user to be an authorized facilities planner responsible for creating the initial graphical site hierarchy. The placement tool can also be configured to permit or deny users the ability to use certain functions of the tool. These functions are described below in detail.

After a site is selected in step control passes to step . In step the user specifies a particular building. Again this is preferably accomplished by having the user select a particular building that corresponds with the particular site selected from step according to the site hierarchy repository . The data are stored in structure table as shown in and explained in section X.B.

After a building is selected in step control passes to step . In step the user selects a particular floor corresponding to the building selected in step . Again this is preferably accomplished by having the user select a floor that corresponds with the particular building selected from step according to the site hierarchy repository . The data are specifically stored in floor table as shown in and explained in section X.C. Control then passes to step .

In a preferred embodiment as indicated by step the user is presented with a graphical display of an architectural drawing of the floor that is selected in step . The architectural drawing is used as a guide to assist the user with creation of the site hierarchy. Preferably the CADD software e.g. Microstation renders the architectural drawing of the floor. For example in a preferred embodiment after the user selects a particular floor placement tool reads the name of the architectural drawing from floor plan drawing file name field which is a field of floor table as described in section X.C.4 and shown in . Placement tool then directs CADD program to display the architectural drawing corresponding with the name fetched from database .

It should be noted however that the use of architectural drawings as a guide and backdrop is optional. Users can define the floor zones planning units rows and row segment as described with reference to the steps below without the use of an architectural drawing. For example if the structure is a simple shed for storing telecommunications equipment such as light wave regenerators the use of an architectural drawing may be unnecessary for a facility planner who desires to create a floor object. However if the structure is a large brick and mortar e.g. conventional building facility for storing many rows of computing equipment a facility planner can find the architectural drawing quite helpful. The architectural drawing can provide the facilities planner with necessary information including the locations of columns that support the building fire escapes air vents doorways and other entrances power cables for providing electricity and HVAC units etc. The architectural drawing is also useful for the facilities planner for tracing out a useable floor space as explained below.

As step indicates the user places a floor which simply means that the user creates the graphical floor object in the site structure floor hierarchy. In the preferred embodiment whether or not the architectural drawing is displayed the user uses an input device such as a mouse to trace out a usable area in the floor space. The user who is most likely a facilities planner attempts to maximize the usable floor space to be allocated for placing equipment while concurrently determining real life limiting factors such as the location of power cables for supplying power to the equipment supplying sufficient ventilation to equipment and providing ready human access to the equipment with sufficient entrance ways.

When the user traces out the usable space placement tool directs Microstation CADD to show the floor space to the user graphically. In addition placement tool stores the traced out floor space in a non graphical format as a sequence of points in database specifically in floor points table described in section X.D and shown in .

Placement tool performs other important functions as well. It directs Microstation CADD to calculate the area of the usable floor space and stores it in database specifically in the area quantity field described in section X.C.4 and shown in . Placement tool also stores the identification of the user and the date the user created the floor object in database as described in section X.C.6 and also shown in . Placement tool also provides the user the ability to store additional information regarding the floor object or even to change existing information regarding the floor object including the remaining fields of floor table as described in section X.C.

As step indicates the user places a zone i.e. places a zone object in the site hierarchy which is the next level in the hierarchy. Zones provide an important functional distinction between classes of equipment meaning that a facilities planner can restrict a zone to one class of several possible classes of equipment. The classes available are restricted only by the imagination of the facilities planner. In some applications a facilities planner may provide very narrowly tailored zones such as restrictions between particular pieces of telecommunications equipment while in other applications a facilities planner can distinguish between widely tailored classes such as between computer racks and pieces of furniture. At this level the ability of the facilities planner to provide a proper balance between providing a maximum amount of usable floor space and taking into consideration limiting real life considerations pertaining to the architecture of the building are even more important. As a crude example if a facilities planner has to place furniture equipment in furniture equipment zones and functioning processors in processor zones the planner would be concerned with providing adequate power supplies to the latter and not the former. Consequently the processor zones can be located within adequate reach of power supply cables. The allowed class of equipment is stored in equipment class code field of zone table which is described in section X.E.4 and shown in . It should be noted that in a preferred embodiment the class of equipment must be a permitted class as defined and stored in table otherwise the class is not permitted.

As with floor objects the user traces out zones using placement tool which in turn directs Microstation CADD to display the zones on the display of workstation . Placement tool stores the traced out zone space in a non graphical format as a sequence of points in database specifically in zone points table described in section X.F and shown in .

Placement tool directs Microstation CADD to calculate the area of the usable zone space and stores the area in database specifically in the area quantity field described in section X.E.4 and shown in . Placement tool stores the identification of the user and the date the user created the zone object in database as described in section X.E.6 and also shown in . Placement tool also provides the user the ability to store additional information regarding the zone object or even to change existing information regarding the zone object including the remaining fields of zone table as described in section X.E.

As step indicates the user places a planning unit i.e. places a planning unit object in the hierarchy which is the next level in the hierarchy. In a preferred embodiment planning units provide the opportunity for more than one facility planner to place row segments in a given zone. In this embodiment when a user is in the process of defining rows and placing row segments via the placement tool other users are prevented from accessing certain portions of site hierarchy repository . In particular when users are defining rows the site hierarchy level just above the row level must be locked. Thus a site hierarchy level of planning unit is used between row level and zone level . Accordingly planning unit is locked from other users instead of zone level . In this manner several users can work simultaneously to define row segments within the same zone . Planning units are optional however and as a result a zone need not contain more than one planning unit.

As with other objects the user traces out planning units using placement tool which in turn directs Microstation CADD to display the planning units on the display of workstation . Placement tool stores the traced out planning unit space in a non graphical format as a sequence of points in database specifically in the planning unit points table described in section X.H and shown in .

Preferably placement tool is used so that the user can identify the maximum amount of weight a floor can withstand specifically in the floor load limit quantity field described in section X.G and shown in . In this manner it is possible to prevent floor damage by preventing the placement of equipment weighing more than a given amount in a planning unit. Placement tool directs Microstation CADD to calculate the area of the planning unit and stores it in database specifically in the area quantity field described in section X.G.4 and shown in . Placement tool stores the identification of the user and the date the user created the planning unit object in database as described in section X.G.6 and also shown in . Placement tool also provides the user the ability to store additional information regarding the planning unit object or even to change existing information regarding the planning unit object including the remaining fields of planning unit table as described in section X.G.

As step indicates the user places a row in the hierarchy. A row is a designation of a physical row. Rows are not represented graphically but are instead represented logically non graphically . The reason for this is that physical rows may be discontinuous because of physical separations between the row such as support columns. As described in section X.I and shown in placement tool stores in database an identification for the row a textual name of the row which can simply be a number and information relating to who created the row and when the row was created.

The user can place a row segment object which is the next level in the graphical hierarchy. The row segment as its name implies breaks up the physical row into segments so that one or more row segments comprise a physical row.

As with the other objects the user traces out row segments using placement tool which in turn directs Microstation CADD to display the row segments on the display of workstation . Placement tool stores the traced out row segment space in a non graphical format as a sequence of points in database specifically in the row segment table described in section X.J and shown in .

The user can identify via placement tool the maximum height of equipment placed in a row segment in the height limit quantity field described in section X.J and shown in . Placement tool directs Microstation CADD to calculate the length of the row segment and stores it in length quantity field which is described in section X.J.7. Placement tool also stores the identification of the user and the date the user created the row segment object in database as described in section X.J.9. Placement tool also provides the user the ability to store additional information regarding the row segment object or even to change existing information regarding the row segment object including the remaining fields of row segment table as described in section X.J.

After the site structure floor zone planning unit row and row segments have been established in the hierarchy the user can place a footprint which is the union of a piece of physical equipment with floor space. Footprints represent the lowest level of the site hierarchy and provide the greatest level of detail.

A generic footprint is a placeholder for a footprint that will likely later be designated a specific footprint. A generic footprint is a footprint for a configured rack that has an unspecified manufacturer s identification field. For example the manufacturer s identification field found in product catalog table shown in for the configured rack found in configured rack table shown in can be set to generic. On the other hand a specific footprint is a footprint for a configured rack that specifies a valid manufacturer s identification field. U.S. Pat. No. 6 098 050 referenced above provides a detailed discussion of generic and specific footprints.

Placement tool automatically determines the size of the footprint that Microstation is directed to display. As described below in detail placement tool provides the user a list of configured racks from which to choose. When a user selects a configured rack that is to be placed placement tool accesses the configured racks table which in turn accesses other tables e.g. product catalog table of and configured shelves table in to determine the dimensions of the footprint that is to be placed.

If an existing footprint is being updated most likely by an individual having placement responsibility at a facility the user can first fetch all of the graphical objects that are higher in level. For example the user can select a site followed by a building or structure followed by a floor followed by a zone and followed by a planning unit . Placement tool also allows the user to bring up all these levels simultaneously when the user performs a fetch all function.

Preferably the user is provided with an option to display particular site hierarchies or all site hierarchies that are defined for a particular floor. In addition in a preferred embodiment once the site hierarchies are graphically displayed the user can directly zoom in to a particular portion of the graphical representation and select a particular row therein. Accordingly the steps of selecting a zone and planning unit as specified above are effectively bypassed using this method. However many other methods can also be used without departing from the spirit and principle of the present invention.

In any case once a particular row is identified control passes to step . In step a build equipment pick list is presented to the user. This pick list comprises a list of configured racks as described above with reference to . The configured racks are stored in the configured racks table in and are referenced in rack configuration identification field which is described in section X.K.5 and shown in . In addition as previously described generic racks can also be displayed in the equipment pick list. The user selects a rack from the list of racks presented in step . Preferably a configured rack can be a rack holding electrical equipment as particularly laid out in or instead any other physical object such as a piece of furniture as will be appreciated by those of ordinary skill. The user is provided great flexibility in how the configured racks fields are filled out in configured racks table .

Next in step the user places the selected configured rack from step in a particular location within the row selected in step . At this point placement tool stores the identity of the configured rack in the rack configuration identification field . Again this is preferably accomplished by directly manipulating a graphical representation of the rack on top of the graphical representation of the selected row segment.

Once the rack is placed in step control passes to step . In step the user specifies particular values for attributes that are associated with footprints. As mentioned the footprint can be a generic footprint or a manufacturer specific footprint. As described in section X.K and shown in there are many fields that a user can specify for the equipment occupying the footprint including how the equipment is configured the envelope of distances surrounding the equipment and numerous dates. Examples of important dates are when the facilities planners plan to install the equipment when an individual responsible for installation plans to install the equipment the actual installation date when the equipment will be turned on for equipment requiring a power supply when the equipment will be decommissioned etc. Section X.K provides a detailed explanation of the footprint fields in great detail. The user can also update the values in the footprint fields at any time after the values are initially established. The footprint fields can also be viewed or deleted as described below in further detail.

After placement tool has directed Microstation to create graphical objects these objects are stored as non graphical data in database . Any time a user desires to view a previously created object the user uses the fetch command to view one or more layers of the hierarchy. For example after identifying the floor located at a particular building at a particular site the user can ask placement tool to fetch the floor object followed by the zone objects followed by the planning unit objects followed by the row segment objects followed by the footprint objects. Here the placement tool reads the appropriate tabular representation of graphical points from database and uses Microstation to draw the objects on the workstation output device. In one embodiment the user uses the fetch all function to have the placement tool display all of the graphical objects on a floor. As recognized by those of ordinary skill placement tool can recall the graphical objects in any order as desired for an application.

Placement tool permits the user to quickly and easily delete any graphical object including floor objects zone objects planning unit objects row segment objects and footprint objects. Placement tool erases the graphical points from the appropriate points tables in database and provides appropriate commands to Microstation CADD to eliminate the on screen display of an object for the user. In one embodiment placement tool can prevent a user from deleting a graphical object if an ancestral graphical object is present. For example a user can be forbidden from deleting a row segment if a row segment is occupied with footprints.

Placement tool permits the user to obtain specific details for any object. As shown throughout section X there is a tremendous amount of information stored for the objects of the hierarchy e.g. the hierarchy of site structure floor zone planning unit row row segment and footprint in the tables shown in G and J. Much of this information is in the form of tabular non graphical data which is not necessarily presented graphically but can have enormous importance to an organization. For example a user may desire to view the planned installation date for a piece of equipment occupying a given footprint. When a user selects the object detail function placement tool can immediately read any desired information from database and use Microstation CADD to output the is information to the viewer s display. For the above example placement tool reads planned installation date described in section X.K and shown in and displays the information for the user.

Placement tool permits user to quickly and easily locate objects by keying in on specific information stored as tabular information in database . For example placement tool can almost instantaneously allow the user to determine all footprints storing a particular type of equipment such as an M13 multiplexer. When a user selects the object locate function placement tool can immediately read any desired information from database and use Microstation CADD to show the graphical objects associated with the desired information on the viewer s display. This information can be provided to the user in a report using the report generator tool shown in .

Placement tool allows the user to associate a specific source of power called a power plant with a footprint. The user can use an input device such as a mouse to easily effect the association on the workstation . The main portions of the above description of footprint placement refers to the placement of power consuming footprints i.e. the placement of footprints of power consuming devices such as multiplexers for example. However placement tool also permits the user to place power producing footprints. For example in one embodiment a describe plant function allows a user to graphically select footprints representing for example batteries and rectifiers for inclusion in a power plant s power producing footprint definition. Since both power producing and power consuming footprints are associated with the power plant definition plants table of an appropriate power association is established there between.

Plants table lists the power plants available at a site. Plants table includes a unique serial number for identification PLANT ID the name of the site associated with the plant SITE ID a name field PLANT NM TXT that stores a plant name e.g. battery1 the measured load quantity of power MSRD LOAD QTY and the minimum reserve quantity of power MIN RESV QTY . Placement tool can read these power plant definitions.

Before a connection can be established between a power plant and a footprint however it must be determined whether the desired connection is a valid connection. The connection tables shown in are used make this determination. Connection table is used to determine the type of connections between the left object and the right object which are to be connected together by determining the connection rules. For example the left object can be the plant and the right object can be the footprint. Connection rules table which has a pointer to the left object type LEFT OTP ID and a pointer to the right object type RIGHT OTP ID is used in combination with tables and to determine whether the connection type is allowed. Table describes the types of connections allowed including for example physical connections such as power data and alarm connections as well as logical connections. The connection rules sub class table provides subclasses of object types such as the subclass of battery type plants. In this manner placement tool provides a mechanism to check whether the connection is valid.

Placement tool permits the user to obtain specific information about objects in graphical form as well. Here placement tool applies a graphical filter to the objects displayed specifically applying a graphical filter to the non graphical information stored in database . For example suppose a user is viewing a floor plan and desires to know which footprints will be occupied by M13 multiplexers five years in the future. After using the fetch object command to locate these footprint graphical objects placement tool can be used to display only these desired footprints. When the footprint is created placement tool can for example use footprint date fields and footprint identification field to uniquely distinguish M13 multiplexers existing five years in the future by a specific color. In this manner placement tool can provide detail on any graphical object in the hierarchy in a graphical format.

For the advanced CADD user placement tool permits the user direct access to any desired CADD functions bypassing the more user friendly functions of the placement tool itself.

The present invention may be implemented using hardware software or a combination thereof and may be implemented in a computer system or other processing system. In fact in one embodiment the invention is directed toward a computer system capable of carrying out the functionality described herein.

An exemplary computer system is shown in . The computer system includes one or more processors such as processor . Processor is connected to a communication bus . Various software embodiments are described in terms of this exemplary computer system. After reading this description it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and or computer architectures.

Computer system also includes a main memory preferably random access memory RAM and can also include a secondary memory . The secondary memory can include for example a hard disk drive and or a removable storage drive representing a floppy disk drive a magnetic tape drive an optical disk drive etc. Removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit represents a floppy disk magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated removable storage unit includes a computer usable storage medium having stored therein computer software and or data.

In alternative embodiments secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means can include for example a removable storage unit and an interface . Examples of such can include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces that allow software and data to be transferred from the removable storage unit to computer system .

Computer system can also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Examples of communications interface can include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card etc. Software and data transferred via communications interface are in the form of signals which can be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals are provided to communications interface via a channel . Channel carries signals and can be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link and or other communications channels. In this document the terms computer program medium and computer usable medium are used to generally refer to media such as removable storage device a hard disk installed in hard disk drive and signals . These computer program products are means for providing software to computer system .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs can also be received via communications interface . Such computer programs when executed enable computer system to perform the features of the present invention as discussed herein. In particular the computer programs when executed enable processor to perform the features of the present invention. Accordingly such computer programs represent controllers of the computer system .

In an embodiment where the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using removable storage drive hard drive or communications interface . The control logic software when executed by the processor causes processor to perform the functions of the invention as described herein. In another embodiment the invention is implemented primarily in hardware using for example hardware components such as application specific integrated circuits ASICs . Implementation of the hardware state machine able to perform the functions described herein will be apparent to persons skilled in the relevant art s .

In yet other embodiments the invention may be implemented using a combination of both hardware and software.

In this section the layers of an exemplary environmental hierarchy from the site down to the footprint located in database are described in detail. Database stores non graphical logical data which are used to interrelate the data tables. These data are also viewable to users in a tabular form. Database also stores graphical data which is used to illustrate graphically the levels of the hierarchy as shown in .

As depicted in site table represents a site. A site is the physical location e.g. the Dallas Fort Worth site where one or more buildings that store equipment such as racks are located. Site designates the highest logical layer in the conceptual framework provided by the exemplary environmental hierarchy. As shown in sites have the following associated fields.

As depicted in structure table represents a physical structure which is also referred to herein as a building or a facility. A facility can be a brick and mortar building that houses many different types of equipment or instead a specialized building such as a telecommunications shelter. As recognized by those of ordinary skill the function of the structure is not limited by the invention. Examples of specialized structures in the telecommunications industry are a telecommunications shelter used for light wave regeneration a multiplexer facility a termination facility where long distance traffic is switched into local telephone network traffic or a node information center NIC housing mainframe computers. Each site can have one or more structures. As shown in structures have the following associated fields.

As depicted in floor table is a logical representation of the floors within the facility where the equipment is to be placed. Each structure has one or more floors. As shown in floors have the following associated fields.

As depicted in floor points table is where graphical data regarding the floor are stored. A user can use the SiteVu placement tool application to create a floor object. Placement tool sends a command to Microstation to set up a dialog or session with the user. Using the mouse or other input device the user traces out the shape of the object which Microstation displays on workstation . When the user is finished the operation Microstation informs placement tool that the user has completed making a graphical representation of the object. Placement tool then translates the graphical information into non graphical information specifically as tabular point data in the floor points table in database .

When a user later uses the SiteVu placement tool to view a graphical floor object SiteVu placement tool retrieves non graphical information representing the graphical floor objects from the floor points table and directs Microstation CADD to draw the floor. As shown in floor points have the following associated fields.

As depicted in zone table restricts floor space based on an equipment type which is also called a class type. For example if telecommunications switches are identified by the user as an equipment class then all equipment of the class labeled telecommunications switch can be restricted to a telecommunications switch zone on the floor. As one of ordinary skill will recognize zones are limited only by the user s imagination. Examples of zones include collocation zones where space for equipment owned by other vendors can be leased furniture zones multiplexer zones computer zones building support e.g. HVAC zones etc. As shown in zones have the following associated fields.

As depicted in zone points table is where graphical data regarding the zone is stored. A user can use the SiteVu placement tool to create a zone object. Placement tool sends a command to Microstation to set up a dialog or session with the user. Using the mouse or other input device the user traces out the shape of the object which Microstation displays on workstation . When the user is finished the operation Microstation informs placement tool that the user has completed making a graphical representation of the object. Placement tool then translates the graphical information into non graphical information specifically as tabular point data in the zone points table in is database .

When a user later uses the SiteVu placement tool to view a graphical zone object SiteVu placement tool retrieves non graphical information representing the graphical zone objects from zone points table and directs Microstation CADD to draw the zone. As shown in zone points have the following associated fields.

As depicted in planning unit table logically represents a planning unit. Planning units are divisions within a single zone. Planning units allow for multiple individuals to concurrently place rows as represented graphically by Microstation CADD tool into a single zone. The SiteVu placement tool allows a single planner to work in a single planning unit thereby locking out other planners from the planning unit. As shown in planning units have the following associated fields.

As depicted in planning unit points table is where graphical data regarding the planning unit are stored. A user can use SiteVu placement tool to create a planning unit object. Placement tool sends a command to Microstation to set up a dialog or session with the user. Using the mouse or other input device the user traces out the shape of the object which Microstation displays on workstation . When the user is finished the operation Microstation informs placement tool that the user has completed making a graphical representation of the object. Placement tool then translates the graphical information into non graphical information specifically as tabular point data in the planning unit points table in database .

When a user later uses SiteVu placement tool to view a graphical planning unit object SiteVu placement tool retrieves the non graphical information representing the graphical planning unit objects from planning unit points table and directs Microstation CADD to draw the planning unit. As shown in planning unit points have the following associated fields.

As depicted in rows table logically represents a physical row where equipment is to be placed. Physical obstructions can make a row discontinuous meaning that the row can stop at a column indicated by an architectural diagram and continue on the other side of the obstruction. For this reason the row table is a logical non graphical entity storing information on the row without providing a graphical object. As shown in rows have the following associated fields.

As depicted in rows segments table represents graphical information for segments of the rows that are logically represented by row table . Row segments are provided so that the floor space in a planning unit can be effectively utilized despite the presence of physical obstructions such as columns indicated by an architectural diagram.

As with floor points table zone points table and planning units points table row segment table comprises graphical data regarding the row segments. A user can use SiteVu placement tool to create a row segment object. Placement tool sends a command to Microstation to set up a dialog or session with the user. Using the mouse or other input device the user traces out the shape of the object which Microstation displays on workstation . When the user is finished the operation Microstation informs placement tool that the user has completed making a graphical representation of the object. Placement tool then translates the graphical information into non graphical information specifically as tabular point data in row segment table in database .

When a user later uses SiteVu placement tool to view a graphical row segment object SiteVu placement tool retrieves non graphical information representing the graphical row segment objects from row segment table and directs Microstation CADD to draw the row segment. As shown in row segment points have the following associated fields.

As depicted in placement data for racks table represent footprints both graphically and logically. In the exemplary embodiment a footprint is the union of a configured rack which can be an article of manufacture or a piece of equipment for example and a space on the floor specifically a row segment on the floor. Hence the footprint refers to a space actually occupied by a piece of equipment in the site hierarchy containing the most specific and abundant information in the hierarchy.

As per the graphical function as described in section VIII.D.9 step the footprint graphical object is automatically placed once the user selects a row segment graphical object or creates a row segment graphical object and selects a configured rack from database . When a user later uses placement tool to retrieve a graphical floor object placement tool retrieves the appropriate non graphical information representing the graphical object from database and directs Microstation CADD to draw the footprint object. Logically the footprint stores a great deal of non graphical information regarding the equipment placed therein including relevant dates. Specifically as shown in footprints have the following associated fields.

The foregoing discussion has principally focused on the application of the present invention to site planning and facilities management in the telecommunications industry. However as noted above in section I the present invention is not limited to such applications but is instead broadly applicable to the management of a collection of physical or virtual items in a modeled environment utilizing a hierarchical conceptual framework. Accordingly the following discussion elaborates on additional applications of the present invention.

As would be expected in the following discussion some different terms from those used above in the exemplary telecommunications application are employed to describe the various levels within the hierarchical conceptual framework. In particular instead of a site hierarchy i.e. site building floor zone planning unit row segment footprint and a rack hierarchy i.e. rack rail shelf component the hierarchical conceptual framework described below includes elements from an environmental hierarchy of which a site hierarchy is an example which the user can utilize to define regions of varying sizes within a physical or virtual environment of interest and an item hierarchy specifying the hierarchical relationships if any that can exist between items from the product catalog that are located within the environment.

As will be appreciated by those skilled in the art an environmental hierarchy can contain any number of environmental levels EL EL where M 2 that are deemed necessary or convenient to describe the environment of interest. Thus when the present invention is applied to differing environments it is expected that differing numbers of environmental levels may be defined. As discussed above administrative tool and placement tool may be utilized to create and update information describing the environmental hierarchy. Such data are preferably stored in database in tables where each table contains graphical and non graphical data describing a respective level of the environment as discussed above with respect to the site tables building tables floor tables etc. illustrated in .

The item hierarchy can similarly include as many item levels IL IL N 1 as is deemed necessary or convenient to describe the spatial or logical relationship between items from product catalog that are located within the modeled environment. Each type of item preferably has an associated table within database that records graphical and non graphical data relevant to that type of item as discussed above with respect to tables . The user can construct instances of hierarchically configured items utilizing a SiteVu item hierarchy tool such as the rackface tool described above with reference to . The resulting configured items are preferably stored in configuration library . As discussed above after creating items in product catalog and hierarchically configured items in configuration library the user can model the environment of interest by placing one or more items at the highest level of the item hierarchy ILat specified locations within the regions defined at the lowest level of the environmental hierarchy EL.

Given this introduction several additional applications of the present invention will now be presented.

The SiteVu software of the present invention can advantageously be applied to the design and management of a retail store such as department store or grocery store. In such an embodiment the environmental hierarchy may be implemented as a site hierarchy similar to that utilized in telecommunications applications. For example in a department store application the highest environmental level ELmay be defined as the building or portion of the building occupied by the department store. Successive environmental levels EL ELmay be defined as floors departments e.g. misses juniors sportswear women s shoes men s suits housewares etc. planning units e.g. in which goods may be grouped by manufacturer or type and footprints e.g. that contain display fixtures counters etc. .

The items populating product catalog that may be placed in the environment can include both items for sale i.e. retail goods such as clothing housewares furniture etc. and items not for sale e.g. store fixtures HVAC equipment and ducting power cables and equipment cash registers dollies etc. . The number of levels of item hierarchy associated with each type of item in product catalog can be independently defined. Examples of items having multiple hierarchical layers and therefore having entries in configuration library include a suit IL which at a second level of item hierarchy IL may include a coat a vest and a pair of trousers or a counter IL which at one or more lower levels of the item hierarchy may include a display case for goods a cash register a machine to remove security tags etc. As described above items at IL the highest level of the item hierarchy can be united with a footprint i.e. the lowest level in the environmental hierarchy utilizing placement tool .

Thus as discussed above after constructing the environmental hierarchy product catalog and configuration library a user is able to add items from product catalog and configuration library to particular locations within the environment modeled by the environmental hierarchy to create a graphical and intuitive view of an actual or proposed arrangement of items within the retail store. As described above in section X each of the elements from the environmental hierarchy and items from product catalog and configuration library placed within the modeled environment have associated graphical and non graphical data that can be created stored in database modified and viewed by the user. These data describe various characteristics of interest that can be utilized not only for site planning and management but also by tracking the placement and movement of merchandise for inventory control loss management sales forecasting and profit optimization among other uses.

For example if an HVAC unit is one of the items placed within a modeled retail environment the associated table in database can be utilized to track installation repair and planned replacement dates power requirements thermal capacity efficiency rating operating costs etc. This information could be used for example by a building superintendent to accurately forecast maintenance and operating costs or to schedule selective maintenance and or replacement of equipment. On the other hand for items in the modeled environment that represent retail merchandise the associated data in database may specify a wholesale cost projected profit margin actual sale price date of display date of sale associated footprint at time of sale total number of units etc. A store manager can periodically utilize report generator or the graphical view filtering described above in section VIII.J to identify how well goods are selling e.g. to determine a need to cancel orders or order additional merchandise determine which locations and presentations of goods result in highest gross sales or profit calculate total profit per square foot improve loss control etc.

To facilitate entry of data describing an environment and the placement of items within the environment it is advantageous to employ automation to avoid manually entering each piece of data utilizing a keyboard or mouse of a workstation . In one preferred embodiment such automation may be provided by a handheld scanner such as that described in U.S. Pat. No. 5 959 275 which is incorporated herein by reference. Using such a scanner which may communicate with the SiteVu tool running on exemplary computer system via a wireless communication interface the user may first specify a particular footprint by scanning a corresponding barcode either printed in a hardcopy printout of the floor layout or physically affixed to a display e.g. hanging rack or shelving system occupying that footprint. The user can then enter data specifying which goods are located within the specified footprint or being added to the footprint from a stock room by scanning the SKU barcodes typically utilized to identify goods. In this manner a user can quickly perform the necessary data entry without engaging in the tedious task of manually keying in or using a pointing device to enter all of the information.

Also as customers select goods off the floor for purchase a scanner is often utilized as an input device to enter into a cash register the SKU barcode identifying the item being sold. This product identification information which identifies an item being removed from a footprint can also be provided to the SiteVu software to automatically update database by removing one of the items having that SKU barcode from the modeled environment. In this manner a real time view of the goods presented for sale on the floor of the retail store as well as goods in stock rooms may be maintained.

As will be appreciated this technique of data entry is applicable not only to the entry of data describing a retail environment but also to the entry of numerous other types of data as is clear from the descriptions of other applications provided below.

SiteVu can similarly be applied to a warehouse environment. A typical warehouse environment may include a plurality of rows of storage units e.g. pallets fixed or movable racks refrigeration units in which goods are temporarily stored.

In an exemplary warehouse application the highest environmental level ELmay be defined as the building or portion of the building occupied by the warehouse. Successive environmental levels EL ELmay be defined as floor zone e.g. perishables durables etc. planning unit e.g. in which goods may be grouped by manufacturer or type row segment and footprint e.g. of a pallet movable rack fixed rack bin refrigeration unit etc. .

As with the retail environment the items populating product catalog and configuration library that may be placed in the modeled environment can include both warehoused items e.g. wholesale goods and warehouse fixtures e.g. rack units HVAC equipment and ducting refrigeration units power cables and equipment packaging and loading equipment etc. . The number of levels in the item hierarchy associated with each type of item can be defined independently. For example a movable rack unit may be defined at the highest level of the item hierarchy IL with additional levels of item hierarchy IL IL being respectively defined by shelves of the rack unit bins supported by the shelves and individual goods in the bins. Two layers of item hierarchy on the other hand may be utilized to define a pallet of goods a pallet at ILand individual goods at IL. As described above items at IL the highest level of the item hierarchy can be united with a footprint i.e. the lowest level in the environmental hierarchy utilizing placement tool .

As discussed above after constructing the environmental hierarchy product catalog and configuration library a user is able to add items from product catalog and configured items from configuration library to particular locations within the modeled warehouse environment optionally utilizing the scanning technology discussed above to create a graphical view and associated database representation of an actual or proposed arrangement of a collection of items within the warehouse. The data within database have a number of different uses for warehouse management in addition to site planning. For example the data within database and the graphical representation thereof can be utilized by humans or robots to identify a location in the warehouse at which to stock incoming items or remove outgoing items while maintaining a real time inventory of the warehouse. In addition database may store in association with each warehoused item a date in and a date out which together indicate duration of storage. This information may be utilized to fairly attribute warehousing fees to particular suppliers or retailers.

A specialized warehouse environment in which SiteVu may be utilized is a library. A library at least conceptually is an information warehouse of an inventory including books periodicals microfiche electronic data etc. Utilizing the techniques outlined above SiteVu may be utilized to track the location of inventory lent to subscribers or other institutions calculate and record fines manage periodical subscriptions plan floor layouts e.g. to avoid exceeding the loading limits of shelving units or floors record sources of rare materials and many other uses. SiteVu may similarly be applied to other specialized warehouse environments such as police impound and towing yards for holding automobiles.

Another environment to which the SiteVu tool of the present invention may advantageously be applied is an offshore drilling or production platform. On offshore platforms space is at a premium accordingly the SiteVu tool of the present invention can be utilized to perform both floor planning and vertical space planning as well as many other functions utilizing the principles set forth above.

The environmental hierarchy in platform applications can have at ELthe platform itself with various types of platforms e.g. fixed floating jack up etc. being selectable from a picklist. Lower levels of the environmental hierarchy i.e. EL EL can be defined as decks bays zones row segments footprints etc. as is convenient. The items defined in product catalog that can be placed in the modeled environment can include permanent and semi permanent fixtures such as generators and motors a control room living quarters galley piping compressors separators etc. as well as movable equipment such as drill pipe drill bits down hole tools drill rigs work over equipment etc.

The data in database associated with the items from product catalog that are placed within the modeled environment can be utilized in a number of ways. First as noted above the data may be utilized for floor and vertical space planning and design. Second equipment managers can track scheduling and availability data for movable equipment such as downhole tools workover equipment platform rigs test separators and so on. The scheduling data for movable equipment may include for example request date planned use date s in use indication expected date of completion and cumulative time in service. Third for movable equipment as well as more permanent fixtures it may also be helpful to track scheduling and completion of preventive maintenance and servicing e.g. for separators valves motors and power generators or safety inspections e.g. ultrasonic testing of pipes for wall thickness . Fourth data maintained in database can be utilized to track dimensions of both movable and non movable equipment placed in the modeled platform such as drill pipe conductors on the production deck through which drilling is performed tubing casing etc. This dimensional data can be accessed for example by on shore drilling engineers to determine whether equipment required for upcoming procedures is available on the platform.

As will be appreciated from the foregoing SiteVu has similar applicability to petroleum refineries chemical processing plants oil field services organizations and the like.

SiteVu can also be advantageously applied to the design planning and operation of manufacturing plants e.g. aircraft or automobile processing plants e.g. ore food or beverage processing and power generation and transmission plants. In such environments as with many of the other applications of SiteVu is optimization of the placement of tools equipment and parts in the finite amount of available space in the plant environment is an important advantage of the present invention. As described above SiteVu database can also be utilized to conveniently record and display information about plant infrastructure and production equipment such as installation date service and maintenance scheduling and history scheduled replacement date equipment sizes and capacities etc. This information can be utilized for example not only by maintenance and engineering personnel but also by financial and accounting personnel needing to compute depreciation on fixed assets cost estimation etc.

In addition SiteVu can be utilized to track the incorporation of component parts into an assembled product. For example in the context of aircraft manufacturer multiple aircraft are typically in production concurrently. Each of these aircraft can be represented in configuration library of SiteVu database by a corresponding generic aircraft object at the highest level of the item hierarchy IL that can be placed at a particular footprint on the production floor. Similarly generic objects representing other important components such as wings engines tails avionics etc. can be placed at other footprints at which these major components are pre assembled. Then as each component occupying a lower level of the item hierarchy i.e. IL IL is assembled with a component at a higher level of the item hierarchy i.e. IL IL details regarding the component and its installation can be tracked in SiteVu database .

For example a wing which may be defined as an item at item hierarchy level IL may have a number of component systems such as engines flaps lights and deicers modeled at lower levels of the item hierarchy. As these components are added to the wing a wing table within database can be linked via pointers referred to above as a foreign keys to other tables in database that each describe a respective one of the installed components. Each of the tables representing a component can detail such information as the manufacturer assembly information e.g. planned assembly date actual assembly date employee ID of assembler and quality control verification. Thus with SiteVu a user can readily obtain very detailed information about an assembled or partially assembled aircraft by selecting graphical objects representing various components of interest which causes SiteVu to display non graphical data associated with the objects as detailed above. In addition by requesting reports summarizing actual and planned assembly dates from report generator a project manager can readily detect project and address production delays on the aircraft assembly or portions thereof.

As will be appreciated upon reference to the foregoing description of the application of SiteVu to manufacturing SiteVu can also be applied to the design planning and construction of buildings and other structures e.g. office complexes malls bridges dams hospitals airports housing developments spacecraft etc. .

In construction applications it is typical that the highest level of the environmental hierarchy EL represents the parcel of land on which construction will occur the second level of the environmental hierarchy EL represents various subdivisions of the parcel the third level ELrepresents construction site s within the subdivisions and so on until the lowest level of the environmental hierarchy EL is reached. As noted above electronic data files such as CADD files containing architectural drawings and electronic governmental deed records can be utilized to provide graphical and non graphical data to the SiteVu tool to facilitate accurate development of the environmental hierarchy. Importantly the tabular data within database associated with the various objects in the environmental hierarchy can include not only dimensional information e.g. a legal description of the parcel and or dimensions of buildings but also additional information such as the location of easements and utilities applicable building codes e.g. setback requirements and environmental protection information e.g. required protective measures use restrictions and required remediation . In this manner a user can determine all information relevant to the construction site through an intuitive graphical interface.

The items defined in product catalog and configuration library can represent construction equipment e.g. bulldozers cranes on site trailers etc. and construction materials e.g. rebar masonry bridge supports HVAC equipment building fixtures landscape plants and materials etc. as well as one or more structures to be constructed and their component parts. For example a building may be defined as one of the items at the highest level in the item hierarchy IL that can be united with the lowest level of the environmental hierarchy EL . Successively lower levels of the item hierarchy can be utilized to represent building wings floors suites rooms fixtures etc. The tabular data in database associated with these items can include dimensions weight mass projected construction installation date man hours or hours required to perform construction installation cost and other information of interest.

With the SiteVu tool applied in this manner a construction firm can not only prepare a detailed proposal for a construction project that includes cost time staffing and materials estimates but also can track construction progress and scheduling as described above with respect to the manufacturing environment. In this manner the construction management firm can anticipate delays improve scheduling of subcontractors and materials delivery verify that loading limitations are not exceeded by requesting appropriate reports from report generator track damaged goods and equipment record change orders and perform many other useful functions utilizing a single software tool.

In some environments to which SiteVu is applicable staffing and provisioning are important concerns. For example in a health care facility or amusement park it may be crucial for safety or efficient operation that different locations within the facility have appropriate equipment or provisions and or appropriate staffing.

SiteVu can be applied to such environments to ensure adequate provisioning and or staffing. For example to efficiently provision a new hospital the construction of which may be managed utilizing SiteVu as discussed above certain equipment and or personnel may be associated with selected levels of the environmental or item hierarchy. Assume that hospital policy or government regulation requires that each floor be equipped with two external cardiac defibrillators each patient room have a thermometer and sphygmomanometer and that the cardiac care unit CCU be staffed with at least ten nurses. If for instance successively lower levels of the environmental or item hierarchy describing the hospital are utilized to represent a building wing floor unit and room a user can utilize placement tool to place at least two objects representing cardiac defibrillators within one or more rooms of each floor and to place thermometers and sphygmomanometer in each room designated by an attribute in database as a patient room. The tabular data within database associated with each of these objects preferably has a present field indicating whether or not the item is inventoried as being physically present at the designated location. In this manner a report by report generator or graphical view based upon the value of the present field can be generated to ascertain the additional equipment needed if any. Of course as equipment is moved or removed database is preferably updated so that an accurate picture of available equipment is given.

Staffing levels may similarly be managed by defining personnel as objects within product catalog and placing graphical objects representing personnel at appropriate locations within the modeled environment. Staffing levels can be monitored in real time by providing inputs to SiteVu from an electronic time stamp system to monitor the arrival and departure of employees. In addition prospective staffing levels may be projected through defining calendaring fields in the tables within database associated with each personnel object. The calendaring fields can specify each date and if appropriate hours for which a person is needed at the associated location and the employee name s or ID s scheduled to staff each such date. Thus an employer can ensure adequate staffing and project hiring needs by recording in the calendaring fields in database the work schedules of employees assigned to the various staff positions. This is particularly useful in situations in which multiple part time or seasonal employees are utilized to fill individual staff positions.

In remediation of hazardous waste sites such as Superfund cleanup sites offshore oil spills or buildings having asbestos tiles the cleanup process typically entails developing a cleanup strategy for the site and then tracking progress as waste is removed and remediation activities are performed. SiteVu is an ideal tool for both development of a cleanup strategy and tracking removal or cleanup of hazardous waste.

When SiteVu is applied to hazardous waste removal the environmental hierarchy may be implemented as a site hierarchy similar to that utilized in telecommunications applications. For example the highest environmental level ELmay be defined to represent a cleanup site and the second highest environment level ELmay be utilized to define equal area tracts of land which may conveniently be arranged in a grid. Lower levels of the environmental hierarchy EL ELmay be utilized to represent specific treatment areas in the tracts. Of course if the hazardous waste site includes buildings or other structures natural subdivisions of the structures e.g. floor room etc. may also be defined in the environmental hierarchy.

The items populating product catalog that may be placed in the modeled environment can include waste to be removed e.g. crude oil lead acid batteries asbestos or contaminated soil and equipment e.g. earth moving machinery or personnel utilized to perform the waste removal. As described above items at IL the highest level of the item hierarchy can be united with the lowest level of the environmental hierarchy utilizing placement tool .

As described above each of the levels of the environmental hierarchy and items from product catalog placed within the modeled environment have associated graphical and non graphical data that can be created stored in database modified and viewed by the user. These data describe various characteristics of interest such as the type of waste associated safety precautions governmental regulations governing the handling and disposal of the waste waste removal date remediation measures and estimated removal time. By requesting reports from report generator and or filtered graphical views based upon selected data within database a logical waste removal plan including cost and time estimates can be developed and progress toward remediation can be tracked.

SiteVu can also be utilized to great advantage in the management of resources such as farmland crops timber and livestock. In such applications the levels in the environmental hierarchy can be utilized for example to represent a regional operation e.g. the north Texas operation at EL various tracts of land belonging to the regional operation at EL and footprints of plantings or structures e.g. barns silos etc. within the tracts at EL. The tabular data within database associated with the various levels of the environmental hierarchy can indicate legal descriptions of the property whether the property is leased or owned rents if leased previous yields e.g. bushels board feet or pounds of meat per acre current and previous usage e.g. type of planting and number of years planted type of livestock and duration of grazing etc. land use incentives e.g. tax and subsidy information and other pertinent information.

As will be appreciated the items in product catalog that may be graphically placed in the environment modeled utilizing the environmental hierarchy can include standing or harvested crops livestock farming equipment e.g. trucks combines tractors etc. and structures e.g. silos barns sheds living quarters and processing facilities among others. The tabular data within database associated with the items in the item hierarchy can include total and current capacities of storage facilities current and prospective estimated sale price per unit for crops and livestock maintenance price and ownership information for farming equipment and descriptions and schedules of prior and planned cultivation and processing regimens e.g. the use of fertilizers insecticides inoculations feed supplementation cutting undergrowth from managed forests etc. .

Through appropriate use of report generator to generate reports from database a user can determine optimum times to harvest and sell crops based upon the availability of storage and projected pricing ensure that crop and grazing rotation plans are followed analyze yields based on location and or cultivation regimen manage use of storage facilities manage expense and servicing of equipment etc.

SiteVu may also be utilized in the development implementation and management of community and regional plans and infrastructure. In community and regional planning CRP a governmental entity for example a city council or a county commissioner s court is often tasked with developing and implementing a smart growth plan to ensure that future growth is directed in a way that enhances or at least does not diminish the quality of life of the community and does not outstrip the growth of infrastructure e.g. roadways utilities public recreation areas public transportation school etc. . Utilizing the techniques outlined above SiteVu can simplify these tasks.

As an example an environmental hierarchy can be defined that has as its highest level EL a geographic region e.g. a state county or city for which a plan is to be developed and has at lower levels EL EL logical or governmental subdivisions of the larger geographic region. Each of these levels of the environmental hierarchy preferably has associated tabular and graphical data within database which may include legal or geographic descriptions area current and or planned uses current and or planned development restrictions e.g. zoning or environmental restrictions ownership tax valuation if privately held estimated fair market value for purposes of condemnation and so on.

Items from product catalog that may be graphically and logically placed within areas defined at the lowest level of the environmental hierarchy EL can represent utilities and the like e.g. telephone and data cables gas water sewer and power lines etc. transportation infrastructure e.g. sidewalks bike paths roadways rail lines and airports residential and commercial zones public parks schools cultural centers government buildings hospitals etc. SiteVu database can be utilized to store and display a myriad of useful data associated with these items. Such data may include whether an item presently exists or is planned planned installation dates code and zoning compliance for items representing structures planned and past maintenance dates for utility lines whether an item complies with a planned use ownership distances from city centers airports nearest similar item or other locations of interest etc.

Because SiteVu provides a conceptual framework in which all these data can be logically arranged viewed especially on a time dependent basis and easily updated SiteVu is an ideal tool for CRP applications.

SiteVu may also be advantageously applied to the design modeling and maintenance of data networks including data storage environments. Much like the telecommunications application discussed above SiteVu can be utilized for space planning and the placement of equipment e.g. servers network equipment such as routers and bridges network interface cards or disk farms in particular physical footprints on a floorplan or as components of items so placed. In addition SiteVu can be utilized to graphically place particular data e.g. executable software such as SiteVu components and or a database such as database logical drives and the like within equipment connected to the network. Thus with SiteVu a network administrator can easily create view and modify a model of not only the physical components of the network but also data and software constructs within the network.

As a final note those skilled in the art will appreciate from the foregoing that SiteVu is not limited in application to the modeling of physical environments but also is also applicable to modeling the two or three dimensional virtual reality environments and virtual objects located therein. By employing such modeling for example in a gaming or simulation context the effects of time and other variables on items in the virtual environment can be easily and accurately depicted.

For example in a gaming context an environmental hierarchy can be defined that has at its highest level EL an environment representing a simulated structure e.g. as utilized in many first person adventure games or a simulated geographic region e.g. as utilized in many role playing and societal simulation games . Depending upon the type of game lower levels of the environmental hierarchy EL EL may be utilized to represent structures floors of a structure rooms in a structure and footprints at which simulated objects may be placed. The items populating product catalog and configuration library that may be placed in the model environment of a first person game include articles that may be retrieved by the game s protagonist pre programmed opponents of the protagonist hazards to the protagonist etc.

Alternatively in a simulation context the highest level EL of the environmental hierarchy may comprise for example a vehicle control station e.g. aircraft cockpit or automobile dashboard and the next lower level ELmay comprise footprints for individual indicators or controls. Accordingly the simulated items populating product catalog and configuration library that may be placed in the model environment may include steering and other controls as well gauges and other indicators.

As described above SiteVu database can be utilized to organize and store useful data associated with the items placed within the modeled environment. For example the data associated with hazards opponent and other items placed within the modeled environment for a first person game can indicate the effect of the items on the protagonist s health or abilities. Alternatively for a simulation the data may include a life cycle and or cost of a component so that equipment failure and expense over time can be realistically modeled and trainee response to failures and other problem situations can be assessed.

While various embodiments of the present invention have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of the present invention should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

