---

title: Selective confirmation for execution of a voice activated user interface
abstract: A voice-activated user interface for an application is described. The voice activated user interface invokes a speech recognition component to recognize audio input from a user. If the audio input is a command, then a validation component is invoked to determine whether to validate the command prior to execution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08694322&OS=08694322&RS=08694322
owner: Microsoft Corporation
number: 08694322
owner_city: Redmond
owner_country: US
publication_date: 20051021
---
Speech recognition applications recognize speech and generate text and or execute commands based upon the recognized speech. Speech recognition is prone to error and as a result the wrong text is occasionally displayed or the wrong command is occasionally executed.

The discussion above is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

A voice activated user interface UI which selectively validates commands prior to execution. A speech recognition component is invoked to recognize speech input from a user. If the speech input is a command then a validation component is invoked to determine whether to validate the command. Depending upon the input command the validation component prompts the user to confirm or validate that the user wishes to execute the input command.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter

Embodiments are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with various embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers telephony systems distributed computing environments that include any of the above systems or devices and the like.

Embodiments may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Some embodiments are designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules are located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing some embodiments includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer is operated in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. In an illustrative embodiment a portion of memory is allocated as addressable memory for program execution while another portion of memory is used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is executed by processor from memory . Operating system in one embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device .

Commands include instructions to perform tasks such as send print delete or save . Speech support component inspects user interface to determine what elements are displayed on the interface and the labels associated with each element. Based upon the labels and the elements of the interface speech support component builds a grammar which is used by the speech recognition component to designate certain recognized words and phrases as commands. Typically the grammar will define a rule for a command such that the command is found between a leading pause of silence and a trailing pause of silence.

Speech support component invokes a validation component to validate the command prior to executing the command through user interface . The validation component can be a separate object module or can be integrated with speech support component .

The validation component can use different validation techniques to validate the input command . One such technique compares the input command to a list of destructive monosyllabic commands in a data store . Destructive commands are commands that cannot be easily undone. For example the command send is monosyllabic and is considered destructive because in many e mail systems the e mail document cannot be unsent after the send command has been executed. Monosyllabic commands such as send are chosen for validation because they are prone to misrecognition. Since validation requires user input it is desirable to limit validation to only those cases where misrecognition is likely. The present inventors have discovered that misrecognition is much more likely for monosyllabic words and as such under one embodiment validation is only performed for monosyllabic commands.

If the input command is one of the destructive commands in data store then the validation component will prompt the user as illustrated by block to confirm that the user wishes to proceed. For example if the user is creating an e mail message and utters the word send the validation component would prompt the user to confirm that the user wishes to send the e mail.

The validation prompt or message can be displayed or implemented through the user interface of the application program . The validation prompt can be implemented in different forms. For example an audio prompt or text prompt can be used.

In one embodiment the user is prompted to confirm the command by visually highlighting a button or icon on a computer display or screen that corresponds to the command. The user then confirms that the user wants to execute the highlighted command. The user can confirm the highlighted command by using a yes no feedback option. Alternatively the application can display a message that the application will execute the command following a time delay unless the user instructs the application or program to the contrary.

Text and commands are distinguished based upon attributes of the input speech and based upon the grammar of application commands. For example the distinguishing attributes of a command can include leading and trailing pauses separating the command from the rest of the utterance.

However in another embodiment free form speech dictation can be used and command confirmation or validation still employed.

If the recognized speech is dictation then the text is placed in a currently active user interface element of user interface as illustrated by step .

If the recognized speech is a command then the validation component determines if the command is destructive or non destructive or whether to request confirmation as illustrated by step .

In the illustrated embodiment if the command is destructive then confirmation is requested from the user as illustrated by block . If the command is not destructive then the command is converted into the selection of a user interface element and a call to the selection method is made at step .

As shown in step if the destructive command is confirmed by the user then the command is converted into the selection of a user interface element at step . Otherwise if the user does not confirm the command the command is not executed. The process waits for the next speech input as illustrated in step .

The validation component uses the list of commands in the data store to selectively request confirmation prior to executing the command. Using the data store to identify destructive or monosyllabic commands for confirmation prior to execution reduces misrecognition and execution of unintended tasks or functions.

A list of destructive commands can be manual input into the data store . For example the destructive commands can be entered without user input. In another embodiment data store records are generated based upon feedback from the user. In a further embodiment the end user can configure the application even while the application is running to modify the list of destructive words in the data store . For example if the speech recognition component outputs the command run but the user did not utter or intend the run command the user can provide feedback to the application indicating that there was a recognition error. Specifically the user can indicate that the command run should not have been executed and that the run command must be validated in the future. This command is then added to the data store so that the user is prompted prior to execution of the command in the future.

In an illustrative embodiment applications themselves can populate the data store with a list destructive commands. This can be done in several ways. In accordance with one way when the application is installed the application populates a list of destructive commands to the data store .

In accordance with another way the application dynamically marks certain elements in the user interface as destructive. Thus when the speech support component interfaces with the application to determine the elements or interface commands displayed the speech support component can also determine which command or commands are destructive. For example in one interface or application when the user utters red for a red flag red is marked as destructive and a confirmation step is used to confirm execution of the speech command or utterance. In a different part of the same application or a different application red can merely change the text color and thus red is not marked as destructive and no confirmation step is used.

Information regarding the instances in which commands are destructive can be embedded in the list of destructive commands. For example send all applications denotes that the send command is destructive for all applications while red alertmonitor denotes that red is destructive for the application called alertmonitor only.

Thus in illustrative embodiments the data store can be a static store or alternatively the data store can be dynamically populated and application is not limited to a particular embodiment described.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

