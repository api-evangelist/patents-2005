---

title: System and method for transferring content via a network
abstract: A system for delivering content, such as video content, via a network. In an illustrative embodiment, the system includes a server system that is connected to the network and has access to the content. A client system is adapted to forward a request for the content to the server system via the network. One or more content-delivery routines in communication with the server system are adapted to initiate sending of the content to the client system via multiple streams over the network in response to the request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08484308&OS=08484308&RS=08484308
owner: MatrixStream Technologies, Inc.
number: 08484308
owner_city: San Francisco
owner_country: US
publication_date: 20050630
---
This invention claims priority from U.S. Provisional Patent Application Ser. No. 60 585 025 filed Jul. 2 2004 which is hereby incorporated by reference as if set forth in full in this specification.

This invention is related in general to networks and more specifically to systems and methods for transferring information such as video content via a network.

Systems and methods for transferring information via a network are employed in various demanding applications including video conferencing network gaming Video On Demand VOD and general file transfer applications. Such applications demand efficient transfer of information with minimal glitches errors and consumption of network resources.

Efficient content transfer systems and methods are particularly important in VOD applications where timely transfers of excessively large video files are critical. Conventionally a VOD system running on a client computer will download one or more video files from a remote location via a network in response to user input. Unfortunately existing file transfer and download scheduling techniques employ relatively inefficient protocols characterized by slow download times and network traffic bottlenecks. Such inefficient data transfer protocols limit VOD quality and functionality. The resulting dearth of viewing features and related functionality and quality afforded by existing VOD systems reduces the popularity of such systems.

Certain embodiments of the present invention provide a system for delivering content such as video content via a network. One embodiment includes a server system that is connected to the network and has access to the content. A client system is adapted to forward a request for the content to the server system via the network. One or more content delivery routines in communication with the server system are adapted to initiate sending of the content to the client system via multiple streams over the network in response to the request.

In a more specific embodiment the network is a best effort network. The server system includes a server cluster comprising plural servers. The server system further includes an interface appliance in communication with the server system. The interface appliance facilitates controlling delivery of the content via the server system. The interface appliance accommodates a web browser and accompanying interface which are adapted to facilitate configuring the server system.

In the specific embodiment the client system includes a client interface that receives user input which may affect the request for the content sent from the client system to the server system. The client interface further includes or communicates with a display for presenting the content which includes video content. The client interface further includes one or more menus configured to provide access to auxiliary content that is related to the video including video chapter information. The client interface further includes one or more content menus adapted to facilitate selecting content.

Various advantages provided by certain embodiments of the present invention are particularly enabled by use of plural data streams between a client and a content source such as a server system. Use of plural data streams significantly improves delivery of bandwidth intensive content such as video over best effort networks which lack Quality Of Service QOS guarantees. Use of plural data streams helps to stabilize content transfer rates and to increase acceptable content transfer rates. Furthermore auxiliary data streams provide auxiliary information that enables embodiments of the present invention to offer greatly enhanced functionality over conventional network based content delivery systems such as conventional VOD systems.

Unlike conventional VOD systems certain embodiments of the present invention may employ the plural data streams to implement DVD player functionality. For example features such as fast forward rewind pause language selection chapter controls actor interviews director biographies and so on which are not typically provided by VOD systems may be provided via VOD systems constructed according to embodiments of the present invention.

For clarity various well known components such as power supplies communications ports hubs modems gateways firewalls network cards Internet Service Providers ISPs and so on have been omitted from the figures. However those skilled in the art with access to the present teachings will know which components to implement and how to implement them to meet the needs of a given application.

The server cluster includes plural servers running content delivery routines which employ plural communication streams to communicate with and provide content to various client systems via the network . For illustrative purposes the various client systems are shown including a first client system a Set Top Box and a Personal Computer PC system . The client system may be implemented via any type of client including an STB a PC or other computer. For the purposes of the present discussion a computer is any processor in communication with a memory. Consequently televisions Personal Digital Assistants PDAs cell phones and so on are considered computers and represent suitable playback control devices which act as clients. Although it is contemplated that a control and playback system are one and the same other applications can use a control system that is separate from a playback system as for example when a control instruction such as selection of a video for playback is used to send the content to multiple playback platforms or displays in a household or movie theater.

The first client system which is shown in more detail than the STB client or the PC client includes a protocol handling module in communication with a client interface system . The client interface system includes a display which communicates with plural interface control modules . The interface control modules include playback controls volume controls display controls a display options module a program guide module playlist controls a video retrieval module a rights management module a menu customization module and parental controls . Additional modules and functionality may be employed or certain modules may be removed from the interface control modules without departing from the scope of the present invention. Each of the interface controls may be associated with one or more buttons fields links screens or other interface objects which are displayed via the display and are responsive to input from a user of the client system .

The protocol handling module interfaces the client interface system with content stored in a memory not shown of the client system and with the communication streams between the client system and the network . In the present illustrative scenario the communication streams include a control stream a menu stream a chapter stream an advertising stream a first data stream a second data stream a third data stream a fourth data stream and multicast streams . The various communication streams enable a user of the client system to selectively retrieve and interact with video content . The content may be content other than video content without departing from the scope of the present invention. For example the content may represent electronic books software music and so on.

One or more of the communication streams may be consolidated without departing from the scope of the present invention. For example the four data streams may be consolidated into two data streams and the control stream menu stream and chapter stream may be combined into two or fewer streams. Furthermore streams may be separated in to different streams or other additional streams between the distribution center and the client system may be employed without departing from the scope of the present invention.

In operation a user of the client system may employ the video retrieval module and the rights management module to log in to the content distribution center by entering a username password and or other authentication parameters. Certain authentication routines running on the video retrieval module and or the rights management module employ the protocol handling module to establish a control channel between the client system and corresponding authentication routines running on the server cluster . Certain conventional systems and routines for logging in to a remote server or cluster of servers may be employed to authenticate the client system without departing from the scope of the present invention.

After the user of the client system is authenticated the user may employ the menu customization module to customize user interface menus displayed via the display . The menus may be customized for each movie or other content retrieved from the content distribution center . In response to activation of the menu customization module the protocol handling module establishes the menu stream between the content distribution center and the client system to retrieve customizable menu information from the server cluster . The customizable menu information is associated with the particular movie or other content to be viewed via the display of the client system . A user may employ the parental controls to also configure menus establish passwords or perform other functions to inhibit use of the client system and accompanying client interface by children or other unauthorized users.

After authentication a user of the client system may employ the program guide the playlist controls and or the video retrieval module to select and or schedule content for viewing. For example the client system may be configured to immediately download a particular movie for viewing via the video retrieval module . The protocol handling system then employs a unique protocol as discussed more fully below to initiate transfer of the movie from one or more servers of the server cluster to the client system via the best effort network . The protocol handling system selects a primary contact server from the server cluster to facilitate delivering the movie . The protocol handling system then initializes the communication streams for the particular movie content . In the present example the control stream the chapter stream and the four data streams are initialized via the protocol handling routines and corresponding routines running on the server cluster . Those skilled in the art with access to the present teachings may readily construct such routines without undue experimentation. Alternatively the routines may be ordered from MatrixStream Technologies Inc.

The chapter stream enables a user of the client system to select or jump to viewing particular chapters which are being downloaded via the data streams . A user may begin viewing a chapter or video via the client system before the entire chapter or video is transferred to the client system .

The protocol handling module employs control stream to adjust download parameters as needed for a particular download operation. For example the protocol handling module may run routines to monitor transmission progress and or network performance and latency characteristics and then increase or decrease the number of data streams employed to transfer the movie over the best effort network in response thereto.

Subsequently the desired movie is transmitted in chapters via the plural data streams . In the present embodiment four video data streams are chosen to transfer video content via the best effort network to the client system . However different numbers of data streams may be employed to meet the needs of a given implementation without departing from the scope of the present invention.

In the present embodiment the network is a best effort network such as the Internet or other Transmission Control Protocol Internet Protocol TCP IP network. For the purposes of the present discussion a best effort network is a network that does not provide Quality Of Service QOS guarantees. The performance of a best effort network varies based on network usage and other factors which are often difficult to predict.

Conventional content delivery systems are often subject to download glitches when the performance of the download data stream being transferred through a best effort network drops below a predetermined level or fluctuates by more than a predetermined degree. Use of the multiple data streams provides plural significant advantages over conventional VOD systems and accompanying protocols. The advantages are particularly pronounced in applications involving large file transfers over best effort networks. Use of multiple streams enables the system to transfer content efficiently over the best effort network without requiring QOS network functionality.

In particular unlike certain conventional VOD systems file transfer performance characteristics no longer depend entirely upon performance fluctuations of a single data stream. By employing plural data streams the performance fluctuations of each data stream average thereby stabilizing the overall download rate and limiting packet losses. Hence content transfer rates are relatively stabilized in the presence of variable network congestion.

Furthermore use of plural data streams capitalizes on another network property to improve content transfer rates. In particular in a given network data upload rates for a particular data stream are often slower than data download rates. Slow upload rates may reduce overall link bandwidth. Consequently simultaneously uploading or pushing content to the client system via plural data streams may increase the overall bandwidth between the content distribution center and the client system . This aspect is particularly noticeable in applications wherein servers of the server cluster exhibit relatively slow upload rates.

Users of a given VOD system often compete for bandwidth. If a link or particular data stream becomes congested such that demand for bandwidth is higher than the link capacity packets are dropped. Traffic conditions affecting congestion often change randomly. The server cluster may place additional servers or server resources online as needed to meet the needs of a given demand and to further stabilize content transfer rates.

In the present specific embodiment the server system employs accompanying content delivery routines to determine a desired download rate i.e. content transfer rate and a desired fluctuation of the content transfer rate. Certain content delivery routines monitor the condition of the network such as network latency and congestion parameters and provide a signal in response thereto. The content delivery routines and the protocol handling routines running on the client system then employ a specific number of the communication streams to facilitate content transfer between the server cluster and the client system . The specific number of communication streams is selected by the content routines so as to stabilize the transfer rate in accordance with the desired download rate the desired fluctuation of the download rate and the signal.

The system employs additional systems and methods to overcome problems associated with delivering video content over the best effort network . In particular the server cluster automatically pushes content that is likely to be requested by users of the client systems before the users request the content . For example in the present embodiment the server cluster pushes the top ten requested movies and the latest movie releases to the client systems automatically such as before the users request the content. Consequently when the users of the client systems are watching download movies or when they are away from the systems the client systems may be receiving pushed content from the content distribution center . The pushed content is trickled from the server cluster to the client system via plural data streams such as the four video data streams .

Selective pushing also called preloading facilitates viewing variable bit rate video via the client system . Server software running on the server cluster may initiate parallel video data streams to deliver the video to the client system in addition to a session data stream i.e. control data stream to command the client system and the menu data stream to deliver menu information from the server cluster to the client system. Data corresponding to the different streams may be preloaded or stored on the client systems for use when needed.

Selective pushing in accordance with the present teachings helps stabilize transfer rates and reduce network traffic spikes that might otherwise occur when several users attempt to simultaneously retrieve a given movie from the content distribution center . Selective pushing reduces network bandwidth and performance requirements.

One or more servers of the server cluster may push content to the various client systems via multicast data streams . In the present specific embodiment the multicast data streams each include the four data streams and the auxiliary streams as needed for particular content.

When a user of one of the client systems such as the first client system initiates a request to retrieve a particular movie via the video retrieval module the protocol handling module and corresponding modules running on the server cluster determine if the requested content is currently being multicast. If the content is being multicast to plural users the corresponding communication streams are switched to corresponding multicast data streams.

For the purposes of the present discussion multicasting of information includes automatically determining whether it is optimal for the client system to retrieve data from a multicast stream. The server cluster can automatically synchronize with the client system to ensure that not too many clients try to join the multicast group. If too many client requests exist the server cluster requests that all of the client systems wait and synchronize until a beginning of a next video multicast.

When the server cluster initializes the client system to join a multicasting group the client system will start to downstream the multicast video. However if the beginning piece of the video is missing e.g. when the client joins the multicast group when the video has already started the client system automatically initiates a separate stream to retrieve the missing beginning piece of the video.

Multicasting anticipates pushing video onto a client device s hard drive or set top box storage automatically. Once the video is completely pushed onto the hard drive a menu system such as implemented via the customize menus module and display automatically shows the end user that the video is available. When the user selects the video the user may then view the video instantly.

Another aspect of the present embodiment provides a menu and communication protocol as implemented in part via the protocol handling module which allows the streaming VOD system to provide many DVD type features including rewind fast forward pause chapter access and so on. User interaction with the streamed video production can include transport control chapter and scene selection related content e.g. the making of the movie biographies of actors etc. interactive games and other features. An exemplary menu sequence illustrating functionality afforded in part by the client system is discussed more fully below.

One aspect of the present embodiment involves sending video menu information as a separate data stream from the video content . The video menu stream is a type of auxiliary data stream that can be sent independently of the video content to which it relates. The video menu stream facilitates enabling a user of the client system to select features that are commonly associated with DVD playback on a standard standalone DVD player. Optionally the control stream implements a video index data stream which enables fast forward and rewind video functions which are activated via the playback controls module of the client interface .

Other types of auxiliary data streams include the advertising stream for presenting advertisements to the client system the chapter stream for providing user interactive chapter selection and viewing and the control stream for managing video playback and providing various additional capabilities. The additional capabilities may include enabling a user of the client system to control the number of data streams that are employed to retrieve content from the server cluster .

A system administrator may employ the system manager interface appliance to facilitate controlling the behavior of the system . For example an administrator may employ the browser interface to activate the manage distribution servers module to choose the movies that will be pushed to the client systems and to choose the times at which pushing will commence. An administrator may employ the manage members module to control which members may receive content from the content distribution center . The view members module incorporates routines that enable the administrator to view all members that are currently logged into the content distribution center . The adjust global settings module may be employed to adjust parameters that may globally affect the system such as channel names and license acquisition information. The browse content module may enable the administrator to browse content offered to the client systems via the server cluster . The display video hits module may enables the administrator to display the numbers of requests for each type of content such as for each movie offered by one or more servers of the server cluster . The manage channels module enables the administrator to encrypt or re package videos for distribution to manage advertising such as by adding deleting or editing banners to be transferred to the client systems via the advertising stream and to verify the status of encrypted content. The administrative tools module facilitates administrator control over various system aspects such as which videos and advertising are presented and when. The generate reports module may enable an administrator to generate various reports such as bandwidth usage reports. The administrator may employ the manage distribution servers module to selectively place online or take offline certain servers of the server cluster .

The various modules are shown for illustrative purposes. Exact details of the modules are application specific. Those skilled in the art with access to the present teachings may delete various modules add certain modules or change the functionality of the modules to meet the needs of a given application without departing from the scope of the present invention.

The server cluster and the protocol handling module running on the client system may further implement routines that enable an administrator employing the system manager interface appliance to selectively delete videos cached or otherwise stored on the client system . Content providers may also employ the system manager interface appliance and one or more of the accompanying modules to control the length or viewing period of the content and to set expirations such the content is deleted from the client system after expiration of the content.

The protocol handling module incorporates additional routines that periodically query the server cluster via the control stream to ensure that the client system is running the latest software. If new software updates are detected by the protocol handling module then the software updates may be retrieved by the client system from the server cluster of the content distribution center via one or more of the data streams . The protocol handling module may then install the updates as needed or when appropriate.

The server cluster may be implemented via plural servers such as I MX servers. For example in one implementation the system manager interface appliance communicates with a central I MX management server not shown contained within the server cluster to control how users view videos from the client systems . The I Mx management server may authenticate an administrator employing the browser interface before allowing the administrator to access secure web based content management functions implemented via the HyperText Transport Protocol HTTP browser .

Various types of I MX servers may be included in the server cluster . Suitable I MX servers may be ordered from MatrixStream Technologies Inc. The I MX servers be readily configured to provide requisite VOD features including reliability scalability High Definition Television HDTV Digital Video Disk DVD quality and functionality subscriber and video management billing support end to end video encryption and support for the client systems . In the present specific embodiment the I MX servers of the server cluster include one or more I MX C2000s video delivery servers S2100s video storage servers and M2200s video management servers . The resulting server cluster supports multiple video codecs. For example the system may accommodate MPEG4 WM9 H264 and other video formats.

Unlike conventional VOD server systems which are based on centralized architectures that may scale to a few thousand users I MX server cluster may scale to millions of users. Furthermore such server systems facilitate implementing an integrated billing system not shown . The I MX 2200 video management server includes an open Application Programming Interface API that enables customized billing solutions membership support features and is further compatible with industry standard third party billing software such as Ccbill and Ibill. Various client operations including software updates user access permissions programming programming content and so on may be remotely managed via an M2200 management server implemented in the server cluster .

The built in web based management tools enable an administrator to control virtually all functions of the I MX server cluster including video upload management video security and user membership management advertising billing video delivery and so on. Service providers may manage the entire VOD system and accompanying service form a single computer designed to implement the content distribution center .

The I MX 2000 series television video servers incorporated in the server cluster may provide additional support for support authentication including support for user password login functions. Additional functionality which may be implemented via an I MX 2000 server includes content upload features including web based video upload via the browser or other upload client. Consequently an administrator such as a service provider may employ the browser to upload content to the server cluster from other web accessible sources. Additional batch functions may allow operators to automate the distribution of large volumes of videos.

The I MX server family which is employed to implement the server cluster in the present embodiment is readily configurable to support the unique protocols employed by the client systems . The server cluster incorporates support for scalable video delivery such that the numbers and quantities of movies delivered may readily scale to address client demand. The server clusters may deliver content using any IP port on a client system . Consequently the system is readily adaptable to work with various firewalls which guard certain ports but may enable communications on other ports.

The server cluster implements Electronic Program Guide EPG functionality. An EPG may be formed via the browser interface which enables the administrator to upload to or otherwise associate videos with a given EPG. The system manager interface appliance incorporates one or more modules that enable programmed content to be released to the client systems automatically i.e. pushed to the clients automatically at predetermined times. The EPG may be cached locally on the client system to reduce server traffic. The content provider may control the EPG via the system manager interface appliance .

I MX servers of the server cluster employ cluster technology to facilitate automated fault tolerance and fail over. Consequently no hardware load balancer is required for fault tolerance. One or more of the servers of the server cluster support multilingual EPGs which may be transferred to the client systems which may be implemented as thin clients. Thin clients are stripped down network clients designed for a specific task which is retrieving and viewing VOD content in the present embodiment.

A user of the client system may access the EPG provided by the server cluster to the client system by activating the program guide module . In the present embodiment the program guide module further enables a user to view content by category browse the EPG navigate between EPG pages view movie descriptions jump to specific locations in the EPG and to list content available on the hard drive or other memory of the client system and content available from the server cluster .

The playback controls provide features commonly found in a DVD players including play pause rewind and fast forward features. Other examples of playback controls that may be implemented in part via the playback control module include parental control checking displaying movie play time and so on.

The volume controls enable a user to adjust the playback volume of content. The volume controls may include mute graphical equalizer and other audio functionality.

The chapter controls implement functionality sufficient to allow a user to select particular chapters of content stored on the server cluster or in memory on the client system for viewing. If the desired content resides on the server cluster and has not been retrieved by the client system then selection of the chapter controls module activates a chapter selection signal. The chapter selection signal is sent to the server cluster via the chapter stream and the protocol handling module running on the client system . The chapter selection signal may trigger sending of chapter information pertaining to the desired content from the server cluster to the client system . Upon selection of a particular chapter the client system may then forward a request for a particular chapter or other section of a particular video or other content to the server cluster . Upon receipt of the request and after any requisite authentication of the client system or associated chapter request the server cluster may then forward the content of the requested chapter to the client system via the data streams . The requested chapter may be streamed pushed at a specific time or otherwise transferred to the client system for viewing.

Alternatively the chapter information pertaining to a particular downloaded streamed or otherwise transferred content is transferred simultaneously to the client system via the chapter stream along with the content which is transferred via the content data streams . In this implementation the chapter information represents auxiliary information that is transferred from the server cluster to the client system . The auxiliary information includes navigation data that enables a user of the client system to select a desired chapter or other portion of the content for viewing.

For the purposes of the present discussion auxiliary content is any content other than the video itself such as chapter information alternative language content director biographies and so on. Auxiliary information transferred from the server cluster for particular content which are transferred via communication streams different than the content data streams enhance the content viewing experience and functionality afforded by the client system .

For example menu information associated with a particular movie may be retrieved by the client system via the menu stream . The menu customization module may then employ the menu information to display a customizable menu upon selection of the module by a user of the client system . Hence the menu customization module provides a user option to select one or more custom video menus that are each associated with a custom menu data stream . Each video may be associated with a different selection of custom menu data streams . Each custom menu data stream represents a bi directional stream wherein data may be transferred back and forth between the client system and one or more video servers of the server cluster that are communicating with the client system..

The server cluster and the protocol handling module are configured to communicate via the best effort network using the communication streams which are parallel encrypted data streams. One skilled in the art may employ Request For Comment RFC 1323 Transmission Control Protocol TCP with a window size larger than 128 kilobytes with a video menu data stream containing menu data corresponding to multiple video subtitles. Each of the parallel data streams may start at the beginning of each menu chapter.

Additional auxiliary information such as video programming is either accessed by the protocol handling module from the memory of the client system or retrieved from the server cluster in response to selection of the program guide module of the client system . Auxiliary information is transferred as needed from the server cluster to the client system to enable various functions afforded by the interface controls .

The display options module may enable full screen viewing and other display options. Various display options are application specific.

The rights management module incorporates Digital Rights Management DRM functionality that limits content piracy and enables only authenticated systems employing the DRM module to view content retrieved from the content distribution center . The module may include functionality needed to retrieve licenses from memory decode DRM protected content and to retrieve licenses from the server cluster .

The rights management module facilitates implementing triple layer security including user tracking as required to meet stringent movie industry security requirements. Content is secured and encrypted on the video client system and may be viewed only via the client system or other authorized client . The various client systems may be implemented via an I MX video client constructed according to the present teachings. An I MX 1100 video client which may be employed to facilitate implementing the client system may be ordered from MatrixStream Technologies Inc.

The playlist controls module enables a user to assign specific content to a playlist view content in the playlist play content from the playlist delete content from the playlist arrange content in the playlist create new playlists view existing playlists and so on. Certain playlist functionality may be omitted or added without departing from the scope of the present invention.

The video retrieval module enables a user to at least partially control the way the client system retrieves content from the server cluster . For example videos for retrieval from the server cluster may be queued for retrieval via the video retrieval module . Content may also be added or removed from the queue. The video retrieval module may also enable a user to control whether a video is scheduled for push or scheduled for streaming. Furthermore a user may selectively stop content streaming or downloading and the user may determine how many of the four data streams are employed to retrieve content from the server cluster . Furthermore the user may employ the video retrieval module to view content downstreaming progress via the display .

The video retrieval module may also implement authentication functionality such as server login server date and time synchronization server location information and so on. The retrieval module may also initiate transfer of configuration information from the server cluster which is employed by the client system to configure the client system to appropriately handle content from the server cluster .

A user of the client system may also employ functionality provided by the video retrieval module to select operational modes of the client system . In a first operational mode content is continually downloaded 24 hours per day if needed. In a second operational mode a user may select content such as from an EPG to activate playback of the content from a hard drive or other memory of the client system . For video that has not been preloaded selecting the content by a user via a menu may initiate transferring of the content from the server cluster to the client system via one of several configurable retrieval modes including downloading streaming or multistreaming pushing and so on.

Hence the client system and accompanying modules enable a user to interact with the client system to select a desired operational mode. For example a customer can configure the client system so that the top most requested videos are pushed by the server cluster to the client system before the user wishes to view the videos. Less popular videos or videos that are less likely to be experiencing data crunches may be scheduled for immediate delivery. This functionality further reduces network traffic bottlenecks and associated problems.

Upon selecting the desired transmission mode such as streaming pushing and so on and upon retrieving the desired content a user may then view the content via the display of the client system while having full access to DVD menus chapter controls and so on. The information needed to implement the DVD menus chapter controls and so on is retrieved via one or more of the auxiliary communication streams . The operation of various DVD functions such as DVD menus is independent of the content retrieval mode.

To extract DVD menu information corresponding to a particular movie DVD the menus of the DVD are extracted digitally encoded and transferred to the server cluster in preparation for implementation via the client system . Exact methods for extracting and digitally encoding DVD menu information from an existing DVD are application specific. One skilled in the art with access to the present teachings may readily extract DVD menu information or create new DVD menu information as required for a particular implementation of an embodiment of the present invention.

Certain modules collectively called interface controls may be deleted or additional modules may be added without departing from the scope of the present invention. Those skilled in the art with access to the present teachings may readily construct or order various modules discussed wherein without undue experimentation.

Hence the system implements a VOD system that exhibits plural beneficial features that enable rapid glitch free movie watching with DVD functionality including pause fast forward rewind access to video chapters playback and selection of auxiliary video programs such as actor biographies and so on. The system further enables users to view electronic program guides access specific chapters of a movie download stream or otherwise receive specific chapters selectively download movies at specific times receive pre scheduled push content from the content distribution server selectively receive multicast movies from the content distribution center customize video menus select between various video retrieval modes including downloading pushing and streaming and so on.

The interface controls include a rewind control a stop control a pause play control and a fast forward control which communicate with the protocol handling module to trigger selective rewinding stopping pausing playing and fast forwarding of content retrieved by the client system of . The interface controls further include volume controls menu selection controls channel selection controls and a numerical keypad . A user may employ the menu selection controls to navigate various menus . The channel selection controls enable a user to select video channels that are adjacent to the current video channel. The various controls provide functionality that simulates functionality offered by a conventional DVD player remote. The keypad may facilitate content chapter selection or other functions afforded by the interface controls of .

With reference to in the present illustrative scenario a user employs the menu then displays the EPG via the display . The EPG includes various thumbnails that graphically depict movie choices. The thumbnails are associated with adjacent descriptions which include movie title and or other descriptive matter. Other descriptive mater may for example indicate which movies are new releases which movies have already been retrieved by the client system and so on. The EPG also includes a main menu button which may activate a main menu not shown upon selection.

In the present illustrative scenario a user employs the menu selection controls to select one of the thumbnails of the EPG . Subsequently a corresponding EPG description screen appears in the display . The EPG description screen includes a larger descriptive image or video clip associated with the movie that is associated with the selected thumbnail . The larger descriptive image is positioned adjacent to a more detailed description such as a summary of the selected video. An adjacent pause play button enables a user to activate a content play screen to facilitate playing the video that is associated with the detailed image and description . Alternatively the user presses the pause play button of the interface control device rather than selecting the button via the menu selection controls .

The content play screen includes a relatively large viewing area adjacent to an additional pause play button stop button full screen button audio playlist button view playlist button jump to chapter button back button and retrieve menu button . The full screen button enables a user to play the movie using the entire area of the display . The add to playlist button causes the current video to be added to a desired playlist. The jump to chapter button enables a user to skip to a desired chapter of the currently selected video. The back button enables a user to return to the previous screen. The retrieve menu button enables a user to retrieve menu information associated with the currently selected video from the server cluster if it is not already available from the memory of the client system . The view playlist button activates a playlist screen .

The playlist screen also includes a pause play button and a playlist listing the current videos in the current playlist. A repeat button enables a user to re play a particular video. An exit button enables a user to exit the playlist screen and return to another screen such as a the EPG screen . A save button enables a user to save the current playlist .

The various screens and are shown for illustrative purposes. Various menu sequences are application specific. Exact screen details and or menu sequences may be adjusted or changed without departing from the scope of the present invention.

With reference to the protocol includes an initial video selection step wherein a user employs a client system to select a video server from plural video servers . The selected video server is called the primary contact server. The primary contact server is chosen to be the best server to download data based on predetermined parameters which may be adjusted via the system manager interface appliance of .

In a subsequent authentication step the client system is authenticated to verify that the client system is authorized to retrieve content from the primary contact server of the server cluster of . After the client system is authenticated via one or more processes running on the server cluster communication streams are initialized in a first initialization step .

The first initialization step involves initializing one or more chapter streams and or menu streams between the client system and the primary contact server. The chapter streams and or menu streams provide chapter menu information to the client system .

In a subsequent second initialization step a control stream between the client system and the primary contact server is initialized. The control stream monitors the status of the network of . Plural corresponding content data streams are initialized as required to stabilize content transfer speeds in a third initialization step .

Subsequently a multicast checking step involves determining if content to be transferred to the client system is currently being multicast. If the content is currently being multicast then a control stream adjustment step is subsequently performed.

The control stream adjustment step includes adjusting the control stream to cause one or more of the plural data streams to switch to corresponding multicast data streams . Content retrieval then resumes in a content retrieval step . The status of a particular content retrieval process may be displayed via the display and or via the browser interface of .

In a subsequent break checking step the system of determines if a break has occurred or content transferring is otherwise complete. For example a break occurs when the client system of is unplugged. If a break has not occurred or the content has not been completely transferred to the client system then content transferring via step resumes. If the multicast checking step determines that the content to be transferred is not being multicast then video transferring continues via step .

Subsequently in a video status checking step protocol handling routines running on the client system determine based on user into and or preselected configuration settings whether video content selected from the customized menu and or electronic program guide should begin transferring from the server cluster to the clients system at a specific time. In some implementations selected video will have already been transferred to the memory of the client system or will be part of a pre established content pushing schedule.

If the video status checking step determines that the selected video content is not to be pushed from the server cluster to the client system then content transfer begins immediately in a data transferring step . The data transferring step employs parallel encrypted data streams as needed to facilitate transferring the video and accompanying auxiliary content and control functionality. Before beginning content transfer the server cluster may authenticate the client system to ensure that the client system is authorized to receive content from the server cluster . Video data streams may be encrypted by the content distribution center via a robust encryption technique such as via Advanced Encryption System AES 128 bit encryption. The protocol handling routines of the client system then employ corresponding AES decryption algorithms to decrypt the received content.

If the video status checking step determines that the selected video should be scheduled for push at a subsequent future time then the video content commences transfer from the server cluster at the scheduled time in a pushing step . The video content is transferred via multiple data streams including one or more video data streams for implementing menu functionality the control data stream the chapter data stream and the menu data stream .

After video transfer is complete or reaches a point wherein the content is ready to view the user of the client system is notified that the content is ready to view in a content notification step . A video may be accessed and viewed by a user of the client system before video transferring operations are complete. Notification mechanisms may include special thumbnails icons audio signals and or other mechanisms which may be implemented via one or more of the interface controls and the display .

After the user of the client system views the transferred content a session data stream which may be implemented via the control stream of is employed to notify the server cluster that the transferred content has been viewed and accessed in a session updating step . After the transferred content has been viewed by the user of the client system the content is stored on the client system and or the content is deleted or scheduled for future deletion from the client system by the content distribution center in a content deleting step . Content deletion tasks may be triggered and or initiated by the content distribution center via the control stream . Deletion times and related parameters may be configured by an administrator via the system manager interface appliance and or in some implementations by a user of the client system . Subsequently the method is complete.

Various steps of the methods and of respectively may be reordered deleted or interchanged with other steps without departing from the scope of the present invention. For example the initial menu step may be omitted from the method . Furthermore various loops may be adjusted. For example after the break checking step of the initial video selection step may be performed next instead of the protocol ending.

Although the invention is discussed primarily with respect to content transferred over a best effort network such as the Internet any suitable network network topology transmission protocols sender receiver devices and relationships and other characteristics or properties of electronic devices processes and transmission methods can be used. In general any network or communication arrangement can be suitable for use with embodiments of the invention. Also any communication protocols or other features or characteristics of data transfer may be employed.

While the present embodiment is discussed with reference to systems and methods for facilitating transfer of video content over a network embodiments of the present invention are not limited thereto. For example any type of data either wired or wireless may benefit from content transfer functionality afforded by embodiments of the present invention.

Although embodiments of the invention are discussed primarily with respect to server client architecture any acceptable architecture topology protocols or other network and digital processing features can be employed. In general network controllers managers access points clients and so on required for a particular implementation can be implemented via any device with processing ability or other requisite functionality.

Although processes of the present invention and the hardware executing the processes may be characterized by language common to a discussion of the Internet e.g. client server peer it should be apparent that operations of the present invention can execute on any type of suitable hardware in any communication relationship to another device on any type of link or network.

Although a process of the present invention may be presented as a single entity such as software executing on a single machine such software can readily be executed on multiple machines. That is there may be multiple instances of a given software program a single program may be executing on two or more processors in a distributed processing environment parts of a single program may be executing on different physical machines etc. Furthermore two different programs such as a client and server program can be executing in a single machine or in different machines. A single program can be operating as a client for one information transaction and as a server for a different information transaction.

Any type of processing device can be used as a client. For example portable computing devices such as a personal digital assistant PDA cell phone laptop computer or other devices can be employed. In general the devices and manner of specific processing including location and timing are not critical to practicing important features of the present invention.

Although the invention has been discussed with respect to specific embodiments thereof these embodiments are merely illustrative and not restrictive of the invention. Embodiments of the present invention can operate between any two processes or entities including users devices functional systems or combinations of hardware and software. Peer to peer networks and any other networks or systems where the roles of client and server are switched change dynamically or are not even present are within the scope of the invention.

Any suitable programming language can be used to implement the routines or other instructions employed by various network entities. Exemplary programming languages include C C Java assembly language etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single processing device or multiple processors. Although the steps operations or computations may be presented in a specific order this order may be changed in different embodiments. In some embodiments multiple steps shown as sequential in this specification can be performed at the same time. The sequence of operations described herein can be interrupted suspended or otherwise controlled by another process such as an operating system kernel etc. The routines can operate in an operating system environment or as stand alone routines occupying all or a substantial part of the system processing.

In the description herein numerous specific details are provided such as examples of components and or methods to provide a thorough understanding of embodiments of the present invention. One skilled in the relevant art will recognize however that an embodiment of the invention can be practiced without one or more of the specific details or with other apparatus systems assemblies methods components materials parts and or the like. In other instances well known structures materials or operations are not specifically shown or described in detail to avoid obscuring aspects of embodiments of the present invention.

A machine readable medium or computer readable medium for purposes of embodiments of the present invention may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus system or device. The computer readable medium can be by way of example only but not by limitation an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus system device propagation medium or computer memory.

A processor or process includes any human hardware and or software system mechanism or component that processes data signals or other information. A processor can include a system with a general purpose central processing unit multiple processing units dedicated circuitry for achieving functionality or other systems. Processing need not be limited to a geographic location or have temporal limitations. For example a processor can perform its functions in real time offline in a batch mode etc. Portions of processing can be performed at different times and at different locations by different or the same processing systems.

Reference throughout this specification to one embodiment an embodiment or a specific embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention and not necessarily in all embodiments. Thus respective appearances of the phrases in one embodiment in an embodiment or in a specific embodiment in various places throughout this specification are not necessarily referring to the same embodiment. Furthermore the particular features structures or characteristics of any specific embodiment of the present invention may be combined in any suitable manner with one or more other embodiments. It is to be understood that other variations and modifications of the embodiments of the present invention described and illustrated herein are possible in light of the teachings herein and are to be considered as part of the spirit and scope of the present invention.

Embodiments of the invention may be implemented in whole or in part by using a programmed general purpose digital computer by using application specific integrated circuits programmable logic devices field programmable gate arrays optical chemical biological quantum or nanoengineered systems or mechanisms and so on. In general the functions of the present invention can be achieved by any means as is known in the art. Distributed or networked systems components and or circuits can be used. Communication or transfer of data may be wired wireless or by any other means.

It will also be appreciated that one or more of the elements depicted in the drawings figures can also be implemented in a more separated or integrated manner or even removed or rendered as inoperable in certain cases as is useful in accordance with a particular application. It is also within the spirit and scope of the present invention to implement a program or code that can be stored in a machine readable medium to permit a computer to perform any of the methods described above.

Additionally any signal arrows in the drawings figures should be considered only as exemplary and not limiting unless otherwise specifically noted. Furthermore the term or as used herein is generally intended to mean and or unless otherwise indicated. Combinations of components or steps will also be considered as being noted where terminology is foreseen as rendering the ability to separate or combine is unclear.

As used in the description herein and throughout the claims that follow a an and the include plural references unless the context clearly dictates otherwise. Furthermore as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise.

The foregoing description of illustrated embodiments of the present invention including what is described in the Abstract is not intended to be exhaustive or to limit the invention to the precise forms disclosed herein. While specific embodiments of and examples for the invention are described herein for illustrative purposes only various equivalent modifications are possible within the spirit and scope of the present invention as those skilled in the relevant art will recognize and appreciate. As indicated these modifications may be made to the present invention in light of the foregoing description of illustrated embodiments of the present invention and are to be included within the spirit and scope of the present invention.

Thus while the present invention has been described herein with reference to particular embodiments thereof a latitude of modification various changes and substitutions are intended in the foregoing disclosures and it will be appreciated that in some instances some features of embodiments of the invention will be employed without a corresponding use of other features without departing from the scope and spirit of the invention as set forth. Therefore many modifications may be made to adapt a particular situation or material to the essential scope and spirit of the present invention. It is intended that the invention not be limited to the particular terms used in following claims and or to the particular embodiment disclosed as the best mode contemplated for carrying out this invention but that the invention will include any and all embodiments and equivalents falling within the scope of the appended claims.

