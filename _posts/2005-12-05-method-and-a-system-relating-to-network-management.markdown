---

title: Method and a system relating to network management
abstract: The present invention relates to a method for network management comprising configuration of control protocols between network elements in a network represented through a current, static, network element object model comprising a number of managed objects with attributes and instances and representing resources. It comprises the steps of: transforming the current network element object model to a machine readable and executable formal network element object model; identifying configuration tasks needed for the configuration of the relevant control protocols; modelling a formal configuration task model using information about the configuration tasks and the formal network element object model; building a formal configuration workflow model using the formal network element object model and the formal configuration task model, said formal configuration workflow model defining the relationships between different configuration tasks required for performing or completing a number of given actions or to achieve a number of given goals.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07953580&OS=07953580&RS=07953580
owner: Ericsson AB
number: 07953580
owner_city: Stockholm
owner_country: SE
publication_date: 20051205
---
The present invention relates to a method for network management comprising configuration of control protocols between network elements in a network represented trough a current static network element managed object model comprising a number of managed objects.

The invention also relates to a system for network management comprising means for configuration of network element control protocols for example control protocols between network elements in a network represented through a current static network element managed object model comprising a number of managed objects.

Within the network management field much effort has been made to create rule based approaches to automate different tasks in network elements. These approaches focus on the notion of a policy. A policy is a set of considerations designed to guide decisions of courses of action. It is an event triggered condition action rule that can be used to define adaptable management actions. An example of such management action is change of Quality of Service QoS . Policy based systems use policies to derive appropriate actions. A typical policy based network management system uses a rule engine to process all policies eliminate conflicts propose an appropriate policy and enforce it in the network elements. Policy based systems particularly concentrate on how to use knowledge to solve practical problems with little emphasis on the actual representation of the knowledge concepts.

The ability to represent knowledge has evolved from earlier approaches of expert systems to knowledge engineering. Ontological engineering focuses on only how to capture concepts in a given domain with the purpose of sharing a common understanding of the domain in question and enable interoperability and knowledge reuse. Ontology development has received interest with the so called Semantic web initiative and has triggered development of new languages and processing tools for capturing and representing knowledge allowing research companies to the re examine the concept of using ontologies as a possible solution to solve problems related to reuse and sharing of information. Ontologies similar to policy based approaches also use rules but only to describe knowledge concepts and to explain relationships between concepts and concept attributes. Rules in ontologies are hence not event triggered condition action rules since they do not trigger any events or actions.

It is known to perform configuration management of control protocols in Radio Access Networks following well defined processes. Network configuration or reconfiguration is planned offline in a planning phase based on some external event such as adding new equipment distributing traffic load etc. Then engineers for example within the customer support perform the planned configuration reconfiguration by following the appropriate configuration task specification which basically consists of steps to be executed in a well defined order.

Performing a configuration or reconfiguration task on network elements can for example be achieved by using a command line interface CLI or a machine interface CORBA . The former consists of performing an operation and maintenance activity by issuing commands to the network element. Such commands are often structured in scripts and sometimes graphically user interfaces are provided to collect configuration input and populate the scripts with the configuration information to be enforced in the network. The latter approach uses a machine interface e.g. CORBA by the mediation of a Graphical User Interface enabled application. Such applications manipulate a high level object oriented abstraction of network device resources represented by a Managed Object Model. The application also implements the logic of the configuration task in some programming language. Using these applications a customer support engineer first provides the necessary configuration input collected during the planning phase. Validation is then performed by a separate application to ensure that the input respects particular constraints related to the configuration task. After validation the application uses the machine interface to push the programmed configuration in the network.

A solution based on using purpose built command line configuration scripts for configuration reconfigurations requires a lot of human interaction to create or modify scripts. It requires a careful reading of the configuration task specification and a correct interpretation of the various configuration steps and constraints. Such a solution is also extremely prone to errors because scripts do not usually offer any validation to assert that the input configuration data is consistent. Furthermore it is very difficult to reuse scripts because knowledge about given configuration tasks is hard coded in the scripting language that is used. Graphical user interfaces for creating or modifying the scripts only provide user friendly human script interaction. They do however not solve any of the other problems referred to above.

The building of configuration applications using machine readable CORBA interfaces and the Managed Object Model for configuration management provides a more robust configuration interface to achieve less error prone configurations. However in known Managed Object Models there is little or no semantic information about the Managed Objects and their relationships which increases the burden of building application logic for handling network domain assumptions and specific configuration task constraints. Even with a very good software design knowledge about the domain and configuration coded in one application cannot be shared or reused across other applications.

Configuration management tasks are particularly hard to perform in e.g. 3G networks e.g. 3G wireless radio access networks and they were so far not automated to any considerable or satisfactory extent. This is mainly due to the fact that such networks are highly dynamic in their nature. Furthermore the information model to be manipulated is very large in size and the interactions related to transport signalling redundancy and mobility are very complex. In addition thereto the control protocols used are very complex.

What is needed is therefore a method as initially referred to through which the amount of human interaction can be reduced particularly in dynamic networks with a high degree of complexity. A method is also needed which is not prone to errors. Particularly a method is needed which facilitates configuration of control protocols between network elements in a 3G network e.g. a RAN. A method is also needed which provides a robust configuration in the phase. Moreover a method is needed for which the requirements such as careful reading of for example configuration task specifications and interpretation of their configuration steps and constraints can be minimized or reduced. Still further a method is needed which enables validation in run time in order to assure that the input configuration data is consistent. A method is also needed which does not require a complicated building of application logic to handle network domain assumptions and specific configuration task constraints. More particularly a method is needed which allows sharing and reusing of knowledge about domain and or configuration coded in one application by other applications.

Even more particularly method is needed which allows for validation of configuration at run time and through which errors and mis configurations particularly due to human intervention can be caught quickly and efficiently and appropriately corrected.

It is particularly an object of the present to provide a new modelling approach based on ontologies. Ontologies are taxonomies of concepts and their attributes in a given domain together with a formal representation of domain assumptions. Formal here means that it is semantically rich and based on a well understood logical paradigm that is machine readable and executable. Therefore a method as initially referred to is provided which comprises the steps of 

transforming the current network element managed object model to a machine readable and executable formal network element managed object model 

modelling a formal configuration task model using information about the protocol configuration task and the formal network element managed objects model 

building a formal configuration workflow model using the formal network element managed object model and the formal configuration task model whereby said formal configuration workflow model defines relationships between different configuration tasks required for performing or completing a number of given actions or to achieve a number given goals e.g. configuration actions.

Particularly the transforming step and the modelling step comprise forming formal ontologies representing the current network element managed object model i.e. comprising a formal network element managed object model and the configuration task model i.e. the formal configuration task model respectively. Particularly the transforming step comprises enriching the current network element managed object model by adding formal semantics and formal domain assumptions thereto.

Even more particularly the enrichment step comprises making concepts or explicit meanings of the managed objects of the current network element managed object model using frame logic primitives for representation of managed object sub classes containments and association relationships. Most particularly the formal domain assumptions comprise domain constraints for example cardinality constraints but also other domain constraints. Advantageously the method additionally comprises the step of fetching the domain assumptions or domain constraints in specifications specifying the managed objects contained in the current network element managed object model and adding said constraints using frame logic.

Advantageously the transforming step comprises using frame logic to formally model managed object classes attributes and relationships. The used frame logic most particularly comprises the so called F logic and the transforming step comprises mapping an UML Managed Object Model to F logic and modelling constraints using F logic rules.

Ontologies in F logic are for example described in the document with the same name by J. Angele and G. Lausen Ontoprise GmbH Universit t Freiburg. The F in F logic stands for frame and combines the advantages of conceptual high level approaches typical for frame based languages and the expressiveness the compact syntax and the well defined semantics from logics. The features of F logic include signatures object identity complex objects methods classes inheritance and rules. In the above mentioned document an overview of the syntax and the intuitive semantics of F logic is given. Ontology or conceptual modelling deals with describing in a declarative and abstract way the domain information of an application its relevant vocabulary and how to constrain the use of the data by understanding what can be drawn from it.

In a preferred embodiment the modelling step comprises creating formal configuration ontologies of different tasks needed for the or a number of configuration tasks for control protocols using frame logic.

Most particularly the modelling step comprises establishing relationships between protocol configuration tasks and the formal representation of the managed objects of the formal network element managed object model using ontology concepts. Most particularly the configuration tasks comprise one or more of adding a network element replacing a network element removing a network element and preparenting a network element etc. Of course it may also concern actions on more than one network element. In several embodiments a configuration task comprises a number of sub tasks and the configuration task or tasks and the sub tasks are represented by ontologies.

The building step particularly comprises using frame logic primitives to provide the respective workflow. Most particularly the method comprises step of introducing external information to provide the formal configuration workflow model for example manually or automatically from tables manuals etc. The workflow model particularly provides the configuration task with possible sub tasks order for carrying out a number of different configuration task actions and provisioning of relevant data to respective tasks and propagation of relevant data between configuration tasks and or sub tasks. Most particularly the real data from the network is input to provide relationships between configuration tasks and or sub tasks. Most particularly the method comprises the step of using frame logic axioms to build the configuration workflows. Even more particularly the method comprises the further step of executing the formal configuration workflows with network elements data to obtain semi automatic configuration of the control protocols to be configured. Said executing step may comprise using an inference engine to execute the relevant workflows.

Most particularly the method comprises the steps of loading the formal network element managed object model the formal configuration task model and the relevant configuration workflow ontology for a particular configuration task comprising a plurality of configuration tasks and or sub tasks into a database 

providing a connection to the database via an inference engine API Application Programming Interface hence providing a user interface 

introducing the configured network data into the network hence obtaining a configured or reconfigured network network element or control protocols.

Most particularly the network to be configured or in which control protocols are to be configured comprises a Radio Access Network RAN which most particularly be a 3G RAN such as for example a WCDMA RAN a UTRAN a GERAN a CDMA 2000 RAN etc.

Most particularly current network element managed object model comprises an Operation and Maintenance model. The representation of network data may comprise an XML e.g. a Bulk CM XML representation of network data.

In order to solve one or more of the problems referred to earlier in the application and to fulfill one or more of the objects discussed above a system as initially referred to is also provided which comprises transforming means which are adapted to transform the current network element managed object model to a machine readable and executable formal network element object model identifying means for identifying configuration tasks needed for configuration of at least a number of control protocols e.g. from a configuration specification or other sources and modelling means for modelling a formal configuration task model which are adapted to use information in the formal network element managed object model and information about the information tasks. The system further comprises flow building means for building a formal configuration workflow model using the formal network element managed object model and the formal configuration task model as well as external information or internal information which formal workflow configuration model defines the relationships between different tasks required for performing or completing a number of actions.

The transforming means and the modelling means particularly comprise means for forming ontologies representing the current network managed object model and the configuration task model hence forming the formal network element managed object model and the formal configuration task model respectively.

Particularly the transforming means are adapted to enrich the current network element managed object model by adding formal semantics and formal domain assumptions. Still further the enrichment means preferably are adapted to make concepts or explicit meanings of the managed objects of the current network element managed object model by means of frame logic primitives for representation of managed object sub classes containments and association relationships. More particularly the workflow building means comprise or are adapted to collect dedicated or external knowledge to provide workflows. The formal configuration workflows will then be adapted to automatically collect data required for workflows and distribute data to other configuration tasks when needed. Advantageously the system comprises a database adapted for loading into it the formal network element managed object model the formal configuration task model and the relevant workflow ontology for a particular configuration task comprising a plurality of configuration tasks and or sub tasks and means for requesting or at least receiving a representation of a network data from the network to be configured means for converting the representation of the network data to ontology instances. Particularly it comprises means for connecting to the database or providing a connection to the database via an inference engine API Application Program Interface to provide a user interface through which the automatical configuration task can be manually initiated or supported and further means for introducing reconfigured network data into the network hence obtaining a configured or reconfigured network. Particularly the network comprises a Radio Access Network most particularly a 3G Radio Access Network such as a WCDMA RAN and the current network element managed object model comprises an Operation and Maintenance model. Even more particularly the representation of network data comprises an XML particularly a BULK CM XML representation of network data. Reference is in this context made to 3GPP TS 32.615 v.5.5.1 2004 12 and 3GPP TS 32.612 Telecommunication management Configuration Management CM Bulk CM Integration Reference Point IPR Information Service IS where the concepts are explained. The copending patent application A METHOD AND A SYSTEM FOR NETWORK MANAGEMENT INFORMATION REPRESENTATION filed on the same date and by the same applicant describes provisioning of semantic external interfaces for Network Management System.

The present invention particularly deals with the field of configuration management CM which is an area wherein much time is spent on optimizing and changing the network to increase the revenue. It is important to be able to reduce the costs which according to the present invention can be provided for by means of configuration management automation. Configuration management is particularly used for setting up controlling modifying communication traffic in network devices and network elements for example devices such as switches routers base stations etc. It includes node configuration software management information model and logical connection management for initial system installation to establish the network system operation to adapt the system to short term requirements system update to overcome bugs or equipment faults and system upgrade to enhance or extend the network. Although configuration management tasks have achieved a considerable level of automation in the IP world the situation is not the same for 3G networks particularly 3G wireless radio access networks. Such networks are particularly difficult to configure or reconfigure due to their highly dynamic nature the size of the information model to be manipulated the complex interactions related to transport signaling redundancy and mobility and due to the complexity of the protocols used. For example WCDMA networks are flexible entities that change often to adapt to new situations such as changing traffic load load distribution etc. Such changes have a strong dependency relationship with the external environment and these dependencies make automation extremely difficult and generally in such activities require precise expert human knowledge and careful advanced planning.

According to the invention ontologies are considered to provide a potential to solve challenging problems in configuration management creating richer data models of network and allowing more automation among others for detection of bad configurations.

The term ontology in this document is defined as an explicit specification of a conceptualization. As such ontology means a hierarchy of organized concepts in some abstract domain relations between them and axioms to formalize the definitions and relations. An ontology as an explicit specification must also rely on well understood formal semantics which can be processed by machines.

Through the use of ontologies reuse and machine execution and analyses of knowledge can be provided. Various ontology description languages are known for example OWL Ontology Web language . The ontology definition language constructs are according to the present invention preferably translated to Frame logic F logic that can be used to represent knowledge of a domain in a structured and formally well understood way. In a particularly advantageous implementation a commercial available F logic based language by the company Ontoprise is used as well as their inference engine by Ontobroker to be more thoroughly described below. Of course other and similar F logic based languages and interference engines can be used as well this merely representing an advantageous implementation.

The present invention will particularly be described with reference to configurations relating to wireless networks. Due to the dynamic nature of wireless networks the management involves constant operator monitoring and frequent customization of network resources. Network resource data is structured in complex information models which generally are based on a set of object oriented models raising the abstraction from physical resources to a higher level of abstraction that can be used by software management applications.

In the context of the WCDMA radio network the hardware resource data model is available to management applications as a Managed Object Model MOM which is part of the management adaptation layer a higher level abstraction of the resource layer usually stored in relational databases. The MOM comprises a number of managed objects MOs which are abstractions of managed entities such as hardware resources mobile cells or communication channels. A manager controls an entity by creating deleting and modifying MOs that represent that particular entity. The naming mechanisms of managed objects consist of relative distinguished name RDN local distinguished name LDN and fully distinguished name FDN . Each network element NE stores instances of MOs in a managed information base MIB . The relations and cardinalities of the MO instances are based on the MOM conceptual specification. MIB manipulation is based on the TMNs manager agent paradigm where CM applications managers control the NE MIB agent by creating modifying and deleting instance objects.

The present invention suggests a MOM modelling approach based on ontologies which are taxonomies of concepts and their attributes in a given domain together with formal representation of domain assumptions. Formal as referred to above in this document means that it is semantically rich and based on a well understood logical paradigm. Formal ontologies are hence based on well defined semantics enabling machine readability and reasoning about information. Generally the present invention provides a combination of modelling a network element information model MOM in both sides of a controlling link and modelling of configuration tasks for controlling protocols as formal ontologies by adding semantic and formal domain assumptions. The interaction between both these formal ontologies enables a smart network configuration which includes automatic suggestion of configuration information depending on the configuration context as well as it allows for run time validation of the configuration process to ensure that configuration operations respect the formal representation of the configuration knowledge. In particularly the invention suggest a process or a set of architecture steps resulting in a new machine to machine interface which facilitates semi automatic protocol configuration.

In an advantageous implementation a formal NE MO model is created by explicating a UML Unified Modelling Language managed object model using F logic which means formally modelling classes attributes and relationships using frame logic as explained below which exemplifies UML MO mapping to F logic Managed Element is a top level Managed Object which has its own attributes and relationships to other concepts such as IpSystem and TransportNetwork together with their associated cardinality constraints.

Domain and expert constraints are added to provide an enriched formal model and these constraints are modelled using F logic rules. Below a radio network constraint a formal domain assumption is exemplified comprising the rules simply saying that it is impossible to have two radio base stations with the same identity in a sub network if a sub network context is assumed 

Subsequently the third step of is more thoroughly described with the reference to . It is supposed that configuration information relating to different configuration tasks is provided for example by a network expert . Relationships are then created between configuration tasks independent configuration tasks dependent configuration tasks sub tasks using frame logic primitives of the formal NE MO model and the formal configuration task model . This gives a formal configuration workflow model . Thus based on the available configuration specifications and other information for example expert knowledge of the general attributes of the network formal configuration workflows are built. They are made consistent within the configuration context by means of frame logic axioms and are based on formal representations as discussed above the NE MO formal model and the formal configuration task model. The final configuration workflows are attached to relevant network elements to achieve a semi automatic configuration of control protocols. Each formal configuration workflow collects relevant data and distributes relevant data to other workflows and or sub flows for performing a given configuration task . This means that the formal configuration workflows take care of collecting data needed for a given configuration task and propagating it to other configuration tasks when needed. It further prevents insertion of erroneous values in tasks participating in the workflow. The general step can be said to consist in constituting and creating relationships between tasks needed to perform a particular action or to fulfil a particular goal expressed in a formal machine read and executable manner.

This model needs to be instantiated which will be explained with reference to a particular implementation later on.

The third step described will now be more thoroughly explained with reference to and by means of reference to an implementation example concerning the configuration tasks for building RNC Radio Network Controller signalling links for NBAP Common Node B Application Protocol in the part of the configuration of the Iub interface between a Radio Network Controller RNC and a radio base station RBS. In Table 1 shown below Iub link MO configuration is illustrated.

Table 2 shows a RNC signalling links for NBAP C to RBS though the positions indicate the order for doing the task.

The configuration task ontology has to be augmented with two types of F logic axioms in order to create a consistent formal machine readable configuration model from the specification above 

In a Reparent RBS configuration context between a given RBS and RNC the values of the ATM traffic descriptor for the RNC are implied by the values of the ATM traffic descriptor available in the RBS.

The above rule propagates the AtmTrafficDescriptor information available in the AtmTrafficDescriptor task to the Transport task which needs the ATM information for its own consistent configuration.

In order to provide the formal configuration model knowledge about configuration tasks in here the wireless network is introduced which basically includes tasks common to all network elements in for example a RAN such as UTRAN for example transport related tasks. Preferably it is distinguished between high level configuration tasks and low level configuration tasks. In a RAN high level configuration tasks are for example adding a new network element and high level tasks are accomplished by the execution of a number of low level tasks which create or update particular managed objects. Each low level task is responsible for storing configuration data and assuring that this data is consistent with the configuration context in which the task participates. Generally there are three different sources a task may use to get information for its configuration. The first source is user supplied information which normally comes from detailed planning of the configuration task and hence cannot be automated and normally a human user supplies specific information and the task can only validate or reject the user input. A second source relates to information that could be inferred from the configuration context such information is derived from well established business contracts between network elements taking part in the configuration. This means that the user does not have to find information needed to complete the task. The third source may comprise information coming from other previously configured or future tasks in the configuration process. The task implicitly fills gap in its configuration thus relieving the user from doing it manually.

The present invention can be implemented for different applications by using a so called inference engine. An inference engine must support reasoning over formal ontologies and facts represented in frame logic. First the formal ontologies representing the network elements and configuration tasks are loaded into the inference engine. Then application logic uses the query answer interface of the engine to provide suggestions of configuration values to the user and run time checking of the input configuration with the formal ontologies.

In a first step I a controller loads the RAN NE MO formal model ontology here an operation and maintenance model and the formal configuration task model ontology and the preparent operation and maintenance ontologies provided in a repository into a database . Subsequently the controller requests the Bulk CM XML representation of the radio network data from the radio network RAN which then is provided to it II. The Bulk XML data is thereupon converted by an XML to ontology instance converter ensuring that the network data is correctly extracted from the XML file according to the ontologies loaded in the database in step I and used to populate the application database III. Subsequently the controller connects to the database via the inference engine API Application Programming Interface and is ready to be used by the user IV. The user interaction with the controller is usually achieved by a graphical user interface so that the user can perform the preparent RBS configuration task. When the configuration task has been completed all tasks configured the delta of the configuration represented in ontology instances in the database is in converting means comprising an ontology instances to XML converter converted back to XML according to the Bulk CM XML standards V and provided to the controller . The controller then pushes the new Bulk CM XML file into the network VI.

It is an advantage of the present invention that from a software development point of view a method and its possible implementations allows building of more robust configuration applications while reducing the development costs and favouring reuse and sharing of the formal models base in a portfolio of value added configuration applications. This portfolio will have a common platform based on rich formal domain configuration models.

From the operators perspective the method would speed up the configuration or a reconfiguration process by providing meaningful suggestions to human operators and run time validation of the decisions to prevent errors and mis configuration. It will also relieve the burden of looking into different configuration guides etc. to assemble knowledge to perform configuration or reconfiguration. The formal models for configuration management can be used to build other applications that need these formal models for other purposes as well such as training education etc.

It should be clear that the invention is not limited to the explicitly illustrated embodiments but that it can be varied in a number of ways within the scope of the appended claims.

