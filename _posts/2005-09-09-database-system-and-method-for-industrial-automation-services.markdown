---

title: Database system and method for industrial automation services
abstract: A host system generates and manages databases incorporating data gathered from a plurality of client automation systems, such as CNC machine tools. The data may include real-time data, and is captured from the client systems under supervision of software downloaded over a network from the host system to the client systems. The captured data is transmitted over the network to the host, which creates the databases. The databases preferably include a commercial database comprising data associated with customer owners or operators of the client automation system, as well as a technical database, comprising captured data, administrative and other data, organized by customer and client system. Captured data is preferably associated with the date of capture, providing for the creation of a historical database for given client equipment. With customer authorization, others, such as original equipment manufacturers, may access the captured data, for which they may be charged a fee.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08768716&OS=08768716&RS=08768716
owner: Siemens Aktiengesellschaft
number: 08768716
owner_city: Munich
owner_country: DE
publication_date: 20050909
---
This is a divisional application under 35 U.S.C. 121 of U.S. patent application Ser. No. 09 950 723 filed on Sep. 12 2001 now U.S. Pat. No. 6 975 913 incorporated herein by reference in its entirety which claims the benefit under 35 U.S.C. 119 e of the priority date of U.S. Provisional Patent Application No. 60 305 199 filed Jul. 13 2001 also incorporated herein by reference in its entirety.

The present invention relates to the field of industrial automation and more particularly to the delivery of services or software relating to systems for automated machine tools.

In the field of industrial automation and particularly within the subfield concerning machine tools and their use vendors specializing in control technology and software have provided software to original equipment manufacturers OEMs which manufacture and market automated machine tools. The OEMs in turn supply automation equipment incorporating this technology and software to end customers that are typically manufacturers of equipment that own manage and operate the equipment they purchase from the OEMs. Over the years OEMs have developed strong relationships with such end customers.

The OEMs typically do not limit their activities to the development and marketing goods like machine tools but they also provide follow up services for the equipment they and perhaps others sell to end customers. While OEMs have provided crucial goods and services they have been constrained by existing limits on their ability to provide services that take full advantage of detailed information regarding the operation of their machine tools. This constraint stems from limits on the ability of existing systems to gain access to data at the heart of the machine tool control process. Machine tool control software is highly specialized for its given task and has generally not in the past been directed toward the capture or subsequent processing of data for reasons beyond the immediate control of the machine.

For similar reasons vendors of control systems and software for equipment such as machine tools have generally not been in a position to deliver knowledge based performance improvements in their technology either directly or in concert with OEMs to end customers.

Access to data that is available to the control system of a machine tool if obtainable and properly managed could be mined or otherwise taken advantage of to provide end customers with a variety of efficiencies and other benefits including improvements in machine availability and lifetime increases in productivity on the part of end customer manufacturers using the machines and other benefits that are described in greater detail below.

An ability to gather live data from industrial controllers let alone to transmit it over a network to a service provider capable of analyzing aggregating or otherwise managing such data and generating solutions for the automated machine tools have been unavailable. Consequently there has been no basis for developing any value added services or software hereinafter collectively content as a function of the gathered data nor to transmit and download content in the form of services or software from a service provider over a network to an end customer s client machine tool control system for example.

Instead engineering services associated with automation equipment such as machine tools have been provided manually and then primarily only in response to end customer requests or due to other motivations having nothing to do with the state of actual controller data. This existing manual approach however does not make full use of available network and computing technology. It is incapable of delivering real time or computation intensive services or sophisticated machine related services such as axis analysis and optimization machine data checks wear analysis machine inspection and acceptance machine calibration dynamic machine modeling workpiece related services process analyses software services data management services and the like.

The existing approach to providing software and service related content to users of automation equipment such as machine tools is also unable to provide such content with the economies often associated with computer rendered as opposed to manual services. Access to controller software over a network also provides an opportunity for the delivery of free information services to end customers such as information regarding software releases company catalogs product and service documentation chat rooms and user groups white papers and other information which may originate with the control software provider the OEM or both.

There has also been an unmet need to help customers shorten development times to establish market presence more quickly and at more favorable costs and to enable them to do so with products that are superior to those that have previously been available. Addressing this unmet need would entail measures to assure maximum availability of production facilities reduce the operating costs associated with those facilities increase their productivity and deliver maximum product quality.

The long felt but unmet needs described above are addressed by various aspects of the system and method according to the present invention.

The system and method according to the present invention involves establishment of a connection over a public network such as the internet between an automated machine tool e.g. a CNC PLC machine tool and a host server. Machine tool data from the production process are in real time gathered and transmitted over the internet to the host. Data collection can be done in either a synchronous or asynchronous fashion with the conditions for asynchronous data collection being settable by the operator. At the host where the data are stored analyzed and evaluated using any of a variety of applications. The results which may relate to machine status machine wear process stability workpiece quality and long term changes in the capability of the machine may be sent to the customer that operates the machine also via the internet.

Other aspects of the system and method provide an open application programmer interface API for users and manufacturers allowing recipients of the service and software provided according to the system and method of the present invention to customize the content and know how they obtain from the content provider. The service and software content made available to customers according to the present invention includes without limitation machine services machine performance workpiece services data management and electronic sales e sales . In addition according to the present invention machine tool commissioning services e.g. computer aided runoff CAR and disturbance analysis may be provided in connection with servicing of the machine tool. Variance in results from cyclically performed CAR measurements can also be obtained. Moreover data from the controller e.g. handled by NC programs may be visualized or otherwise processed to reveal weaknesses in the machine tool earlier than previously available.

The system and method according to the present invention make possible a data management service according to which web based archiving and administration of control related data e.g. NC program data machine data and parameters is possible. These data are available to the customer and third parties such as OEMs authorized by the customer to obtain access and enable for one among many examples higher data security a quick resumption of production in the event of data losses.

The identification of the data uploaded from a machine tool to the host in an embodiment of the present invention with a code specific to the concerned machine tool enables the creation of a time history of selected aspects of the machine tool that in turn provides a wealth of information to the machine tool user as well as to the OEMs that serve them.

In an aspect of the present invention a method is provided for creating a database for use in connection with a system for providing content based on data collected from a client associated with an industrial controller for manufacturing equipment. The system for providing content comprises a processor and at least one data storage device the processor being in communication over a network with the industrial controller which has a unique identifying code retrievable over the network. The method comprises the steps of creating in one of the data storage devices a data structure for storing data collected from one of the plurality of machine tools receiving from the client the unique identifying code associated with the manufacturing equipment including in the data structure information relating to the unique identifying code receiving from the client data associated with the control of the manufacturing equipment including in the data structure the data extracted from the machine tool.

According to another aspect of the present invention involves a system associated with the management of computer controlled machine tools based on data collected from a plurality of machine tools the system including a computer and at least one data storage device the computer in communication over a network with the plurality of computer controlled machine tools each having a unique identifying code. In this aspect of the present invention a method for building a data base in support of the management of the computer controlled machine tools comprises the steps of creating in one of the data storage devices a record relating to data collected from one of the plurality of machine tools extracting from the machine tool the unique identifying code associated with the machine tool inserting in the record information relating to the unique identifying code extracting from the machine tool data associated with the control of the machine tool inserting in the record the data extracted from the machine tool.

Still another aspect of the present invention is directed to a method for managing data relating to the provision of an automation related service to a customer having a facility comprising manufacturing equipment and associated computing equipment. The method comprises the steps of creating a data structure corresponding to the provision of services over a network to the manufacturer storing in a first portion of the data structure data relating to the identity of the manufacturer storing in a second portion of the data structure data relating to the identity of the service computing a measure of the service provided to the manufacturer and storing in a third portion of the data structure data relating to the measure of service.

Yet another aspect of the present invention is a database system for network delivered automation system services wherein the services are provided to customers that client operate automation systems. The system comprises a host system in communication over a network with a client automation system the host system configured to cause the client system to generate capture and transmit to the host system real time control data a commercial database coupled to the host system and comprising customer information and a technical database coupled to the host system comprising automation system data.

A further aspect of the present invention is a method for managing data relating to the provision of an automation related service over a network to a customer having a facility comprising manufacturing equipment and associated computing equipment. The method comprises the steps of creating a data structure corresponding to the provision of services over the network to the customer storing in a first portion of the data structure data relating to the identity of the customer and storing in a second portion of the data structure data relating to the identity of the service.

Various other aspects of the system and method according to the present invention are illustrated without limitation in the appended claims.

An embodiment of a system and method according to the present invention involves an automation software and services content provider operating a host or server system in communication over a public network such as the internet with a client automation system. The embodiment is described by way of an example involving on the client side a machine tool having a control system comprising a control kernel e.g. a numerical control kernel or NCK an operating system such as a suitable version of Microsoft Windows which performs real time control and is in communication via the NCK with the effector hardware of the machine tool and which receives data obtained via appropriate sensors in the machine tool and a HMI human machine interface running on the operating system. In this example communication occurs over the Internet and the subset of the Internet known as the World Wide Web or web . Other client configurations are also possible within the scope of the invention as are other public networks and approaches for transferring information via such networks. In the illustrated example a conventional browser such as Internet Explorer or Netscape Navigator runs on the client operating system and communicates with the host by downloading web pages from the host and transferring user data.

Although a machine tool is described as a primary example of the type of automation system with which the present invention may be put to use the systems and methods according to the present invention could be used with any automation system involving real time control of equipment.

A machine handler is installed for example via download over a public network preferably the internet from a content provider and is activated by the customer referred to here in some contexts as the user or operator in a machine tool automation system. Public network may be referred to below simply as network . A user operating the automation system may access the host which operates a website and download web pages that provide a menu for selecting content from the host. The host website then guides the user in a menu driven fashion supported by web pages for example downloadable over the internet or other network from a host server to either enter information regarding the desired available service software or other content. The host application in response generates content e.g. machine tool source code which is then transmitted over the network to the client. A machine handler interface module running on the control system HMI transfers information from the browser to a machine handler which in turn may set up a corresponding job involving interpreting the downloaded content as necessary and loading it e.g. via an interface between an NCU running an NCK which interface may be regarded for some purposes as an operating panel logical interface . The machine handler and machine handler interface may be made accessible to the client HMI according to any suitable method including downloading from the host over the network or loaded from a storage medium such as a compact disk or delivered with other controls software supplied to an OEM and thus obtained by the customer through the purchase of the machine tool itself.

The provision of content such as services or software can then most preferably take place either upon manual initiation by the end user operator or automatically according to a schedule or upon other conditions including conditions derived from data gathered from the end user facility. In any event if downloaded content comprises instructions that will involve running of the actual machine tool provision is made for ensuring that activation of the machine according to the content is manually initiated for safety reasons.

Architecture of the overall system including host client and OEM entities are shown in . shows at a very high level of abstraction how an internet based automation services company may provide content comprising software services and so forth to a plurality of customers represented by systems N reference numerals and respectively with whom information is shared on a bi directional basis. In addition the usual provider of manual engineering services e.g. an OEM of which there may be many also is in communication with the customer systems N . This architecture while useful for certain applications may be less than optimal as there is no communication and certainly none supported by modern network technology between the internet based automation services company and the manual engineering services company . With this arrangement neither would benefit from the other s intelligence.

In a usual production chain for machine tools is shown in the left hand portion of the diagram. An automation product provider which is responsible for control system hardware and software vends it products and services to its customer a machine tool OEM . The OEM in turn integrates the control system products purchased from the automation product provider with other equipment it manufactures and or purchases and sells to its customer sometimes referred to herein as end customer which is typically a manufacturer. A service provider in an embodiment of the present invention is in bi directional communication preferably over the internet with all three of the foregoing entities. In addition the service provider may be in communication with third party providers of software tools and special services as well as with internet partners . Although shown as uni directional in the figure the information flow may be bi directional and may also occur over the Internet.

Content is also provided over network as between host and client . Elsewhere host may be referred to as host server or server host. Client or customer may comprise one or more computer numerical controlled programmable logic controller CNC PLC systems peripheral devices and sensors controllers personal computers and host computers some or all of which are in communication over an internal network . As will be described at greater length below client establishes secure communication over network with host selects and receives content over the network transmits data such as real time control data back to host . In addition client may transmit over network to host a signal representing a promise to pay value in exchange for the content or may transmit a credit card number or any signal relating to the actual or prospective conveyance of value to the content provider. Alternatively a customer or client code may be transmitted as well as a machine code specifically identifying a client machine that is the subject of the provision of services or software and the client or customer or the responsible financial entity not shown may later be billed or otherwise charged for the downloaded content.

All available precautions may be taken to ensure the security and integrity of data transferred between the content provider OEM partner and client . For example firewalls respectively provide a measure of security for communications over the Internet with the host host API and OEM partner host . A firewall and other security features for example but without limitation password protection and encryption schemes are also preferably provided between client and the network . The firewall and security features for client are provided through internal network .

The HMI is the portion of the controller software with which an operator not shown interacts. HMI supports and provides access to various applications and in many existing controllers is in turn supported by a modern operating system sharing at least some similarities to operating systems familiar to users of PCs. Another portion of the software associated with the machine tool control system is the numerical control portion which comprises a numerical control unit NCU and kernel NCK not shown that actually communicate with the machine tool and NCU interface . Relevant computation involving NCU and NCK will be discussed at greater length in connection with .

The controller HMI of the client system is in bi directional communication over network preferably the internet with server host system operated by the content provider. A lower set of arrows couple browser software within the client to the host which correspond to reference numerals in in . Client browser which may run on the operating system described above is capable of downloading web pages from the host . Browser provides network interfacing functionality that could be provided by other suitable software as long as it were compatible with network . An operator not shown interacting with HMI and using the browser can access a website not shown running on host and begin to request certain content. The transfer of data in the illustrated embodiment is primarily from the host to the browser . The operator s responses to downloaded content which may include certain choices and parameters involve transporting information back over the internet i.e. the world wide web to the host in any manner consistent with configuration of network and host . However no machine control related data e.g. real time control data is transmitted to the host in this fashion.

The client system also comprises a machine handler also running in the context of the HMI system which comprises any functionality that can receive instructions originating from the host and create jobs that will ultimately involve calling the NCK.

The browser and machine handler are in communication with one another via a machine handler interface which converts content downloaded from the host via the browser into a format that the machine handler can process. In an embodiment of the invention browser communicates with machine handler interface via remote procedure calls using for example COM technology available from Microsoft Corporation of Redmond Wash. Likewise the machine handler interface communicates with machine handler using remote function calls leading machine handler to create and execute jobs at that will ultimately direct the machine tool and capture data generated in running the machine tool . Machine handler is in communication with an NCU interface module which converts job orders into a format that the NCK not shown is capable of processing. Among such execution tasks are ones that call for one or more machine tool commands to be processed by the NCK as well as ones that collect data from among any available machine tool state data or other control related data. Data collection may be done using existing trace functionality available with existing machine control systems and using the data capture approach described below in connection with . In addition within the scope of the present invention other enhanced trace functionalities may be developed to extract data in a different fashion than is currently available.

The system architecture in the embodiment of the present invention shown in thus includes asymmetric data paths namely a first bi directional path for interactions concerning selection and download of content and a second uni directional path for transmitting captured data e.g. real time control data from the client to the host . On advantage of this asymmetric data path architecture is that real time control data can be sent in a more secure and speedy fashion than would be the case if it were being sent in connection with the operator s web session with host . The port for receiving such real time control data at host and the processor s with which it could communicate could be configured to receive incoming data as quickly as necessary in a dedicated fashion.

The initiation of machine tool commands may for safety reasons require the manual intercession of an operator. Data collected in connection with a job order overseen by the machine handler may then be transferred to the host. The transfer of such data is shown in the illustrated embodiment of this aspect of the present invention in the upper arrows. The transfer of data is preferably unidirectional and does not involve the world wide web. Rather it preferably is transported via the most available and secure network means available since there may not be the possibility to delay receipt of the data being collected and transported while a more public means like the world wide web suffers from the usual congestion and other problems. In some embodiments however the world wide web is a suitable transport means.

In summary shows how content may be downloaded from a content provider host to a machine tool client for example at the request of an operator how the downloaded content can be used by the client system to create and execute machine tool job orders that yield data of interest how the data can be collected from the machine tool control system and transferred in a suitable fashion to the host. At the host site a variety of types of content of value to the owner or operator of the client system may be generated as a function of the gathered data. Examples of such content are provided in the appendix near the end of this document.

More specifically shows system architecture associated with an embodiment of server host . Data are received from and sent to client over data path and via server user interface . The server user interface may provide web service in other words a website and communicate with client via hypertext transfer protocol http or other suitable protocol. In some embodiments server user interface may run on multiple machines to provide redundancy in the event of hardware or software failure.

Server user interface also communicates optionally with workflow server which acts in the capacity of a background request processor that in effect assists in processing time consuming tasks. Server interface may also communicate with server data interface . Server data interface receives data uploads over network on data path from client . This data often comprises real time control data captured from the machine tool or other automated equipment. In one embodiment the data may be formatted by client to include a header or preamble that may be used by the server host to handle the data associated with the header or preamble and for example to direct that data to a particular processor. The formatted data are then transported via http or other suitable protocol.

Server user interface and server data interface are both in communication with security module and data provider . Security module provides functionality according to known methods for ensuring that entities attempting to gain access to server host or certain aspects of it are authorized to do so.

Data provider serves as a data interface with the database portion of server host . It serves in effect to shield server user interface and server data interface from needing to know how data are being handled by the system s database software so that software may be more easily modified for example.

Returning to the workflow server which receives data from the server user interface and server data interface it is in communication with numerical analysis module and simulation module . Numerical analysis module is responsible for analyzing data that is received from client . Simulation module simulates the behavior of aspects of customer machines in connection with the provision of requested content. Management environment provides a data center and computing resources available for the entire server host system and computing resources and may detect errors or issue appropriate warnings.

Data provider is in communication with data center which comprises database software and data replication coordinator . Database software which may comprise any suitable functionality such as SQL clusters may support a plurality of databases DB DB . . . analogous to ref. num. of . The databases can be accessed by interactive user OEM partner for which the links are not shown in this figure or other entities. Data replication coordinator comprises software responsible for handling data that may be relevant but that may reside or need to reside in one or more data centers that are remotely located for example on a different continent.

Architecture for the client in an embodiment of an aspect of the present invention is shown in . Data are sent to and received from server user interface of server host . Data are transmitted back and forth via data path over network not shown in this view by browser which runs on HMI of client . As with analogous browser of browser receives data from server host via http over the Internet or other network. The data are likely to be in the form of a web page that identifies a service to client via an operator who running browser and having logged in to server host selects a service presented by server host by returning a message using a button on a web page. An example of the type of interaction supported under this architecture is described in connection with .

Browser communicates with machine handler see analogous structure in which communicates with the controller that runs the automated equipment of interest not shown in this Figure . Machine handler which receives data captured from the controller also communicates with security module which also runs on HMI of client . Security module ensures that all communications with client come only from server host or other authorized server. Security module thus prevents potential hacks or attacks on automated systems by non authorized parties that if not kept out might be able to issue control instructions to the detriment of the automated system or gain access to data that the owner of client system would prefer to keep secret.

In data may be shared between modules as to which no links are shown or may be accessed by a user from modules for which no outputs are shown in accordance with the needs of the content provider.

Other architectures for the functionality of the client side according to the present invention might avoid the use of a browser. Such approach however while within the scope of the present invention could expose the machine handler functionality directly to the internet.

Yet another client architecture within the scope of the present invention might lump the functionality associated with the browser machine handler and machine handler interface and the NCU interface within a single or smaller number of modules. Such an approach however because it would be less modular might be more expensive to build and maintain.

One aspect of the present invention concerns the ability to gather or capture controller data which may be real time in nature from the controllers associated with particular automated equipment. The captured low level data regarding the state of the controlled machine or equipment is in an embodiment of the invention specified by program code downloaded via data path into HMI of client . An embodiment of architecture for implementing this functionality is shown in . Host is in communication with HMI of client not explicitly shown in this Figure via network . HMI is also coupled to data storage device . As described above HMI provides the user interface portion of an industrial control device and typically would be equipped to run any number of applications including browsers and the like. Because one of the primary purposes of the HMI is to enable an operator to modify aspects of the controller for a particular machine tool or other piece of automated equipment HMI communicates with another process typically running on a separate processor that is responsible for machine control.

Data capture associated with the present invention involves a trace function. Comprehensive trace functionality provides control e.g. HMI NC PLC and drive data to a user more comprehensively and optimally. Whether this functionality is provided directly or via value added services may depend upon the application to which a trace is put.

By way of an overview of this aspect of the present invention in one embodiment downloaded program code comprises compile cycles. A compile cycle is a functional supplement to the real time control software that is being provided by OEM software developers based on a compatible application interface of the numeric control kernel. In the current embodiment compile cycles can be developed and compiled into a library on the base of an API without any code of the control software. The compiled compile cycle can then be downloaded to the control. After changing control configuration accordingly setting of some machine data the compile cycle is dynamically linked into the control software upon the next power up of the system. From this point the functional supplements provided by the compile cycle are available within the real time processing of the control.

Data capture alternatively involves trace functionality where compile cycles are not downloaded but rather where parameterization and control of existing trace functionality is done through an NCU interface . This may be done by software resident in HMI that maps internet requests to the operating panel interface or to parameterization control of a trace. Alternatively control of trace functionality may be done via a download of any HMI application that performs these tasks which can be downloaded like any code downloadable over the web. In the case of software resident in HMI that maps internet requests to the operating panel interface the control logic i.e. the sequence of steps to be performed would preferably reside on the host system and the local software would have only a gateway functionality to the NCK. Where an HMI application is downloaded the control logic would reside in the software downloaded to the HMI . Whether this software is for example a java java script applet or any windows program that is downloaded and installed to run on HMI using HMI OEM application programming interface API is an implementation detail.

Available automation controllers provide NCK OEM APIs as well as HMI OEM API s which automation product provider typically provides in order to allow OEM to customize features specific to its hardware and the needs of its customer . Data capture functionality could use NCK OEM API alone or HMI OEM API alone. NCK OEM is preferable if the data capture functionality must work even without the HMI connected and if functionality requires additional real time processing such as preprocessing of data extended trigger capabilities or the like.

Two embodiments of a system configured for capture of real time industrial control data are shown respectively in . The illustrated embodiment relates to a controller CNC for a machine tool however the inventive features described below may find application as well in other industrial automation contexts.

One feature of the data capture functionality according to the present invention is that the program code that enables the preprocessing and capture of real time controller data may be downloaded over a network. An operator such as interactive user identified in who is interacting with HMI selects a particular network delivered service see the example described in . The service is selected for example from an internet website provided by a service provider host . Appropriate program code is transmitted over the network to HMI . The HMI via the NCU interface machine handler interface and machine handler and NCK has influence over the control of machine tool or other controlled industrial equipment. NCK includes a base system an NCK OEM application interface that permits downloaded program code to be plugged into the NCK as compile cycle s . Base system provides a trace functionality for data capture that can be extended through NCK OEM application interface . This trace functionality locally gathers data and stores it into a buffer or queue associated with any of the levels even after which a non cyclic task takes buffer data and stores it into a file in data storage which may be for example static RAM such that it can later be merged into the trace data. The file in data storage may also be used in queue mode wherein data are added at one location while being dumped at the other end or in a circular buffer mode wherein the oldest data are lost. To extend the trace capability to user program information not directly available to base system trace code may be inserted into user programs e.g. to PLC user program in the form of a special function block that provides local user program data to the trace functionality. These particulars can be configured by content provider which will be downloading program code and configuration data from host .

The base system is also in communication with various level control tasks including pre run control tasks main i.e. interpolator IPO level control tasks servo control and drive data control tasks PLC data and other information sources within the machine control and thereby has access to all time levels within the control including the fastest time level. Compile cycles e.g. downloaded program code have access to the base system control tasks PLC data and other information sources through NCK OEM application interface . As shown in pre run and main run control tasks may share information as may main run and servo control and drive data control tasks as well as main run and PLC data tasks.

Designed on the basis of an understanding of the structure of the NCK and its interface functionality downloaded programs can include compile cycles compatible with the NCK that can be configured to extend the trigger event or data capabilities of the trace by accessing through NCK OEM application interface the required information from NCK preprocessing it and providing the results to the trace. The included compile cycles can also be configured to set up and control a trace of preselected real time data that is available to NCK either directly or through extensions provided by the compile cycle s as described above. The included compile cycles can also be configured to effect any kind of influence to the control system that can be implemented using the NCK OEM application interface e.g. moving axes under control of compile cycle . The resulting program code is downloaded to HMI and stored via NCU interface in NCK . The downloaded code can then be dynamically linked to the NCK library. The downloaded code may include 1 code that implements real time preprocessing of available NCK data and that provides the results of preprocessing as traceable data to the trace functionality 2 code that analyses available event and state information of the NCK and creates from this new information new events for invoking the trace functionality 3 code that analyzes available data or event and state information compares it to configured conditions and thus provides new trigger capabilities of the trace functionality 4 code that influences the control system through NCK OEM application interface in a desired way possibly being synchronized to a trace by means of provided events or data and 5 code and configuration data that configures the trace functionality in the desired way.

Configuration of the trace functionality requires specification of 1 data lists that define what data is to be captured through the trace functionality 2 events upon the occurrence of which the trace functionality for particular data in the data list is to be invoked 3 triggers whose detection terminates the trace functionality and 4 a post trigger delay period defining a delay between the detection of a trigger and the associated cessation of the respective trace. By way of example the events and triggers on which data are to be captured or on which data capture is to be terminated can be cyclic such as every interpolation cycle in a machine tool control context or non cyclic e.g. every time a new tool is changed.

Data lists are configuration data stored in the base system and can be accessed externally through operator panel interface or machine handler interface and machine handler of or internally through a compile cycle interface i.e. to the operator panel interface or machine handler interface and machine handler of . In an embodiment of this aspect of the present invention a desired trace functionality for data capture could be included within downloaded program code. In other presently preferred embodiments downloaded NCK program code is employed to extend trade capabilities while configuration and start are done through an HMI application that may be downloaded from host over the network or may be a resident gateway application that maps host communication to operator panel interface or machine handler interface and machine handler shown in . Or alternatively downloaded NCK program code may read specific configuration from machine data or global user data provided via a download of machine data or global user data files.

At step a trace is started enabled. This step also can be done through execution of accessed code or through action initiated over the network . Then upon occurrence of an event configured at step as detected at step a link is made to the respective data list. Linking to a data list comprises storing a reference to which data list should be used. For this purpose each data list has an appropriate identification for example an ID number. If data lists are user specific corresponding user identification may be included in a data list identification. A plurality of users may specify and run its own independent traces in parallel subject to the constraint that resources such as memory or processor time may not be overused.

If the data collection capacity of the base system has not been exhausted as checked at step then based on the linked data list that contains a number of entries each identifying one data to be recorded all desired information is being accessed through NCK base system and if required through execution of the downloaded software. The specified data are written at step to data storage which may occur by way of an appropriate buffer. As long as the capacity of data storage is not exhausted the trace continues until at occurrence of a respective trigger is detected. At the end of a post trigger delay assuming one had been specified the link to the respective data list s are ended and writing to storage location is terminated. If the data collection capacity had at step been exhausted step would also be invoked.

At this stage data collected in data storage may be accessed by the downloaded program code residing in HMI which may in turn display it for an operator and may then transmit it over network to host for storage analysis or other operations.

A trace function can be specified in at least two ways. In one specification called a normal trace the trace is begun and ended upon definite events and a transfer occurs only when the trace is stopped. In a second specification called an endless trace the trace runs in the background with continuous transfer of captured data outside the client system e.g. to an HMI .

A trace entails read only access to the NCK numerical control kernel data. Write access e.g. by a function generator contradicts the actual definition of a trace and therefore would be added if at all as an additional function in combination with the trace function. This might be the case for example where for certain automatic procedures a function generator and a trace are externally coupled functions.

Configuration of a trace which takes into account relevant information including mode of operation etc. may proceed off line. If a trace is on going boundary conditions cannot be modified. Rather a trace must be halted or suspended for changes to be made to the configuration of the trace.

The actual analysis or visualization provided by a trace is not an aspect of the trace functionality itself but rather of the applications that utilize one or more traces.

Possible applications of the comprehensive trace functionality include machine commissioning support failure detection and debugging of system problems applications problems especially for complex applications with multiple channels synchronous actions etc. run time situations sporadic run time problems crash handling complete data gathering via NC Kernel dump logic analysis oscilloscope tachometer etc. .

There are a number of common requirements for the captured information. These include the accommodation of data including system variables drive signals PLC flags as well as events status changes in status binary signals alarms etc. access to local user program data e.g. in the NC program flags in the PLC program copying of traced local data into a suitable global variable. All data and events including data from all system components especially the previously hard to access and combinable information from motion synchronous internal actions PLC and drives and all information that is available over an operator screen interface may be treated as triggers for the trace function. For expert or internal purposes in each case unrestricted access via the physical address may be possible.

There may in some instances be certain requirements for conducting a trace e.g. with PLC data. Access to PLC peripherals or to flags in a user program without the impact on the PLC may be arranged. Access to the user program data I flags . . . and an ability to synchronize the point at which recording takes place with the user program if necessary through additional commands inserted into the user program may be arranged. However access to PLC peripherals or to flags in a user program without impact on the PLC and or the user program is preferable in an embodiment of the invention. Similarly an embodiment of the invention includes up to 32 PLC signals traceable at the same time. Also to the extent necessary available user data may be fetched from within the relevant user program by inserting appropriate commands into the user program which store the relevant data into the trace buffer. Additionally buffer data available from different sources within a machine tool control system may be merged into a joint set of data and be displayed or analyzed by an appropriate user program on HMI.

The recording process is preferably efficient and tailored to the particular use. The efficiency conditions in essence require recording only the necessary information and recording no more often than necessary. A clear distinction should preferably be maintained between continual signal and events sporadic signals . If possible data compression is done during recording taking into account run time influence and care should be taken to minimize administrative overhead that is to achieve the minimal possible recording positions.

If conditions of use are unknown or not definable the full spectrum of possible uses and operating methods is preferably supported. For example depending upon the application ring buffers in which loss is limited to the oldest data may be preferable to a queue arrangement in which the newest data are lost upon the queue becoming full. Eventual additional information that would be required might include a time stamp time counters and so forth. Other use specific requirements may depend upon the quantity of data modes of operation and optional additional information demanded by a particular application.

For example for debugging of difficult errors the act of recording a trace should preferably be as free as possible from crashing. That is in the run up after an error earlier recorded data should be saved.

Most preferably recording of each variable could be done as a function of its own timing characteristics to reduce the amount of involved data. In principle timing the recording of a variable to implicitly incorporate the function scope of the variable may for example reduce the amount of data that needs to be gathered.

The collection of data on an event or condition driven basis instead of doing so continuously may be preferable. Rather than necessarily occur in a trace file an additional file or archive could be automatically created that can also contain NC programs including main programs subprograms cycles etc. A reference or pointer to this archive would then automatically be registered in the trace file. One can therefore be protected in advance from inconsistencies that can be associated with a manual implementation of this function. Manual archiving nay take place days after the data collection during which configuration data may have already changed. This can also be specified through an application which means that internal interfaces may not need to fulfill this condition.

In an embodiment of the present invention transformation in the configuration as necessary of distributed components may be programmed to occur automatically. Also the collection and supply of available meta information for the configuration should as far as possible be automated. The HMI logical interface may serve as an internal configuration interface. For flexible expandability with minimum expenditure new signals may simply be merged with HMI logical interface components in a trace.

A method of procedure control for the foregoing or for the traces should preferably offer the following functions start conditions manual NC program PLC synchronized action automatic time controlled continuously running external entry etc. and stop trigger conditions manual NC programmed PLC synchronized action internal additions time controlled external events etc. . Data are to be stored in the file associated with the HMI .

Trigger conditions are preferably settable within states trigger on individual bits trigger on changes in state variables from state X to state Y precisely defined state transitions using text instead of numerical codes to identify states trigger on definite NC instruction number triggers on the nth occurrence of a given relevant code. To the extent necessary trigger conditions for each variable are separated out. Chains of conditions may be used for example first condition 1 must be fulfilled then condition 2 or condition 3 and if then condition 5 is fulfilled particular data will be recorded until condition 6 occurs.

For example after a crash or a stop as soon as data are transferred the resources are again preferably free. Note that there must as necessary be a coupled condition so that automatic restart is shut off as soon as possible if for example an interesting event or condition such as an error has occurred.

As described elsewhere in this document the preparation of data appropriately takes place in the HMI. According to different embodiments of aspects of the present invention applications can be bound exclusively on a file basis. Also a COM connection may be used to support block access via continuous data stream without buffering on the file . Three classes of users are to be served 1 prepared users such as control software vendor applications on the HMI e.g. trace visualization IBN or diagnosis tool 2 OEM users client applications via HMI OEM and 3 web based services.

In an embodiment of the present invention a trace should be open to the user. Open accessible interfaces for configuration which signals how installed include controls start stop . . . analysis data file format for OEMs.

The display of a trace according to an embodiment of the present invention is comparable to a logic analyzer oscilloscope. Signals from different sources may be displayed. References to program modules may be displayed. Cursor zoom function is preferably provided. More than four 4 signals are preferably possible. Filters are also preferably provided to permit visualization of a selection of signals. Assistance may be provided in explaining the various signals and events given that normal users are not necessarily familiar with all such information.

High robustness of the data gathering may be achieved in the following ways. Data should to the extent possible be available after a crash. Sudden errors during a trace should not lead to a data overflow and there should be a suitable reaction in the event of resource scarcity. If an interesting event or condition has occurred data files may not later be erased.

Preferably a system using the data capture functionality described above should use no more than approximately 60 of available cycle time which may help to avoid interference with any running applications.

An embodiment of a method according to the present invention for providing automation related content via a network based upon real time control data and constructing databases incorporating the real time control data is shown in flowchart form in .

A user of client which in the illustrated embodiment is a machine tool but which could in other embodiments be other automated equipment invokes host operated by content provider at . In the present embodiment but without limitation host and the user of client communicate via the web. Host transmits a web page at that queries the user for ID codes that may include a customer ID code and a machine ID code. The customer ID which will have been established during an earlier registration process in which a variety of customer specific data will have been collected allows the host to retrieve such customer data and establish a session appropriate for that customer. In addition host may access data regarding the various types of automated equipment that its customers operate and as to which it offers services. After receiving the machine ID host may retrieve information suitable for a session that allows the user to select from among content including services appropriate for the customer s needs and that are offered for the type of machine corresponding to the machine ID. Further detail regarding the data available to host is presented below in connection with .

Upon establishing such a session taking into account the identity of the customer and the involved machine host transmits to the user a set of options that may be tailored to the customer at . The user transmits and the host receives the user s selection of an option at . Based upon the user s selection host retrieves from a database a set of properties for the client machine tool at and confirms at that the selected option is appropriate for the machine tool being operated by client . If not host notifies the user at that the selected option is inappropriate under the circumstances and that another option should be selected.

Otherwise the host retrieves price information for the selected option at and retrieves content e.g. program code associated with the selected option at that may be executed at the host and or at the client . In general data will be transferred to client to be used according to the description provided above to assist in controlling the machine tool and gathering particular resultant data. Following its retrieval any content such as program code that has been retrieved by the host is transmitted to client at .

At host creates a database record for the transaction corresponding to the option selected by the user. See also and accompanying description . Host associates the client and machine tool IDs with the database record at . In addition at host associates the date and time the selected option is invoked with the database record established at . Moreover host may also associate the earlier retrieved or other price data with the database record at .

Next host awaits user initiation of client machine tool behavior corresponding to the selected option and the associated downloaded program code and or data. The purpose of this waiting step at is to ensure user safety particularly when moving machinery is involved running the machinery should involve a manual step to help make sure the operator is aware of imminent machine activity before it begins and thereby avoid injury to personnel.

Host receives a message at indicating that the user has initiated activity associated with the selected option. Host also then awaits transmission at of data generated in connection with operating the machine tool and collected from the machine tool controller during the course of the selected option. Then at host receives machine tool data collected from the client machine tool. Host at step processes data collected from client according to code corresponding to the option selected by the user. Then at step the results of processing the data uploaded from client e.g. generated by numerical analysis module of are transmitted to client or in some embodiments to an entity that owns or controls it.

When the session or transaction comes to a close or at another suitable time billing information is retrieved or generated at based on retrieved price information and is processed for transmission to the user or its owner or operator.

As the session approaches termination a suitable data structure such as a database record corresponding to client and to the selected option and including the data describing the various aspects of the transaction is made available at for access by the customer that owns and or operates client or by partner organizations e.g. OEM in . Access by an OEM is preferably made only with the approval of the entity that owns or operates client an indication of which approval may also be included among the data stored by host for particular customers. Access also may be made contingent upon the prior or subsequent conveyance of value to the customer that is the owner and or operator of host by the OEM . The price for access in either case may follow any commercially suitable arrangement. In one embodiment a first price component is determined as a flat rate function of a given recurring time period and a second price component is computed as a function of the provided content.

The order and the particulars of the above steps may be varied. Moreover other steps may be added without departing from the scope of this aspect of the present invention.

An embodiment of databases according to the present invention and the context in which the databases are created and accessed are shown in . This Figure provides further detail to the architecture shown in which also shows connectivity between host and customers operating client system or OEMs or others who may arrange for and obtain access to the databases typically in exchange for value.

In the illustrated embodiment service provider through its host provides network delivered automation related content to a plurality of client systems . . . each controlling a respective machine tool . . . . In the course of providing this content data is captured by the client systems and uploaded to host system which stores this as well as other data associated with running the network delivered automation related content business. Host writes data to at least two databases A first database A comprises commercial data a second B comprises technical data.

An example of a data structure corresponding to each of the databases is shown below each of the databases A and B. The data structure corresponding to that of database A comprises sets of data for each of the plurality of clients N. Each set may include a customer identifier which may be in the form of a code for identifying the customer responsible for the respective client transaction codes for identifying the nature of content e.g. services or software that may be provided for the customer data describing relevant aspects of the customer s business data relating to contracts with the customer and pertinent requirements of such contracts including prices set for particular transactions for that customer data relating to how the customer is to be billed and any other customer data of interest. A similar data structure not shown can record a customer identifier for customers that subscribe to the databases a code identifying the nature of the access obtained the date of the access the price for the access if relevant for the given pricing model and other relevant data. In the default access to customer data within data structure would be limited to the particular customer whose data it is. In general however a customer may permit access to the data structure by third parties such as particular OEMS .

Data structure corresponding to database B comprises a plurality of data sets one for each customer. Each customer data set within data structure may be recorded and accessed on the basis of the unique ID for that customer. Within the data for a given customer there may be any number of sets of data corresponding to machines or client devices operated by the customer. Each such machine or client device is identified by a unique identifier or code that is included in the data structure . For that particular machine or client various administrative data may be stored for such reasons as ensuring that access rights are properly handled. In the default customer data in data structure would be accessible only by the customer from whom the data was collected. A customer could however indicate willingness to allow access by others e.g. machine tool manufacturers to the data under preselected conditions such willingness could be represented in the administrative data field of data structure . The data structure may also include a code for a particular transaction with the host accompanied by a date and one or more prices. Alternatively price data might be looked up at billing time based on stored data regarding the nature of the transaction and the price arrangement for that transaction and that client stored in data structure . Data structure may also include associated with a particular transaction data collected from the client device or machine which can include real time control trace data captured for example from NCK of client as shown in or any other data accessible according to the methods described herein. In addition machine alarm data and machine configuration data can help provide an accurate picture of the state of client during the delivery of services or software for the given transaction.

As shown in the Figures data in both structures and are first organized by customer. Given that a customer is likely to have any number of machines for which service provider may be able to provide content a plurality of fields each corresponding to machines operated by that customer may be present within a given customer s data each such machine ID or client ID being unique to the particular machine tool or other controlled equipment. Data structure thus can provide a historical view of behavior over time for the particular machine.

As to each of data structures and certain information could be added or deleted the data could be re ordered and other data structures could be used consistent with this aspect of the present invention.

In the user has previously selected from among the options that are offered for this customer and this particular machine tool a circularity test. The user s ability to do so presupposes the previous establishment of a customer relationship on the part of the customer entity that operates the machine tool leading to the creation of database entries analogous to those of in database A of .

The point of a circularity test is to determine the degree to which the machine tool in any of its planes is able to drive the end effector through a circle. The actual path is measured and compared with a true circle. The results of the comparison permit not only inferences as to whether the machine requires maintenance if the circle is outside of tolerances for example but may allow for the diagnosis of wear conditions and their causes even while the ability of the machine tool to drive a circle is within tolerances.

In as indicated by the arrow the user is selecting the start button associated with a first of a plurality of circularity measurement approaches a direct measuring device a machine measuring system MMS and a ballbar device. For each of these options the user can retrieve information by pushing the respective information button. The user can also request information about the circularity test itself by pressing the information button in the upper left hand corner immediately below the legend CIRCULARITY TEST. 

Once host receives complete information as to plane selection it downloads a webpage shown in including a form that permits the user to enter plane selection parameters. The parameters include the diameter of the circle the center point of the circle in X Y Cartesian coordinates tolerances in microns the feed rate path in millimeters per minute the direction of travel clockwise or counterclockwise and a confirmation button indicating that selection of parameters is complete. Also downloaded in the webpage shown in is a graph in the X Y plane showing the centerpoint and three concentric circles centered at that point including the desired circle and outer and inner circles defining the as yet unspecified tolerance band about the desired circle.

In the diameter center point and tolerance band settings have been received from the browser by the host which then downloads a webpage update indicating on the graph the selected diameter of 100 mm and outer and inner circles defining the tolerance band of 20 mm about the desired circle centered at X 0 Y 0 . In addition the user is prompted to specify a commanded path either clockwise or counterclockwise.

In the user selects the clockwise commanded path uploaded by the browser to the host . Host downloads to browser a webpage update shown in in which the various user selections are highlighted to provide user feedback that its selections are ready to be registered. The user does so by pressing confirm notifying host that the parameters for the circularity test have been completed.

In the user is then prompted by download from host whether or not to archive the results of the circularity test. Here the user has selected YES leading the host to archive the data in a database such as B and in a form analogous to data structure .

In the user is permitted to take advantage of not only the most recently archived circularity test data but also earlier archived data. A results comparison webpage downloaded by host permits the user to inspect the results for each of three tests each done using a different one of the three methods presented in the inspection being of the particular selected results individually. The user is also prompted to conduct a comparison of the three results. In this case the user selects the comparison. The selection is uploaded to the host which retrieves the data from the archive e.g. from data structure in database B . In three plots are shown each in the same format as the results shown in . They are smaller to permit side by side comparison. In the illustrated example the results are virtually or actually identical for each of the three approaches to circularity testing although this would not generally be the case.

Although not shown in these Figures host may be configured to keep track of the date and time of the foregoing transaction and based on customer data stored in data structure of database A compute a price to be paid by the customer.

To summarize show how a customer that is an owner and or operator of a client belonging to a customer can invoke electronic network delivered content from a remote host. The content includes software that drives the machine tool through a particular motion parameterized by the user configures the client to capture real time data associated with that machine tool motion uploads the captured data to the host for analysis and formatting for inspection by the user and at the user s instance stores it in an archive. The user is then permitted to inspect not only this result but other previous results obtained through differing approaches as well as conduct a comparison of the results obtained by the differing approaches.

The foregoing example is for purposes of illustration only and is non limiting. Indeed a wide variety of content including services and software are made possible through the various innovations attributable to the present invention including the following Machine related services such as machine utilization evaluation including run time data collection software BDE function build up and use including compilation of evaluations to develop a picture of machine run time down time and capacity axis analyses Fourier transform and Bode plot generation identification of eigenfrequencies periodic analysis and trend analysis axis parameter optimization including engagement speed acceleration jerk filter KV factor and friction and looseness compensation. Other areas of service that can be provided in accordance with the present invention include machine data checks for correctness and consistency of functions and data storage wear analysis including path following protocol and behavior evaluation trend analysis play friction lubrication and transmission problems process monitoring including drive parameters protocol keeping current capacity moments jerk revolution measurement and temperature. The system and method according to the present invention make possible remote machine inspection and acceptance techniques that were not previously possible including circle formation test for path following evaluation repetition precision stiffness measurement and the like machine calibration including single axis calibration rotational axis calibration and workpiece device measurement. Other areas of content provision enabled by the various aspects of the present invention include dynamic machine modeling and analysis workpiece related services including those relating to workpiece geometry such as measurement and documentation of tracking precision and trace functionality relative to actual target and workpiece surfaces including measurement and documentation of dynamic tracking behavior speed acceleration workpiece surface quality simulation surface NC program input surface interpolator output surface position target and surface actual from current drive data. Yet another area involves process analyses including measurement and documentation and analysis of process parameters calculation and documentation of cutting speed and cutting power laser output and the like. Additional significant areas for providing services made possible by the advances of the present invention include software services such as sale and distribution delivery of new versions of product software delivery of service packs delivery of communication software data management services relating to machine data NC program data system software PLC programs results data process data workpiece data archiving back up and configuration management and automation system maintenance delivery of diagnosis software provision of tools for the identification of defective components in event of failure storing of change history of a facility access to a bug tracking system connection to internet ordering systems central service account management consulting for special problems and incident handling.

In addition to the embodiments of the aspects of the present invention described above those of skill in the art will be able to arrive at a variety of other arrangements and steps which if not explicitly described in this document nevertheless embody the principles of the invention and fall within the scope of the appended claims. For example the ordering of method steps is not necessarily fixed but may be capable of being modified without departing from the scope and spirit of the present invention.

