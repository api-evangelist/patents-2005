---

title: Automatic compiling of address filter information
abstract: Automatic compilation of address filter information permits a cable modem to route incoming data packets to destination devices. A cable modem uses address filter information, such as for example, a list of addresses of communication devices that have previously registered with the cable modem, to identify incoming data packets that are addressed to communication devices associated with the cable modem. Incoming data packets with addresses that are not in the address filter information are filtered out. However, the cable modem may have insufficient filter information, when, for instance, a new communication device is associated with the cable modem. In order to automatically register communication devices associated with the cable modem, the cable modem inspects the source addresses of outgoing data packets. If the source address is not included in the address filter information, the source address is added.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07433349&OS=07433349&RS=07433349
owner: Microsoft Corporation
number: 07433349
owner_city: Redmond
owner_country: US
publication_date: 20050203
---
This application is a continuation of U.S. application Ser. No. 09 371 916 filed Aug. 10 1999 and entitled Automatic Compiling of Address Filter Information which claims the benefit of U.S. Provisional Application No. 60 122 859 filed Mar. 4 1999 both of which are incorporated herein by reference in their entirety.

The present invention relates to electrical computers and data processing systems. Specifically the present invention relates to a system and method for automatically compiling address filter information.

The Internet is a worldwide interconnection of networks over which computers can exchange information. Never before have human beings had access to so much information from the comfort of their own homes or offices. For Wide Area Networks WANs such as the Internet a computer typically employs a modem to send information to and receive information from other connected computers. There are many types of modems each corresponding to a specific type of medium used to deliver this information.

One common modem uses Plain Old Telephone Service POTS to send and receive information. POTS modems have an advantage in that they use a transmission medium that is available by just connecting the modem with the nearest phone jack. Thus the POTS modem does not require expensive capital investment to set up a connection to the Internet. Although POTS modems are easy and inexpensive to connect to the Internet the transmission speeds available over plain old telephone service are relatively slow. Currently POTS modems are capable of information exchange at up to only 56 000 bits per second bps or approximately 0.056 megabits per second Mbps . While faster POTS modems may eventually become available it is not currently anticipated that POTS modems can become significantly faster due to physical limitations in the telephone lines themselves.

Telephone companies are now offering services that bypass the relatively slow telephone lines to establish a more direct connection to the Internet. For example T connections permit information exchange in the megabits per second Mbps range. T and T connections allow for even higher speed information exchange. Currently T T and T connections respectively permit information exchange at approximately 1.544 Mbps 6.312 Mbps and 44.736 Mbps. Although these direct T T and T connections permit information exchange orders of magnitude faster than is available over plain old telephone service they are typically much more expensive to obtain and or maintain than plain old telephone service since each connection requires dedicated circuitry. Furthermore telephone companies typically provide both the plain old telephone service and the T T and T connections. To facilitate free market competition it would be desirable for a consumer to have alternative suppliers of Internet access.

A cable modem is a device that hooks up to the Internet through a cable system provided by a cable operator. Assuming that the cable operator facilitates Internet access as many cable operators do Internet access is obtained by plugging the cable modem into a cable connection that typically already exist or may be readily installed in many homes and business. Thus the cost of connecting a cable modem to the Internet is relatively small compared to establishing T T and T connections since the extensive cable network that supports communication already exists. Thus there is no need to establish extensive dedicated circuitry to support each new end user.

Furthermore dialing into the Internet is not needed since data may be communicated to or from the end user over the cable system without dialing into the cable system. Thus the initial connection to the Internet is much faster compared to using plain old telephone service.

In addition cable modems allow for much faster information exchange than is available over plain old telephone service. An individual cable modem end user may experience information exchange speeds of from 0.5 Mbps to 1.0 Mbps or more depending on the cable network architecture and traffic load. This represents a speed that is at least an order of magnitude faster than is currently available over plain old telephone service. Furthermore cable information exchange speeds may be further increased due to future improvements in cable technology. Thus cable modems provide a low cost high speed alternative for Internet access.

Typically the cable networks are considered open meaning that any particular cable modem is likely to encounter some incoming data packets that are addressed to the computer system associated therewith and other data packets addressed to unrelated computer systems. The cable modem uses address filter information to filter the incoming data packets to allow passage for only those data packets that are addressed to the computer system associated with the cable modem.

This filtering avoids unnecessary processing of packets that are not addressed to the computer system associated with the cable modem. However this filtering assumes that the cable modem is aware of the address of all of its associated computer systems. However on occasion the cable modem may not be aware of the correct address of an associated computer system. In this case the packet addressed to that computer system would be filtered out by the cable modem leaving the incoming message undelivered. Although the cable modem may possibly be manually reconfigured to accept packets addressed to the computer system the user associated with the computer system may not ever know that a message was undelivered and so might remain unaware of the problem for quite some time.

In light of this difficulty with the prior art there is a need for systems and methods for automatically correcting or updating address filter information. It would be advantageous if such systems and methods could be used to maintain current address filter information as a new computer is added to a group of locally networked computers that receive network services from a cable modem.

The present invention relates to systems and methods for automatically compiling address filter information that permits a cable modem to appropriately route incoming data packets to destination computers. Cable modems are used to send and receive messages over wide area networks using cable networks. These cable networks are often open so that the cable modem encounters data packets addressed to its associated computer system as well as data packets addressed to unrelated computer systems on the cable network. Cable modems use address filter information to filter out those incoming data packets that are addressed to unrelated computer systems on a cable network. The cable modem only passes those packets addressed to its associated computer system.

The address filter information might be for example a list of addresses of communication devices that have previously registered with a processing device such as a bridging component associated with the cable modem. In the specification and the claims a communication device is defined as any device potentially capable of sending data packets to and receiving data packets from a cable modem. Examples of communication devices include computers set top boxes and any other electronic device that has the capability of accessing data on the Internet or otherwise receiving or sending network data. If a packet has a destination address that matches one of the addresses the cable modem will pass the packet to the computer system.

On occasion the cable modem may have incorrect or insufficient filter information. For example the cable modem may not know that a communication device has been connected to it. Alternatively the cable modem may have an incorrect address for the communication device. In these cases incoming data packets addressed to the communication device will be incorrectly filtered out by the cable modem leaving the message undelivered.

The present invention overcomes this problem. Specifically a processing device e.g. a bridging component associated with the cable modem inspects the source address of any outgoing data packets to determine the address of the communication device that generated the outgoing data packet. The processing component might be for example a driver for the cable modem or a separate bridging component that interconnects the cable modem to a local area network. The processing component then compares the source address within the data packet with the address list of previously registered communication devices. If the address is not included within the list the processing device has not previously registered the communication device that sent the data packet and has not previously recognized it as a destination device that is to receive incoming data packets via the cable modem. Thus the address of the previously unregistered communication device is added to the list of addresses. Subsequently the cable modem will pass incoming data packets destined for that previously unregistered communication device.

In the foregoing manner the processing device associated with the cable modem is capable of automatically recognizing a new communication device that is to receive incoming data packets via the cable modem. When the new communication device first sends an outgoing data packet through the cable modem its network address is added to the address filter of the cable modem. The user of the new communication device does not need to know or perform any particular manual address registration procedures to configure the cable modem to route incoming data packets to the new communication device.

Additional objects and advantages of the invention will be set forth in the description which follows and in part will be obvious from the description or may be learned by the practice of the invention. The objects and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other objects and features of the present invention will become more fully apparent from the following description and appended claims or may be learned by the practice of the invention as set forth hereinafter.

The present invention relates to systems and methods for automatically compiling address filter information. Cable modems are used to send and receive messages over wide area networks using cable networks. These cable networks are typically maintained by cable operators and are often open so that the cable modem encounters data packets addressed to its associated communication devices as well as data packets addressed to unrelated communication devices on the cable network. Cable modems use address filter information to filter out those incoming data packets that are addressed to unrelated communication devices on a cable network. Instead the cable modem only passes those packets addressed to its associated communication devices.

The present invention provides an automatic process whereby the network address of a new communication device logically connected to a cable modem is registered with a bridging component or other processing device associated with the cable modem. Specifically the bridging component inspects the source address of outgoing data packets generated by an associated communication device. When a new communication device is first connected to a cable modem and is used to transmit an outgoing data packet the bridging component or other processing component associated with the cable modem determines that the source address i.e. the address of the new communication device has not previously been encountered. In response the bridging component adds the address as an acceptable destination address to the address filter information. Subsequently the bridging component associated with the cable modem will recognize and pass any data packets having a destination address that is the same as the newly added address. Thus the address filter information is quickly updated as soon as the bridging component processes an outgoing message from the relevant communication device.

In the following description for clarity numerous specific details are set forth in order to provide a thorough understanding of the invention. However it will be evident to one skilled in the art that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid obscuring the present invention.

Embodiments within the scope of the present invention include computer readable media having computer executable instructions or data structures stored thereon. Such computer readable media can be any available media which can be accessed by a general purpose or special purpose computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. Thus such a connection is also properly termed a computer readable medium. Combinations of the above should also be included within the scope of computer readable media. Computer executable instructions comprise for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions.

Although not required the invention will be described in the general context of computer executable instructions such as program modules being executed by computers in network environments. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of the program code means for executing steps and acts of the methods disclosed herein.

Those skilled in the art will appreciate that the invention may be practiced in network computing environments with many types of computer system configurations including personal computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Outgoing messages destined for one of the remote servers may be communicated by the client over the cable network to the CMTS . The CMTS forwards the outgoing message over the Internet to an appropriate remote server . In response the remote server generates an incoming message and transmits the incoming message over the Internet to the CMTS . The CMTS then uses the cable network to forward the incoming message to the client . In this description and in the claims an outgoing packet means a packet generated within the client that is destined for either one of the remote servers or a component within the client . An incoming packet means a packet generated by one of the remote servers or the CMTS that is destined for the client .

The computer system may be a set top box a personal computer a workstation a network computer or any other special purpose or general purpose computer system capable of performing the steps and acts of the present invention. In the specification and the claims computer system is also referred to as a processing device associated with a cable modem or bridging component. Computer system includes a cable modem that in one embodiment is integrally or internally included in the computer system. In other embodiments however address filtering information can be automatically compiled for cable modems that are externally located with respect to its associated computer system.

The input device may be any device capable of generating control information and passing that information to the computer system over an input link . For example the input device may be a keyboard a mouse a joystick a remote control or the like. If the input device is a remote control for example the input link would be an Infrared IR link. The input device may also be integrated with the computer system as desired.

The computer system is connected to one or more items of customer premises equipment . In this description and in the claims customer premises equipment means electronic equipment capable of receiving electronic messages from the computer system . For example the customer premises equipment may include personal computers television sets set top boxes workstations network computers or other electronic equipment. Each of the items of customer premises equipment represents a communication device that can communicate via a cable modem as disclosed herein. In addition each item of customer premises equipment represents a communication device having a network address that can be automatically registered by a processing component associated with the cable modem according to the invention.

In operation the computer system sends information to and receives information from the CMTS over the cable network using a standard such as the well known Data Over Cable Service Interface Specification DOCSIS 1.0 standard. This DOCSIS standard is managed by the Multimedia Cable Network System MCNS an organizations formed by major cable operators.

For incoming data from the cable network depending on the network address provided with the incoming data the computer system either consumes the data itself or passes the data to one or more of the items of customer premises equipment over a system network . Although only one system network is shown the computer system may use multiple system networks to communicate with customer premises equipment . For example the system network may be any medium capable of communicating information to and from the computer system including one or more of an Ethernet a Universal Serial Bus USB a fire wire i.e. the IEEE 1394 standard or any other equivalent medium.

For outgoing data to the cable network the computer system uploads data onto the cable network . The outgoing data was either generated internal to the computer system or was received over the system network from one of the items of customer premises equipment .

The software may be in the form of computer executable instructions stored on a memory writable and readable by the ASIC and or CPU . For example the memory may include one or more of a Random Access Memory RAM a Read Only Memory ROM or any other circuit capable of reading and writing information to the ASIC and or the CPU .

An input interface receives the control signals provided by the input device over the input link . For example if the input device is a remote control the input interface is an IR interface.

Data from the system network is provided to the computer system via a network interface . Similarly information from the computer system is provided to the system network over the network interface . The type of network interface depends on the type of system network . For example if the system network is an Ethernet the network interface is an Ethernet card.

The data is received from and transmitted to the cable network using a cable modem . The cable modem can be compatible with the standard used to transmit data over the cable link such as the DOCSIS 1.0 standard.

The structure of the computer system may best be understood by describing how the computer system processes incoming and outgoing data. Data packets configured for example according to the DOCSIS 1.0 standard include a source address and a destination address. Thus an outgoing data packet being sent from a communication device logically connected with the cable modem to the CMTS has the address of that communication device as the source address. Conversely an incoming data packet has the address of the destination device e.g. the communication device as the destination address.

If an incoming data packet has a destination address corresponding to the cable modem the computer system or one of the customer premises equipment the cable modem allows the incoming data packet to the delivered to its destination. Specifically data packets for the cable modem are routed up through the cable modem protocol stack . The data packets for the computer system are routed up through the computer system protocol stack to the operating system . The data packets for the customer premises equipment are routed through the network interface over the system network to the appropriate item of customer premises equipment . A method of processing an incoming data packet which can be used with the cable modems and networks disclosed herein is further described in commonly owned U.S. patent application Ser. No. 09 371 914 now U.S. Pat. No. 6 618 386 entitled Hosting a Cable Modem in a Computer using a Virtual Bridge filed on the same date as the present application which is incorporated herein by reference in its entirety.

Unlike incoming data packets the outgoing data is generated internal to the client . For example the source of the outgoing data may be the cable modem protocol stack the operating system or the customer premises equipment . If the source of the outgoing data is the cable modem protocol stack the outgoing data is passed through the cable modem driver through the hardware abstraction layer HAL and to the cable modem for transmission over the cable network .

Hardware abstraction layer establishes a standardized interface by which cable modem driver and cable modem communicate one with another. Further details of hardware abstraction layers for use with the present invention are described in commonly owned U.S. patent applications Ser. No. 09 371 915 now U.S. Pat. No. 6 618 387 entitled Interface for Abstracting Control of a Cable Modem and Ser. No. 09 371 419 now U.S. Pat. No. 6 775 713 entitled Application Program Interface for Abstracting Control of a Cable Modem both of which have been filed on the same date as the present application and are incorporated herein by reference.

Although messages can be generated within the cable modem protocol stack the present invention is typically implemented when the source of the outgoing data is either the operating system or one of the items of customer premises equipment . In either case the outgoing data packet passes through bridging component . For instance bridging component can recognize computer system i.e. operating system as a yet unregistered communication device when cable modem driver has just been installed in the computer system and is being used for the first time to transmit outgoing data packets from operating system and protocol stack . Bridging component can recognize each item of customer premises equipment as a yet unregistered communication device when the item of customer premises equipment has just been networked with computer system and is being used for the first time to transmit outgoing data packets.

In step the communication device which may be the operating system or one of the items of customer premises equipment generates a message step to be transmitted over the cable network or to be transmitted internally to the operating system or to one of the items of customer premises equipment . Next a data packet is generated from the message step . If the message is generated by the operating system of the computer system the packet is generated by the computer system protocol stack . If the message is generated by one of the items of customer premises equipment the packet is generated by a protocol stack within the appropriate item of customer premises equipment .

In one embodiment the operating system is a Windows CE operating environment. In this case an appropriate computer system protocol stack would include a Winsock interface for passing the message from the operating system to the TCP IP protocol layers for fragmentation of the message into packets. A Virtual MCNS Miniport Driver and a standard network NDIS driver can also be used to move the data down through the computer system protocol stack .

If the generating communication device i.e. the operating system or the customer premises equipment is not capable of sharing a buffer with the cable modem driver NO in decision block the generating communication device requests that the bridging component allocate a separate buffer see within the memory for the client step . The bridging component then allocates memory for the separate buffer and informs the generating communication device of the location of the separate buffer step .

The generating communication device then writes the packet to the separate buffer step . If the generating communication device is capable of sharing the buffer with the cable modem driver YES in decision block the generating communication device writes the packet to the buffer . step .

After the generating communication device has written the packet to the appropriate buffer step or step the bridging component accesses the packet step and determines whether the source address of the packet matches the address of any communication devices that have registered with the bridging component decision block . For example the bridging component may check the address filter information.

If the bridging component determines that the source network address is not included in the address filter information NO in decision block the bridging component performs the step of adding the source network address to the address filter information step . If the bridging component has determined that it is aware of the source address YES in decision block or after the new address is added step the bridging component then determines whether the destination of the packet is internal to the client decision block . Specifically the internal destination might be the operating system or one of the items of customer premises equipment .

If the destination of the packet is internal YES in decision block the bridging component transmits the packet to the appropriate internal communications device step and then the packet is deleted step thereby ending the method . If the destination is not internal to the client NO in decision block the packet is sent to the cable modem driver step . The cable modem driver then causes the cable modem to transmit the packet step . Next the packet is deleted step thereby ending the method.

It is notable that the method described above automatically adds new addresses to the address filter information. When a new item of customer premises equipment is added to the client the bridging component may initially be unaware of the address of that new piece of equipment. However once the new item of customer premises equipment generates and sends an outgoing message over the cable network the bridging component becomes aware of the new address. Thus the cable modem does not filter out data packets destined for the new item customer premises equipment . Thus the systems and methods of the present invention automatically update address filter information.

While the present invention has been described in the context of cable modems hosted by and integrally included in computers the invention can also be practiced with cable modems that are external to the computer with which it is directly linked. In this embodiment a processing component such as a cable modem driver monitors the source address of outgoing data packets and adds any source addresses not previously recognized to the address filtering information. Moreover as used in the claims a method that is described as being implemented in a processing device and a cable modem associated with the processing device can have acts or steps that are conducted in the processing device in the cable modem or in both.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

