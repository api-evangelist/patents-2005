---

title: Overriding default speech processing behavior using a default focus receiver
abstract: A method for implementing speech focus in a speech processing system can include the step of establishing a default focus receiver as a first entity to request speech focus of a speech processing system having multiple applications that share speech resources based upon speech focus. An event occurrence can be detected. An event handler of the default speech receiver can previously define behavior for the event occurrence and where default system behavior can be implemented within the speech processing system for the event occurrence. The default system behavior can be utilized when speech focus is not assigned during the event occurrence. Responsive to the event occurrence, at least one programmatic action can be performed in accordance with machine readable instructions of the event handler. The default system behavior is not implemented responsive to the event occurrence.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07848928&OS=07848928&RS=07848928
owner: Nuance Communications, Inc.
number: 07848928
owner_city: Burlington
owner_country: US
publication_date: 20050810
---
The present invention relates to the field of speech processing and more particularly to overriding default speech processing behavior using a default focus receiver.

Speech processing resources are often shared by multiple different users and or applications. Whenever multiple applications share speech resources some mechanism is needed to coordinate the use of mutually exclusive resources associated with speech processing. Conventional teachings share speech resources based upon a speech focus mechanism. The speech focus mechanism permits an application having the speech focus to use shared speech resources. Once the speech processing task is performed by the application having the speech focus the speech focus can be passed to another different application that has a speech processing need. A waiting queue can be established for obtaining the speech focus wherein applications having a speech processing need are placed in the waiting queue.

When no speech applications are demanding the speech focus such as when no speech enabled applications are active the speech processing system reliant upon speech focus can be placed in an ambiguous state. To resolve these ambiguous states system designers provide fixed default behaviors that are applied when no speech applications are active. Unfortunately system integrators are unable to alter the default behaviors of the speech processing systems. Thus system integrators are often unable to customize or tailor the behavior of speech enabled systems in an optimal manner for their particular circumstances. A simple mechanism is needed to resolve this problem which preferably does not require a substantial infrastructure overhaul to systems that otherwise operate in an effective manner.

An extensible design that permits system designers system integrators and application writers to modify default behaviors of speech processing systems having multiple applications that share speech processing resources in accordance with an embodiment of the inventive arrangements disclosed herein. More specifically a default focus receiver DFR can be established which can be placed at the bottom of a focus queue when a speech system is initialized. This allows the DFR to receive focus error messages and recognition results when no other application holds the focus. To override default system behavior a system integrator application writer and or system designer can write a handler and link the handler to the DFR. Since the DFR executes before the normal system default behaviors the handler linked to the DFR effectively overrides the default behaviors.

The present invention can be implemented in accordance with numerous aspects consistent with material presented herein. For example one aspect of the present invention can include a method for implementing speech focus in a speech processing system. The method can include the step of establishing a default focus receiver as a first entity to request speech focus of a speech processing system having multiple applications that share speech resources based upon speech focus. An event occurrence can be detected. An event handler of the default speech receiver can previously define behavior for the event occurrence and where default system behavior can be implemented within the speech processing system for the event occurrence. The default system behavior can be utilized when speech focus is not assigned during the event occurrence. Responsive to the event occurrence at least one programmatic action can be performed in accordance with machine readable instructions of the event handler. The default system behavior is not implemented responsive to the event occurrence.

Another aspect of the present invention includes a system for speech processing. The system can include speech processing resources for performing at least one speech processing task. A plurality of applications can utilize the speech processing resources. Utilization of the speech processing resources by the applications can require that a utilizing application obtain a speech focus. The system can also include a waiting queue for assigning speech focus. The waiting queue can queue entries for waiting ones of the applications. The waiting queue can also include an entry for a default focus receiver. Default system behavior can be defined for situations when speech processing events occur when no entries are present within the waiting queue that directs the system in how to handle the events. Speech focus can be assigned to the default focus receiver when no entries associated with the applications are in the waiting queue. Programmatic actions defined using the default focus receiver can override corresponding programmatic actions specified as default system behavior.

Still another aspect of the present invention can include an entity referred to as a default focus receiver. The default focus receiver can receive speech focus to override default speech processing system behavior. The default focus receiver can include a sequence of instructions that are activated responsive to event occurrences before instructions corresponding to default speech processing behavior are activated. The sequence of instructions is only activated when a speech focus has not been obtained by any of a variety of speech enabled applications that request speech processing resources responsive to the event occurrences. At least one event handler can be programmatically referenced by said sequence of instructions. The event handler can specify at least one programmatic action that is to be performed responsive to one of the event occurrences being detected. When events occur that have associated event handler programmatic actions and default behavior the programmatic actions specified in the event handler override the default behavior.

It should be noted that various aspects of the invention can be implemented as a program for controlling computing equipment to implement the functions described herein or a program for enabling computing equipment to perform processes corresponding to the steps disclosed herein. This program may be provided by storing the program in a magnetic disk an optical disk a semiconductor memory any other recording medium or can also be provided as a digitally encoded signal conveyed via a carrier wave. The described program can be a single program or can be implemented as multiple subprograms each of which interact within a single computing device or interact in a distributed fashion across a network space.

In one embodiment system can be an embedded system. The embedded system can be a resource constrained device operating in a networked or stand alone fashion. The embedded system can be a system having limited input output peripherals. The embedded system can lack a keyboard mouse and or display and can therefore rely upon speech input and output to interface with a user. The embedded computing system can be a system customized at design time for a designated purpose as opposed to a generalized computing device designed to be loaded with software that changes its purpose over time. The system can provide one or more of the speech resources as part of a defined architecture or toolkit such as the IBM EMBEDDED VIAVOICE MULTI APPLICATION ARCHITECTURE or the EMBEDDED VIAVOICE MAA TOOLKIT both products of International Business Machines Corporation IBM of Armonk N.Y.

The embedded system can represent a dictation system a navigation system a mobile communication device an electronic day planner an embedded in vehicle system a telematics system or a media player. Additionally the embedded system can include a wearable computing device a mobile computing device a set top computing appliance a subsystem of a larger electric device or system and the like. At least a portion of the computer readable instructions for applications and and or for speech resources can be stored within read only memory ROM .

System is not limited to embedded systems and other arrangements are contemplated. For example system can represent a desktop laptop or server having stored thereupon software for application and or . System can also include a distributed computing environment where one or more of application and as well as speech resources can be located in geographically diverse locations that are communicatively linked with one another through an Internet protocol based connection.

Regardless of implementation specifics applications and can be speech enabled applications that utilize one or more of the speech resources . The speech resources can include hardware resources software resources network resources and the like. At least a portion of the speech resources can be mutually exclusive resources that can only be used by a limited number of applications at the same time. The mutually exclusive resources can be discrete stand alone resources as well as a cluster or pool of common resources. The limited number of applications able to simultaneously utilize the mutually exclusive resources can have a cardinality of one or more with multiple applications commonly utilizing pooled resources in accordance with the size of the pool and the nature of the resource utilization.

A speech focus can be established to determine which of the applications and or can utilize a speech resource or group of speech resources . In one arrangement a single speech application having speech focus can lock in the speech resources for as long as the application retains speech focus. In another arrangement individual speech resources can be associated with different speech focuses where the applications can separately acquire selected ones of the speech focuses depending upon the speech resources needed.

A waiting queue can be established for obtaining speech focus . Any queuing technique known in the art can be implemented for the waiting queue including prioritization techniques. For instance a first in first out first in last out and weighted queue priority schemes can be utilized. When no elements are included in the waiting queue default behavior can be activated. The default focus receiver can be the first element that is placed in the focus queue and is therefore executed above the default behavior . While the speech processing system is executing the default focus receiver can be available at the bottom of the waiting queue . Any application requesting speech focus can be granted priority in the waiting queue over the default focus receiver . For example the waiting queue can include an initial request for speech focus from application resulting in element being placed in waiting queue . A subsequent request from application can result in element being placed in waiting queue .

In one embodiment waiting queue and speech focus establish an order for handling speech processing events. For example assume that the waiting queue establishes an order for handling speech processing events of application default focus handler then system defaults. Assuming speech event X occurs then because of the order established by waiting queue application will first be permitted to handle event X. Therefore if application chooses as determined by return codes associated with application s event handler to handle event X application will be granted speech focus for event X. If application chooses not to handle event X application will be permitted to choose to whether to handle the event where if it so chooses application will be granted the speech focus . Otherwise application will be permitted the choice to handle event X followed by the default focus handler followed by system defaults.

In one embodiment the elements within waiting queue including default focus receiver can be implemented as processing threads of execution. These low level processing threads can be used to handle event occurrences relating to utilization of speech resources responsive to the occurrences of speech processing related events. Accordingly the default focus receiver can be implemented as a pseudo application that operates as a thread within system . Unlike other processing threads that are dynamically created and destroyed upon execution the default focus receiver can remain active without being destroyed after use for as long as system is in an operational state.

Code within default focus handler can be linked to handlers . The handlers can be written by system designers system implementers authorized administrative software technicians and or other system users. The handlers can specify behavior for events. This specified behavior can override default behavior . For example if handler is written to handle event A it will override the default for event A contained within the default behavior . If no overriding code exists within any of the handlers linked to the default focus receiver actions specified as default behavior can execute. For example since no handler has been written for event B the actions specified as default behavior for event B can be executed responsive to an occurrence of event B.

Method can begin in step where a speech processing system can be initialized. In step the default focus receiver can be placed in a waiting queue for speech focus. The default focus receiver can be the first entity to request speech focus and can thusly be placed at the bottom of the waiting queue.

The default focus receiver can override default behavior of the speech processing system. For example in step an event occurrence can be detected. In step event handlers of the default focus receiver can be checked to determine if any behavior is defined by the default focus receiver for the event. If so in step at least one programmatic action can be performed in accordance with the behavior defined within machine readable instructions by the event handler. If not in step default system behavior defined for the event occurrence can be executed. Appreciably when the event handler of the default focus receiver handles the event occurrence the default system behavior is not implemented having been overridden by the defined behavior of the default focus receiver.

In step a request for speech focus can be received from at least one speech application. In step the speech application can be placed in the waiting queue. In step a second application can request speech focus and can be placed in the waiting queue with a priority in the queue above the default focus receiver and less than the priority of the first speech application. In step the first application can be granted speech focus since it is the first application within the waiting queue assuming a first in first out FIFO queue . Accordingly a speech processing event can be intercepted by the first application and the first application which has speech focus can utilize speech processing resources to respond to the intercepted speech processing event. In step when the first application has finished utilizing the resources the first application can be removed from the waiting queue. In step the second application can intercept an event and obtain speech focus which allows the second application to utilize associated speech processing resources. In step once the second application has utilized the resources it too can be removed from the waiting queue.

In step a determination can be made as to whether the speech processing system is to remain in an operational state. If not the method can proceed to step where the default focus receiver can be removed from the waiting queue and the system can shut down. It should be noted that the default focus receiver can remain active within the bottom of the waiting queue whenever the speech processing system is operational. If the system is not to be shut down the method can loop from step to step .

In step a human agent can be selected to respond to the service request. In step the human agent can analyze the customer s computer speech processing system. System analysis work can also be performed to determine optimal settings. In step the human agent can use one or more computing devices to perform or to cause the computer device to perform the steps of method . For example the human agent can be responding to a trouble call and can test the established functionality of the customer s system which can have a default focus receiver enabled. The human agent can also train the customer in the use of the speech processing system using the customer s own hardware.

In optional step the human agent can configure the customer s computer in a manner that the customer can perform the steps of method in the future. For example the human agent can install software to enable the default focus receiver. The human agent can also write event handlers linked to the default focus receiver to override the default behavior of the speech processing system. Additionally the human agent can create links within the default focus receiver to one or more default handlers which the customer can configure and or write. Once the customer s machine has been configured by the human agent the newly configured machine can perform the steps of method responsive to customer initiated actions. In step the human agent can complete the service activities having resolved the problem for which the service request was placed or otherwise responded to the service request.

It should be noted that while the human agent may physically travel to a location local to the customer s computer when responding to the service request physical travel may be unnecessary. For example the human agent can use a remote agent to remotely manipulate the customer s computer system in the manner indicated in method .

The present invention may be realized in hardware software or a combination of hardware and software. The present invention may be realized in a centralized fashion in one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

The present invention also may be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

This invention may be embodied in other forms without departing from the spirit or essential attributes thereof. Accordingly reference should be made to the following claims rather than to the foregoing specification as indicating the scope of the invention.

