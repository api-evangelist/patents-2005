---

title: System and methods for dynamic generation of point / tag configurations
abstract: A system and methods for implementing tag synchronization routines providing automated tag definition and management functionalities. Tag configurations are highly configurable to obtain information from multiple back end systems and able to support data access from many different sources. Additionally, the tag configurations provide convenient mechanisms by which to control data access and preserve data integrity in an automated manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08700671&OS=08700671&RS=08700671
owner: Siemens Aktiengesellschaft
number: 08700671
owner_city: Munich
owner_country: DE
publication_date: 20050815
---
This application claims the benefit of priority from U.S. Provisional Application No. 60 603 018 filed on Aug. 18 2004 entitled DYNAMIC AND AUTOMATED METHOD TO GENERATE POINT TAG CONFIGURATIONS .

This application generally relates to information management strategies and more particularly to a system and methods for automated management of tag configurations and data acquisition from back end systems.

Information retrieval and management within a business or organizational enterprise typically presents numerous technical issues associated with data integration and interpretation especially when the data originates from multiple sources. For example difficulties often arise when aggregating data from real time informational sources and associating this data with other desired information. For real time systems with dynamically changing data accessibility bandwidth and latency concerns limit the flexibility and scalability of these systems as a whole. Furthermore complex systems having many different informational sources become increasingly difficult to configure monitor and manage efficiently without suitable automation mechanisms to facilitate these operations.

Conventional systems designed for operation in the aforementioned context are frequently tag based. As an example a tag based manufacturing plant may include monitoring and control functionalities associated with various operational parameters for components and sub components of the plant. Operation of the plant necessitates processing large amounts of real time and or near real time data. This data referred to as point data originates from various sources configured to provide substantially raw or native information at selected intervals. Taken alone this data provides little or no context for its interpretation and may require additional information to be associated with it to permit meaningful processing and analysis. It may also be desirable to distribute point data to other processing components requiring some degree of context be ascribed to the point data.

Modern industrial automation systems supervisory control and data acquisition SCADA systems general data acquisition systems and plant data historians represent exemplary systems that manage and process real time and or near real time information in the form of point data. In such systems a tag represents a structural data element comprising point data associated with various components of the system. The point data of selected tags are desirably made accessible to other components systems applications and or users in various combinations. In general point data is subject to frequent change and may be monitored and reported through various operations and functions. In industrial automation and control systems decision support and reporting capabilities may also be provided using tag associated point data monitored over very short timeframes ranging in the sub second to sub minute range.

Non point data relates to a broad category of information that contextualizes point data in various ways. Non point data may include descriptive and or attribute information characterizing the point data as well as other information such as limits ranges etc. In conventional systems integral and flexible manipulation of tag based point data and non point data is restricted due to their inherent differences and properties. For example conventional systems typically provide only limited integration and relational functionality for tag based data and non tag based data. Such integration is generally further limited by tedious manual configuration operations which require significant effort and time to deploy.

Developing efficient and flexible data acquisition strategies for information retrieval and management tasks associated with point data and non point data is important for numerous reasons. Of particular importance is the need to insure accuracy and timeliness in the data without imparting undue computational or transmission load within the system. Furthermore there is a need for providing increasingly adaptive procedures including the ability to automate configuration and management of tags and their associated point data sources to reduce or eliminate developmental and deployment inefficiencies found in conventional systems.

The following description provides details of various embodiments of a system and methods for generating flexible tag point data and non point data associations. Furthermore the present teachings may be used to implement routines for automated and semi automated tag configuration. In one aspect such routines may be used to improve synchronization of tag based data non tag based data point data non point data and various combinations thereof.

Tag synchronization as detailed below may be adapted for use in the collection management and organization of point data and non point data from a variety of different data sources. As previously described tag based data management applications may be implemented in industrial automation systems supervisory control and data acquisition SCADA systems general data acquisition systems plant data historians and other systems. Commonly assigned U.S. patent application Ser. No. 10 993 712 filed Nov. 19 2004 entitled TAG MANAGEMENT WITHIN A DECISION SUPPORT AND REPORTING ENVIRONMENT provides details of an exemplary model and environment for tag based data management. The tag point data synchronization and association features described herein may be applied to various aspects of this model as well as adapted for use in other contexts.

In various embodiments the invention provides improved mechanisms for retrieving manipulating organizing and analyzing information in systems where point data and non point data coexist. A class based representational model supporting tags is disclosed however it will be appreciated that the methods described herein are not limited for use exclusively with this model. According to certain embodiments data management and synchronization functionalities utilize data structures that store and manipulate both point data and non point data in a cohesive manner. Numerous benefits may be realized from the disclosed methods of integrated data management and synchronization including improved system performance and reduced developmental overhead.

As used herein point data may be characterized as current real time or value data often associated with systems instruments components or portions thereof. Point data is utilized in various manufacturing industrial and commercial contexts where it is generated measured and or sampled from one or more point data sources of interest. For example a data acquisition system for a particular instrument having at least one motor may continuously or periodically acquire data reflecting the motor s operating speed and or operating temperature as point data from a point data source associated with the motor in certain instances the point data may be a simple numerical or string value. Point data may further be associated with monitoring control and reporting functions of various instruments components and applications to provide information relating to the operation of a selected system. This information may also be made available for collection and review by various data acquisition and control systems.

Point data is often acquired in a raw or unstructured form wherein the point data reflects a numerical or string value without supporting details description and or attributes. As previously described certain types of point data may be associated with real time or near real time information e.g. current temperature pressure speed voltage current etc. that may be desirably sampled updated or refreshed relatively frequently. The exact frequency of these operations is typically dependent on the characteristics of the point data itself and may be different across the multiple point data sources incorporated into a particular system. Providing mechanisms to allow for customization of the acquisition strategies for various classes of point data becomes increasingly significant as the size or complexity of the system grows. In various embodiments of the invention it is desirable to automate at least a portion of these processes to reduce or eliminate dependency on manual configuration and maintenance. In particular it is desirable to provide automated and dynamic methods that allow coherent structuring of information from a plurality of point data and non point data sources.

As will be appreciated by those of skill in the art point data interpretation is problematic without providing suitable context to the information. To give point data context it may therefore be desirable to associate it with selected non point information. Non point data may take many forms including but not limited to attribute information parameters limits and other descriptive information. As used herein the terms point data and non point data encompass various categories of information which are not necessarily constrained to the examples described herein. As such the various embodiments of the invention may be applied to a variety of different contexts embodied in the combination and use of point data and non point data.

Other useful non point data may include information such as maintenance work orders relational data or API Application Programming Interface structure data from maintenance systems equipment documentation unstructured data usually contained within operating system files and documents and information such as URL Uniform Resource Locator links to supplier web sites. These types of non point data may be associated with non tag based information contained for example within Oracl or SAP databases environments. Non point data therefore represents a broad class of information that may be associated with point data providing a contextual and informational basis.

Various embodiments of the invention provide mechanisms to integrate tag based data including point data and non point data with non tag based data. Certain features of the invention overcome conventional limitations of relating tag based data and non tag based data providing improved integration management and utilization. One exemplary architecture in which tag based and non tag based data as well as point data and non point data may be collectively utilized is the XHQ software platform developed and distributed by IndX Software Corporation Aliso Viejo Calif. . Additional details regarding the configuration and use of this system may be found in various user manuals and technical publications describing the applications and architecture. In various embodiments such an application may be configured to provide a data aggregation and modeling framework and tools for retrieving manipulating analyzing and associating tag based and non tag based data as well as point data and non point data from one or more sources.

Point data and non point data may be collectively referred to as operations data. In various embodiments operations data reflects data that is collected evaluated and or presented through the platform or associated applications software. As will be described in greater detail hereinbelow the invention may operate to provide this information to a user in various types and combinations reflecting desired information obtained or associated with substantially any back end resource.

The various embodiments of the invention can be employed in a wide variety of industries and operational facilities. Any industrial process with differing types of operations data may be supplying data to systems utilizing the invention. For instance exemplary industries involved may comprise natural resource refinement and procurement facilities oil and gas procurement oil and gas refinement chemical petrochemical synthesis and refinement water treatment power generation power transmission food and beverage processing raw materials processing such as pulp lumber metals minerals agricultural processing and materials processing facilities e.g. steel mills and foundries . The aforementioned industries are well suited to utilize platforms and software built upon concepts embodied in the invention. Additionally facilities involved in finished goods manufacturing and production such as product assembly lines may utilize one or more embodiments of invention or systems with such features.

Various assets equipment machinery flows etc. may be associated with the industries and operational facilities that produce operations data which may be continuous or discrete and may involve operations data that is presented in batches. Examples include pumps motors tanks pipelines mills lathes mixers assembly lines and so on. Operations data may further include data from machinery assets process historians maintenance systems enterprise resource planning systems and the like. Examples of such data include pressure temperature capacities volumes rates of flow production totals inventories performance indicators and the like.

One feature of present invention is the ability to provide enhanced accessibility and presentability to operations data by bringing tag based and non tag based data together in a dynamic and automated manner. Additionally in various embodiments the present invention allows for unique configuration of operations data associated with selected tags using a rule based process. In still further embodiments the disclosed methods of tag synchronization reduce or eliminate the need to model or create instances e.g. object instances of tags. Consequently tags and their related operational data e.g. point data and non point data may be made accessible for use in complex calculations in a simplified and straightforward manner.

Utilization of the various embodiments of the invention further provides a mechanism by which to manage information obtained from one or more back end data systems. Back end data systems may include various conventional systems for receiving and processing operational data. In certain instances a back end data system has only limited capabilities to provide receive or process point data whereas in other instances the back end data system may process both point and non point data. In the context of a tag based architecture various back end data systems may be used to collect point data and perform operations in which non point data is associated with point data. Each so called tag may therefore represent a data structure comprising a selected quanta of information associated with a particular point data informational source and may also comprise certain non point data. The various embodiments of the invention provide a mechanism for extending tag based data management capabilities allowing for improved integration of point data and non point data. Such features are especially useful across enterprise level environments wherein large amounts of point data and non point data are to be collectively managed.

In the context of informational aggregation tag presentation and data warehousing the various embodiments of the invention may be adapted to improve accessibility and usability of operational data through processes that synchronize point data and non point data allowing joining or merging this data. In one aspect merged point and non point data occurs in an object oriented system or class like manner providing improved flexibility in the handling processing and display capabilities. Additionally mechanisms for securing tag based information are provided including the ability to implement flexible accessibility grants and view restrictions.

In conventional systems configuration of a data acquisition to acquire each tag s current value e.g. point data associated information generally requires a unique configuration for each tag and possibly each tag s attributes e.g. non point data . Considering that it is not uncommon for complex industrial automation applications to contain upwards of 100 000 tags it will be appreciated that the individualized configuration and management of tags in the aforementioned manner can be very time consuming inefficient and error prone. Furthermore conventional mechanisms for control monitoring or archiving of tag based information tend to become even less useful when attempting to aggregate such information across multiple systems such as in the context of other plant production systems and applications.

The various embodiments of the invention provide mechanisms by which to effectively address the aforementioned limitations using a novel approach that combines acquiring non point data e.g. attributes and other information that does not change frequently with generally more frequently changing point data e.g. a tag s real time or current value . Furthermore a rule based acquisition approach may be implemented to reduce or eliminate individual tag configuration thus providing for more rapid development of data organization and visualization tools.

The present invention extends synchronization functions associated with point and non point data processing. Additionally the invention provides improved scalability allowing for convenient management and improved performance when dealing with large numbers of tags e.g. thousands of tags or more . These features are distinguished from those of conventional systems wherein tags require manual definition and configuration through laborious modeling processes. The present invention overcomes this limitation implementing a unique approach to tag management capable of reducing the number of manual operations required and providing a more automated system.

The present invention further insures that information contained within tags is synchronized and refreshed in a timely manner. In certain embodiments tag synchronization capabilities provide automated mechanisms to define and update tags to maintain consistency within a tag collection. Generally the process of synchronization may allow access of back end data sources to be conducted in a semi or fully automated manner. Additionally the disclosed system is highly scalable providing synchronization capabilities for both small systems having only a few tags and very large systems having several hundred thousands of tags or more. The systems and methods for tag synchronization additionally support a variety of different data types and tag configurations allowing data from multiple back end data sources to be managed individually or collectively.

In various embodiments the invention comprises a method for the aggregation of operational data acquired from at least one back end resource. The method further comprises providing a first data structure for storing operational data comprising non point data acquired according to a first acquisition strategy from the at least one back end resource providing a second data structure for storing operational data comprising point data acquired according to a second acquisition strategy from the at least one back end resource and invoking a synchronization process that assesses current configurations for the first and second data structures and modifies that current configurations in a manner suitable to achieve desired configurations for the first and second data structures the synchronization process further providing modifications to the first and second acquisition strategies as necessary to store the point data and non point data within the first and second data structures according to the desired configurations.

In further embodiments the invention comprises a method for aggregation of operational data acquired from at least one back end resource. This method further comprises the steps of providing a first data structure with current configuration for storing operational data comprising non point data acquired according to a first acquisition strategy from the at least one back end resource providing a second data structure with current configuration for storing operational data comprising point data acquired according to a second acquisition strategy from the at least one back end resource assessing the current configuration of the first data structure and providing modifications to achieve a desired configuration for the first data structure assessing the current configuration of the second data structure and providing modifications to achieve a desired configuration for the second data structure and modifying the first and second acquisition strategies as necessary to store the point data and non point data within the first and second data structures according to the desired configurations.

In still other embodiments the invention comprises a computer based system for providing configurable associations of tag based information. This system further comprises a generator module that provides a data solution comprising at least one connector for accessing operational data comprising point data and non point data associated with at least one at least one back end resource the data solution further comprising at least one acquisition strategy that specifies the manner of point data and non point data access a synchronization module that evaluates the at least one connector and the at least one acquisition strategy of the data solution and automatically conforms them to a desired configuration reflecting selected point data and non point data associations and a runtime module that recognizes the data solution and effectuates acquisition of the point data and non point data from the at least one back end resource according to the desired configuration.

In further embodiments the invention comprises a computer readable medium having stored thereon instructions which when executed by a processor cause the processor to store non point data acquired according to a first acquisition strategy from the at least one back end resource in a first data structure store point data acquired according to a second acquisition strategy from the at least one back end resource in a second data structure and invoke a synchronization process that assesses current configurations for the first and second data structures and modifies that current configurations in a manner suitable to achieve desired configurations for the first and second data structures the synchronization process further providing modifications to the first and second acquisition strategies as necessary to store the point data and non point data within the first and second data structures according to the desired configurations.

A back end data environment comprises various tag based systems and non tag based systems. These data sources may include for example plant floor production systems monitoring control reporting systems enterprise resource planning data systems human resource management systems customer relationship management systems and other data systems . Data arising from the back end data environment may comprise point data such as the aforementioned current or real time operational values and non point data which arises from or is associated with tag based systems such as the aforementioned plant floor production systems and monitoring control reporting systems . Non point data associated with these tag based systems may further include attribute information used to characterize contextualize or identify the point data and or point data source.

In addition to tag based non point data non tag based non point data may be associated with various back end system resources such as the enterprise resource planning data systems human resource management systems and customer relationship management systems . Conventionally non tag based non point data may be associated with various database and data management applications that provide such information in a form that is not readily compatible integrateable with certain components of the tag based system data for the aforementioned reasons e.g. format structure application dependence etc. . As will be described in greater detail below the various embodiments of the invention overcome these and other limitations providing efficient mechanisms that allow tag based point and non point data to be integrated and related within the same environment for purposes including but not limited to management retrieval development review.

The various components of the back end data environment are connected to an application environment such that the operational data comprising point data and non point data both tag based and non tag based are accessible to the application environment and may be stored and processed therein. In this context the term connected refers to being directly or indirectly capable of communicating over a direct wired network or wireless connection. The exemplary application environment may comprise an enterprise server s and or one or more solution servers . The application environment may further be connected to a development environment . The development environment comprises one or more development clients . In various embodiments the enterprise server solution servers and development clients may comprise application programs developed for example in a language such as Java and or C which run under an operating system such as the Windows a product of Microsoft Corp. family of operating systems.

In various embodiments the invention provides a mechanism to integrate acquired operational data comprising point data and non point data in a unified manner using an object oriented representational model for data acquisition and management. Further provided is a mechanism to customize the data acquisition process by associating configurable acquisition frequencies or fetch intervals for the information to improve overall system efficiency. The configurable acquisition frequencies can be adjusted to accommodate the both point data and non point data as well as the rate at which this data will change or be refreshed to provide the application environment with up to date information.

The aforementioned informational acquisition and management features desirably improve system performance and decrease bandwidth consumption by avoiding unnecessary or redundant data requests from the back end data environment . More specifically the system provides options and functionality for conveniently specifying and grouping various information to be fetched from the back end environment and processed by the application environment . In various embodiments the data grouping functionality utilizes tag collections to model point data acquisitions from one or more point data sources. The tag collections further facilitate defining and modeling components within the back end data environment and provide a reusable resource that can be used to enhance the development process especially in large or complex systems.

In one aspect point data sources correspond to addressable points of the informational sources associated with various elements components of the continuous process facility manufacturing plant or refinery and may be referred to individually as tags. A tag comprises a collection of desired operational data comprising point data and non point data utilized or processed by the application environment . Each tag may further reflect a data structure used for storing point data and or non point data acted upon by the application environment . It will be appreciated that point data and tags reflect terms used in various processing and manufacturing industries to define sources of identifiable values for various instrument and apparatus functionalities and features but may also be applied in other contexts and systems.

Each point data source may be associated with a measurable or monitorable feature from which point data may be requested and collected. For a selected instrument or device a plurality of such point data sources may exist with the point data generated by or associated with each point data source subject to relatively frequent change and generally representative of a current real time state or operational condition of that point data source . Point data may further be acquired either directly or indirectly by components of the application environment and associated with non point data which is recognized by the components of the application environment . In various embodiments association of non point data with the point data may be accomplished by the instrument or alternatively non point data associations may be performed by other components of the system. In various instances association of point data with non point data may occur substantially transparently to the point data sources and or various associated back end data systems . In general non point data is associated with point data and reflected in the tag data structure. Together this information may be used by the application environment for the purposes of monitoring control and analysis and to assess the state or condition of selected instruments or systems within the back end data environment .

Operational data comprising point data and non point data may be received by a data acquisition system configured to collect information from various point data sources or other back end data systems associated with corresponding point data sources . The data acquisition system and back end data systems typically provide only limited functionality in terms of data acquisition and management but may serve as a source of point data and non point data for the application environment . Alternatively the application environment may be configured to acquire point data and non point data directly from the various back end data systems and point data sources . In such instances the application environment is capable of interacting with the various components of the back end data environment systems and or point data sources to collect information about each desired point data source and associated non point data . Mechanisms for configuring and executing such interactions will be described in greater detail hereinbelow.

It will be appreciated that point data may originate from many point data sources each having differing volatility or longevity characteristics. In one aspect these characteristics describe reflect the volatility of the point data wherein certain point data may be characterized as relatively static or infrequently changing and other point data may be characterized as relatively dynamic or more frequently changing. Thus the point data acquired from the systems or point data sources may posses a wide range of temporal qualities ranging from substantially never changing to changing substantially every instant. One feature of the data acquisition and management system of the present invention is that it provides a mechanism for conveniently associating with each point data source a configurable data fetch or acquisition frequency such that the application environment can be configured to obtain refresh or update the point data as needed or desired.

Typically point data comprises a wide variety of different constructions and or compositions. For example point data may relate to real time operational data for an informational source or back end data system associated with a continuous process facility manufacturing plant or refinery including temperature pressure speed etc. In certain instances the point data may be a primitive value not carrying with it a description of the point data source from which it was obtained. In other instances the point data may be associated with non point data including attribute information which characterizes the point data source e.g. instrument name or point data itself e.g. data units . Certain non point data or attributes may be further defined for the point data sources . These may include for example operational ranges point data source names or associations and other information. The non point data or attribute information may be assigned by the data acquisition systems used to acquire the point data or may be assigned directly by components of the application environment . In various embodiments non point data or attribute information reflects more static less volatile information as compared to the point data . Typically non point data does not change at the same frequency as the point data itself. As a result the desired acquisition rate or fetch frequency for non point data may be correspondingly lower.

In one aspect component builder and solution builder functionalities may be associated with the application environment . The component builder provides functionality for defining generating managing and visualizing various component data structures used for point and non point data acquisition integration in accordance with various embodiments of the invention. The solution builder provides functionality for creating views or visualizations of components generated with the component builder.

In one aspect the component builder and solution builder allow point and non point data to be flexibly organized and presented using a graphically driven approach. In such an approach a user is able to create one or more components and views in an iconically and menu driven manner. Furthermore these builders may utilize intuitive and semi automated mechanisms for point data and non point data integration which facilitates design and manipulation of the data at small and large scales alike.

In one aspect the tag synchronization architecture utilizes data structures including a tag list and a tag table . The tag list comprises a collection of one or more tag records corresponding to tags logically or physically present within an instrument system plant business enterprise organizational enterprise etc. from which point data is to be acquired and managed. Each record of the tag list may be configured to reflect information characterizing a discrete tag within the system storing identifying data about the tag. This data may include descriptive details about the tag e.g. name source location and address access configurations attribute information runtime parameters operational ranges limits and other non point data .

In one aspect the tag list is initially configured to contain tag records associated with tags that are or may be present and accessible in developing subsequent solutions for point data access management and or viewing. Data used to configure the tag records of the tag list may be obtained from back end data sources which supply a current or desired list of tags as well as tag attribute data non point data associated with each tag. The tag records further comprise information for determining how point data may be accessed from the various back end systems real time historians . Such information may include the address location login parameters or configuration used to access a selected real time historian as well as set forth the acquisition characteristics e.g. frequency of acquisition mode of acquisition expected data configuration etc .

Typically data contained within the tag list reflects infrequently changing or static information as compared to the actual point data . Once acquired the information for a selected record may be expected to remain substantially constant or updated relatively infrequently. An efficient mechanism by which to obtain the aforementioned information for use in populating the tag list comprises developing defining a series of queries used to retrieve or pass the non point data from the appropriate back end systems attribute historians . These queries may comprise database like commands e.g. SQL database queries which populate the tag list by accessing or obtaining data for each tag record as appropriate.

In various embodiments configuration and attribute information contained in the tag list relating to each record may be used to populate the tag table with point data obtained from selected back end systems real time historians . Information in the tag table comprises one or more tag elements comprising point data associated with a selected tag s real time or operational value. Back end data sources supplying the point data may be identified accessed and relevant information retrieved or acquired to be subsequently associated with corresponding non point data .

As previously noted the point data may be characterized as information that is subject to rapid or frequent change. Consequently to maintain an accurate timely or up to date reflection of the point data the rate at which the point data is desirably acquired may be increased. In various embodiments the present invention provides mechanisms to configure polling or subscription frequencies associated with the various tag elements contained in the tag table . The rate at which the point data for a selected tag element is acquired or refreshed may be set forth by rule based and or event driven mechanisms. Point data acquisition configurations may further be devised that include an identifier such as a tag name ID key or equivalent which permit appropriate tag attribute settings to be determined using information acquired from the tag list . The point data configurations may further provide information setting forth the manner or mode to properly retrieve a selected tag s point data value e.g. real time or current values from the appropriate back end systems real time historians .

In one aspect point data acquisition may be accomplished through publish and subscribe data collection tag value connections or by sampling point data that is streamed from selected back end systems real time historians . These mechanisms for informational acquisition may be better suited for real time data acquisition allowing the point data to be refreshed at a desired frequency especially in situations where the refresh rate is rapid. Conversely non point data which generally does not require frequent refreshment or acquisition may be better suited to query based mechanisms as described above and may be configured to avoid imparting undue computational overhead or bandwidth consumption to the information acquisition system.

Using the tag list in connection with the tag table provides a convenient mechanism by which to acquire and store both point and non point data . Additionally organization of the information in this manner allows for various tag synchronization operations to be performed. As will be described in greater detail hereinbelow the tag synchronization operations may be used to update the tag records and associated tag elements in a semi automatic or fully automated manner.

In one aspect selected back end sources may be configured to supply information corresponding to a list or collection of tags in a tag list acquisition process . The tag list acquisition process sets forth logical groupings or combinations defining how various point data and non point data will be subsequently associated. In one aspect a tag list is developed by the tag list acquisition process comprising a plurality of tag records representing desired associations of point data and non point data . The tag list acquisition process may further set forth associations that provide configuration information that aid in determining the specific back end data source from which that non point and or point data is to be acquired.

A computerized system implementing such features may provide a generator module for defining deploying a data solution utilizing the aforementioned information. Additionally as will be described in greater detail hereinbelow processes for informational synchronization may be implemented in such a computerized system through a synchronization module with a runtime module capable of interpreting the data solution and acquiring the information according to a desired configuration.

Using the aforementioned configuration information each tag record may be populated with information by a non point data acquisition process wherein one or more back end data sources supply or are accessed to supply the non point data in an appropriate manner. For example tag lists and non point data may be obtained by database query language queries such as SQL Structured Query Language or SQL like queries. Such a query may be used to acquire the entire tag list as well as each non point data element to be associated with the tag records . Such queries are typically well suited to access and retrieve generally static information which changes relatively infrequently e.g. non point data .

The tag list acquisition process and non point data acquisition process may both be configured as periodic or event driven events wherein the list of tag records and the corresponding non point data e.g. attributes are acquired as desired. For example these processes may be configured to be executed at pre designated times or intervals to insure the tag list comprises up to date information. Alternatively these processes may be configured to be executed based upon a selected event such as the introduction of a new informational source back end source or tag to be managed and or monitored by the system. It will be appreciated that other mechanisms for determining acquiring and populating the tag list tag records and non point data may be readily devised without departing from the scope of the invention.

Configuration of the tag list may include performing operations for the acquisition of appropriate non point data used for populating each tag record . In one aspect these operations comprise generating and or executing configuration parameters and access instructions to retrieve the non point data from one or more back end systems attribute historians. One desirable feature of the system is reflected by the ability to aggregate non point data from a plurality different sources collecting the information in a centralized manner where is may be more conveniently organized managed and utilized.

Once the tag list has been developed the tag table is constructed by a tag table generation process . Tag elements of the tag table may be identified based on tag records present within the tag list . Likewise suitable configuration access parameters as well as point data acquisition strategies may be identified using the tag list . Taken together this information provides a mechanism by which to populate the tag elements with appropriate point data at the desired interval s .

Based on the characteristics of the tag components and tag collection the tag list is defined in state . The tag list is generated as previously described wherein appropriate connections and acquisition strategies to access various back end systems attribute historians are set forth so that non point data may be retrieved to populate that tag records of the tag list. Additionally the tag list contains information describing how tag records of the tag list and tag elements of the tag table will be associated e.g. point data and non point data associations . In various embodiments selected information from the tag records e.g. attribute information is used to contextualize the tag elements and this information is provided upon user request or during presentation of the tag in a view.

In state acquisition characteristics suitable for retrieving point data may be defined. For example the desired frequency of acquisition or sampling of selected point data may be configured. Typically the frequency of acquisition is configured on the basis of the expected volatility or dynamic change expected in the point data per unit time. In certain instances it may be desirably to configure point data acquisition multiple times per hour minute second sub second increment etc. The system desirably allows point data acquisition strategies to be customized for tags both individually and in groupings as desired. Additionally default acquisition strategies may be implemented whereby an acquisition strategy is automatically assigned without manual configuration.

In state the tag table is generated whereupon tag elements are populated with point data from selected sources . In one aspect generation of the tag table occurs by accessing information from the tag list which sets forth tag elements that will be present in the tag table and provides connection and configuration information used to acquire the point data . Additionally the previously defined acquisition strategies may be utilized to determine how to acquire the point data and the rate at which it will be refreshed.

Taken together the information in the tag list and tag table may be accessed in various manners to provide point data and non point data . In one exemplary usage this information may be accessed for the purpose of generating selected views in which tag based information is displayed to a user. While the aforementioned discussion has described the tag list and tag table as logically separate entities it will be appreciated that numerous implementations and schema exist to achieve the desired functionality. For example defining the tag list and tag table may be accomplished using a singular data structure or a plurality of discrete tables arrays records etc. Consequently the scope of the invention should not limited to any one manner of organization or implementation and may be executed in various manners without departing from the scope of the present teachings.

In developing tag based solutions context changes to the solution may be expected to occur subsequent to its initial setup. In applications having many tags being monitored various devices equipment may be added removed replaced altered etc. on an ongoing basis. Changes to the underlying tags of a system supplying point data to a solution can represent a significant problem in terms of maintaining consistency and accuracy of the solution. For example certain instruments and their associated tags may be desirably removed from a system while others may be added. In conventional systems such changes create significant issues in terms of retooling the solution. Oftentimes painstaking manual redefinition of the solution must be performed. These operations are typically time consuming and subject to errors potentially corrupting the integrity of the solution.

One feature of the present invention is to provide a mechanism by which to synchronize or update the solution in an automated or semi automated manner to reduce or eliminate the aforementioned problems. In one aspect tag synchronization according to the present teachings desirably facilitates the addition removal or updating of tags non point data and point data connections. These operations can be configured to execute periodically thus detecting and accommodating changes to the solution on an ongoing basis or may be executed upon request. For these and other reasons implementation of the invention provides enhanced abilities to normalize consolidate and unify data in the context of tag based information management.

The configurations rules may include mechanisms by which to compare the existing list table configurations to the updated or desired list table configurations or to recognize when changes to the existing list table configuration is necessary. For example in an exemplary operational environment a selected tag C may become antiquated or outdated and no longer needed to be represented in the tag solution. This may result from removal of the underlying instrument device or component associated with the tag or from its updating replacement with a component with different tags associations.

In general it is desirable to be able to quickly and efficiently recognize such a change in a tag associated with the solution and modify the solution to reflect the change in the tag to preserve system resources and maintain an accurate reflection of active viable or existing tags. Similarly connections references components and or other data structures that may refer to the tag should be updated as necessary to preserve integrity within the logical schema and associations of the solution.

In an analogous manner a selected tag D may represent a tag to be included in the tag solution. This tag may reflect recently added tag based connection information associated with the addition of an instrument device or component that was not previously associated with the solution. Additionally the selected tag D may represent a new updated tag based connection to an existing component. As with the removal of antiquated outdated tags it is desirable to be able to quickly and efficiently recognize and configure the added tag making its contents and information accessible in the solution.

Additionally tag modifications may be desirably implemented to change various point data non point data and configuration information associated with the tag. These modifications may be desirably performed on a Tag X resulting in changes to the underlying information contained within the tag. Such modifications should be recognized within the system and appropriate actions taken to preserve integrity within the logical schema and associations of the solution.

Inclusion of the tag synchronization functionality within the system desirably provides a convenient and simplified method by which to address the aforementioned operations in a consistent and timely manner. Additionally the tag synchronization functionality avoids flags or identifies the potential introduction of errors discrepancies into the solution which may result from modifications to tags.

In an exemplary application of the method contents of the tag list tag table are acquired and processed in a state . Acquisition of the appropriate information is set forth by the configuration rules with identify relevant tags and associated tag based information which make up the existing tag list tag table . Thereafter in state changes to the solution are identified. These changes may represent added deleted or modified tags including various information contained therein. In one aspect tag changes are detected and resolved using the configuration rules which compare the content of the existing tag list tag table to the updated or new tag list tag table . A script or series of operations may be generated during this state which sets forth the operations necessary to transform the existing tag list tag table into the desired update tag list tag table .

In state the updated tag list tag table is generated reflecting the previously identified changes. In one aspect the script produced in state defining the desired tag operations is executed producing the updated tag list tag table . This script may further include information identifying the contents of the updated tag list tag table as well as information identifying the differences between the existing tag list tag table and the updated tag list tag table . The script may be encoded as a file in a markup language such as XML which may subsequently be parsed and executed to perform the various operations associated with the tag synchronization process. In one aspect this information may be used in subsequent rounds or iterations of the tag synchronization process to determine appropriate changes modifications to be made. Thereafter in state tag list tag table changes may be saved including information detailing the progress results of the synchronization process including completion time date stamps status messages errors and other information. Additionally non point data and point data acquisition routines may be invoked to populate the tag list tag table .

As previously described in tags contained in the tag table are populated with point data and non point data through acquisition strategies that identify appropriate informational sources and retrieve data to be associated with selected tags . In various embodiments when acquiring point data the specific point data source s providing information are resolved and associated with one or more tags through selected querying mechanisms.

In state the information returned from the querying criteria is used to associate a selected tag within the tag table with a selected point data source . This process may include identifying a particular tag using the key or alias denoting the location where the point data will be stored. In state the point data is acquired using the aforementioned information obtained from the tag list to establish a connection to the appropriate point data source and is associated with the selected tag . In this manner point data may be linked or stored such that it made accessible through the tags of the tag table .

In one aspect the aforementioned method for point data acquisition provides a flexible mechanism by which to access and utilize point data within the system. Management of tag based information is facilitated through the use of the querying criteria in connection with both the tag list and tag table wherein changes to these components can be made to reflect new system configurations modification of various point data sources and other factors that may affect the manner in which point data and non point data are accessed within the system. These changes can be detected and propagated through the configuration rules which are able to automatically or semi automatically update the tag list and or the tag table as necessary or desired. Thus system integrity and data accessibility may be managed in a manner previously unavailable. Such features are particularly significant in the context of complex systems with many informational sources and tags where manual redefinition and maintenance of tag based information is both tedious and error prone.

In state the point data and non point data are merged in the appropriate tag data object of the tag table using the tag key as a reference. The structure of the tag data object in connection with the configuration information determines how the data is stored and provides for its subsequent accessibility. In state point data and non point data associated with particular tags contained in the tag table is made accessible to other components of the system for purposes of publication presentation upon request or viewing as desired.

The aforementioned methods for data acquisition improve the flexibility of point data non point data association alleviating much of the programmatic complexity from a user perspective. Additionally these methods provide a solution capable of handling highly complex data access schemas that may be scaled and reconfigured as desired with a significantly reduced overhead as compared to conventional designs. As will be described in greater detail hereinbelow the use of a key based referencing system further provides for simplified data access and facilitates joining varied data types preserving logical integrity throughout the system.

Tag component members may be mapped to or associated with selected information contained in the back end systems historians using the key based approaches described above. Population of the component members may further utilize a simplified command referencing language that may be translated by the application environment. The format of the commands of the language may allow for a more intuitive understanding of the operations to be performed in mapping the information without having detailed knowledge of the underlying operations themselves.

In the exemplary tag component definition for Tag tag component members may comprise limits or ranges each having associated member type e.g. real integer boolean string etc. . Each tag component member may further be associated with selected type of point data or non point data . For example the range component members each may be associated with non point data information representing operational limits for an instrument or device. Similarly other tag component members may include values e.g. real time or operational point data values attribute information e.g. units associated with the values and parameters contained within the tag component and configuration information . In one aspect the configuration component member may be used during the synchronization processes to identify components that are to be updated deleted etc.

A key member or alias serves as a unique identifier for the tag component permitting its selection and access to constituent component members. In the illustrated example the component member TagName serves as the key for the tag component and has an associated member type of string.

Other component members may be built from or include at least a portion of the information of another tag component. For example an Area component may be defined from Pump components and Conveyor components . As shown the Area component comprises component members intakepump and outletpump of type Pump and component members conveyor1 and conveyor2 of type Conveyor . Similarly a Plant component may be defined as comprising a component Area1 of type Area . Thus higher level components may be built or defined using other components as desired. This manner of structuring components provides for a logical mechanism by which to associated tags and information within groupings that facilitate organization of information in complex environments.

As distinguished from other mechanisms for tag component definition the aforementioned approach removes the requisite need to model e.g. create object instances of individual tags for the purposes of securing access to the tag and its associated data. Additionally these mechanisms provide more automated way to define tags based on tag meta data that may be obtained in the form of a collection. Overall the process of synchronization with back end historians can be configured to be automated and efficient enough to provide on line synchronization for systems with a several hundred thousands of tags. Implementation also allows support of different data type tags obtaining data from multiple historians. Additionally tag component definition facilitates access to tag based information especially in complex calculations.

It will be appreciated that in the above illustrated figures the tables information and structure shown are exemplary and other embodiments of the present teachings may be represented in different manners. Likewise the column names and parameters shown above for these systems are also meant for purposes of illustration and should not be construed as limiting upon the scope of the invention. Furthermore the actual column names and method for storage of the tag data and attributes from various systems implemented according to the present teachings may differ from that of those shown.

In one aspect the config component member operates as a flag or identifier to be used to specify connection information for a particular back end resource. For example data access may be provided to the first back end resource using a selected set of configuration parameters identified by a first configuration e.g. A while data access to the second back end resource may be provided by a second configuration e.g. B . In this manner the specific connection requirements of each back end resource may be identified and stored within the appended tag collection for use as needed or desired.

Based on the information shown in the following discussion represents an example of how a tag solution may be implemented in the context of two back end data sources. In one aspect the solution generation process commences with the defining of a solution comprising a top level component e.g. Plant . At this time fixed objects contained within the solution may be created as well as other components contained within components and sub components of the top level component. Subsequently back end connectors may be defined to link the tags to the appropriate back end data sources e.g. Type A and Type B Back end Resources in the illustrated example . An important feature of this process is that it desirably provides a means for joining information arising from independent sources of tags allowing them to be consolidated into one single unified tag list.

Following back end connector determination one or more connector groups may be defined. For example in a relatively simple case where only one acquisition strategy is required to import data into tags from one back end system only a single connector group per back end system may be necessary. Multiple connector groups per back end source may also be defined as desired and those of skill in the art of tag based system management will appreciate benefits and application of multiple connector groups or equivalent methods per each source.

A typical connector group specification may comprise a hostname or analogous approach to identify the relevant system authentication information if needed e.g. usemame and password to provide secure access and connection to the back end source poll rate trigger method definitions and other relevant connection specifications that can apply to one or more tags or tag values originating from a single back end source.

Thereafter a collection e.g. record set may be defined for each back end system configured to supply tags. Each of these collections may be associated with the component type Tag . Thus if there are two back end systems which are independent sources of tags then 2 collections record sets may be used to bring tag attribute data and the tag list for the back end system into the application environment. Using a querying method e.g. API or SQL information may be read or interpreted from the tag list and the tag attribute data from the back end source.

Mapping of the columns of the querying method to the object members of the Tag component may also be defined to more fully treat the tag and their data as an object in the general software sense. A tag collection record set may also be defined representing the collection that is going to be used to manage tags. This may further be used to create a set of objects and list to create the tag table . It will be appreciated that the tag table can be implemented in a variety of different methods. Additionally if only one source of tags exists then the step of mapping and tag collection definition may be collapsed into a single step.

For the exemplified collection of component type Tag the collection may be defined as a component type Tag . If separate collections were previously defined then this step may serve to perform the equivalent of a database append so that the collection contains substantially all the tags from all the collections defined in the previous step. Such operations provide the benefit of using the tags within a single consolidated set list. As a consequence browsing searching through the tags across multiple back end systems can be achieved.

It is noted that the value member may reflect point data associated with a relatively rapidly changing value that may be acquired by subscription to get the current value for this member. Additionally the config member reflects an approach to provide useful or necessary parameters to the process that generates connection configurations for each tag. In various embodiments each record in the collection possesses a corresponding tag object where the configuration information for the tag is maintained. The config member may reflect a special attribute that may be passed along with the key attribute for example with the tagname member to the process that generates tag configurations. Used in this manner the config member and its corresponding value permit the configuration generation process to distinguish between various back end resources. This allows the value member to be properly populated with information from the appropriate back end system data historian.

A further feature of the invention is the ability to provide useful organizational parameters allowing for customizable groupings and collections of information. These groupings may be conveniently defined as desired without having to fundamentally alter the logical associations already present within the system. This feature improves system stability and avoids data corruption normalization inconsistencies and the formation of invalid associations. Furthermore unlike conventional approaches with limited data accessibility the present invention provides mechanisms for flexible access to information within the system in new ways. One particular benefit to these approaches is the ability to draw together information that was previously structurally bound.

Finally as will be described in greater detail hereinbelow a further feature of the invention is the ability to provide access restrictions through the tag component and member configurations. These access restrictions may include defining security limitations preventing data from being viewed modified or accessed without designated credentials. Additionally the access restrictions may be used to effectuate of permissions and rules such as those used to limit views of data for selected purposes. In one aspect these restrictions may be applied at various levels and may include components tag members and various combinations thereof.

Based on the aforementioned principals data restrictions may be configured in numerous ways to provide numerous customizable access strategies. Additionally data permissions such as through the use of password protection and credential verification may be implemented to permit various levels of access to the data. For example access limitation to viewing or modifying contents of the tag list tag table may be provided as well as limitations to viewing or modifying selected components contained therein. The utility in providing such functionality in the context of a tag based management system will be recognized by those of skill in the art. Benefits of such an approach include restricting access to sensitive information and avoiding burdening selected users with unnecessary information in addition to dividing visibility of the data into logical collections.

Although the foregoing description of the present teachings has shown described and pointed out novel features of the invention it will be understood that various omissions substitutions and changes in the form of the detail of the apparatus as illustrated as well as the uses thereof may be made by those skilled in the art without departing from the spirit of the present invention.

