---

title: Method and apparatus for provisioning heterogeneous operating systems onto heterogeneous hardware systems
abstract: A method for provisioning a plurality of heterogeneous operating systems on a plurality of target hosts that includes for each of the plurality of target hosts, obtaining a type of operating system (OS) to be provisioned on the target host, populating an OS profile model based on the type of operating system obtained, activating a deployment service based on the type of operating system, and provisioning the target host using a deployment service and the OS profile model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07600005&OS=07600005&RS=07600005
owner: Sun Microsystems, Inc.
number: 07600005
owner_city: Santa Clara
owner_country: US
publication_date: 20051123
---
A data center is a facility that physically houses various equipment such as computers servers e.g. web servers application servers database servers switches routers data storage devices load balancers wire cages or closets vaults racks and related equipment for the purpose of storing managing processing and exchanging data and information between hosts. A host typically corresponds to a computer system a processor with associated physical memory or a processor with shared memory and or resources. Data centers also provide application services and management for various data processing functions such as web hosting internet intranet telecommunication and information technology.

Data centers are a unique environment because all the machines and services provided to clients are within a controlled and well monitored environment. Specifically data centers are managed by one or more administrators. In order to provide the application services and data processing functions software is installed by an administrator on each host of the data center. Typically installing the software on each host is performed remotely. Provisioning is the act of installing the software. One type of software that is typically provisioned is the operating system OS on bare hardware.

Provisioning an OS in a data center is challenging because data centers are typically large and heterogeneous with respect to different operating systems e.g. Solaris developed by Sun Microsystems Inc. a trademark of Sun Microsystems Inc. located in Santa Clara Calif. Redhat Linux developed by Red Hat Inc. a registered trademark of Red Hat Inc. located in Raleigh N.C. SUSE Linux developed by Novell Inc. a registered trademark of Novell Inc. located in Waltham Mass. Windows developed by Microsoft Corporation a registered trademark of the Microsoft Corporation located in Redmond Wash. etc. and types of hosts i.e. different hosts use different hardware .

Further each OS has a separate provisioning program that orchestrates the provisioning of the OS on the host. Each provisioning program typically has different input parameters configuration file formats and configuration steps. Accordingly provisioning the different types of operating systems requires the administrator to be knowledgeable about the different input parameters configuration file formats and configuration steps.

A system for provisioning a plurality of heterogeneous operating systems on a plurality of target hosts comprising an operating system profile model for maintaining operating system information about a selected operating system OS of the plurality of heterogeneous operating systems a plurality of pluggable hardware services accessing the operating system profile model and configured to for a target host of the plurality of target hosts determine the selected OS of the plurality of heterogeneous operating systems activate a deployment service associated with the selected OS and provision the selected OS of the plurality of heterogeneous operating systems on the target host using the OS profile model and the deployment service.

A method for provisioning a plurality of heterogeneous operating systems on a plurality of target hosts comprising for each of the plurality of target hosts obtaining a type of operating system OS to be provisioned on the target host populating an OS profile model based on the type of operating system obtained activating a deployment service based on the type of operating system and provisioning the target host using a deployment service and the OS profile model.

A data center for provisioning a plurality of heterogeneous operating systems on a plurality of target hosts comprising a server executing an OS provisioning framework configured to for each of the plurality of target hosts obtain a type of operating system OS to be provisioned on the target host populating an OS profile model based on the type of operating system obtained activate a deployment service based on the type of operating system and provision the target host using a deployment service the OS profile model and code for the OS and a boot and install server connected to the server executing an OS provisioning framework configured to store the code for the OS for the target host.

Other aspects and advantages of the invention will be apparent from the following description and the appended claims.

Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency.

In the following detailed description of embodiments of the invention numerous specific details are set forth in order to provide a more thorough understanding of the invention. However it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in detail to avoid unnecessarily complicating the description.

In general embodiments of the invention provide a unified method and apparatus for provisioning heterogeneous operating systems on heterogeneous hardware. Specifically embodiments provide a single resource for an administrator to provision multiple types of operating systems across a data center. More specifically embodiments of the invention provide an abstraction for OS provisioning.

The centralized server in one or more embodiments of the invention corresponds to a unit for providing an interface to the administrator not shown . The centralized server may correspond to a web server that includes such functionality as the ability to issue web pages or web applications to the administrator an application executing on the computer of the administrator or any other functionality which provides an interface to the system. The interface may be a command line interface or a graphical user interface.

Connected to the centralized server is a provisioning unit . In one or more embodiments of the invention the provisioning unit corresponds to a component that includes functionality to manage the provisioning of the target hosts e.g. target host target host w . In one or more embodiments of the invention the provisioning unit corresponds to one or more servers connected to the target hosts e.g. target host target host w . The provisioning unit is described in more detail below in .

The target hosts e.g. target host target host w corresponds to a group of computers on which the provisioning may be performed. Typically multiple different operating systems are provisioned on the target hosts e.g. target host target host w . For example one group of target hosts e.g. target host target host w may execute Solaris while another group may execute Windows . Accordingly target host may not execute the same OS as target host w . Further groups of target hosts e.g. target host target host w that execute the same OS may or may not use the same configuration settings.

In one or more embodiments of the invention target hosts e.g. target host target host w may be composed of heterogeneous hardware systems. For example target may correspond to a target managed through Sun Microsystems Inc. Intelligent Platform Management Interface IPMI and target host w may correspond to a target managed through Hewlett Packard Integrated Light Out Management ILO etc. Alternatively the target host e.g. target host target host w may be of a generic type in which the hardware is individually specified by an administrator not shown .

Those skilled in the art will appreciate that the target hosts e.g. target host target host w provisioning unit and centralized server may be connected in virtually any manner. Further in one or more embodiments of the invention the provisioning unit and the target hosts e.g. target host target host w are typically behind a firewall. The centralized server may or may not be behind the same firewall as the provisioning unit and the target hosts e.g. target host target host w . Typically the provisioning unit is maintained with or without the centralized server at a data center that maintains the target hosts e.g. target host target host w .

Specifically the serial terminal controller includes functionality to allow for remote viewing of the output of a serial terminal. The power controller includes functionality for turning on and off the host. The boot controller includes the functionality to allow for remote loading of programs. The graphical console controller includes functionality to allow for remote viewing of a graphical console. The device discovery controller includes functionality to allow for remote adding and configuring new devices on the target host .

Those skilled in the art will appreciate that there are multiple types of controllers e.g. serial terminal controller power controller boot controller graphical console controller device discovery controller controller z of which only a few are shown in . Further one or more of the aforementioned functionalities provided by the different controllers e.g. serial terminal controller power controller boot controller graphical console controller device discovery controller controller z may be performed by a single controller. For example the Automatic Light Out Management ALOM controller developed by Sun Microsystems Inc. performs the functions of the power controller boot controller and serial terminal controller .

Continuing with the provisioning unit includes boot and install servers an OS profile model a target host model and an OS provisioning framework . Each of the aforementioned components is described in more detail below.

In one or more embodiments of the invention the boot and install servers correspond to the servers which have the packages for the operating systems and allow for remote installation of a particular OS. Specifically the boot and install servers correspond to servers that contain the images for the operating system which include packages and files from which the operating system on the host is constructed. For example the boot and install servers may correspond to a Solaris JumpStart Red Hat KickStart Windows Remote Installation Services RIS Hewlet Packard Unix or other similar boot and install servers. In one or more embodiments of the invention the packages may be obtained from the manufacturer of the OS.

Continuing with the OS profile model corresponds to an abstract model for the OS. Specifically in one or more embodiments of the invention the OS profile model describes the OS and the OS configuration required on the target host . More specifically the OS profile model includes the meta data for the configuration parameters for each of the OS profiles.

The target host model corresponds to an abstract model for the target host. Specifically in one or more embodiments of the invention the target host model captures the capability of the target host such as the MAC address IP address remote network management capabilities supported protocol information etc.

In one or more embodiments of the invention connected to the target host model the OS profile model and the boot and install servers is an OS provisioning framework . In one or more embodiments of the invention the OS provisioning framework allows for a single user interface to provision multiple heterogeneous operating systems. Those skilled in the art will appreciate that the OS provisioning framework may execute on the same server as any of the boot and install servers or on different servers. The OS provisioning framework includes a deployment service e.g. deployment service deployment service n a pluggable network and hardware service e.g. Dynamic Host Configuration Protocol DHCP service boot service power service console service and a resource abstraction layer in accordance with one or more embodiments of the invention. Each of the aforementioned components is described below.

In one or more embodiments of the invention the deployment service e.g. deployment service deployment service n includes functionality to orchestrate the provisioning of a particular OS. Specifically in one or more embodiments of the invention the deployment service e.g. deployment service deployment service n allow for the same basic steps to be used when provisioning each type of OS. Further deployment service may correspond to a service for provisioning Solaris whereas deployment service n may correspond to a service for provisioning Linux . In one or more embodiments of the invention the deployment service e.g. deployment service deployment service n are based on a well defined application programming interface API . The API may be invoked from a Command Line Interface CLI or other such software entities. By using a well defined API the OS provisioning framework is easily extendable and modifiable through additions and modifications to the pluggable deployments services.

Continuing with the OS provisioning framework of the pluggable hardware services e.g. DHCP service boot service power service console service interact with the OS profile model and the target host model to provide a hardware abstraction to the deployment service e.g. deployment service deployment service n . Specifically in one or more embodiments of the invention the pluggable hardware services e.g. DHCP service boot service power service console service may be accessed by the API used by the deployment service e.g. deployment service deployment service n . Each of the services is described in more detail below.

In one or more embodiments of the invention the DHCP Service includes functionality to provide a communication link between the target host and the OS provisioning framework . In one or more embodiments of the invention the DHCP service interacts with a DHCP server . Specifically the DHCP service describes the minimal DHCP requirements for provisioning using the various DHCP configurations required for different operating systems. The DHCP server includes functionality to serve the target host with an IP address for the target host.

Continuing with the boot service power service and console service include functionality to use the information stored in the target host model to provide various services to the deployment service e.g. deployment service deployment service n . The boot service includes functionality to control how the target host boots e.g. from a local disk storage area network SAN disk network etc. . The power service includes functionality to manage the power status of the target host . The console service includes functionality to obtain the console output from the target host .

Those skilled in the art will appreciate that because the pluggable hardware services e.g. DHCP service boot service power service console service are pluggable the pluggable hardware services e.g. DHCP service boot service power service console service may be modified and extended without interrupting the OS provisioning framework .

Continuing with the OS provisioning framework also includes a resource abstraction layer . The resource abstraction layer includes functionality to support heterogeneous target hosts . Specifically in one or more embodiments of the invention the resource abstraction layer includes functionality to support standard network management protocols and provide APIs that may be used to support the pluggable hardware services e.g. DHCP service boot service power service console service . Further in one or more embodiments of the invention the resource abstraction layer may be extended to support new hardware i.e. target host with new protocols.

In one or more embodiments of the invention as shown in the model of the server platform includes information for OS provisioning activities such as the architecture MAC address globally unique identifier GUID disk size disk controller etc. The model of the controllers i.e. the serial terminal controller the power controller the boot controller the graphical console controller the device discovery controller controller z correspond to information about the controllers e.g. serial terminal controller power controller boot controller graphical console controller device discovery controller controller z of . Specifically in one or more embodiments of the invention the model of the controller includes metadata information for using the controllers. For example the information may include connectivity information such as whether connection is through serial access or IP based access e.g. telnet SSH secure shell protocol SNMP simple network management protocol HTTPS hypertext transfer protocol secure authentication set information e.g. user name password protocol version number port number etc. Those skilled in the art will appreciate that because only the power and boot controllers are required for provisioning the model may or may not include all of the controllers of the target host in accordance with one or more embodiments of the invention.

Further those skilled in the art will appreciate that there are multiple ways to model the target host model. For example the model shown in may be represented by an information model shown in . Specifically shows a schematic diagram of an information model representation of a target host model for provisioning heterogeneous operating systems in accordance with one or more embodiments of the invention. In one or more embodiments of the invention the target host model shown in includes information about attributes denoted by the double box and tags.

Further as shown in and one or more embodiments of the invention may use information symbols such as etc. In the information model shown each symbol refers to the component s represented by the subtree and or attributes directly to the right of the symbol. Each symbol is described below.

A indicates that the component is optional but not repeatable. Specifically the component may exist only once if at all. A indicates that the component represented by the subtree must appear one or more times. A indicates that the component represented by the subtree may exist any number of times.

Returning to the host model may include information about the host such as attributes defining the host e.g. a name of the host the type of host the architecture and a globally unique identifier GUID a description information about the Ethernet ports with an IP address and or MAC address of the Ethernet port local disk information with attributes about the local disk e.g. type of disk size of disk disk controller information a name for a group of physical storage devices associated with the local disk target Logical Unit Number LUN etc. and information regarding network management .

In one or more embodiments of the invention the information about the network management may include attributes describing the network management e.g. interface type of network management a description hardware abstraction layer port and whether the network management interface provides power service boot service and or console service information to access the network management interface with user identifier ID and password network information to access the network management terminal server information System Controller SC for the platform i.e. platform SC information . The network information may include attributes to access the network such as IP address and protocol information for accessing the network as well as access information with user ID and password .

The terminal server information may include attributes describing the terminal server e.g. type of terminal server a version of terminal server a path to the terminal server hardware abstraction layer port of terminal server etc. access parameters for accessing the terminal server such as user ID and password for the terminal server and network information e.g. attributes defining an IP address and protocol for accessing the network access parameters such as user ID and password .

The platform SC information may include attributes defining the platform SC e.g. type of platform SC a version of platform SC a path to the platform SC hardware abstraction layer port of platform SC etc. access parameters including a user ID and password for the platform SC and network information e.g. attributes defining an IP address and protocol for accessing the network access parameters such as user ID and password .

In one or more embodiments of the invention the target host model described in is fully adaptable. Specifically components may be added or removed without affecting the remaining components in the target host model.

Using the same symbols as shows a schematic diagram of an OS profile model for provisioning heterogeneous operating systems in accordance with one or more embodiments of the invention. As shown in the OS profile model may include attributes of the OS e.g. a name for the OS profile model the OS the type of provisioning software specific to the OS and a version number a description of the model indication whether the provisioning should be monitored whether the boot server should be prepared and specific components for the OS provisioning from a Redhat Linux KickStart boot server a Windows RIS server a Solaris JumpStart server or a SUSE Linux AutoYast boot server not shown .

Each of the OS specific components may include information about the specific boot server e.g. boot server boot server boot server such as the name e.g. name name name of the boot server the subnet e.g. subnet subnet subnet for the boot server access parameters e.g. protocol user ID password etc. e.g. access access and access for accessing the boot server. Further the information specific to the boot server may also include directory information such as the directory to monitor e.g. monitor directory monitor directory monitor directory the root directory used by the trivial file transfer protocol TFTP server e.g. TFTP root directory TFTP root directory TFTP root directory the directory that has the OS for distribution e.g. product directory product directory product directory path of temporary standard input format SIF directory e.g. temporary SIF directory temporary SIF directory temporary SIF directory path of the boot and install server configuration scripts directory e.g. scripts directory scripts directory scripts directory and an active directory e.g. active directory active directory active directory .

Further in one or more embodiments of the invention each OS may be further specified by other components. For example the Redhat Linux KickStart may also include information about the pre boot execution environment PXE configuration file location i.e. PXE configuration file a PXE boot file location and a kick start file location . The Windows RIS may include information about the location of the software information file location and the location of the client installation wizard CIW directory . The Solaris JumpStart server may include information about the product location the boot media location the Solaris JumpStart configuration file SYSIDCFG directory location the Solaris JumpStart directory location the Solaris boot file location and the Solaris network bootstrap program nbp boot file location . Further each OS may further include the OS install time configuration values. For example solaris config contents linux config contents and SIF file contents specify the OS install time configuration values for Solaris Linux and Windows OS installation. The OS install time configuration values may include information such as password timezone locale disk information file system information network information such as NIS DNS and other install time information. Those skilled in the art will appreciate that the OS install time information varies with each type of OS being installed.

In one or more embodiments of the invention the OS model is easily extendable to allow for provisioning operating systems not specified in by plugging in the different attributes and tags associated with virtually any OS.

If a target model does not exist for the type of target then the target model is created and populated based on the type of target Step . In one or more embodiments of the invention the target model is populated by an administrator accessing a user interface UI graphical or command line . Once the target model exists and is populated then the type of OS is obtained Step . In one or more embodiments of the invention the type of OS may also be specified by an administrator accessing the UI.

Next in one or more embodiments of the invention a determination is made as to whether an OS model exists for the type of OS Step . The determination of whether the OS model exists for the type of OS may be determined in a similar manner to determining whether the target host model exists. If the OS model does not exist then the OS model is created and populated based on the type of OS Step . Once the OS model exists then the deployment service for the type of OS is activated Step . Specifically the deployment service is initiated and configured to provision the OS. Accordingly the OS is provisioned on the target host using the deployment service the OS model and the target host model Step .

Those skilled in the art will appreciate that multiple target hosts may be provisioned simultaneously. Specifically a user may initially specify several target hosts to provision. Accordingly in one or more embodiments of the invention the framework may provision the multiple target hosts concurrently. Alternatively the multiple target hosts may be specified by the user sequentially and provisioned sequentially.

Initially the boot and install server is configured using the OS model Step . Next trace and monitor of OS installation on the target host is initialized Step . After initializing the tracing and monitoring of the OS installation the target host is turned off using the power service and the target host model Step . Specifically in one or more embodiments of the invention the power service uses the target host model to determine how to turn off the target host. Next the DHCP parameters are set on the target host using the target host model Step . Setting the DHCP parameters may include for example setting communication parameters and assigning a temporary IP address to the target host. After setting the DHCP parameters then the boot mode is set on the target host using the boot service Step . In one or more embodiments of the invention the boot mode is set to boot from the network rather than locally on the host.

Continuing with a determination is made whether output of the provisioning is requested Step . Specifically output of the provisioning may be requested by an administrator performing the provisioning. The administrator performing the provisioning may request output to determine whether all of the steps of the provisioning are performed correctly. If output is requested then the output of the provisioning of the target host is initialized using the information provided in the target host model and the console service Step .

Next regardless of whether output is requested the target host is powered on using the target host model and the power service Step . Specifically similar to powering off the target host the powering service uses the target host model to determine how to turn on the target host. After powering on the target host the initial boot kernel is obtained at the target host from the boot and install server Step . In one or more embodiments of the invention once the boot kernel is obtained at the target host then provisioning is completed at the target host using the boot and install servers Step . Next the DHCP parameters specific to the target host are removed from the DHCP service Step . Specifically the code for the OS for the target host may be transferred to the target host and provisioned on the target host. After completing the OS provisioning then the target host is booted from disk using the boot service and the target host model Step .

Once the target host is executing after being booted then a determination is made as to whether output from the target host is being obtained Step . Output from the provisioning may be obtained by accessing the target host model and the console service. If output of the target host is being obtained then because the provisioning is completed and the host is executing the output is stopped using the console service and the target host model Step . Finally regardless of whether output is being obtained the tracing and the monitoring of the OS installation is stopped on the target host Step . In one or more embodiments of the invention after stopping the tracing and monitoring of the OS installation the boot and install servers may be un configured and the administrator informed of the completion of the provisioning not shown .

The invention may be implemented on virtually any type of computer regardless of the platform being used. For example as shown in a computer system includes a processor associated memory a storage device and numerous other elements and functionalities typical of today s computers not shown . The computer may also include input means such as a keyboard and a mouse and output means such as a monitor . The computer system is connected to a local area network LAN or a wide area network e.g. the Internet not shown via a network interface connection not shown . Those skilled in the art will appreciate that these input and output means may take other forms.

Further those skilled in the art will appreciate that one or more elements of the aforementioned computer system may be located at a remote location and connected to the other elements over a network. Further the invention may be implemented on a distributed system having a plurality of hosts where each portion of the invention e.g. deployment service OS profile model resource abstraction layer centralized server etc. may be located on a different host within the distributed system. In one or more embodiments of the invention the host corresponds to a computer system. Alternatively the host may correspond to a processor with associated physical memory. The host may alternatively correspond to a processor with shared memory and or resources. Further software instructions to perform embodiments of the invention may be stored on a computer readable medium such as a compact disc CD a diskette a tape a file or any other computer readable storage device.

The present invention includes one or more of the following advantages. Specifically embodiments of the invention provide a uniform model and framework for diverse types of servers and operating systems. More specifically embodiments of the invention provide a mechanism for allowing a uniform interface for provisioning regardless of the Operating System being used. Further in one or more embodiments of the invention the target host model and the OS profile model provide a mechanism for cataloging versioning and backing up the install time parameters for tracking the OS life cycle allowing for replicating the OS installation including the configurations across hundreds of servers possibly distributed across a LAN or WAN environments. Additionally by separating the target host model and the OS profile model the same OS profile can be deployed across different hardware types if the native OS supports such hardware .

Further embodiments of the invention provide a push mechanism for installing various operating systems. Specifically provisioning an OS may be performed at a central location rather than from the target servers. Additionally embodiments of the invention provide management of full life cycle of OS provisioning by enabling full automation of the power boot and console services of a target hosts.

Further by using pluggable services and easily modifiable models embodiments of the invention are adaptable to support new operating systems new hardware different network topologies etc. Specifically embodiments of the invention use a framework that models with a generic workflow to support provisioning of heterogeneous operating systems.

Moreover because embodiments of the invention separate the models from the provisioning activity embodiments of the invention are able to provision across an existing data center rather than requiring a new data center environment.

While the invention has been described with respect to a limited number of embodiments those skilled in the art having benefit of this disclosure will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly the scope of the invention should be limited only by the attached claims.

