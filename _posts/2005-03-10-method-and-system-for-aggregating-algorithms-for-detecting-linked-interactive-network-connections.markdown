---

title: Method and system for aggregating algorithms for detecting linked interactive network connections
abstract: A method and system is provided for detecting correlated connections in an extended connection. A plurality of stepping stone detection algorithms are executed in parallel (), each of the plurality of stepping stone detection algorithms generating a result. The results are scored for each of the plurality of stepping stone detection algorithms (). A consensus attack path is generated based upon the scored results ().
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07854003&OS=07854003&RS=07854003
owner: Verizon Corporate Services Group Inc. & Raytheon BBN Technologies Corp.
number: 07854003
owner_city: Basking Ridge
owner_country: US
publication_date: 20050310
---
The present application claims priority to U.S. Provisional Patent Application No. 60 554 366 filed Mar. 19 2004 the entirety of which is incorporated by reference herein.

The invention described herein was made with government support. The U.S. Government may have certain rights in the invention as provided by the terms of contract No. N66001 00 8038 awarded by the National Security Agency NSA .

The present invention relates generally to communication networks and more specifically to the discovery of routes used by data transmitted over such networks.

Availability of low cost computers high speed networking products and readily available network connections has helped fuel proliferation of the Internet. This proliferation has caused the Internet to become an essential tool for both the business community and private individuals. Dependence on the Internet arises in part because the Internet makes it possible for multitudes of users to access vast amounts of information and perform remote transactions expeditiously and efficiently. Along with the rapid growth of the Internet have come problems caused by malicious individuals or pranksters launching attacks from within the network. As the size of the Internet continues to grow so does the threat posed by these individuals.

The ever increasing number of computers routers and connections making up the Internet increases the number of vulnerability points from which these malicious individuals can launch attacks. These attacks can be focused on the Internet as a whole or on specific devices such as hosts or computers connected to the network. In fact each router switch or computer connected to the Internet may be a potential entry point from which a malicious individual can launch an attack while remaining largely undetected. Attacks carried out on the Internet often consist of malicious packets being injected into the network. Malicious packets can be injected directly into the network by a computer or a device attached to the network such as a router or switch which can be compromised and configured to forward malicious packets onto the network.

There remains a need in the art for effective and efficient methods and systems for performing identification and attribution of network attacks.

Systems and methods consistent with principles of the invention may identify correlated connections in a network. In one implementation a plurality of stepping stone detection algorithms are executed in parallel each of the plurality of stepping stone detection algorithms generating a result. The results for each of the plurality of stepping stone detection algorithms are scored. A consensus connection is then generated based upon the scored results.

The following detailed description of the invention refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following detailed description does not limit the invention. Instead the scope of the invention is defined by the appended claims and equivalents.

Methods and systems consistent with the principles of the invention may enable the discovery of stepping stone connections in a network attack path by examining connections identified utilizing several techniques weighting and scoring the respective results and generating a consensus or accurate overall result.

Tracing an attack path through stepping stone hosts requires the discovery of an association between two connections with endpoints at that host such that these connections act as consecutive links in a chain of connections. The chain of connections between an originating or attack source and the victim form what is called an extended connection.

An extended connection is constructed by a series of individual connections linked in a pairwise fashion and related by carrying the same underlying data carried as plaintext or encrypted text serially across each connection from the originating source to the ultimate destination. A connection pair is any two adjacent connections in the extended connection.

Once an extended connection has been identified the attribution process turns to identifying two connections as related links in a larger chain of connections. Three classes of intermediate hosts may be used by an attacker to launder attack data and to obfuscate the attack path stepping stones zombies and reflectors. An extended connection employed for launching an attack may involve any type and any number of such intermediate hosts.

The simplest type of intermediate host is a stepping stone host. Such a host is compromised to the extent that the attacker can log into the stepping stone host and establish an outgoing interactive connection such as telnet rlogin remote login or ssh secure shell to the next host in the attack path. The attacker s communications are not fundamentally altered though enough may change to evade some methods of detection. For instance if one or both connections are established using ssh encryption will prevent use of any traceback method based on packet content. Processing delays in the host may also superficially alter timing of packets. An attacker will usually chain multiple stepping stones together to further screen the attack s origin.

An attacker need not deeply compromise a host to create a stepping stone. All that is needed is access to an ordinary user s privileges to log in and to make outgoing connections. Such access can be gained for instance by dictionary attacks on password files or by snooping for passwords in Internet cafes or computer labs. Root access or equivalent is rarely required though a more permanent back door could be more easily established with such privileges.

One difficulty with the detection of stepping stones is the large number of legitimate uses of extended connections. Commonly access to hosts by legitimate users from outside a network is via a trusted gateway host through which the user connects to the target host. And frequently by habit if for no other reason a user will casually connect to some other host as needed by beginning a new session from his current target host.

A zombie host may be defined as an intermediate host at which incoming communication is transformed such that the resulting outgoing communication appears to be wholly unconnected and delays measured in hours or days are introduced prior to the establishment of the outgoing communication. The attacker s incoming communication may be script and code to install a Trojan and the attack output might come days or months later say in response to a cron table entry . Another zombie may accept simple trigger commands from the attacker to execute previously planted code that issues entirely different output for instance as part of a distributed denial of service DDoS attack.

The lack of apparent relationship between the incoming attack stream and the outgoing attack data as well as the extremely long interval that may ensue between the end of one and the start of the other makes the traceback problem in the network a very difficult one. Consider the example of a DDoS attack being triggered by a timer. Once the attack is under way it is generally easy to determine the immediate source of the last link or two in the attack path. But once the zombie running the Trojan script is identified it is difficult to associate the attack output with the incoming communication that generated the attack. Since the incoming connection over which the Trojan was downloaded and installed could have existed weeks or more in the past the network retains no information about it. An investigator must examine host logs if access can be obtained and even then a cleverly written Trojan may have altered those logs when installed. Even if the DDoS attack is initiated by a packet containing a trigger command there may very likely be insufficient data to associate that trigger packet with the outgoing attack connection.

It is also possible to launder an attack through an innocent intact host operating normally by using it as a reflector. For instance an attacker logged into a host possibly as part of an attack chain may generate packets with the IP address of the ultimate attack victim forged as the source of the packets. The response packets are directed to the victim and constitute the actual attack. By bouncing such spoofed packets off a large number of normally operating reflectors massive quantities of bogus responses are directed at the victim. This attack must be detected in the network as there is no need for the attacker ever to have communicated with the reflector to set up the attack hence no evidence of the attack or any tampering can be found on the host.

Attributing an attack to a particular source or set of sources requires understanding what can happen to the packets used to perpetuate the attack as they traverse the network. The IP routing infrastructure is stateless and based largely on destination addresses the source address plays virtually no role in the forwarding of a packet to its destination other than providing a return address in the case of bidirectional communication. In this respect IP packets are essentially fire and forget types of delivery mechanisms once a packet is introduced into the network there is no need for the packet to maintain any relationship with its source. The source IP address carries no semantic of trust but it is the only clue built into the network infrastructure as to the proper source. Attackers take advantage of this property of the IP protocol by manipulating either directly or indirectly the source address of attack packets to obscure their true origin.

Stepping stone detection techniques generally attempt to determine the correlation between all pairs of connections such that the pairs related by being part of the same extended connection will have correlation scores that are higher than those that are not related. Unfortunately these techniques make several simplifying assumptions about the network that may not be valid in an operational environment. A first general assumption is that the source address is valid because TCP connections require bidirectional communication. It is true that an attacker cannot effectively use a connection especially an interactive one with a spoofed source address but this does not mean that the network is preserving the source address. Rather the source address is actively modified by the network when the source is part of a privately addressed network as one connected to the Internet via a network address translator NAT . In this case the source address is an address from the non routable private address space as defined by RFC 1918. The attacker establishes a connection from his private network through a NAT to a compromised system in the Internet possibly also within a privately addressed or corporate network where the IP addresses are not routable or not known.

A second general assumption is that connection pairs are easily stitched together to form the fully reconstructed extended connection. Consider three connections between four hosts HH HH and HH. The pair HH HH can be detected at some point where all traffic into and out of His seen. Likewise with the pair HH HH . However matching the two pairs into an extended connection assumes that given one pair the stitching algorithm knows where to find the other. The obvious clue is H s address but this suggests that there must be some global mapping of each host s address onto the data collection point handling the detection of stepping stones for that host. Outside of maintaining such a mapping the easiest and most effective way to find the data collection point is if those points are closely tied to the routing infrastructure since the mapping of hosts onto routers is fairly well understood.

Network hosts may be configured to send and receive information according to a communication protocol such as TCP IP UDP etc. Although not specifically shown some hosts may be configured to generate a route for information to a specified destination. Other hosts may be configured to send the information according to a previously determined route. The network hosts may communicate via discrete chunks of data that are transmitted by sending hosts . A chunk may be any individually detectable or distinguishable unit of data such as a packet or grouping of packets. A monitoring device such as tap may determine when a chunk starts and ends. It should be clearly understood that a chunk of data need not exactly correspond to a packet of data. A chunk may represent part of a packet e.g. a fragment or an ATM cell of an AAL5 PDU or multiple packets e.g. two packets concatenated . It should be understood that without loss of generality the aforementioned chunks of data are referred to as packets even if a packet may be fragmented or may comprise several smaller data units such as ATM cells.

Packets may be transmitted by sending hosts . A sending host may be the most recent host to transmit a particular packet e.g. host n in if the tap intercepts a packet transmitted to host n . The sending host is not necessarily the node that originated the packet.

Network links may include electronic links e.g. wires or coaxial cables optical links e.g. fiber optic cables wireless links or any combination of such links. These links may provide a connection between two hosts e.g. hosts n and n . It may be possible to physically tap into these links to observe the information carried on them.

Network tap is a device that may intercept packet transmissions on the network . Tap may include a physical connection to a corresponding link and circuitry to detect packets on link . Tap may intercept packets at a physical layer a link layer a network layer or at higher layers of network being monitored. The layer at which interceptions occur is within the abilities of those skilled in the art and may be chosen based on knowledge of and access to network links . Tap may include for example a transceiver for sensing the packets of data and may also include other circuitry e.g. clock circuitry for determining times of arrival of the packets. Tap may include a processor for computing any other information associated with the packets such as information contained within a header of the packet e.g. identity of a sending host and or receiving host though IP addresses and port numbers .

Tap may observe traffic on link between hosts n and n. Tap may record information about all the packets that it observes in a tracefile. The tracefile may contain a minimum amount of information for each observed packet. For example the information may include the time the packet was seen and the identity of the sending host of the packet. The identity of sending host may include for example its IP address and the port over which the packet was sent. If available the tracefile may also include additional information about the destination host as well as insight into the contents of the packet. For example other information that may be available for storage in the tracefile is the location of tap along the link relative to the hosts at either end of link .

Tap may not capture all traffic on link . For example tap may occasionally make an error and mistakenly believe it has seen a packet when no packet was sent e.g. due to bit errors on network . If transmissions are missed false transmissions are detected or if a sending host is misclassified these events may be viewed as adding noise to the signals generated by tap . Other sources of noise in the signal generated by tap may include interference from other signals e.g. packets belonging to another flow or jitter in timing due to sharing of a bottleneck among multiple flows .

Tap may listen passively and may not participate in network at the MAC or higher layers. In some cases for example with 802.3 LANs it is possible for the tap to snoop at the MAC layer and extract some information about higher layer protocols. In the case of SONET networks however little or no information may be available about the MAC or higher layer protocols. Such passive listening may also be referred to as covert information collection.

Although a single tap is shown in network may contain many taps which may be interconnected thereby enabling effective knowledge collection for a variety of network links . Taps may also work independently using purely local information. Distributed algorithms may allow sharing of information among taps . In such a case taps may have a globally synchronized clock that allows information from multiple taps to be combined. A clock resolution of the taps may be finer than the data sampling resolution of the taps so that information about transmissions e.g. the start time duration inter transmission gap and even the presence of short transmissions is not missed.

A tap or a network of taps consistent with the invention may store the transmissions that it detects for a predetermined amount of time. For example the round trip time of a transport layer flow cannot be determined if the history that may be stored at tap is less than one roundtrip time. The total volume of data that is stored depends for example on the capacity of the link and the maximum round trip time of flows seen on the link . Taps may assign a unique identifier to each sending host for example based on the address of the gateway. Taps in the network may assign the same unique identifier to any given sending host .

In one implementation consistent with principles of the invention an attack attribution system is provided that is comprised of several algorithms including one master function that monitors each of the individual algorithms relating to IP traceback and stepping stone discovery and aggregates their results into a composite score. In this manner advantages and disadvantages inherent in the algorithms may be exploited or mitigated.

The master function operates to aggregate the results of these algorithms into a single score to be used to determine the correlated pairs of connections passing through this detection point. It has been determined that no stepping stone detection algorithm can issue a result with complete certainty. That is there is some degree of likelihood associated with each answer. Further each of these algorithms uses its own method for determining a likely connection pair. Some use thresholds some use probabilities and some make declarative statements. The master function assimilates these answers gives them the proper weight and constructs an accurate representation of the consensus.

Regarding stepping stone detection algorithms may use different characteristics to detect the stepping stones and in doing so are advantageous in some circumstances and not effective in others. For example some algorithms use the content of the connection for correlation and others use the timing of the constituent packets. It has been found that content based approaches are not effective for encrypted connections and timing based approaches are susceptible to jitter and other evasive techniques. Consequently no single algorithm has been determined to be universally effective.

Accordingly stepping stone algorithms generally have certain advantages and disadvantages making them more or less suitable for certain types of networks or network traffic. Generally there are three axes that define the space within which the algorithms fit 1 how much data is required for the algorithm to produce a usable result 2 whether the algorithm is content based or timing based and 3 how resistant the algorithm is to evasive techniques.

In accordance with the present implementation a stepping stone detection system is utilized comprised of several algorithms with one master function that monitors each of the individual algorithms and aggregates their results into a composite score. In this way the advantages of each algorithm are exploited and the disadvantages of the selected algorithms are mitigated.

In one implementation consistent with principles of the invention the master function may aggregate the results of these algorithms into a single score to be used to determine the correlated pairs of connections passing through this detection point. In a further implementation this score may be a table of probabilities indicating the likelihood that a given connection represents a stepping stone. As stated above no known stepping stone detection algorithm can issue a result with complete certainty there is some degree of likelihood associated with each answer. Accordingly the master function of the present invention assimilates these answers gives them the proper weight and constructs an accurate representation of the consensus.

Because included algorithms may be perform based on content correlation these algorithms may not detect stepping stones used in encrypted connections while other typically timing based algorithms may. Additionally some algorithms are claimed to be resistant to evasive techniques while others may not be as resistant. In one implementation consistent with principles of the invention the master function considers the relative strengths of algorithms when aggregating their results so as not to discount the presence of a stepping stone when consensus cannot be achieved.

Additionally it has been determined that reverse packet streams may also show strong evidence of connection correlations. Since a connection s forward and reverse packets can easily be identified it has been found that correlations on both the forward path and the reverse path add to the overall strength of the correlation result. Consequently in one implementation consistent with principles of the invention the master function includes this determination when identifying stepping stones.

Additionally the stepping stone detection architecture may consider the placement of the detection systems on the network. It has been found that most hosts are not multi homed and therefore use a single identifiable router for all incoming and outgoing traffic. This means that the router serving a host acting as stepping stone will see the traffic for both connections in the connection pair. Given that the router is the only sure point of commonality for the traffic it may be an appropriate location for stepping stone detectors referred to as taps in . In one implementation consistent with principles of the invention tap or algorithm location may be factored into the weighting or adjusting process. For example timing algorithms have been found to be more successful if they monitor the packets reasonably close to the stepping stone host in which case the timing correlation will be more evident.

As an additional example consider an indirect stepping stone where H1 talks to H2 H2 talks to H3 and H3 talks to H4 but where only traffic for H1 and H4 are monitored by detection algorithms. It such a scenario H1 and H4 may be correlated even though they may have one or more stepping stone hosts between them thus indirect . Detectors or algorithms placed in better locations will pick up the intervening stepping stones. Conversely for detectors that cannot be placed so that they detect the intervening stepping stones some algorithms may be applied that are better at doing indirect correlation than others e.g. content based algorithms .

The following stepping stone detection techniques are presented for exemplary purposes as potentially included within the master function implementation described above. It should be understood that one skilled in the art may implement any suitable method for detection stepping stones.

Host based and network based techniques Some techniques require being present on the actual host that is the stepping stone. These techniques suffer from deployment scalability and trust problems but are best positioned for detecting the chaining of connections. Network based techniques examine traffic streams and attempt to pull from the flow of packets enough data to surmise the existence of a stepping stone host somewhere on the network.

Proactive vs. reactive detection Proactive techniques continuously and without being prompted attempt to identify the presence of stepping stones in the traffic they are monitoring. Reactive techniques are driven by the occurrence of certain specific events.

Real time vs. off line analysis It is possible for some techniques to issue detection results within a small amount of time of the existence of the stepping stone. These techniques calculate the probability of correlation faster than the occurrence of the events they are correlating. Other techniques require post mortem analysis either because they are computationally expensive or the data collection is too distributed.

Passive vs. active monitoring Passive monitoring techniques examine the events traffic or otherwise without causing additional events or manipulating those that naturally occur. Active monitoring allows the introduction of artifacts such as markers in the packets or in the data within the packets in order to detect the presence of stepping stones.

Once the score or result has been normalized it is next identified whether any semantic differences require the score to be discounted or emphasized act . More particular specifics relating to the type of stepping stone detection technique applied and the type of connection being monitored indicate a potential source of error or skewed results. For example where a given stepping stone detection technique uses any form of content based detection scores from such algorithms are discounted for encrypted connections. In an encrypted connection the content of a transmission through a host is modified through the encryption process rendering content correlation schemes of reduced value. This may be true for any algorithm which measures a feature that shows up for some connections but not others and another algorithm that measures those not picked up by the first.

Once any semantic elements are identified the normalized score is adjusted if necessary act . At this point it is determined whether all applicable or available detection results have been considered act . If not the process continues to act where the next available result is received. At this point the process returns to act for normalization and adjustment.

Once all detection results have been normalized and adjusted the results are aggregated to generate a consensus score for each connection act . In one implementation consistent with principles of the invention a simple average is performed for each of the available scores to produce a single score for each connection. However it should be understood than any suitable averaging or combining scheme may be used. Once the consensus score has been generated the process continues to step of . In this manner an attack graph incorporating a plurality of stepping stone detection techniques may be generated to more accurately represent an attack s likely path through a network.

Methods and systems consistent with the principles of the invention may discover stepping stones within an attack path topology by examining results from multiple detection algorithms. The results are aggregated using defined weighting to maximize the benefits of each algorithm and mitigate the disadvantages.

The foregoing description of preferred embodiments of the invention provides illustration and description but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations will be apparent to those skilled in the art in light of the above teachings or may be acquired from practice of the invention.

Moreover the acts in need not be implemented in the order shown nor do all of the acts need to be performed. Also those acts which are not dependent on other acts may be performed in parallel with the other acts.

No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise. The scope of the invention is defined by the claims and their equivalents.

