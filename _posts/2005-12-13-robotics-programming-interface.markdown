---

title: Robotics programming interface
abstract: A programming interface for a hardware system includes an embedded layer for programmatic access to a physical realization of hardware, a simulation system for simulation of the hardware, and a diagnostics engine that analyzes and compares feedback data from the simulation system and the physical realization. The programming interface may be usefully employed, for example, in the design, purchase, and deployment of robotics for semiconductor manufacturing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07890194&OS=07890194&RS=07890194
owner: Brooks Automation, Inc.
number: 07890194
owner_city: Chelmsford
owner_country: US
publication_date: 20051213
---
This invention relates to application programming interfaces for robotic systems and more particularly interfaces that optionally share control of simulated and physical systems.

Computer simulation has long been used in a variety of fields to predict and evaluate behavior of physical systems prior to incurring the cost of physically realizing such systems in electromechanical form. While simulation has improved with increases in computational power little has been done to systematically provide simulation tools to physical system users such as design engineers or end users of complex electromechanical systems such as manufacturing robotics systems. There remains a need for improved access to simulation technologies in commercial and design settings. A need also exists for simulation systems that operate effectively in real time such as during operation of a machine.

A programming interface for a hardware system may include an embedded layer for programmatic access to a physical realization of hardware a simulation system for simulation of the hardware and a diagnostics engine that analyzes and compares feedback data from the simulation system and the physical realization. The programming interface may be usefully employed for example in the design purchase and deployment of robotics for semiconductor manufacturing. In embodiments the embedded layer and the simulation system operate simultaneously allowing real time simultaneous access to tools for computer simulation e.g. for diagnostic purposes for simulating activities of a machine or the like and tools for physical control.

Described below is a programming interface for simulation optionally including virtual reality simulation diagnosis and control of a machine which may be manufacturing system such as a robotic manufacture system and more particularly may be a robotic manufacturing facility for semiconductor manufacturing such as vacuum based manufacturing. While such a system may be usefully employed in semiconductor manufacturing and the design purchase and use of robotic systems therefore it will be appreciated that the inventive concepts disclosed herein are not limited to semiconductor manufacturing robotics. Rather the concepts disclosed herein have wide applicability to any systems that are amenable to simulation and include a control interface with command outputs and sensor inputs or feedback. This may include for example food processing systems manufacturing systems automated warehouse management or any other systems with similar characteristics and all such variations and alternative uses are intended to fall within the scope of this disclosure.

The control may include hardware and or software to drive the motors of the various arms and may include a data storage facility such as a memory to record path motions such as in a path motions file as well as recording other operation data for the robotics system . The control may be connected to a base that may be shaped and sized to aid in the positioning of the arms and the movement and activation of the end effector in for example a manufacturing process. The base may additionally include various motors for effecting movement of the arms and end effector . Although three arms are illustrated it will be appreciated that fewer or more arms each of varying lengths may be employed with the robotic systems described herein. Multiple arms such as those depicted in permit the illustrated robotic arm to reach around or over other objects and to extend up to the full length of the combined arms . In addition to arms the base or some other portion of the robotic system may include actuators for linear or other vertical horizontal or other planar motion. In embodiments positions of other robotic components such as wheels gears carts drive mechanisms cameras sensors and the like may be controlled in a manner similar to the arms .

In embodiments the end effector may provide for manipulation of a tool or work piece such as a wafer in a semiconductor manufacturing process. The end effector may include for example a gripper a pincer a fork a tray a platform a finger a nozzle a vacuum grip a tumble gripper a passive centering gripper or any other tool or tools that might be useful in the robotic system . The end effector may for example be used to move or grab objects within a manufacturing process. Other components that may be used within the robotic system include for example a valve an arm a multi link arm a door a seal an elevator a conveyer a belt a chain a cart or the like.

The arms of the robotic system may be modeled and controlled for example using equations of motion such as inverse kinematics IK equations that describe the motion of a feature such as a multi armed device in a coordinate system. Generally a set of equations may be established that describe each sub part of a machine such as a robot based on the dimensions of the machine and its degrees of freedom such as its ability to translate to rotate or to pivot about one or more points of pivot. IK equations may be used for example to predict the placement of an end point of a device based on the motion of the movable components or predict the motion of the movable components based on the position of the end point.

It will be appreciated that while shows a number of robotic arms that can be modeled as an IK device any number of other types of components may also or instead be included in the robotic system . For example a semiconductor wafer handling system may include chemical vapor deposition components etching components lithography components vacuum creation and monitoring components vacuum isolation valves heating or cooling systems conveyers elevators entry and exit control e.g. opening closing and vacuum sealing doors or other ports cleaning systems and or other automated or human inspection systems.

Further processing tools may be chained together into linear or other clusters for various processing steps. In such a system the robotics system may in addition to controlling a variety of process steps and parameters manage physical movement of a wafer from tool to tool and through buffer stations if any.

The robotic system may also include one or more sensors . Sensors may be used for example to track the position of a work piece or the operating environment of the robotic system . Thus for example the sensors may include temperature sensors e.g. ambient temperature process temperature work piece temperature and so on atmospheric pressure sensors motion sensors proximity sensors weight sensors light sensors voltage sensors sound sensors and so on. The sensors may detect the presence of or concentration of a gas or other substance within the process environment. The sensors may employ a variety of techniques for detecting position and other parameters such as optical beams with e.g. emitter detector beam paths infrared RF sonar capacitive and or magnetic sensing techniques or other imaging and sensing techniques. The sensors may detect a state of a component of the robotic system or a work piece such as a position of direction of or distance to a work piece or a distance to an obstruction a valve status a seal status a door position or a diagnostic state e.g. okay malfunctioning etc. . More generally the sensors may employ any suitable technology for gathering sensor data consistent with the use of the robotic system . In one embodiment one or more of the sensors may be sealed within a processing chamber and communicate with the control through a wireless data control link such as IEEE Standard 802.11b or 802.11g.

As the foregoing examples illustrate a wide number of components sensors and actuators may be employed with the robotic system described herein and all such components sensors and actuators are intended to fall within the scope of this disclosure.

The external programming environment may include for example a .NET object layer for user with Microsoft s NET software development platform. The .NET framework offers a development environment for Microsoft Windows and web applications as well as more atomic components and web services. While the NET framework is one useful programming paradigm for deploying services and various Internet and intranet applications it will be appreciated that other environments may also or instead be usefully employed with the robotics systems described herein. For example a distributed computing environment may be supported by Java EE from Sun or Component Object Model COM Microsoft s precursor to .NET. Similarly the modules may be packaged as libraries or subroutines for a standalone application or may be deployed as a service such as a web service such as in a services oriented architecture or through a web accessible interface. All such software implementations as well as variations and combinations thereof are intended to fall within the scope of this disclosure.

The application programming interface API may communicate with the programming environment using for example data messages a TCP packet stream or any other message oriented connection oriented serial or other communications protocol. The API serves as a programming interface for a simulation environment such as the simulation module controller for hardware such as the hardware module and a diagnostic system such as the diagnostic module . In one embodiment the API exchanges data messages with the .NET object layer of the external programming environment . More generally the API may include any set of definitions of the ways an external computer system e.g. from the external programming environment communicates with the internal functional modules of the architecture e.g. the modules presented by the API . Thus any predefined programmatic interface may be used as the API of the architecture provided the API may be suitably adapted to the external programming environment on one hand and the simulation module the diagnostics engine and the hardware module on the other hand.

In one aspect the API may accommodate explicit access to each of the modules so that a programmer may for example configure refine load customize analyze or otherwise manipulate the simulation the diagnostics engine and or the embedded controller or other layers of the hardware interface. Thus for example a user may access the simulation module during a teaching phase or automated teaching phase in which robotic arms and or other parts are trained to safely operate within physical boundaries and constraints of an environment. The results may be transferred to the hardware module or retained as constraints within e.g. the diagnostic module for use in subsequent control of physically realized hardware . In another aspect the API may not differentiate between use of the simulation module and the hardware module . In this latter embodiment the API may be presented as a simple hardware controller that provides in addition to other outputs diagnostic feedback summarizing deviations from expected hardware behavior i.e. output from the diagnostic module . In another aspect the API may have two operating modes a design mode in which full access is provided and a user mode configured for distribution to end users of the robotic system .

The simulation module may simulate the physical realization of hardware along with the hardware module and any other control or data interfaces of the hardware . In an embodiment the simulation module may provide a real time input output simulation of the hardware including any embedded layer such that the input output interface of the simulation module substantially corresponds to the input output interface of the hardware module . The application programming interface may for example maintain consistency by concurrently feeding external inputs to the hardware module and the simulation module . In embodiments the simulation module may take as inputs three dimensional models from one or more three dimensional visualization modules such as commercially available modules available from SolidWorks .

A variety of simulation techniques are known and may be usefully employed with the simulation module . This may include for example physical modeling of robotic components and the environment of the robotic system . Physical modeling may embrace such features of the system and environment as temperature heat transfer wear sensors and sensor input output thermal dynamics electrical and magnetic behavior optical features vibration and resonance behaviors solid state and crystalline behavior thermal expansion and contraction statistical mechanics Newtonian physics inverse kinematics and other behavior of interconnected physical parts pressure fluid flow gas flow and so on. The simulation may also or instead employ statistical models heuristic models linear models qualitative models decision analysis models decision trees and any other modeling or behavioral techniques useful for characterizing and predicting responses. The simulation module may embrace elements of the hardware input and output such as data acquisition signal processing and the like. More generally any aspects of the hardware and hardware module useful for an accurate or real time simulation may be usefully incorporated in a simulation executed by the simulation module .

The simulation module may update using any time base or time frame. One common time interval for industrial control systems is twenty milliseconds. Thus in one corresponding embodiment real time operation of the simulation module may be satisfied by any combination of hardware and software that fully updates simulation results in twenty milliseconds or less. It will be appreciated that other faster or slower update times may be employed according to particular hardware module behaviors and the adaptability of the diagnostic module to asynchronous data from the hardware module and the simulation module . A variety of signal processing techniques are available for upconversion downconversion and interpolation of time based data to accommodate timing constraints between these modules.

In general the diagnostics module may perform diagnostic functions such as based on comparisons of the differences between operation of the robotic system as received from the hardware module and operation of the simulation as received from the simulation module . In an embodiment the diagnostic module includes a diagnostic engine for real time comparison of simulation and actual data. The diagnostics module may provide various types of analysis concerning the relationship of outputs from the hardware module and the simulation module . For example the diagnostics module may provide statistical analysis that accommodates small statistically acceptable deviations without generating a diagnostic message. The diagnostics module may also or instead provide a direct data feed of a differential between expected and actual results which may be passed through the API for independent analysis and use by an end user. The diagnostics module may also or instead provide analysis of deviations with specific error messages indicating known and unknown error conditions. This may include for example identification of malfunctioning parts malfunctioning sensors or malfunctioning interfaces. The diagnostics module may optionally embody statistical models for diagnosis and predictions of faults including qualitative reasoning methods methods based on statistical process control methods based on failure mode effects analysis or models that combine features of the foregoing as well as combine any of the foregoing with the outputs of the simulation module .

In another aspect the diagnostics module may further provide control signals to the hardware module such as based upon diagnosis of a malfunction. This may include for example a signal to shut down an individual component a group of related components or an entire system or to otherwise alter the operation of the foregoing. Shut down commands and other diagnostic derived control signals and triggers therefore may be user configured based upon for example safety risks work in progress value and or cost expected damage to one or more work pieces expected damage to equipment and so forth. The diagnostics module may also or instead provide predictive maintenance such as advance notification of component malfunctions or the identification of maintenance requirements such as filter changes battery replacements fluid changes and the like.

The hardware module may encapsulate or include an interface to the embedded layer of a physical realization of hardware . At this interface control and command data may be provided to the hardware through a direct or indirect physical connection. This may include for example low level commands such as step motor settings voltages on control lines and the like or this may include higher level commands in computer or human readable syntax which may be interpreted by the embedded layer for direct activation of hardware . This may also include data from the hardware including for example raw or preprocessed sensor data status and control feedback and the like.

In one aspect the hardware module may simplify programmatic access to the hardware by providing an abstracted command interface for use at the API level. In another aspect the hardware module may implement control systems for operation of the hardware . This may include for example discrete control algorithms implemented as look up tables or logic or analytical control algorithms implementing feedback control and so on. The API may expose optional use of such control algorithms access to parameters thereof and or direct programming of arbitrary control algorithms. Thus in general varying degrees of control abstraction and varying degrees of control intelligence and automation may be incorporated into the hardware module and into the simulation module version thereof. It will also be appreciated that the hardware module may include different design and runtime instances of a hardware controller. The design instance may for example be created in a human readable form or a dynamically re configurable form such as an interpreted programming language. The runtime instance may instead be compiled to execute on a controller associated with the hardware which may include for example one or more application specific integrated circuits microprocessors microcontrollers or other programmable devices.

The physical realization of hardware may be for example any of the robotic systems described above with reference to or more generally any hardware with a command control data and or sensor interface. User commands received through the API or internally generated commands from within the hardware module the diagnostics module or other source may be transmitted to the hardware through any suitable interconnection with the hardware module such as Ethernet RS 232 or any other direct or indirect input output network or other interconnection. Sensor data may be provided in analog or digital form and may be preprocessed by the hardware to provide e.g. calibration serialization digitization and so on.

According to the foregoing a method described herein includes providing a simulation of hardware providing a physical realization of the hardware providing a programming interface to control the hardware and interconnecting one or more of the simulation the physical realization and the programming interface in a communicating relationship. Thus a robotic system a simulation of the robotic system and a programming interface may be arbitrarily interconnected to one another. Such a method of interconnection may allow for independent programmatic access to e.g. the simulation process for programming modifications or simulated training of the system alongside independent programmatic access to the hardware controller for implementation of new control algorithms system configuration or any other purpose. This method of interconnection may also or instead permit direct comparison of simulation results and hardware sensor data in real time.

In another aspect a method according to the above description may include controlling a robotic system receiving sensor data from the robotic system concurrently executing a simulation of the robotic system in real time receiving simulated sensor data from the simulation and comparing the sensor data to the simulated sensor data.

It will also be appreciated that a wide range of software and hardware platforms may be used to create and deploy the above described software components such as the simulation module the diagnostics module and the hardware module . Generally the components may be realized in hardware software or some combination of these. The components may be realized in one or more microprocessors microcontrollers embedded microcontrollers programmable digital signal processors or other programmable devices along with internal and or external memory such as read only memory programmable read only memory electronically erasable programmable read only memory random access memory dynamic random access memory double data rate random access memory Rambus direct random access memory flash memory or any other volatile or non volatile memory for storing program instructions program data and program output or other intermediate or final results. The components may also or instead include an application specific integrated circuit a programmable gate array programmable array logic or any other device or devices that may be configured to process electronic signals in a manner consistent with the systems and methods described herein.

Any combination of the above circuits and components whether packaged discretely as a chip as a chip set or as a die may be suitably adapted to use with the systems described herein. It will further be appreciated that the above software components may be realized as computer executable code created using a structured programming language such as C an object oriented programming language such as C or any other high level or low level programming language that may be compiled or interpreted to run on one of the above devices as well as heterogeneous combinations of processors processor architectures or combinations of different hardware and software. All such variations and combinations are intended to fall within the scope of this disclosure.

It should also be appreciated that the recurring example provided above semiconductor manufacturing robotics is only one example of a possible use of the programming and control system disclosed herein. The system described with reference to may be employed with suitable adaptations for control and diagnostics in a variety of real time control contexts including for example automobile manufacturing assembly lines machining processes printing presses industrial automation control systems such as those provided by Invensys Honeywell Siemens et al building automation systems security systems Computer Numeric Control CNC machining systems and so on. The systems and methods described above may also be used for diagnostics in human operated machinery such as an operating automobile an operating airplane military or civilian an operating tank an operating extraterrestrial vehicle such as a space shuttle space station space dock and so forth. These and other similar uses not specifically enumerated herein are intended to fall within the scope of this disclosure.

The analysis engine may provide one or more tools for analyzing data within the data repository . This may include for example tools for improving diagnostic functions such as detection of malfunction tools for statistical analysis of hardware and simulation data and deviations among these. The analysis engine may pool data from a number of robotic systems which may include similar or identical robotic systems as well as disparate robotic system and provide tools for comparative analysis thereof.

In one aspect the analysis engine may provide a diagnostics tool kit for identification and analysis of diagnostically significant relationships. This may include for example statistical analysis tools linear system modeling tools frequency domain analysis tools and so forth. Using the diagnostics tool kit new relationships that are identified from data in the data repository may be deployed as new diagnostic analyses current and or future diagnostics modules. Similarly existing diagnostics may be refined and tested against data in the data repository . As diagnostic techniques are developed using the diagnostics tool kit they may be back tested against data in the data repository using the analysis engine.

To enhance use of the analysis engine and the diagnostics tool kit certain know fault modes such as a motor failure pressure leak wafer defect or the like may be copied into a separate location or otherwise flagged for use and re use.

The data repository may be any mass storage device suitable for the volume and rate of data acquisition from a system such as any of the robotic systems described above. This may include for example semiconductor memory devices optical memory devices such as CD ROM or DVD ROM network attached storage storage area network devices magnetic disk drives magnetic tape drives or any other volatile or non volatile memory device. The data repository may also include arrays of such devices such as farms RAID arrays and the like. In addition to the physical media for storage the data repository may include a database management system such as those commercially available from Microsoft Corporation International Business Machines and Oracle as well as a number of open source software projects.

The hardware module diagnostics module and simulation module may be for example the modules described above with reference to . These modules may feed data directly to a local data repository or may provide data over a local area network storage area network wide area network private network or the like. Data may include for example control and command data provided to the hardware module sensor and other feedback data received from the hardware module and or simulation module and diagnostic information if any received from the diagnostics module . The data may include actual and simulated real time data. Data may be incrementally forwarded to the data repository or locally cached and forwarded in batches at appropriate times or combinations of these. More generally any suitable technique for transferring data from the modules to the data repository may be employed with the systems described herein.

In one embodiment the internetwork is the Internet and the World Wide Web provides a system for interconnecting clients and servers in a communicating relationship through the Internet . The internetwork may include other networks such as satellite networks the Public Switched Telephone Network WiFi networks WiMax networks cellular networks and any other public private or dedicated networks that might be used to interconnect devices for transfer of data.

An exemplary client may include a processor a memory e.g. RAM a bus which couples the processor and the memory a mass storage device e.g. a magnetic hard disk or an optical storage disk coupled to the processor and the memory through an I O controller and a network interface coupled to the processor and the memory such as modem digital subscriber line DSL card cable modem network interface card wireless network card or other interface device capable of wired fiber optic or wireless data communications. One example of such a client is a personal computer equipped with an operating system such as Microsoft Windows XP UNIX Linux or Mac OS X along with software support for Internet communication protocols. The personal computer may also include a browser program such as Microsoft Internet Explorer or FireFox to provide a user interface for access to the internetwork . Although the personal computer is a typical client the client may also be a workstation mobile computer Web phone VOIP device television set top box interactive kiosk personal digital assistant wireless electronic mail device or other device capable of communicating over the Internet. As used herein the term client is intended to refer to any of the above described clients or other client devices and the term browser is intended to refer to any of the above browser programs or other software or firmware providing a user interface for navigating an internetwork such as the Internet.

An exemplary server includes a processor a memory e.g. RAM a bus which couples the processor and the memory a mass storage device e.g. a magnetic or optical disk coupled to the processor and the memory through an I O controller and a network interface coupled to the processor and the memory. Servers may be clustered together to handle more client traffic and may include separate servers for different functions such as a database server an application server and a Web presentation server. Such servers may further include one or more mass storage devices such as a disk farm or a redundant array of independent disk RAID system for additional storage and data integrity. Read only devices such as compact disk drives and digital versatile disk drives may also be connected to the servers. Suitable servers and mass storage devices are manufactured by for example Hewlett Packard IBM and Sun Microsystems. In addition to providing an interface for clients visiting a Web site the server may provide back end processing that includes for example access to the simulation and diagnostic functions of the architecture described above.

Focusing now on the internetwork one embodiment is the Internet. The structure of the Internet is well known to those of ordinary skill in the art and includes a network backbone with networks branching from the backbone. These branches in turn have networks branching from them and so on. The backbone and branches are connected by routers bridges switches and other switching elements that operate to direct data through the internetwork . For a more detailed description of the structure and operation of the Internet one may refer to The Internet Complete Reference by Harley Hahn and Rick Stout published by McGraw Hill 1994. However one may practice the present invention on a wide variety of communication networks. For example the internetwork can include interactive television networks telephone networks wireless voice or data transmission systems two way cable systems customized computer networks Asynchronous Transfer Mode networks and so on. Clients may access the internetwork through an Internet Service Provider ISP not shown or through a dedicated DSL service ISDN leased lines T1 lines OC3 lines digital satellite service cable modem service or any other suitable connection.

In an exemplary embodiment a browser executing on one of the clients retrieves a Web document at an address a Uniform Resource Locator URL an IP address or other identifier from one of the servers via the internetwork and displays the Web document on a viewing device e.g. a screen. A user can retrieve and view the Web document by entering or selecting a link to a URL in the browser. The browser then sends an http request to the server that has the Web document associated with the URL. The server responds to the http request by sending the requested Web document to the client . The Web document may be an HTTP object that includes plain text ASCII conforming to the HyperText Markup Language HTML . Other markup languages are known and may be used on appropriately enabled browsers and servers including the Dynamic HyperText Markup Language DHTML the Extensible Markup Language XML the Extensible Hypertext Markup Language XHML and the Standard Generalized Markup Language SGML .

To enhance functionality a server may execute programs associated with Web documents using programming or scripting languages such as Perl C C C or Java or a Common Gateway Interface CGI script to access applications on the server. A server may also use server side scripting languages such as ColdFusion from MacroMedia or PHP. These programs and languages may perform back end functions such as order processing database management and content searching. A Web document may also contain or include references to small client side applications or applets that are transferred from the server to the client along with a Web document and executed locally by the client . Java is one popular example of a programming language used for applets. The text within a Web document may further include non displayed scripts that are executable by an appropriately enabled browser using a scripting language such as JavaScript or Visual Basic Script. Browsers may further be enhanced with a variety of helper applications to interpret various media including still image formats such as JPEG and GIF document formats such as PPT and PDF motion picture formats such as AVI and MPEG animated media such as Flash media and sound formats such as MP3 and MIDI. These media formats along with a growing variety of proprietary media formats may be used to enrich a user s interactive and audio visual experience as each Web document is presented through the browser. The term page as used herein is intended to refer to the Web document described above as well as any of the above described functional or multimedia content associated with the Web document.

In general operation a server may provide a web site including one or more web pages to a client . In an exemplary embodiment the web site may include an environment for specifying and purchasing robotic systems as described below.

A Web site including the page may use cookies to track users and user information. In particular a client accessing the site may be accessed to detect whether the client has previously accessed the page or the site. If the client has accessed the site then some predetermined content may be presented to the client . If the client does not include a cookie indicating that the client has visited the site then the client may be directed to a registration page where information may be gathered to create a user profile. The client may also be presented with a login page so that a pre existing user on a new client may nonetheless bypass the registration page.

The site may provide options to the client . For example the site may provide a search tool by which the client may search for content within the site or content external to the site but accessible through the internetwork . The site may include payment processing through banking and third party transaction systems including credit card processing PayPal transaction processing wire transfer processing and the like.

As shown in step a user may configure a system such as a robotic semiconductor manufacturing system. This may include selection of individual robotic components as well as pre configured assemblies that include a number of different components. Features such as sensors control software and the like may be selected as options. The interface may permit pick and place arrangement of components into a working system. The interface may permit physical arrangement of components as well as the specification of mechanical and electrical relationships among components of the system.

In an embodiment a user may design custom mechanical components or electrical circuitry using a Computer Automated Design CAD system offered through the web site or may upload custom components in a CAD format acceptable to the site such as a format amenable to either direct simulation or conversion to a simulation ready format. Configuration may include physical arrangement of mechanical and electrical parts as well as provision of control software which may be provided by the user or by the site or some combination of these. More generally the interface may permit a wide range of user customization or may constrain a user to certain configuration parameters such as component selections and physical arrangements specific to an industrial application for which the site is adapted. Thus for example in a semiconductor manufacturing application the interface may specify a discrete number of workstation shapes sizes and entry exit modes and a specific collection of robotics components such as robotic arms individual robotic arm links conveyers elevators actuators motors sensors controllers including individual chips and integrated controller systems and so forth to be combined with the workstation s for wafer handling.

Once a system has been specified in simulation ready detail the site may simulate the system as shown in step . The simulation may use for example the simulation module described above. For diagnostic purposes a hardware module may be similarly simulated or hardware module input output may be obtained from or derived from historical data in a data repository such as the data repository described above. The user may specify operating conditions duration speed work pieces and the like as well as selecting for example from an array of potential fault conditions e.g. cracked silicon wafer environmental vibration faulty sensor electro magnetic noise and the like . In an embodiment fault conditions may be simulated within a hardware module and a diagnostics module may be employed to compare the simulated fault to the non faulted simulation module outputs.

As shown in step the user may review results of the simulation. In addition to reviewing input outputs for the system s software modules a user may review a number of metrics for evaluating the design such as cost per work piece throughput equipment purchase costs total cost for life of equipment maintenance cost costs for tooling user specified custom parts and so forth. Side by side analysis may be performed of alternate configurations or of a single configuration under different operating conditions. The site may also provide an analysis engine such as the analysis engine described above to evaluate other aspects of system performance and compare performance to alternative configurations using historical data in the data repository .

As shown in step a user may determine whether the results are acceptable. If the results are not acceptable the process may return to step where the user may configure or reconfigure a system.

If the results are acceptable a user may proceed to enter a purchase order as shown in step . The process may also convert the user s configuration into a specification for a completed product including for example a parts list operating specifications and capacity suggested replacement parts and the like. The purchase order itself may be executed in any manner and may include elements of immediate payment as well as terms and timing of additional payments due upon delivery and satisfactory operation of the system. As shown in step the process may then end.

It will be appreciated that the steps of the process may be varied or supplemented or their order modified without departing from the concepts described herein. For example a user may be provided with an option to save a configuration for subsequent review and modification and a user may maintain a library of saved designs. A library of designs may also be provided to a user from which a user may select designs for customization and simulation. As another example data such as cost data may be provided during the configuration step and certain simulation results may be displayed in real time during a simulation. The purchasing step may be omitted entirely from the computerized process with an actual purchase being conducted off line with reference to a design configured and saved using the process . Thus the process described with reference to is an example only and in no way limits the generality of the disclosed business process for web based design simulation and purchase of robotic manufacturing equipment.

It will be appreciated that the process may be realized in hardware software any some combination of these suitable for controlling a web based design simulation and purchasing system. The server side and client side of the process may be realized in one or more microprocessors microcontrollers embedded microcontrollers programmable digital signal processors or other programmable device along with internal and or external memory. Either the server side or client side of process may also or instead include an application specific integrated circuit a programmable gate array programmable array logic or any other device that may be configured to process electronic signals. It will further be appreciated that the server side or the client side of the above process may be realized as computer executable code created using a structured programming language such as C an object oriented programming language such as C or any other high level or low level programming language including database programming languages and technologies that may be compiled or interpreted to run on one of the above devices as well as heterogeneous combinations of processors processor architectures or combinations of different hardware and software.

While the invention has been disclosed in connection with certain preferred embodiments other embodiments will be recognized by those of ordinary skill in the art and all such variations modifications and substitutions are intended to fall within the scope of this disclosure. Thus the invention is to be understood with reference to the following claims which are to be interpreted in the broadest sense allowable by law.

