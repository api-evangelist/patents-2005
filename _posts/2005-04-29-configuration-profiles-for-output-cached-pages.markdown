---

title: Configuration profiles for output cached pages
abstract: Profiles hold cache settings externally from a requesting resource. The external cache settings stored within a profile may be associated with one or more resources. This allows the external cache settings for a group of resources to be managed from one location rather than having to change the internal cache settings for each resource. When a resource is processed by the server, the external cache settings are obtained from a cache profile and applied to the requesting resource. The external cache settings may also be merged with any internal resource settings. As a result of merging the settings some of the external cache settings and/or some of the internal cache settings may be overridden.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07756909&OS=07756909&RS=07756909
owner: Microsoft Corporation
number: 07756909
owner_city: Redmond
owner_country: US
publication_date: 20050429
---
Caching is a technique widely used in computing to increase performance by keeping frequently accessed or expensive data in memory. In the context of a Web application caching is used to retain pages or data across HTTP requests and reuse them without the expense of having to recreate them. Many different types of caching exist such as output caching fragment caching and data caching. Output caching caches the dynamic response generated by a request. Fragment caching caches portions of a response generated by a request. Data caching caches arbitrary objects programmatically.

Output caching is a mechanism for reusing page responses for multiple requests to the same page in order to avoid performing expensive processing on every request. During the time a page is cached by the output cache subsequent requests for that page are served from the output cache without processing the code that created it. In output caching each page specifies settings within the page that define whether and how the page is cached. These settings include items such as cache duration how multiple variants are constructed based on client input and various settings controlling proxy and client caching of the returned response. Discovering and managing these settings requires each page to be inspected individually which quickly becomes a problem on sites with tens or hundreds and more pages.

Briefly stated embodiments of the present invention are related to associating externally stored cache settings with resources.

According to one aspect of the invention cache settings associated with one or more resources are stored externally from the resource itself within a profile the external cache settings. When a resource is processed the external cache settings are obtained from a configuration profile and applied to the requesting resource.

According to another aspect of the invention the external cache settings are merged with resource settings contained within the resource itself the internal cache settings. As a result of merging the settings some of the external cache settings and or some of the internal cache settings may be overridden.

According to yet another aspect of the invention the external cache settings may be managed outside the resource itself. For example a configuration manager could configure the external cache settings in a central location outside of the code for each resource thereby affecting the cache settings for one or more resources by changing a single profile file. This helps in managing and configuring potentially thousands of resources.

Embodiments of the present invention are related to associating externally stored cache settings with resources. The external cache settings stored within a profile may be associated with one or more resources. This allows the external cache settings for a group of resources to be managed from one location rather than having to change the internal cache settings for each resource. When a resource is processed by the server the external cache settings are obtained from a cache profile and applied to the requesting resource. The external cache settings may also be merged with any internal resource settings. As a result of merging the internal and external cache settings some of the external cache settings and or some of the internal cache settings may be overridden.

Server is configured to run cache program . Cache program is configured to receive requests from clients and . Data may be transmitted between the computing devices and the server over a wide area network WAN local area network LAN and or cellular pager network .

Generally programs and may generate a request to server for an update associated with a resource. For example program could be a browser application that is requesting a page update for a website the user is visiting. When the request is received output cache engine determines whether the request may be satisfied from cached resources . When the response to the request is cached output cache engine returns the cached entry to the requesting device without the server having to process the request. When the request may not be satisfied from the cache the request is processed by server .

Cache program accesses the external cache settings associated with the requested resource from one of the configuration profiles stored by configuration profiles . In the present example the cache settings relate to a web page. Once the request is processed the page is stored within the cache if eligible according to the external cache settings stored within the configuration profile that is associated with the resource as well as any cache settings stored within the resource itself the internal cache settings .

A single configuration profile may apply to one or more resources. As illustrated profile includes cache settings for resources 1 8 profile includes cache settings for resources 9 2000 and profile includes cache settings for resource N. Profiles may be associated with any number of resources. Management of cache settings becomes much easier when the cache settings may be configured externally from the resource itself. For example making a change to a cache setting may be made within the configuration profile rather than having to individually change each resource that points to the configuration profile.

Cache program merges the internal cache settings with the external cache settings stored within the configuration profiles . According to one embodiment the internal cache settings have a higher priority than the external cache settings. Any priority scheme however may be implemented. For example some internal cache settings may have a higher priority than the external cache settings whereas some external cache settings may have a higher priority than internal cache settings.

According to one embodiment the external cache settings are used for output caching. Output caching may also be thought of as page level caching that is especially useful for static web pages. According to another embodiment the external cache settings may be used for any type of caching.

The external cache settings enable resources to inherit their cache settings from a profile within configuration profiles that is defined in a central location. Storing the cache settings in a central location dramatically improves the manageability of cache settings that otherwise would be defined individually by and on each page. Multiple pages that share common cache settings may be reconfigured by modifying a single line of configuration within the profile instead of finding and changing each page individually. Individual pages can also selectively override external cache profile settings as required. According to one embodiment the external cache settings include a cache enabled setting that may be turned on and off to control the caching of the affected pages without ever having to modify the pages. These cache settings are also easily editable using tools that leverage standard configuration APIs. Cache settings may also be reused by allowing the page developer to simply select a profile from the configuration profiles instead of having to define all settings within each page. Individual settings defined within the page as well as profile overrides are also possible to enable customizing general profiles on a per page basis.

According to one embodiment the external cache settings stored within the configuration profiles are stored as XML. Each cache profile and is a named set of cache settings and contains the settings that are definable on page level. The following is an illustration of configuring a few cache settings using XML 

The example above includes the name of the output profile MyCacheProfile an indication that they the page is cache enabled the duration of time the page should be cached 100 seconds that the page is disk cacheable and may be cached at any available location i.e. on the server on the client at a proxy and the like and that the page does not vary by parameter and the page may be stored.

According to one embodiment each individual page can refer to an external cache profile by specifying the CacheProfile attribute in the directive included within the page. For example referring to the cache profile defined in the example above would be .

In addition as shown above the directive can explicitly specify internal cache settings for some of the settings in order to override the external cache values inherited from the profile. According to one embodiment the cache enabled setting cannot be overridden at the page level thereby allowing the administrator to be able to turn the cache on and off for all pages using a profile.

When processing the request the server accesses the page and loads the settings from the specified profile and overrides any of the conflicting settings with settings specified directly in the OutputCache directive contained within the page. The page then enforces that the settings have been specified by either the profile or the directive. The settings are then be used to control the output cache behavior of the page response.

The following example illustrates caching responses for minute caching them only on the server and varying the caching by browser.

The page is now configured to be output cached with the settings specified in the ServerOnly profile. Now suppose that it has been determined that the pages should be cached for a longer period of time than 60 seconds. To make the change the only change that is made is to the ServerOnly cache profile. A single change in the Duration value of the ServerOnly cache profile automatically applies this change to all the pages scattered across the application that are pointing to this profile. Additionally some pages in the application may need to vary cache settings to insure the correctness of the served output. An individual page control can specify additional settings in the OutputCache directive adding or overriding the settings specified in the profile. For example . This directive uses the ServerOnly profile but overrides the duration to be 30 seconds and adds the VaryByParam parameter.

According to one embodiment a default profile may be configured. When a default profile is utilized the individual pages do not need to include the name of an output cache profile. Instead every resource is by default associated with the default profile.

Cache settings may also be configured for debugging purposes. For example a customer may disable cache settings by simply naming the profile Disabled or an existing profile may be modified to disable output cache for pages pointing to it without having to touch pages by setting enabled to false. The following are some exemplary cache settings that may be stored within a profile.

The element specifies output cache settings that can be applied to pages controls in the application and can be defined at any level. The following is an XML example of the output cache settings section.

The element contains groups of cache settings that can be applied to pages specifying the OutputCache directive. Each OutputCache directive can specify a CacheProfile attribute which points to one of the profiles available in the configuration. The OutputCache directive can specify any of the settings available to each profile and they will override the ones specified in the profile.

The element contains groups of cache settings that can be applied to user controls specifying the OutputCache directive. This is similar to the .

Cellular pager network is a network responsible for delivering messages to and receiving messages from wireless devices. The cellular pager network may include both wireless and wired components. For example cellular pager network may include a cellular tower that is linked to a wired telephone network. Typically the cellular tower carries communication to and from cell phones long distance communication links and the like.

Gateway routes messages between cellular pager network and WAN LAN . For example a computer user may send a message that is addressed to a cellular phone. Gateway provides a means for transporting the message from the WAN LAN to cellular pager network . Conversely a user with a device connected to a cellular network may be browsing the Web. Gateway allows hyperlink text protocol HTTP messages to be transferred between WAN LAN and cellular pager network .

After a start block the process flows to block where the request is received and the processing of the request is begun when the request may not be satisfied by an entry within the cache.

Moving to block a determination is made as to whether the request includes a cache directive. The cache directive indicates whether and under what conditions an attempt should be made to cache the request after it has been processed. When the request is not to be cached the process moves to block where the processing of the request is completed. When the request includes a directive to cache the request the process flows to block where the external cache settings are obtained for the resource. As discussed above the same external cache settings may be applied to one or more resources.

Flowing to block the internal cache settings are merged with the external cache settings. According to one embodiment the internal cache settings override the external cache settings. As discussed above other priority schemes may be implemented.

The process then flows to block where the request of the processing is completed. Moving to block the request is cached when it is eligible. The process then moves to an end block and returns to processing other actions.

With reference to one exemplary system for implementing the invention includes a computing device such as computing device . In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more applications and may include program data . In one embodiment application includes a program that utilizes external cache settings. In another embodiment application may be a cache program that interacts with external cache settings when computing device is configured as a server. This basic configuration is illustrated in by those components within dashed line .

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connection is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

One or more application programs are loaded into memory and run on the operating system . Application resides on mobile computing device and is programmed to utilize external cache settings. Mobile computing device also includes non volatile storage within memory . Non volatile storage may be used to store persistent information which should not be lost if mobile computing device is powered down.

Mobile computing device includes power supply which may be implemented as one or more batteries. Power supply might further include an external power source such as an AC adapter or a powered docking cradle that supplements or recharges the batteries.

Mobile computing device is shown with two types of optional external notification mechanisms LED and audio interface . These devices may be directly coupled to power supply so that when activated they remain on for a duration dictated by the notification mechanism even though processor and other components might shut down to conserve battery power. Audio interface is used to provide audible signals to and receive audible signals from the user. For example audio interface may be coupled to a speaker for providing audible output and to a microphone for receiving audible input such as to facilitate a telephone conversation.

Mobile computing device also includes communications connection s such as a wireless interface layer that performs the function of transmitting and receiving communications. Communications connection facilitates wireless connectivity between the mobile computing device and the outside world. According to one embodiment transmissions to and from communications connection are conducted under control of the operating system .

The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

