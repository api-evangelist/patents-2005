---

title: Automatic filtering and scoping of search results
abstract: A method and system for customizing a search of a data source linked to a computer in response to a search request from a user. A search tool application (STA) is executed on a client computer in response to the search request received from the user. The STA determines the context of a software application active when the STA is executed. The STA determines a scope of data to search based on the determined context. A user-interface is responsive to a search term received from a user to initiates a search the determined scope of data for content that matches the received search term. The results of the search are displayed in the UI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07895184&OS=07895184&RS=07895184
owner: Microsoft Corporation
number: 07895184
owner_city: Redmond
owner_country: US
publication_date: 20050630
---
Currently available applications frequently include user interfaces UIs that include controls and or text boxes to permit the user to define queries for searching the Internet and or their desktop computer memories etc. However such search UIs have been generally application specific insofar as their layout and functionality are concerned. That is such a UI is generally used to search a particular scope of data related to application in which the UI is available. One primary reason for this limited functionality stems from the desire to impart standardization to various UIs.

Embodiments of the present invention overcome deficiencies in existing search tools. For example against the backdrop of standardized UIs aspects of the invention provide a universal search tool that is user friendly aesthetically pleasing and that has improved functionality. Moreover such an improved search tool provides the user relevant search results as a function of the active application. By exposing search functionality in multiple applications and entry points via toolbars and add ons users are provided quick access to desktop and web searching capabilities. However providing the most relevant search results is still a challenge. Embodiments of the inventions help improve the relevance of search results by using the application context to select default filters and scopes for searches. Determining a user s intended search scope and or targeted search store without explicit user selection is not currently done from existing application add ons toolbars.

Computer readable media having computer executable instructions for initiating searching embody further aspects of the invention. Alternatively embodiments of the invention may comprise various other methods and apparatuses.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring to the drawings illustrates an exemplary computer system in which the present invention can be used. System includes a client computer that executes a search tool application STA in response to user input. The STA is preferably implemented as part of an operating system that provides an environment for launching and managing various software applications. The computer receives input data from an input device such as a conventional keyboard and executes the STA . Those skilled in the art are familiar with the use of cursor keys on the keyboard as well as a mouse trackball or other pointing device to move a cursor on a computer display screen of a monitor of the client computer for the selection of various options and or executing applications. Although the present invention is described in conjunction with a conventional desktop computer it will be appreciated that the present invention may be utilized in other types of computer systems that use a window based display system.

When executed the STA generates a graphical user interface UI to be displayed on the display . The UI enables the user to define a query and initiate a search of relevant online and or desktop data sources. More specifically the STA determines a search scope or target data source to search based on the context of a particular software application active when the STA is executed and presents a UI customized for searching the determined target data source. The STA includes a memory that stores UI data for displaying the customized UI . For example and as explained in more detail below the memory stores a data table that determines which customized UI to display for a particular software application. The UI includes a search results window for displaying the results of the search of the relevant data source. The search results displayed in the search results window include for example one or more files e.g. program files document files having content that matches the search term defined by the user.

An embodiment of the invention provides a search tool that presents a customized UI based on an anticipated search scope as determined from a current application being used by the user. For example if the active application is a web application the STA presents a UI element customized for searching a data source on the web. Alternatively if the current application is an e mail application a UI customized for searching data source associated with an e mail account. By determining a user s intended search scope without explicit user designation or selection aspects of the invention improve search efficiency and the relevance of search results by providing a search tool that is lighter customizable and more aesthetically pleasing to the user.

Referring now to a block diagram illustrates components of an STA e.g. application according to one embodiment of the invention. The STA executes a context identifying ID component that determines the context of the active application when the STA is executed. In one embodiment the context ID component determines the context of the active application from data included in the application. For example STA searches metadata included in the active application s header to identify pre defined context data. Alternatively the context ID component parses content being displayed on the computer display See by the active software application to detect structured data e.g. URLs words metatags . Thereafter the STA compares the detected structured data to context hints stored in a memory such as memory in . As used herein a context hint defines an anticipated context of the active application based on patterns included in detected structure data. For example consider that the context ID component searches content being displayed on the display and detects a URL e.g. http www.someaddress . In this case the context ID component compares the http included in the detected URL to the stored hint data and determines the anticipated context is a web site. In another embodiment the active software application and the STA engage in a cross communication process to determine the context of the active application.

The STA is responsive to the determined application context to execute a scope determining component to determine a scope of data scope to search as a function of the determined context. As used herein the scope refers to a target source at which to search for content corresponding to a user defined query. In one embodiment a default scope is pre defined for each of the various application contexts and is stored in a memory e.g. memory . The scope determining component searches the memory to identify the scope that corresponds to determined context. For example if the determined application context is a web browser application such as Microsoft Internet Explorer available from Microsoft Corporation the determined scope corresponds to files and documents accessible via a communication network such as the Internet. Alternatively if the user is executing an application stored locally on the computer the determined application context is a desktop application and the determined scope corresponds to locally stored files and documents.

After the scope is determined the STA executes a UI component to present a UI via the display configured to accept user input for filtering the determined scope to provide the user relevant search results. For example if the user is using a web browser application e.g. Microsoft Internet Explorer the UI component presents a UI configured for searching the Web. In one embodiment the UI component determines the appropriate UI to present on the display by searching a data table stored in memory. For example Table 1 shows an exemplary data table in which a corresponding UI is defined for various scopes of data.

Referring briefly to an exemplary screen shot illustrates a communication network UI . The communication network UI includes an input control for defining one or more search terms that are of interest to the user. For example using techniques known to those skilled in the art the user uses the mouse or keyboard to select the input control and then uses the keyboard to enter text or other characters to define a search term or terms. Alternatively the user clicks a drop down arrow as indicated by reference character on the input control and selects a search term from a list of recent search terms. The communication network UI in the illustrated embodiment includes an address control that includes default data identifying the default data source. In this example the default data identifies an address or location e.g. www.msn.com and thus the default data source is the particular server located at the identified address on the Internet. Thus the default data serves as a filter to limit the search for content matching the one or more defined search terms to the location i.e. default data source of the particular server corresponding to the default data. Using techniques known to those skilled in the art the user uses the mouse or keyboard to select a search control displayed on the UI to initiate the search of the particular server located at the identified address and to display search results corresponding to the defined search term the search results window . Notably in one embodiment the search results window appears after the user begins entering a search term into the input control . For example the search result window and search results are displayed after the user enters the first character of a search term in the input control .

Referring again to and Table if the determined scope of data is the local desktop the UI component displays the local desktop UI which is configured for searching the local desktop. Referring now to an exemplary screen shot illustrates a desktop UI . The desktop UI includes an input control for defining one or more search terms that are of interest to the user. The desktop UI includes an address control that identifies default data that serves as a filter to limit the user search results to provide the user more relevant results. In this case the default data source identifies a particular folder e.g. My Documents and thus the default data source is the client computer on which the particular folder is located. Thereafter the user uses the mouse or keyboard to select a search control displayed on the UI to initiate the search of the particular folder on the client computer and to display search results e.g. document files corresponding to the defined one or more search terms in the search results window .

Referring now to an exemplary screen shot illustrates an e mail UI . The e mail UI is displayed on the screen in response to a determined scope corresponding to e mail account. The e mail UI includes an input control for defining one or more search terms that are of interest to the user. In this example the default data source corresponds to an e mail account associated with an e mail application e.g. Microsoft Outlook . The user uses the mouse or keyboard to select a search control included in the UI to initiate the search of e mail data included the e mail account and to display search results e.g. e mail messages contacts corresponding to the defined one or more search terms in the search results window .

Referring again to although the STA presents a UI to the user that corresponds to a default scope determined by the scope determining component the user can override the default scope by using the keyboard to define a preferred scope. For example consider that the default scope is a web site e.g. www.msn.com . The user uses the keyboard to enter text into the address control that corresponds to a different scope such as a particular folder located on the client computer to limit the search for matching content to that particular folder rather than a particular server on the Internet. Alternatively the user uses the keyboard to enter text into the address control that corresponds to a location of a different server on the Internet e.g. www.someotheraddress.com to limit the search for matching content to the location of the different server on the Internet rather than the location of the default server.

According to another embodiment of the invention the STA is responsive to user input to execute a partition component to partition search results into various groupings as a function of file type for display to the user via a word wheel UI. Referring now to a screen shot illustrates an exemplary word wheel UI that appears as a pop up window in response to user input within a query control being displayed via a taskbar tool bar . According to an aspect of the present invention the word wheel UI enables the user to view search results according to a program file group an e mail file group e.g. e mail messages a media file group and a document file group . As the user enters characters of a search term into the query control the partitioning component dynamically displays grouped results via the word wheel UI . For example after the user types o u into the query control the word wheeling component displays a list of search results for each of various files types. The word wheel UI allows the user to easily open or execute a particular file being displayed. For example to launch a particular program file the user clicks on the desired search result e.g. Microsoft Office Outlook 2003 shown in the UI . In the alternative the user navigates the search results with the keyboard s arrow keys and enter on the desired result item as a means for selecting the desired application to be launched.

Referring now to a flow diagram illustrates an exemplary method for initiating a search on a computer executing one or more applications in response to a search request from a user. At a search tool application STA is executed on a client computer in response to a search request received from the user. The STA determines the context of a software application active when the STA is executed at . At the STA determines a scope of data to search based on the determined context. The STA display a user interface configured to receive a search term from a user and to search the determined scope for content corresponding to the received search term at . At the search results are displayed in a window included in the UI.

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computer . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS including the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically includes data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. also shows a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and magnetic disk drive and optical disk drive are typically connected to the system bus by a non volatile memory interface such as interface .

The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into computer through input devices or user interface selection devices such as a keyboard and a pointing device e.g. a mouse trackball pen or touch pad . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are connected to processing unit through a user input interface that is coupled to system bus but may be connected by other interface and bus structures such as a parallel port game port or a Universal Serial Bus USB . A monitor or other type of display device is also connected to system bus via an interface such as a video interface . In addition to the monitor computers often include other peripheral output devices not shown such as a printer and speakers which may be connected through an output peripheral interface not shown .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment computer is connected to the LAN through a network interface or adapter . When used in a wide area networking environment computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Generally the data processors of computer are programmed by means of instructions stored at different times in the various computer readable storage media of the computer. Programs and operating systems are typically distributed for example on floppy disks or CD ROMs. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. Embodiments of the invention described herein include these and other various types of computer readable storage media when such media include instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. One embodiment of the invention also includes the computer itself when programmed according to the methods and techniques described herein.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks. It is recognized however that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

Although described in connection with an exemplary computing system environment including computer one embodiment of the invention is operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with the embodiments of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located on both local and remote computer storage media including memory storage devices.

An interface in the context of software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein.

In operation according to one embodiment of the invention computer initiates a search of a data source in response to a search request from a user. The computer executes a search tool application installed on the computer to display a customized UI to a user. The customized UI includes an input field e.g. input control for receiving a user entered search term and as described above is customized for searching a default data source identified as a function of a currently active application. Computer executes computer executable instructions to search based on the search term the default database. The order of execution or performance of the methods illustrated and described herein is not essential unless otherwise specified. That is it is contemplated by the inventors that elements of the methods may be performed in any order unless otherwise specified and that the methods may include more or less elements than those disclosed herein. For example it is contemplated that executing or performing a particular element before contemporaneously with or after another element is within the scope of the invention.

When introducing elements of the present invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

In view of the above it will be seen that the several objects of the invention are achieved and other advantageous results attained.

As various changes could be made in the above constructions and methods without departing from the scope of embodiments of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

