---

title: System and method of detecting, recognizing, and tracking moving targets
abstract: A system and method of tracking moving targets in video images comprises retrieving a reference video frames each comprising arrays of digital pixels; computing a first averaged image for each of the reference video frames, wherein each pixel value of the first averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the reference video frames; computing a second averaged image for a second set of the reference video frames, wherein each pixel value of the second averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the reference video frames; viewing an input video frame comprising arrays of digital pixels; subtracting the input video frame from the first and second averaged images separately to form at two difference images; and combining the difference images to form a change map.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07460689&OS=07460689&RS=07460689
owner: The United States of America as represented by the Secretary of the Army
number: 07460689
owner_city: Washington
owner_country: US
publication_date: 20050909
---
This application claims the benefit of U.S. Provisional Patent Application No. 60 610 141 filed Sep. 15 2004 the complete disclosure of which in its entirety is herein incorporated by reference.

The embodiments of the invention described herein may be manufactured used and or licensed by or for the United States Government.

A portion of the disclosure of this patent document as provided in the Appendix herein includes material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of this patent document or the patent disclosure as it appears in the U.S. Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The embodiments of the invention generally relate to moving target detection and more particularly to moving target detection used in video surveillance applications.

Moving target indication MTI methodologies are essential tools to detect locate recognize and track the moving targets of interest in a movie or video sequence. Different MTI methodologies can be characterized and compared by their hit rates percentage of all available targets of interest detected and located recognition rates percentage of each of the existing target types correctly recognized false alarm rates average number of false alarms reported per video frame efficiency of operation how much computational resources and time is needed for a given set of data and robustness how well the methodology is able to handle or adapt to different types of data . An ideal MTI methodology should generally be able to detect recognize and track all targets of interest without incurring an unacceptable number of false alarms under a very stringent computational requirement.

Generally most of the conventional MTI methodologies look for changes in a video sequence by subtracting the current image frame arrays of digital pixels being viewed from the previous one. While it is the simplest way to do so this method typically produces more false alarms and generally does not work well when the targets are moving slowly relative to their sizes. Additionally problems in variations in contrast brightness and other video parameters as well as aliasing jitter and background errors can cause positive false alarms. Some conventional techniques attempt to stabilize the background information and reduce the false alarms by creating an average image consisting of several previous frames. However these conventional methods tend to create a trailing ghost shadow that causes new false alarms and which are generally difficult to suppress especially when some of the moving targets are brighter than their surroundings while others are darker than their background in the same video sequence. In this situation conventional methodologies tend to result in either detecting only those targets in the chosen polarity and the shadows of the opposite polarity or the targets and shadows of both polarities. If half of the moving targets are brighter than their surroundings and the other half is darker then either nearly half of the targets would be forsaken or nearly twice as many false alarms would be generated. Obviously neither one of these two cases is acceptable to a robust tracking methodology.

Unfortunately the conventional solutions have generally not been able to overcome these shortcomings. Therefore there remains a need for a novel MTI methodology that is capable of detecting recognizing and tracking most if not all of the interested targets with an acceptable number of false alarms under a very stringent computational requirement.

In view of the foregoing the embodiments of the invention provide a method of tracking moving targets in video images and a program storage device readable by computer tangibly embodying a program of instructions executable by the computer to perform the method of tracking moving targets in video images wherein the method comprises retrieving a plurality of reference video frames each comprising arrays of digital pixels computing a first averaged image for each of the plurality of reference video frames wherein each pixel value of the first averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the plurality of reference video frames computing a second averaged image for a second set of the plurality of reference video frames wherein each pixel value of the second averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the plurality of reference video frames viewing an input video frame comprising arrays of digital pixels wherein the input video frame is sequenced consecutively after the plurality of reference video frames subtracting the input video frame from the first and second averaged images separately to form two difference images and combining the difference images to form a change map.

The method may further comprise multiplying each pixel value associated with a first difference image with a value of a corresponding pixel of a second difference image. Additionally the method may further comprise combining an even number of difference images together wherein the even number is at least two. Furthermore the method may further comprise computing a mean and standard deviation associated with the average pixel intensity values for each predefined non overlapping and fully partitioning blocks of the change map. Also the method may further comprise measuring a magnitude of change experienced in each partitioning block of the change map.

Moreover the method may further comprise enhancing a digital signature of moving objects in the change map using a pyramidal mean stacking process determining a pixel location in the enhanced change map that exhibits a highest pixel intensity value determining whether the highest pixel intensity value meets a minimum acceptance threshold for detection and determining whether a maximum allowable number of detections per input frame has been reached. Also the method may further comprise predefining values for the minimum acceptance threshold for detection and maximum allowable number of detections per input frame.

Another embodiment of the invention provides a system for tracking moving targets in video images wherein the system comprises means for retrieving a plurality of reference video frames each comprising arrays of digital pixels means for computing a first averaged image for each of the plurality of reference video frames wherein each pixel value of the first averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the plurality of reference video frames means for computing a second averaged image for a second set of the plurality of reference video frames wherein each pixel value of the second averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the plurality of reference video frames means for viewing an input video frame comprising arrays of digital pixels wherein the input video frame is sequenced consecutively after the plurality of reference video frames means for subtracting the input video frame from the first and second averaged images separately to form two difference images and means for combining the difference images to form a change map.

The system may further comprise means for multiplying each pixel value associated with a first difference image with the value of the corresponding pixel of a second difference image. Moreover the system may further comprise means for combining an even number of difference images together wherein the even number is at least two. Additionally the system may further comprise means for computing a mean and standard deviation associated with the average pixel intensity values for each predefined non overlapping and fully partitioning blocks of the change map. Also the system may further comprise means for measuring a magnitude of change experienced in each partitioning block of the change map.

Furthermore the system may further comprise means for enhancing a digital signature of moving objects in the change map using a pyramidal mean stacking process means for determining a pixel location in the enhanced change map that exhibits a highest pixel intensity value means for determining whether the highest pixel intensity value meets a minimum acceptance threshold for detection and means for determining whether a maximum allowable number of detections per input frame has been reached. The system may further comprise means for predefining values for the minimum acceptance threshold for detection and maximum allowable number of detections per input frame.

These and other aspects of the embodiments of the invention will be better appreciated and understood when considered in conjunction with the following description and the accompanying drawings. It should be understood however that the following descriptions while indicating preferred embodiments of the invention and numerous specific details thereof are given by way of illustration and not of limitation. Many changes and modifications may be made within the scope of the embodiments of the invention without departing from the spirit thereof and the embodiments of the invention include all such modifications.

The embodiments of the invention and the various features and advantageous details thereof are explained more fully with reference to the non limiting embodiments that are illustrated in the accompanying drawings and detailed in the following description. It should be noted that the features illustrated in the drawings are not necessarily drawn to scale. Descriptions of well known components and processing techniques are omitted so as to not unnecessarily obscure the embodiments of the invention. The examples used herein are intended merely to facilitate an understanding of ways in which the embodiments of the invention may be practiced and to further enable those of skill in the art to practice the embodiments of the invention. Accordingly the examples should not be construed as limiting the scope of the embodiments of the invention.

As mentioned there remains a need for a novel MTI methodology that ideally is capable of detecting recognizing and tracking all targets of interest without incurring any false alarms under a very stringent computational requirement. The embodiments of the invention approach this goal by providing a MTI methodology that analyzes the current input frame with respect to two or some other even number of disjoint averaged images . Each averaged image is computed by averaging a given set of recent input frames or canonical images pixel by pixel across the frames. Different sets of canonical images are used to compute these averaged images. The selected sets of canonical images are mutually exclusive and separated in time by a predefined number of input frames as a buffer. A number of computative operations can be performed between the current input frame and the averaged images in order to achieve superior detection recognition and tracking performance. The embodiments of the invention indicate that by multiplying the two or other even number of difference images that are obtained by subtracting the current input frame from those averaged images the aforementioned trailing ghost shadow problems are significantly reduced. Referring now to the drawings and more particularly to through where similar reference characters denote corresponding features consistently throughout the figures there are shown preferred embodiments of the invention.

As shown in the embodiments of the invention operate by starting the MTI methodology whereby an input frame is retrieved from a video sequence. Then a decision has to be made on whether the input frame should be down sampled or sub sampled . Down sampling is a process in which the input frame is scaled down to a smaller and similar image. Generally smaller images enable faster computation and less information is required to be processed in subsequent steps of the methodology provided by the embodiments of the invention. However the smaller the input frame is down sampled to the more of the original detail information is discarded and the more difficult it can be to locate moving targets. Thus a good trade off between computation cost and performance for example detection rate should be determined. If down sampling is desired Yes then the input frame undergoes down sampling . Regardless of whether a down sampling process is performed the next decision to be made is whether the input frame should examined for blank or near blank content. The process of checking for blank content consumes some computational resources upfront but it could avoid futile computation and erroneous results later in the tracking process if the current input frame is indeed a blank image. If one chooses to check for blank or near blank content Yes then the mean and standard deviation of all pixel values of the input frame are calculated .

The value of the standard deviation is examined . A very small standard deviation indicates a very flat or blank input frame. When the standard deviation is smaller than a predefined value for example 20 the process rejects the current input frame and attempts to retrieve the next input frame via Node A . In this regard Node A is simply a common connection node for steps and described in through . If the standard deviation is larger than the predefined value then one should examine the ratio of the mean to the standard deviation. Some cameras produce over exposed images with a relatively large standard deviation for example 40 at a very high mean value for example 800 . A large mean to standard deviation ratio for example larger than 10 indicates this type of abnormal input image. If the computed mean to standard deviation ratio is higher than a predefined value then the process rejects the current input frame and attempts to retrieve the next input frame via Node A . Otherwise the process continues as in the case where blank checking is not performed No at all.

The next decision is whether a pixel flooring step should be performed . If pixel flooring is desired Yes then the pixel with the minimum intensity is set to zero i.e. floored and all other pixels are shifted by a corresponding amount. The floored image is set as the output image. Performing a pixel flooring operation is desirable because the digital data from some cameras produce high pixel values i.e. approximately between 8 100 and 8 250 pixels but are only within a very small dynamic range i.e. approximately 100 . The contrast level of the pixels is not changed in the pixel flooring operation thus the operation does not introduce unwanted large mean shifts when bright objects enter or exit the image scene. Additionally the input image may be smoothed if necessary using well known smoothing techniques. If pixel flooring is not desired No or upon completion of pixel flooring then it is determined whether median filtering is desired .

If median filtering is desired Yes then the process performs a 3 3 i.e. the default kernel size of the filter is 3 3 median filtering process. The median filtering process removes noisy speckles from the images and flattens noisy near blank background regions of the images. The median filtering process is generally a non linear process in which the value of a pixel is replaced with the median value of the original pixel values within its 3 3 neighborhood or a smaller neighborhood for a pixel located at the border of the input image . Regardless of the median filtering decision the process moves to Node B which is the ending connection node for and the starting connection node for .

Moving from the connection Node B in the next task is to determine whether the current input frame is the first frame arriving to this stage since the MTI process is started as indicated in . If this is indeed the first frame that has managed to get this far Yes then the input frame is saved as a canonical image and the detection system attempts to retrieve the next input frame of via Node A . Canonical images serve as the short term memory of the image sequence and create adaptive background information by continuously updating the averaged images. If the current input frame is not the first frame arriving to this stage in this process No then a decision has to be made whether a jitter checking operation is needed . If jitter i.e. shaking between frames typically caused by noticeable shaking of the camera that could induce some false alarms is common to the current input sequence then the amount of jitter should be estimated Yes . The jitter estimation operation uses a predefined number of sensing patches of adjustable sizes to determine the most probable amount of jitter occurring between consecutive frames. This operation can reduce the false alarms effectively when the camera experiences jitter such as under a strong wind when the amount of jitter estimated is taken into consideration during the computation of difference images in the subsequent step . Whether or not the jitter estimation is performed the process moves on to the following step .

To determine what new changes occur in the current frames one should obtain a reliable change indication image i.e. a change map . The first operation in this step is to compute an even number of difference images by subtracting the current input frame from an even number of averaged images. As previously described the averaged images are produced and updated by using disjoint sets of canonical images during the MTI process provided by the embodiments of the invention. The jitter estimation from the previous optional step if available is used in the computation of difference images. The change map is then obtained by combining the difference images pixel by pixel through multiplication or other suitable mathematical operations. Because the methodology multiplies an even number of difference images derived from disjoint sets of canonical images the resulting change map is always an all positive matrix regardless of the polarity of the moving or changed targets.

On a given difference image the strength and length of the trailing ghost shadow is reciprocally and proportionally related to the number of canonical images used to form the corresponding averaged image respectively. Because the averaged images are computed using disjoint sets of canonical images the trailing ghost shadows of a given moving target would show up at different places on different difference images hence can be easily suppressed through a multiplication operation since the area on the difference image that does not contain either target or shadow would have zero or near zero pixel values . On the other hand the current location of a moving target always appears at the same location on all difference images typically and easily recognizable as large positive pixel values.

Next the magnitude of change based on the reliable values in the change map is measured . This measurement is carried out on non overlapping partitioning blocks or patches across the entire change map to avoid overlooking the changes incurred by small targets over a relatively calm background. Small pixel values below a predefined noise threshold typically representing the variations caused by sensor noise are ignored in this measurement. The result of this measurement is passed to the following decision node . If any significant change above a predefined change threshold is found in any block on the change map Yes then the process moves to Node C which is the ending connection node in and the starting connection node in . Otherwise it means nothing significant has changed in the current input frame No and the process moves to fetch the next input frame of via Node A as the connection point.

Node C connects the process from to which leads to the enhancing step of the change map originally obtained in step of . The signatures of valid targets in the original change map are often inconsistent incomplete and noisy. One may apply different signature enhancing techniques to improve the target silhouette and reduce unwanted noises in the change map. These techniques include pyramidal mean stacking where the value of a given pixel is replaced by the sum of its local means which are computed based on different neighborhood sizes centering at that pixel as well as other morphological methods that involve the opening of regions and closing of gaps related to each target silhouette. As the result the target signature becomes fuller and stronger while the speckles of noise are removed or significantly reduced.

Thereafter all the blocks that are previously identified in step of as experiencing noticeable changes are examined and the location with the highest value in the enhanced change map is determined and recorded . Next it is determined whether this highest value is below a user defined minimum acceptance detection threshold . If this peak value is below the acceptable threshold Yes then the process moves to ending connection Node D . If the peak value is above the acceptable threshold No then the next decision is whether the process has already reached the predefined maximum number of detections for this input frame. If the process has reached the maximum number of detections allowed Yes then the process moves to ending connection Node D . Otherwise No the dimension of the changed object for the current detection is estimated by measuring the width and height of all apparent edges of this object. Then the target type and velocity of the current detection are determined and recorded . To avoid the neighboring pixels of the current peak value which are associated with the same object being chosen in the next selection cycle all neighboring pixels within the neighborhood of the selected location are nullified . The size of this neighborhood is the same as the estimated dimension of the current object. Then the process moves to determine the next valid detection and repeats the loop until either the remaining peak value is below the minimum detection acceptance threshold or the maximum number of detections has been reached.

Once all of the valid or allowable detections have been made the process continues to Node D which is the ending connection node of and the starting connection node of . The next step is to update the content of canonical images and averaged images. The current input frame is incorporated into the most recent set of canonical images and oldest frame of the oldest set of canonical images is purged. The rest of the images in the canonical image sets and separation buffers are forwarded one step in the order of the timeline. Due to the content shifting in the canonical sets the averaged image associated with each canonical image set is also updated accordingly. However not all of the information of the current input frame is incorporated into the averaged image. Rather only the relatively stable blocks i.e. those without significant change observed in step of for the past few frames are used to update the averaged image.

The next step of the process is to produce the detection results by marking boxes on the input frame to identify the location and dimension of each detected object. These textual or graphical results can be shown on a user s interface or stored in a storage device i.e. hard drives . Then the process checks for new instructions and queries from a user and processes them accordingly. The next decision to be made is whether the process should be terminated either because the user has issued a stopping command or all the available input frames have already been processed. If the process should continue No then it moves to get a new input frame of via the connecting Node A . Otherwise Yes the process moves to the terminating node and the MTI methodology provided by the embodiments of the invention is terminated exit .

Generally the embodiments of the invention include the creation of two averaged images by averaging two separate and disjoint sets of the previous input frames or canonical images. A change map is obtained by first subtracting the current input frame from both averaged images separately and then multiplying the two difference images pixel by pixel. In this way the trailing ghost shadows in the two difference images are suppressed in the resulting change map. Furthermore the multiplication operation always produces a high positive value at the areas of movement regardless of the intensity of the moving objects with respect to their surroundings. In other words the moving or changed targets can be located much easier while the false alarms are suppressed everywhere else.

A system for tracking moving targets in video images in accordance with an embodiment of the invention may include a computer device comprising a processor s such as the central processing units or CPUs shown in each comprising sub components not shown which are adapted to perform multiple functions including but not limited to retrieving a plurality of reference video frames each comprising arrays of digital pixels computing a first averaged image for each of the plurality of reference video frames wherein each pixel value of the first averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the plurality of reference video frames computing a second averaged image for a second set of the plurality of reference video frames wherein each pixel value of the second averaged image comprises an average pixel intensity value associated with all corresponding pixel values in the plurality of reference video frames viewing an input video frame comprising arrays of digital pixels wherein the input video frame is sequenced consecutively after the plurality of reference video frames subtracting the input video frame from the first and second averaged images separately to form two difference images and combining the difference images to form a change map.

The CPU may further be adapted to multiply each pixel value associated with a first difference image with the value of the corresponding pixel of a second difference image combine an even number of difference images together wherein the even number is at least two compute a mean and standard deviation associated with the average pixel intensity values for each predefined non overlapping and fully partitioning blocks of the change map and measure a magnitude of change experienced in each partitioning block of the change map.

Furthermore the CPU may further be adapted to enhance a digital signature of moving objects in the change map using a pyramidal mean stacking process determine a pixel location in the enhanced change map that exhibits the highest pixel intensity value determine whether the highest pixel intensity value meets a minimum acceptance threshold for detection and determine whether a maximum allowable number of detections per input frame has been reached. The CPU may further be adapted to predefine values for the minimum acceptance threshold for detection and maximum allowable number of detections per input frame.

The embodiments of the invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment including both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the embodiments of the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can comprise store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

A representative hardware environment for practicing the embodiments of the invention is depicted in . This schematic drawing illustrates a hardware configuration of an information handling computer system in accordance with the embodiments of the invention. The system comprises at least one CPU . The CPUs are interconnected via a system bus to various devices such as a random access memory or RAM a read only memory or ROM and an input output I O adapter . The I O adapter can connect to peripheral devices such disk units and tape drives or other program storage devices that are readable by the system. The system can read the inventive instructions on the program storage devices and follow these instructions to execute the methodology of the embodiments of the invention. The system further includes a user interface adapter that connects a keyboard mouse speaker microphone and or other user interface devices such as a touch screen device not shown to the system bus to gather user input. Additionally a communication adapter connects the system bus to a data processing network and a display adapter connects the system bus to a display device which may be embodied.

This appendix provides an exemplary example of computer program code which may be used to implement the methodology provided by the embodiments of the invention. The computer program code described below which is written in ANSI C language is merely an example of the implementation of the embodiments of the invention and those skilled in the art would readily understand that other computer program codes could equally be used in accordance with a programmer s preferred choice and the embodiments of the invention are not limited to any particular computer language or code to implement the embodiments of the invention.

The first program referred to as TRACKING.C performs the major task of tracking moving targets in a given sequence of images. It includes the preprocessing step that operates on the input images to get some insights on the characteristics of these images and modifies them if necessary to help the subsequent processing steps. It also performs target detection and various reporting functions. It is a part of the overall software which is used to perform the moving target detection and tracking for a video surveillance application.

The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can by applying current knowledge readily modify and or adapt for various applications such specific embodiments without departing from the generic concept and therefore such adaptations and modifications should and are intended to be comprehended within the meaning and range of equivalents of the disclosed embodiments. It is to be understood that the phraseology or terminology employed herein is for the purpose of description and not of limitation. Therefore while the embodiments of the invention have been described in terms of preferred embodiments those skilled in the art will recognize that the embodiments of the invention can be practiced with modification within the spirit and scope of the appended claims.

