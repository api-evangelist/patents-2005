---

title: Controlling display screen legibility
abstract: Computer screen legibility is controlled. A logically topmost software window of a particular color and of a certain transparency is created. Additionally, a pattern is used to further control legibility. The window allows screen objects logically beneath it on a z-axis to be viewed and manipulated and the window reduces a contrast of screen objects logically beneath it on the z-axis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07644369&OS=07644369&RS=07644369
owner: Rocket Software, Inc.
number: 07644369
owner_city: Newton
owner_country: US
publication_date: 20050617
---
This application is a Continuation In Part of U.S. Utility patent application Ser. No. 10 882 552 entitled Controlling Display Screen Legibility filed Jul. 1 2004 which claims the benefit of and priority to U.S. Provisional Patent Application Ser. No. 60 554 889 filed Mar. 19 2004 the disclosures of both of which are hereby incorporated by reference in their entirety.

In today s mobile information technology environment e.g. computing or consumer electronics environment individuals need to guard their privacy against information thieves hackers and even just the curious snoop passing by. No longer are address books left at home or company secrets stored in a drawer at the office they are carried with the individual as they move from home to work and to all points in between. Various methods from file level encryption to power on passwords have been employed to secure documents stored on laptop computers. Little is available however to protect the mobile user from visual eavesdropping. Oftentimes employees find themselves checking e mail or working in common areas such as airports or coffee shops. In these areas passers by or people at the next table may have a clear view of an employee s screen. Depending on various factors such as available light and the angle of view an unprotected laptop screen may be readable unbeknownst to the employee from the side or from over her shoulder even up to several feet away.

Companies such as 3M sell physical filters that are placed over a computer screen to prevent unwanted viewing. These screens filter out light that is emanating at an angle and only allow out light that is emanating perpendicular to the plane of the screen. The 3M screen in particular utilizes a technology similar to venetian blinds to prevent errant light from escaping at an undesired angle. Therefore the light representing what is on the screen does not emit at a non perpendicular angle and is not easily viewed from the side. While this helps prevent others from viewing screen content off center it does not solve the problem of unintended viewing from a direct orientation at a distance. Physical screens also require the employee to lug around another piece of hardware and place the onus of implementing security on the user. If the employee finds the device cumbersome or clumsy the likelihood that it will be used and used consistently is diminished.

Applications such as WinAmp and Actual Transparent Windows by Actual Tools utilize transparent application window functionality to allow a user to view applications beneath the window of the topmost application window.

In accordance with at least one aspect of the invention screen obscurity that is easy to use and hard to defeat is provided. The limitations of physical screens are avoided while a satisfactory screen obfuscation is provided with respect to multiple viewing angles and distances.

In accordance with at least one embodiment of the present invention a method of controlling computer screen legibility is provided. The method includes creating a logically topmost software window. The window includes pattern transparency and a z axis orientation attributes. The method further includes allowing a screen object which has a z axis orientation that is less than the z axis orientation of the logically topmost software window to be viewed and manipulated. The pattern and or the transparency of the logically topmost software window reduces a contrast of the screen object.

The logically topmost software window further includes a height and a width attribute. In some implementations the method further includes determining a second height and a second width of a display screen in which the logically topmost software window is viewed. In some implementations the methods further includes changing the first height to equal the second height and or changing the first width to equal the second width. This effectively covers the entire display area of the display screen. Alternatively the method may include changing the first height to be less than the second height and or changing the first width to be less than the second width. This creates a logically topmost software window for only part of the display screen area.

In another aspect there is a method of controlling display screen legibility that includes creating a logically topmost software window that has a pattern a transparency and a z axis orientation. The method also includes allowing a screen object that has a z axis orientation the z axis orientation of the screen object being less than the z axis orientation of the logically topmost software window to be viewed and manipulated. The pattern and the transparency of the logically topmost software window reduces a contrast of the screen object.

In another aspect there is a means for controlling display screen legibility. The means includes a means for creating a logically topmost software window comprising a pattern a transparency and a z axis orientation. Additionally the means for controlling display screen legibility also includes means for allowing a screen object that has a z axis orientation the z axis orientation being less than the z axis orientation of the logically topmost software window to be viewed and manipulated. The pattern or the transparency of the logically topmost software window reduces a contrast of the screen object.

In another aspect there is a computer readable storage medium containing a set of instructions for a general purpose computer having a user interface comprising a screen display the set of instructions being operative to cause the general purpose computer to create a logically topmost software window that has a pattern a transparency and a z axis orientation. The instructions are further operable to cause the general purpose computer to allow a screen object that has a z axis orientation the z axis orientation of the screen object being less than the z axis orientation of the logically topmost software window to be viewed and manipulated. At least one of the pattern or the transparency of the logically topmost software window reduces a contrast of the screen object.

In another aspect there is a system for controlling legibility of a display screen. The system includes software that provides a graphical user interface to a user via the display screen and software that creates a window the window overlaying the graphical user interface. The window includes at least one of a transparency or a pattern and the window reduces a contrast of the graphical user interface for a person with an undesired orientation to the display screen.

In any of the implementations described above the pattern may be one or more of but is not limited to the following a wavy line a pair of wavy lines a color different than the color of the screen object a swapping of the screen object s color and the text color a crescent a pair of crescents a sinusoidal waveform a modulated sinusoidal waveform a grid or any combination thereof. In some implementations the pattern is repeated horizontally across the window. In other implementations the pattern is repeated vertically across the window. In still other implementations the pattern is displayed diagonally or is repeated in a manner that is a combination of horizontal and vertical repetitions.

While the present invention will be described in connection with a preferred embodiment thereof it will be understood that it is not intended to limit the invention to that embodiment. On the contrary it is intended to cover all alternatives modifications and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims. Other aspects and advantages of the present invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings illustrating the principles of the invention by way of example only.

Computer screens have a readability limit known as fall off due to the method employed by the screen to display data. The fall off of a liquid crystal display LCD is typically higher than that of a CRT. This is due to the angle the liquid crystals align to when emitting light. The light emitted from a LCD is projected in a plane generally perpendicular to the screen. When viewed from the side laptop screens are typically harder to read than CRTs because less light is being directed to an angled viewer. With less light being directed to the angled viewer the need for a large contrast between background and foreground data is increased when attempting to maintain readability. At least one embodiment of the present invention takes advantage of this concept in that it decreases the contrast between foreground data and background dramatically making the screen harder to read especially from the side.

The contrast between light and dark is what enables a user to discern words or images from background colors. For example black letters on a white page have a high contrast and are thus very readable. Narrowing the contrast gap between data and background amplifies a computer screen s fall off. This limits the ability of a third party to make out what is on the screen. For example dark gray letters on a light gray background are harder to read than black letters on a white background. An embodiment of the invention applies a contrast filter to the desktop on the computer screen of the computer user. By logically overlaying a red filter over a black text on white background embodiment the difference in contrast between white e.g. now light red and black e.g. now dark red is diminished. The lowering of the screen s contrast causes the screen s readability to fall off dramatically when the screen is viewed from the side e.g. by a third party. In addition readability from a distance is reduced because as distance from the screen is increased the two colors e.g. light red and dark red visually blend together. In addition to colors patterns may be used as well. For example the screen may have portions of greater and lesser contrast because a wave pattern is used in conjunction with the color selected. Alternatively the pattern may be a wavy line a pair of wavy lines a swapping of the screen object s color and the text color a crescent a pair of crescents a sinusoidal waveform a modulated sinusoidal waveform a grid a color different than the color of the filter e.g. the pattern is portions of red color and orange color in for example a pattern as described above or any combination thereof. The pattern may be repeated horizontally vertically or a combination of both. Greater obscurity is obtained when the pattern flows in the same orientation e.g. horizontally as the underlying text. Additionally it is beneficial to produce a pattern that is approximately the same height as the underlying text e.g. 9 to 11 points.

As illustrated in in at least one implementation shade creation step and thus contrast reduction is accomplished through a series of sequential steps. In other embodiments one or more of the steps may be executed in parallel in a different order or together with other steps. By use of an aspect of the Windows Application Programming Interface API e.g. in at least one embodiment a call to the SystemParametersInfo routine the size of the user s desktop is calculated step and a shade is created in accordance with the desktop size step . Though a typical application window covers available space on a desktop this does not usually encompass space used by taskbars and system trays. At least one embodiment of the present invention provides a shade that covers the entire desktop including taskbars and system trays via calculating the screen size and then adding an amount to the calculated window height. In at least one embodiment the amount is 100 pixels. In other embodiments only part of the screen is obfuscated an amount to be determined by the user at runtime e.g. through an application setting or by changing the shade window size .

In the method the shade is painted using a brush attribute. In some embodiments the brush is a specified color step . In at least one embodiment the shade uses the Windows API FillRect rectangle brush method call to accomplish this wherein the brush is a Windows API object that has the specified color as an attribute. The color may be specified through a default value a pre defined scheme provided by the user or interactively through direct or indirect user input steps . In some embodiments the brush in addition to a color also includes a BitMapPattern. In those embodiments not only is a color applied to the shade the brush additionally paints the BitMapPattern on the shade. The BitMapPattern is typically a pattern that has two or more colored aspects. A first colored aspect forms the pattern seen by a viewer and a second colored aspect represents the portions of the pattern that will be transparent described below . The shade is then instructed to become a LayeredWindow step . In at least one embodiment making the shade a LayeredWindow is accomplished by calling the Windows API method SetWindowLong method and passing in the following parameters the shade window a parameter indicating an extended window style will be set and the Layered attribute i.e. WS EX LAYERED. The shade being a LayeredWindow allows other application windows and screen objects beneath the shade such as the task bar to be viewed even though the shade may be on top of them. The shade is then instructed to additionally become a TransparentWindow step . Similar to the setting of the LayeredWindow attribute the shade window is made transparent in at least one embodiment by calling the SetWindowLong method. The first two parameters are the same as previously described e.g. the shade window and an attribute indicating an extended window style is being set but in this instance the third parameter indicates the style to be applied is Transparent i.e. WS EX TRANSPARENT. The TransparentWindow allows the shade to pass mouse keyboard and other user input to applications beneath the shade beneath is in relation to the shade s z axis orientation the higher the z axis value the fewer the number of other application windows that are on top of the shade .

The shade is then instructed that it is the TopMostWindow step . In at least one embodiment this is accomplished by passing in the extended window style WS EX TOPMOST to the window creation method i.e. CWnd CreateEx . This forces all other application windows to reside beneath the shade. In some embodiments the shade periodically polls the system to determine if it is still topmost. If at any regular point in time it is not it instructs itself to be so. In other embodiments any time another application window becomes topmost the shade immediately or eventually becomes topmost in response. The application still receives user input but is beneath the shade. In embodiments where just a color is painted on the shade the shade is then instructed of the shade s opacity and alpha blend values step . In embodiments where a pattern is applied to the shade the shade is instructed to make particular areas of the BitMapPattern transparent by passing a LWA COLORKEY variable as a parameter when setting step LayeredWindow attributes. The LWA COLORKEY parameter is a color reference e.g. white . The color described by the LWA COLORKEY variable indicates that the shade is to render the color aspects of the BitMapPattern that match that color as transparent. For example in a shade with a crescent pattern the pattern may consist of red crescents against a white background. When creating the shade the LWA COLORKEY variable is passed as white . Therefore the shade will be painted using the BitMapPattern of red crescents against a white background the white background then being rendered transparent because white is the value of LWA COLORKEY. The shade s opacity alpha blend and LWA COLORKEY values may be specified through default values a pre defined scheme provided by the user or interactively through direct user input. Additionally in some embodiments the API calls may be combined or executed in an order different than listed above.

Once the shade is created the user interacts normally with the computer. demonstrate aspects of the invention. illustrates a direct orientation with respect to a computer depicting a normal screen i.e. without a shade being applied . There is a distinguishable contrast between the text and the background . illustrates the same direct orientation with respect to the computer of but with a shaded screen i.e. with a shade applied in accordance with one embodiment of the invention . Note that little legibility is lost when viewed at a distance from which a normal user would view the laptop though a slight reduction in contrast is noticeable between the text and the background i.e. the screen in appears brighter than the screen with the shade applied in . is a side view of the computer and screen of wherein the shade is not running and again a distinguishable contrast is found between the text and the background . is the same side view as but now the computer has a shaded screen with the shade applied in accordance with one embodiment of the invention. Note that the screen content e.g. text and background is obfuscated significantly.

Because the user in direct orientation with the computer screen views the screen as depicted in input intended for other applications is still able to be transmitted to the respective existing applications and applications may be opened or closed. The only difference in user computer interaction is because all applications are behind the shade that the user sees a slightly reduced contrast version of the screen when directly oriented at a normal distance in . However when viewing from the side side view in a third party observer generally sees a blur of the shade color because the contrast between text or any displayed data for that matter and background has been narrowed. An observer with a direct orientation viewing from a distance sees a blur similar to that illustrated in because the shade causes data and background to blend together as the distance between screen and observer increases.

Though Windows 2000 is used throughout as an example it should be noted that alternate embodiments of the invention run on but are not limited to any Windows platform e.g. Windows 95 Windows 98 Windows Me Windows NT Windows XP Windows Longhorn or other derivations and embodiments of Microsoft s Windows brand Operating System. Beneficially embodiments of the present invention that also run on Macintosh platforms e.g. OS 9 or OS X or on Unix like environment such as Linux FreeBSD NetBSD or OpenBSD are covered within the scope of the essential characteristics and spirit of the invention. Additionally methods that access video card drivers to overlay the transparent colorized shade or methods that involve passing messages different than the examples provided in reference to Windows 2000 to the operating system to accomplish the shade are also contemplated and covered within the scope and spirit of the invention.

From the foregoing it will be appreciated that the systems and methods provided by the invention afford protection from third party viewing and overcome the cumbersome nature and disadvantages of physical screen filters.

One skilled in the art will realize the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. The foregoing embodiments are therefore to be considered in all respects illustrative rather than limiting of the invention described herein. Scope of the invention is thus indicated by the appended claims rather than by the foregoing description and all changes that come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.

