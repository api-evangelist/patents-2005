---

title: Automatic assigning of shortcut keys
abstract: Automatic assignment of shortcut keys for launching applications or for providing other commands is provided based on the position of corresponding application listings or shortcuts in a menu. The menu may include an applications menu, such as a start menu. The menu may also include an application launch bar listing applications that may be launched therefrom by selecting the respective application, or by entering shortcut keys that are automatically assigned based on the position of the application listing on the launch bar. Methods are provided for assigning application launch shortcut keys, for identifying assigned shortcut keys, for modifying shortcut keys, and for using shortcut keys for instantiating or switching applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07134094&OS=07134094&RS=07134094
owner: Microsoft Corporation
number: 07134094
owner_city: Redmond
owner_country: US
publication_date: 20050114
---
The present invention relates to assigning shortcut keys on a computer system. In particular the present invention relates to methods software computer systems and data structures for assigning shortcut keys.

Computer shortcut keys also known as hotkeys are hardware driven commands that permit a user to enter commands quickly into a computer and or to navigate the computer. For instance conventional keyboard shortcut keys are one or more keyboard keys that correspond to entry of a command when activated. Some known examples of keyboard shortcut keys include selection of the shift key on conventional keyboards along with another key s such as selection the shift delete or shift end keys. Other examples of shortcut keys include buttons assigned to a mouse gestures associated with a touch sensitive pad buttons on a personal digital assistant PDA etc. or combinations thereof. In general shortcut keys are designed to help shorten the time required to perform frequently used commands. They may be pre determined for the computer system and or for certain applications and they may be assignable by the user.

Conventional computer applications present commands to the user in a menu or toolbar from which the user can select the desired command. The menus often show a pre defined shortcut that is associated with each command in the menu. For example many applications assign the keyboard keys Control S as a shortcut for the command Save. In a menu for these applications Ctrl S may be shown to remind the user of this shortcut.

Conventional computer systems and applications permit users to assign shortcut keys for particular commands of the system or for a specific application. They do so by requiring the user to identify the desired command and to identify desired shortcut keys to be assigned thereto. Each assignment is manually entered by the user for each shortcut. Conventional methods for assigning shortcut keys are often cumbersome for the user.

Applications are launched in conventional computer systems having a graphical user interface by allowing the user to select an icon representing the application. Some systems include a start menu that lists applications installed on the computer system or a launch bar that shows icons for applications on the system. The user launches a desired application by locating the start menu or launch bar and then by selecting the desired application from the start menu list or launch bar. Start menus and launch bars simplify execution of the application for the user but may be unduly cumbersome or time consuming for frequently launched applications.

Aspects of the present invention provide automatic assignment of shortcut keys for launching applications or for providing other commands. One aspect of the present invention provides a start menu showing shortcut keys assigned to applications based on their position on the menu in which each set of shortcut keys may cause execution of an application corresponding to its position on the menu or that may cause another action to occur that corresponds to its position on the menu. Another aspect of the present invention includes an application launch bar identifying applications that may be launched therefrom by selecting the respective application or by entering shortcut keys associated with the position of the application on the launch bar.

Further aspects relate to methods for assigning application launch shortcut keys in accordance with the location of a representation of the application on a graphical user interface. Additional aspects of the invention may include automatic assignment of shortcut keys and related functionality identification of assigned shortcut keys modification of shortcut keys and using shortcut keys for instantiating or switching applications. In other aspects computer executable instructions for implementing the disclosed methods are stored on computer readable media. These and other aspects are addressed in relation to the figures and related description.

Aspects of the present invention provide methods user interface displays computer executable instructions and data structures for assigning shortcut keys for launching applications and or entering computer commands. For example aspects of the present invention may automatically assign keyboard shortcut keys to applications based on their position in a start menu or a launch bar. In addition the graphical user interface according to aspects of this invention may allow users to assign shortcut keys quickly and easily for launching applications or for entering other commands. Furthermore aspects of the present invention may identify user defined shortcut keys for launching applications or entering commands. These and other aspects of the present invention are described in detail below.

This document is divided into sections to assist the reader. These sections include the following Terms General purpose Computing Environment and Assigning Shortcut keys.

Menu on a user interface An ordered array of items such as shortcuts files folders and tasks which correspond to computer commands tasks or actions. Toolbars launch bars option lists etc. are examples of menus.

Registry A database in MICROSOFT WINDOWS operating systems that contains configuration and control information for the computer system and for specific applications as well as which stores user preferences.

Shortcut A graphical representation such as an icon that links to a file folder or task. User selection of the shortcut effectuates selection of the linked original item.

Shortcut keys or Hotkeys Hardware driven commands that permit a user to enter commands quickly into a computer and or to navigate the computer. The hardware driven commands may include selection of a shortcut an original file or folder or a task. The plural term shortcut keys as used herein may mean a single user selectable hardware device such as a single key or button or a plurality of user selectable hardware devices such as a combination of keys or buttons.

Start menu An ordered array of running and or available applications folders and or selectable tasks such as settings and shutdown tasks.

User Mode The nonprivileged processor mode in which application code runs including protected subsystem code.

In accordance with aspects of the present invention a graphical user interface GUI is provided on a computer for displaying output on the system s monitor and for managing user input. Although not required the invention will be described in the general context of computer executable instructions such as program modules being executed by a personal computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

As an example for illustrating aspects of the present invention a system GUI is discussed which may include an operating system GUI such as the GUI of a MICROSOFT WINDOWS operating system that may include the Win 32 subsystem Win32 . In these examples the Win32 subsystem may have exclusive responsibility for displaying output on the system s monitor and for managing user input. Architecturally this means that the other modules may need to call Win32 subsystem functions to produce output on the display. It also means that the Win32 subsystem may need to pass user input actions to the other modules when the user interacts with their folders. In addition it means that system commands such as shortcut keys assigned to launch an application may initially be captured by the Win32 subsystem. It is understood that with other operating systems other types of system level user interfaces or shells may be responsible for monitoring and managing user input.

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printers which may be connected through an output peripheral interface.

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

As further shown in application programs may include programs which are programs running or that may run within operating system . For example the programs may be application programs such as word processing programs spreadsheets web browsers etc. In operation when any of programs GUI or other program modules needs to host a folder within GUI it calls a function defined within WIN32 API as is known within the art. WIN32 API returns a handle or identifier referencing the folder that it created within GUI provided by operating system . Those of ordinary skill within the art will appreciate that while computer has been described in relation to the MICROSOFT WINDOWS operating system folders of the MICROSOFT WINDOWS operating system and the WIN32 API the invention is not so limited.

In the previous section an overview of the operation of an example computer was described. In this section embodiments illustrating aspects of the present invention will be discussed using computer for illustration purposes. It is understood that the invention as well as the following embodiments may be used with a variety of other computer systems.

Referring now to computerized methods data structures user interfaces and computer readable instructions according to embodiments of the invention are generally shown. shows a graphical user interface display on the monitor of the computer of according to an embodiment of the invention which is generated by GUI . For the embodiments discussed hereafter GUI provides the user interface displays records changes in assignments for shortcut keys and monitors the system for user selection of the shortcut keys. A shortcut keys module may be provided to effectuate modifications to shortcut key assignments to monitor for user selection of shortcut keys to provide some or all of the shortcut key methods discussed hereafter or to provide other related functionality. However the program instructions of shortcut keys module may simply be part of GUI . Alternatively shortcut keys module may include program instructions outside of operating system that provide some of the functionality discussed hereafter. In addition shortcut keys module and GUI may be protected subsystem code operating within a user mode portion of operating system .

As shown in user interface display is a display that is shown after a user has requested the appearance of a start menu . The start menu may be requested by various mechanisms such as by the user pressing a dedicated start button on a keyboard or by otherwise selecting an option on a piece of hardware such as a remote control device a mouse or another input hardware device. Once selected the input hardware device transmits a signal to the host computer requesting a display of the start menu . As an example assume start menu is displayed in response to user selection of the WINDOWS key WIN found on many conventional keyboards. In response the host computer outputs a video command to display the start menu .

The start menu may be displayed with various tasks or applications listed thereon. As shown in the example of start menu may list Applications Application X Application Y task labeled Control Panel and task labeled Sleep. User selection of an application listed on the start menu may result in execution of the application whereas user selection of a task may cause the computer to take a specific action or actions associated with the task. For example selection of task will cause a Control Panel folder to be displayed and selection of task will cause the computer to go into a sleep mode. As shown start menu includes a first region in which the listing of applications and or tasks may be fixed and a second region in which the listing of applications may be determined based on a pre determined criteria. For example second region may display applications accessed within the last week by a particular user.

Applications and or tasks may be added to start menu in various ways such as those provided for by MICROSOFT WINDOWS operating systems. For example a user may drag an icon or shortcut representing an application into the first region of the start menu to fix the listing of that application in the start menu. In another example a user may right click on a representation of an application and select a Pin to Start Menu or similar option which may effectuate listing of that application in the start menu. In further examples certain applications may be listed in first region as default applications and or be listed therein based on an application installation option. Once fixed in first region the respective application remains listed therein until unpinned by the user or removed based on other criteria such as by the application being uninstalled. Thus Applications shown in will remain listed in first region until unpinned or otherwise removed. Similarly tasks may be added by dragging them into first region by selecting a right click Pin to Start Menu option for the task or by other mechanisms.

Once pinned into first region applications and tasks listed therein may automatically be assigned a shortcut based on their respective position within first region . Thus as shown in Application may automatically be assigned the shortcut WIN 1 which means user selection of the WINDOWS key along with the number 1 key may automatically launch Application . Similarly Application may be assigned the shortcut WIN 2 Application may be assigned the shortcut WIN 3 Application may be assigned the shortcut WIN 4 and so on for additional applications added into first region . There may be a size limit for first region of the menu such as a limit of ten applications to correspond with shortcut keys WIN 1 9 and WIN 0. Optionally the shortcut keys could increase beyond ten applications such as WIN A for the eleventh application WIN B for the twelfth and so on.

Many different types of shortcut keys could automatically be assigned using the control key CTRL the shift key SHIFT the command or APPLE key CMD in MACINTOSH computer systems etc. For instance combinations like CTRL SHIFT CTRL CTRL ALT WIN CMD etc. could be used for one or more menus as well as for multiple portions thereof. Combinations using the WIN key may be a desirable scheme for WINDOWS systems as it is not used extensively in existing systems and likely will not conflict with other shortcut keys.

Such an automatic assignment mechanism may encourage users to make increased user of shortcut keys which can improve overall usefulness and efficiency for the system. As such users can quickly launch and or switch between applications and or tasks. In the event of unexecuted applications user selection of shortcut keys may initially launch the application. In the event of executed applications user selection of shortcut keys may instantiate or switch between executed applications. Similarly selection of shortcut keys for an unexecuted task may execute the task e.g. selection of shortcut keys for an Open My Docs task may open the folder My Documents whereas selection of shortcut keys for an executed task may instantiate switch to the executed task e.g. switch to the open My Documents folder .

Shortcut keys data structure includes shortcut keys data for both User and User which may be stored in the Registry file for computer in user specific portions such as within the top level key HKEY USERS of a MICROSOFT WINDOWS operating system. As such User data may be accessible by GUI when user is logged in to the computer and User data may be accessible when user is logged in. Modifications to the data may be made by GUI and or by shortcut keys module on an on going basis by changing the registry in accordance with changes in shortcut key assignments. In the embodiment shown in shortcut data for each user may include a menu identifier that identifies a particular menu corresponding to the assigned shortcut keys. For each menu and user the shortcut data may include position information listing descriptions and shortcut data . Position information identifies the position for listings within a particular menu. Listing descriptions describe the application task or other listing assigned for each shortcut. Shortcut data identifies the shortcut keys for each applicable position and or listing. In the example shown User data corresponds to the data used by GUI and or shortcuts module to create the displays of . In addition User data corresponds to the data used by GUI and or shortcuts module to create the display of discussed hereafter.

As with start menus shortcuts to applications and or tasks may be added to the launch bar in various ways such as those provided for by MICROSOFT WINDOWS operating systems. For example a user may drag an icon or shortcut representing an application onto the launch bar. Once added to the launch bar the respective shortcut may remain listed thereon until removed by the user or removed based on other criteria such as by the application being uninstalled. The order of shortcuts on the launch bar may be arranged by the user by dragging the individual shortcuts to a desired location.

Similar to the start menus discussed above shortcuts listed on launch bar may automatically be assigned shortcut keys based on their respective position on the launch bar. Thus Application of may automatically be assigned the shortcut WIN 1 which means user selection of the WINDOWS key along with the number 1 key may automatically launch Application . Similarly the My Docs Folder shortcut may be assigned shortcut keys WIN 2 Application X may be assigned shortcut keys WIN 3 Application may be assigned shortcut keys WIN 4 and so on for additional shortcuts added to the launch bar. Upon user identification of a shortcut such as hovering a mouse pointer over the shortcut a popup or other identifier may identify the corresponding shortcut keys to the user. GUI and or shortcuts module may manage data associated with launch bar in a similar manner as with start menus. Thus shortcut keys data structure of may store data for launch bar as represented in with the date for User that corresponds to launch bar .

Similar to launch bar shortcuts listed on launch bar may automatically be assigned shortcut keys based on their respective position on the launch bar. Thus Application of may automatically be assigned the shortcut WIN 1 which means user selection of the WINDOWS key along with the number 1 key may automatically launch Application . In addition shortcuts shown on overflow menu may automatically be assigned shortcut keys based on their location in the data structure for launch bar on their respective position within the overflow menu . Thus because Application X is the next shortcut in the shortcut keys data structure of in the example for user the Application X shortcut is automatically assigned to shortcut keys WIN 3. Likewise Application is assigned shortcut keys WIN 4 and so on for additional shortcuts on the overflow menu.

Referring now to a graphical user interface display on the monitor of the computer of is shown according to yet another embodiment of the invention which may be generated by GUI . Rather than automatically assigning shortcut keys according to the embodiments discussed above a shortcut keys assignment folder may be selected from start menu to facilitate assignment of shortcut keys to desired items pinned in the start menu. Shortcut keys assignment folder may be provided as an alternative to drag and drop or menu driven mechanisms for adding items to a menu.

The user interface display of is shown after a user has requested the appearance of start menu and has selected shortcut keys item therefrom. Selection of item effectuates the opening of shortcut keys assignments folder . Folder may be maintained and controlled by shortcuts module on computer by GUI and or by other modules. Users may interact with folder to manually enter or drag items to a desired position and to effectuate thereby a desired shortcut keys assignment. Folder allows users to organize the desired items easily and to assign shortcut keys based on the positions of the items. For example a user may choose to leave a position and a corresponding shortcut keys assignment open for future use or for other reasons such as based on a personal preference. Modification of folder changes the arrangement of the corresponding menu such as start menu . Thus in the example shown in fixed region of start menu includes the arrangement of items and the corresponding shortcut key assignments that were organized by the user via folder . Start menu also includes slot left unassigned by the user in folder .

Referring now to a flow diagram is shown that illustrates a method for assigning shortcut keys according to embodiments of the invention which may be used in conjunction with some or all of the previously discussed embodiments. In a first step an item associated with a command or action is added to the menu at a first location. The item may be a shortcut a file a folder an application a task a user selectable link etc. The item may be added by a user added pursuant to certain criteria such as frequency of use of an application or added via other mechanisms such as pursuant to installation of application on the computer. In a second step shortcut keys are assigned to the item based on its location in the menu. The location may have been chosen by the user. It could also be the next available location within the menu e.g. the bottom slot . In step if the computer system senses that the shortcut keys are subsequently selected by the user it proceeds to step and performs the command or action associated with the selected item.

As shown in steps and after the item is added to the menu at a first location if it is subsequently moved to a second location as shown for step then for step the item is assigned second shortcut keys based on the item s position at the second location. In other words shortcut keys may dynamically be assigned to menu items as their location changes within the menu. As shown in steps and the shortcut keys associated with an item may be displayed in response to the user indicating interest in the item. For instance if a mouse pointer hovers over the item a popup folder or another display may be shown on the computer to disclose the shortcut assigned to the item. Thus for step the computer may receive an indication of interest in the item. In response to step the computer may identify the assigned shortcut keys for the item. The steps of method may be performed by a computer device such as the example computer or by a variety of other computer devices. For computer operating system GUI shortcuts module API other modules and or a combination thereof may provide instructions for performing these steps. However as GUI primarily controls the reception of user inputs and the output of information to users such as displays GUI may perform many or all of these steps.

Aspects of the present invention have been described in terms of illustrative embodiments thereof. Numerous other embodiments modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. In particular it is understood that aspects of the invention may practiced with a large variety of computing devices including personal computers mobile devices PDAs and mobile terminals. Further it is understood that aspects of the invention may be used with a large variety of hardware input devices such as keyboards mouse devices keypads etc. as well as virtual representations of input devices e.g. a touch screen displaying a keyboard keypad etc. 

