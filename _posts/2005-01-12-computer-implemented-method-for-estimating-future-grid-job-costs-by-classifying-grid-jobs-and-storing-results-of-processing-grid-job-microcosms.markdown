---

title: Computer implemented method for estimating future grid job costs by classifying grid jobs and storing results of processing grid job microcosms
abstract: A client side agent estimates future grid job costs by comparing a current grid job of a particular classification with a history of stored costs for other grid jobs of that customer of that particular classification. The grid client agent for a client system enabled to submit grid jobs to a grid provider that facilitates a grid environment, calculates a ratio of an application based metric to a grid provider metric for processing a particular grid job. The grid client agent creates a table with an entry comparing the application based metric to a cost per grid provider metric for the grid provider based on the calculated ratio. The grid client agent stores the table with the entry. Responsive to detecting a next grid job, the grid client agent estimates a cost for the grid provider to process the next grid job based on a particular number of application based metric operations required for the next grid job, translated by the ratio into the grid provider metric and multiplied by the cost per grid provider metric.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07571120&OS=07571120&RS=07571120
owner: International Business Machines Corporation
number: 07571120
owner_city: Armonk
owner_country: US
publication_date: 20050112
---
The present application is related to the following co pending applications hereby incorporated herein by reference 

The present invention relates in general to improved grid computing and in particular to efficient client side estimation of future grid job costs. Still more particularly the present invention relates to customer estimation of future grid job costs by comparing a current grid job of a particular classification with a history of stored costs for other grid jobs of that customer of that particular classification.

Ever since the first connection was made between two computer systems new ways of transferring data resources and other information between two computer systems via a connection continue to develop. In typical network architectures when two computer systems are exchanging data via a connection one of the computer systems is considered a client sending requests and the other is considered a server processing the requests and returning results. In an effort to increase the speed at which requests are handled server systems continue to expand in size and speed. Further in an effort to handle peak periods when multiple requests are arriving every second server systems are often joined together as a group and requests are distributed among the grouped servers. Multiple methods of grouping servers have developed such as clustering multi system shared data sysplex environments and enterprise systems. With a cluster of servers one server is typically designated to manage distribution of incoming requests and outgoing responses. The other servers typically operate in parallel to handle the distributed requests from clients. Thus one of multiple servers in a cluster may service a client request without the client detecting that a cluster of servers is processing the request.

Typically servers or groups of servers operate on a particular network platform such as Unix or some variation of Unix and provide a hosting environment for running applications. Each network platform may provide functions ranging from database integration clustering services and security to workload management and problem determination. Each network platform typically offers different implementations semantic behaviors and application programming interfaces APIs .

Merely grouping servers together to expand processing power however is a limited method of improving efficiency of response times in a network. Thus increasingly within a company network rather than just grouping servers servers and groups of server systems are organized as distributed resources. There is an increased effort to collaborate share data share cycles and improve other modes of interaction among servers within a company network and outside the company network. Further there is an increased effort to outsource nonessential elements from one company network to that of a service provider network. Moreover there is a movement to coordinate resource sharing between resources that are not subject to the same management system but still address issues of security policy payment and membership. For example resources on an individual s desktop are not typically subject to the same management system as resources of a company server cluster. Even different administrative groups within a company network may implement distinct management systems.

The problems with decentralizing the resources available from servers and other computing systems operating on different network platforms located in different regions with different security protocols and each controlled by a different management system has led to the development of Grid technologies using open standards for operating a grid environment. Grid environments support the sharing and coordinated use of diverse resources in dynamic distributed virtual organizations. A virtual organization is created within a grid environment when a selection of resources from geographically distributed systems operated by different organizations with differing policies and management systems is organized to handle a job request. A grid vendor may develop a grid environment to which a buyer may submit grid jobs for example.

Grid vendors may offer to process grid jobs with different performance promises and with different pricing policies. Even if standards such as those proposed by the open standards organization for Grid technologies define standard monitoring metering rating accounting and billing interfaces grid vendors will still have different physical resources available to process grid jobs and thus pricing and performance will still vary among grid vendors. In one example grid vendors have to measure the use of the grid vendor s resources by a grid job which may involve complex formulas which take into account multiple factors in addition to the actual use of resources. For example a grid vendor may dedicate a particular processor resource to a particular job and charge the grid job for the dedicated use of the processor in addition to the actual number of processor cycles the grid job required.

While grid vendors are focused on monitoring metering accounting a billing for the actual usage of physical resources at a computational cycle level grid clients or customers are focused on processing of applications and jobs at an application type level. As a result there is a lack of connection between the way that grid customers and grid vendors view the costs associated with grid jobs. Further currently each grid vendor still monitors meters and bills for grid jobs using different units of physical resource measurement. Thus because of the disconnect between the client grid job at an application level and the grid vendor measurement of use of physical resources it is difficult for grid clients to compare the costs of processing grid jobs at different grid vendors and to estimate future costs of submitting grid jobs to a same grid vendor.

Therefore in view of the foregoing it would have advantageous to provide a method system and program for estimating future job costs by classifying grid jobs in categories with client defined application based metric units converting the grid vendor defined metric costs to perform grid jobs into the client defined application based metric unit costs by category of grid job and storing the converted client defined application based metric unit costs for predicting future costs of grid jobs of the same category. In particular it would be advantageous to submit grid job microcosms or smaller representative grid jobs to multiple grid vendors to retrieve actual costs for each category of grid job on a smaller basis converting the grid vendor defined metric costs to a client defined application based metric unit cost and comparing the costs at the client defined application based metric level before submitting larger grid jobs in the future to the most cost effective grid vendor.

In view of the foregoing the invention in general provides for grid computing client side estimation of future grid job costs. The invention relates to customer estimation of future grid job costs by comparing a current grid job of a particular classification with a history of stored costs for other grid jobs of that customer of that particular classification.

A grid client agent for a client system enabled to submit grid jobs to a grid provider that facilitates an on demand grid environment calculates a ratio of an application based metric to a grid provider metric for processing a particular grid job. Then the grid client agent creates a table with an entry comparing the application based metric to a cost per grid provider metric for the grid provider based on the calculated ratio. Next the grid client agent stores the table with the entry. Then responsive to detecting a next grid job the grid client agent estimates a cost for the grid provider to process the next grid job based on a particular number of application based metric operations required for the next grid job translated by the ratio into the grid provider metric and multiplied by the cost per grid provider metric.

To calculate the ratio the grid client agent distributes a job microcosm which is a smaller representation of a particular grid job to the grid provider for processing in the on demand grid environment. Responsive to receiving the result of the job microcosm and a charge for processing the job microcosm based on a grid provider metric for the grid provider grid client agent calculates the ratio of the application based metric to the grid provider metric and identifies the cost per grid provider metric from the charge for processing the job microcosm.

When the grid client agent detects an adjusted cost per grid provider metric whether through a pricing notification or the charges for another grid job the grid client agent updates the entry for the grid provider with the adjusted cost per grid provider metric and automatically reestimates the cost for the grid provider to process the next grid job based on the adjusted cost per grid provider metric without requiring a new calculation of the ratio.

The table includes additional entries from additional grid providers who process grid microcosms of a particular job where the grid client agent calculates a ratio of the application based metric to each grid providers different metric for each entry in the table. Where multiple grid provider entries are available in the table then the grid client agent estimates the cost for each grid provider to process the next grid job based on the ratio and cost per grid provider metric in each entry and compares the costs which are calculated for the application based metric number of operation required for the next grid job.

In addition entries in the table are classified by category of grid job. Thus the grid client agent will detect the next grid job classify the grid job within one of the categories of grid job and access those entries in the table that are also classified by the same category of grid job.

Referring now to the drawings and in particular to there is depicted one embodiment of a computer system which may be implemented in a grid environment and in which the present invention may be implemented. As will be further described the grid environment includes multiple computer systems managed to provide resources. Additionally as will be further described the present invention may be executed in a variety of computer systems including a variety of computing systems mobile systems and electronic devices operating under a number of different operating systems managed within a grid environment.

In one embodiment computer system includes a bus or other device for communicating information within computer system and at least one processing device such as processor coupled to bus for processing information. Bus may include low latency and higher latency paths connected by bridges and adapters and controlled within computer system by multiple bus controllers. When implemented as a server system computer system typically includes multiple processors designed to improve network servicing power.

Processor may be a general purpose processor such as IBM s PowerPC PowerPC is a registered trademark of International Business Machines Corporation processor that during normal operation processes data under the control of operating system and application software accessible from a dynamic storage device such as random access memory RAM and a static storage device such as Read Only Memory ROM . The operating system may provide a graphical user interface GUI to the user. In one embodiment application software contains machine executable instructions that when executed on processor carry out the operations depicted in the flowchart of and others operations described herein. Alternatively the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

The present invention may be provided as a computer program product included on a machine readable medium having stored thereon the machine executable instructions used to program computer system to perform a process according to the present invention. The term machine readable medium as used herein includes any medium that participates in providing instructions to processor or other components of computer system for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Common forms of non volatile media include for example a floppy disk a flexible disk a hard disk magnetic tape or any other magnetic medium a compact disc ROM CD ROM or any other optical medium punch cards or any other physical medium with patterns of holes a programmable ROM PROM an erasable PROM EPROM electrically EPROM EEPROM a flash memory any other memory chip or cartridge or any other medium from which computer system can read and which is suitable for storing instructions. In the present embodiment an example of a non volatile medium is mass storage device which as depicted is an internal component of computer system but will be understood to also be provided by an external device. Volatile media include dynamic memory such as RAM . Transmission media include coaxial cables copper wire or fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency or infrared data communications.

Moreover the present invention may be downloaded as a computer program product wherein the program instructions may be transferred from a remote virtual resource such as a virtual resource to requesting computer system by way of data signals embodied in a carrier wave or other propagation medium via a network link e.g. a modem or network connection to a communications interface coupled to bus . Virtual resource may include a virtual representation of the resources accessible from a single system or systems wherein multiple systems may each be considered discrete sets of resources operating on independent platforms but coordinated as a virtual resource by a grid manager. Communications interface provides a two way data communications coupling to network link that may be connected for example to a local area network LAN wide area network WAN or an Internet Service Provider ISP that provide access to network . In particular network link may provide wired and or wireless network communications to one or more networks such as network through which use of virtual resources such as virtual resource is accessible as provided within a grid environment . Grid environment may be part of multiple types of networks including a peer to peer network or may be part of a single computer system such as computer system .

As one example network may refer to the worldwide collection of networks and gateways that use a particular protocol such as Transmission Control Protocol TCP and Internet Protocol IP to communicate with one another. Network uses electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are exemplary forms of carrier waves transporting the information. It will be understood that alternate types of networks combinations of networks and infrastructures of networks may be implemented.

When implemented as a server system computer system typically includes multiple communication interfaces accessible via multiple peripheral component interconnect PCI bus bridges connected to an input output controller. In this manner computer system allows connections to multiple network computers.

Additionally although not depicted multiple peripheral components and internal external devices may be added to computer system connected to multiple controllers adapters and expansion slots coupled to one of the multiple levels of bus . For example a display device audio device keyboard or cursor control device may be added as a peripheral component.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. Furthermore those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention.

With reference now to a block diagram illustrates one embodiment of the general types of components within a grid environment. In the present example the components of a grid environment include a client system interfacing with a grid management system which interfaces with server clusters servers workstations and desktops data storage systems and networks . For purposes of illustration the network locations and types of networks connecting the components within grid environment are not depicted. It will be understood however that the components within grid environment may reside atop a network infrastructure architecture that may be implemented with multiple types of networks overlapping one another. Network infrastructure may range from multiple large enterprise systems to a peer to peer system to a single computer system. Further it will be understood that the components within grid environment are merely representations of the types of components within a grid environment. A grid environment may simply be encompassed in a single computer system or may encompass multiple enterprises of systems.

It will be understood that grid environment may be provided by a grid vendor or provider where a cost for use of resources within grid environment may be calculated based on the amount of time required for a grid job to execute or the actual amount of resources used for example. In addition it will be understood that grid environment may include grid resources supplied by a single grid vendor such as a particular business enterprise or multiple vendors where each vendor continues to monitor and manage the vendor s group of resources but grid management system is able to monitor unintended changes across all the resources regardless of which vendors provide which resources. Further it will be understood that although resource discovery mechanisms for discovering available grid resources are not depicted client system or grid management system may discover grid resources advertised from local and global directories available within and outside of grid environment .

The central goal of a grid environment such as grid environment is organization and delivery of resources from multiple discrete systems viewed as virtual resource . Client system server clusters servers workstations and desktops data storage systems networks and the systems creating grid management system may be heterogeneous and regionally distributed with independent management systems but enabled to exchange information resources and services through a grid infrastructure enabled by grid management system . Further server clusters servers workstations and desktops data storage systems and networks may be geographically distributed across countries and continents or locally accessible to one another.

In the example client system interfaces with grid management system . Client system may represent any computing system sending requests to grid management system . In particular client system may send virtual job requests or requests for a quote RFQs and jobs to grid management system . Further while in the present embodiment client system is depicted as accessing grid environment with a request in alternate embodiments client system may also operate within grid environment .

While the systems within virtual resource are depicted in parallel in reality the systems may be part of a hierarchy of systems where some systems within virtual resource may be local to client system while other systems require access to external networks. Additionally it is important to note that systems depicted within virtual resources may be physically encompassed within client system .

To implement grid environment grid management system facilitates grid services. Grid services may be designed according to multiple architectures including but not limited to the Open Grid Services Architecture OGSA . In particular grid management system refers to the management environment which creates a grid by linking computing systems into a heterogeneous network environment characterized by sharing of resources through grid services.

In particular as will be described with reference to grid management system may include grid services that enable automated responses to bid requests and automated monitoring and metering of grid jobs. In addition grid management system may include additional services for automating functions performed within grid environment .

According to an advantage of the invention client system includes a grid client agent for estimating future costs of grid jobs. As will be described with reference to the grid client agent estimates future costs of grid jobs by classifying grid jobs into categories storing previously charged costs for each category of grid job in a table and accessing the table to predict future costs of grid jobs by category.

Referring now to a block diagram illustrates one example of an architecture that may be implemented in a grid environment. As depicted an architecture includes multiple layers of functionality. As will be further described the present invention is a process which may be implemented in one or more layers of an architecture such as architecture which is implemented in a grid environment such as the grid environment described in . It is important to note that architecture is just one example of an architecture that may be implemented in a grid environment and in which the present invention may be implemented. Further it is important to note that multiple architectures may be implemented within a grid environment.

Within the layers of architecture first a physical and logical resources layer organizes the resources of the systems in the grid. Physical resources include but are not limited to servers storage media and networks. The logical resources virtualize and aggregate the physical layer into usable resources such as operating systems processing power memory I O processing file systems database managers directories memory managers and other resources.

Next a web services layer provides an interface between grid services and physical and logical resources . Web services layer implements service interfaces including but not limited to Web Services Description Language WSDL Simple Object Access Protocol SOAP and eXtensible mark up language XML executing atop an Internet Protocol IP or other network transport layer. Further the Open Grid Services Infrastructure OSGI standard builds on top of current web services by extending web services to provide capabilities for dynamic and manageable Web services required to model the resources of the grid. In particular by implementing OGSI standard with web services grid services designed using OGSA are interoperable. In alternate embodiments other infrastructures or additional infrastructures may be implemented a top web services layer .

Grid services layer includes multiple services the combination of which may implement grid management system . For example grid services layer may include grid services designed using OGSA such that a uniform standard is implemented in creating grid services. Alternatively grid services may be designed under multiple architectures. Grid services can be grouped into four main functions. It will be understood however that other functions may be performed by grid services.

First a resource management service manages the use of the physical and logical resources. Resources may include but are not limited to processing resources memory resources and storage resources. Management of these resources includes scheduling jobs distributing jobs and managing the retrieval of the results for jobs. Resource management service monitors resource loads and distributes jobs to less busy parts of the grid to balance resource loads and absorb unexpected peaks of activity. In particular a user may specify preferred performance levels so that resource management service distributes jobs to maintain the preferred performance levels within the grid.

Second information services manages the information transfer and communication between computing systems within the grid. Since multiple communication protocols may be implemented information services manages communications across multiple networks utilizing multiple types of communication protocols.

Third a data management service manages data transfer and storage within the grid. In particular data management service may move data to nodes within the grid where a job requiring the data will execute. A particular type of transfer protocol such as Grid File Transfer Protocol GridFTP may be implemented.

Finally a security service applies a security protocol for security at the connection layers of each of the systems operating within the grid. Security service may implement security protocols such as Open Secure Socket Layers SSL to provide secure transmissions. Further security service may provide a single sign on mechanism so that once a user is authenticated a proxy certificate is created and used when performing actions within the grid for the user.

Multiple services may work together to provide several key functions of a grid computing system. In a first example computational tasks are distributed within a grid. Data management service may divide up a computation task into separate grid services requests of packets of data that are then distributed by and managed by resource management service . The results are collected and consolidated by data management system . In a second example the storage resources across multiple computing systems in the grid are viewed as a single virtual data storage system managed by data management service and monitored by resource management service .

An applications layer includes applications that use one or more of the grid services available in grid services layer . Advantageously applications interface with the physical and logical resources via grid services layer and web services such that multiple heterogeneous systems can interact and interoperate.

With reference now to there is depicted a flow diagram of a job request submitted by a client system to a grid provider and the resulting bid for that job request returned by the grid provider. As illustrated client system submits a job request to a grid provider. In particular each grid provider may implement a grid management system for managing the bidding process on job requests and for managing the resulting flow of the job through a selection of grid resources managed by the grid provider through the grid management system.

In the example the grid management system for a grid provider includes a grid provider bid request portal at which job requests are received and queued. Grid provider bid request portal directs each job request to a workload calculator which calculates the workload requirements of job request . In particular workload requirements may include for example an estimation of the computational cycles that a job will require and the type of hardware and software platforms required. Workload calculator distributes the workload calculations as workload data to a bid formalizer and as workload data to a cost calculator . Cost calculator uses the workload calculation job request requirements and current and estimated costs for use of resources to estimate a cost for processing the grid job specified in job request . Cost calculator returns cost data to bid formalizer . Bid formalizer gathers workload data and cost data into a bid which is returned from the grid provider to client system . Bid may agree to perform the grid job exactly as requested or may include exceptions exclusions and other variations from the specification in job request . In addition bid may be viewed as a service level agreement specifying a performance standard which the grid provider agrees to if the grid job is later submitted to the grid provider. Further bid formalizer may create a bid based on a pricing contract agreement reached between the grid client and the provider before or after the bid placement.

Referring now to there is depicted a flow diagram of a job submitting by a client system to a grid provider and the results of the job returned by the grid provider. As illustrated client system submits job to a grid provider. In particular as described with reference to each grid provider may implement a grid management system for managing the flow of a grid job by selecting grid resources for a job to meet a performance requirements monitoring the progress of jobs and adjusting grid resources if needed to meet performance requirements and managing the return of results to the client system.

In the example the grid management system for a grid provider includes a job queue that receives job and holds job until grid scheduler can schedule and dispatch job to grid resources. In particular grid scheduler accesses service level agreement SLA which includes the performance requirements for job based on a bid placed by the grid provider for the specific job or an agreement for job performance requirements for jobs received from a particular client system for example. Grid scheduler accesses the grid resources required to handle job for example server A server B and server N . Although not depicted grid scheduler may access a grid manager and other components of the grid management system that build the required resources for a grid job access resources from other grid environments and sell off grid jobs if necessary to other grid providers.

In the example grid scheduler divides job into job parts and that are distributed to server A server B and server N respectively. A job results manager collects results and from server A server B and server N respectively. Job results manager returns complete results to client system . In addition job results manager updates an accounting manager when the job is complete. Accounting manager communicates with a workload manager not depicted that monitors the use of server A server B and server N by job to calculate the total workload of job and the total cost of job . In particular SLA may specify factors that control the total cost of job such as a maximum cost a fixed cost a sliding cost scale if performance requirements are not met and other pricing adjustment factors.

With reference now to there is depicted a flow diagram of a process for submitting a grid job microcosms to multiple grid providers to calculate a relative cost per client defined application metric. In the example a client system apportions a grid job into microcosms which are small representative jobs of the larger grid job that needs to be submitted to a grid provider. In the example client system submits grid job microcosm and grid job microcosm to grid providers and respectively. In one embodiment client system has already submitted a job request for the grid job microcosm to grid providers and as described with reference to however in an alternate embodiment client system may submit the grid job microcosms to grid providers and with pricing and performance expectations based on published rates or verbally agreed to rates for example.

Each of grid providers and process gird job microcosms and and return results and the same manner as described with reference to a grid provider processing a grid job in . Client system as will be further described with reference to and retrieves the results and costs for each of grid job microcosms and and calculates a translation value for each grid provider based on a client defined application metric to grid provider metric ratio. Then client system calculates an estimated cost for the full grid job according to the number of client defined application metric operations required for the full grid job adjusted by the translation value compares the costs estimated for each grid provider and selects the most cost effective provider.

According to an advantage by sampling the actual performance and cost for each provider and translating the cost into a client defined application metric basis client system can compare the actual cost for performance rather than the promised cost for performance on client defined application metric basis before sending a large grid job or multiple large grid jobs. In the example after sampling the results and cost for each of grid job microcosms and client system selects to send full grid job of which grid job microcosm and are representative sets to grid provider . Grid provider processes full grid job as described with reference to and returns result to client system .

Referring now to a block diagram depicts a grid client agent for estimating future grid job costs by comparing a current grid job of a particular classification with a history of stored costs for other grid jobs of that particular classification. In the example grid client agent describes software modules operating within client system or another system that enables client system .

A job microcosm controller controls the process as described with reference to for submitting job microcosms of a particular grid job to multiple grid providers.

In particular job microcosm controller may first query multiple grid providers with a job request for the job microcosm. In addition to querying grid providers with job requests as described with reference to additional rate information may be acquired verbally in writing via email or through some other electronic interchange method. Job microcosm controller may store the bids or rate quotes designating a price per computational cycle. In one example a first provider returns a price per hour a second provider returns a price per floating point operation and a third provider returns a price based on the complex formula of the provider s grid environment.

Next once job microcosm controller acquires bids and rate quotes from multiple grid providers job microcosm controller submits job microcosms which are small jobs representative of larger grid jobs to be submitted to a selection of the multiple grid providers. In one example if a corporation needs an average of 20 000 000 records merged each night then the job microcosm distributed to each of the selected grid providers may include 1 of these records. In another example a client does not send a portion of the actual grid job but instead submits a job microcosm of an analogous job with tester data.

When job microcosm controller receives the computational results of the job microcosms are received the charges from each grid provider for each job microcosm are already received. Job microcosm controller also detects the time taken once the job microcosm was submitted to a grid provider for the grid provider to return a result. In the example the first provider takes five minutes to return a result and charges 2.20 the second provider takes one minute to return a result and charges 1.74 and the third provider takes two minutes to return a result and charges 3.40. In particular it will be understood that job microcosm controller may receive the charges from each grid provider through multiple communication media including a separate transmission from the grid provider to client system an email communication an embedded accounting token digitally signed and returned to client system with a transaction receipt.

Once all the costs per grid microcosm are received a cost comparator compares the actual costs by grid provider for performing a particular category of grid job. In particular cost comparator calculates a cost by client defined application metric for each grid job microcosm. In particular each grid provider submits provider defined metric costs such as cost per hour or cost per provider based complex formula. The client however defines grid jobs at an application level granularity. For example a client defined application metric is a cost per record merge. Once cost comparator calculates a client defined application metric to grid provider metric ratio then cost comparator can translate the number of client defined application metric operations required for a full job into a price using the client defined application metric to grid metric ratio as a translation value. Cost comparator determines the most cost effective grid provider and triggers submission of the remainder of the grid job or the actual grid job to the most cost effective grid provider.

In addition cost comparator calculates the client defined application metric to grid provide metric cost ratio for cost tables and stores the cost by client defined application metric in cost tables . As illustrated with reference to in particular cost tables includes a column for a client defined application metric . Each client defined application metric although not depicted is associated with a client defined category. Client defined categories are families of grid jobs classified at an application level for performing similar types of operations. Grid job classifier may define categories or categories may be entered and particular grid jobs classified. In the example carried through in the client defined categories are batch merges with a client defined application metric of per merge and meteorological operations with a client defined application metric of per model iteration . These client defined categories may apply for example where the client is a university that performs only two computational functions. First the university system performs payroll functions which requires database batch merges. Second the university system performs computationally intensive research work which requires greater floating point operations. It will be understood that additional categories may be added to classify other types of operations typically performed by a client in need of the computational power and other resources provided by on demand grid providers.

Cost tables includes a second column for a provider identifier . In the example values listed under provider identifiers are acme grid wiley grid and coyote grid . It will be understood that other types of provider identifiers may be implemented including an address and other indicia of a grid provider.

Cost tables includes a third column for a grid provider metric . In the example the values listed under grid provider metric are hourly charge proprietary composite charge and million floating point MFP operations charge . It will be understood that additional types of grid provider metric values may be defined by grid providers. Further it will be understood that grid providers may designate a grid provider metric when bidding on a job request or with the charges returned for processing a grid microcosm. In addition a proprietary composite charge refers to a charge calculated by the grid provider based on multiple factors including for example the data volume moved across the network jobs submitted to the processor run queues and bytes written to and read from a grid provider s own storage system.

A fourth column in cost tables includes a translation value which represents the ratio of the client defined application metric to the grid provider metric. In the example values listed under translation value include 3 000 000 merges per hour 600 merges per composite unit and 2000 merges per MFP operations . In particular the translation values are calculated by cost comparator and represent the number of client defined application metrics accomplished per grid provider metric ratio. As previously described translation values may be calculated based on grid microcosm. In other embodiments however translation values may also be calculated and updated based on a full job submission.

Finally the fith column in cost tables includes an offered pricing per grid provider metric . In the example the values listed under offered pricing per grid provider metric include 40 per hour 0.02 per composite unit and 0.08 per MFP . In an alternate embodiment historical pricing ranges may be given by provider as well as the most recent price by provider.

According to an advantage of the invention when a client wants to estimate a cost of a new grid job grid job classifier classifies the grid job and future cost estimator searches cost tables for client defined application metric based costs for that category of grid job. Then based on the client defined application metric requirements of the new grid job future cost estimator estimates the cost for the new grid job according to grid provider. In one example based on the values illustrated in cost tables a new grid job requiring 3 000 000 batch merges would cost 40 on acme grid 3 000 000 merges per hour 40 per hour 100 on wiley grid 600 merges per composite unit 0.02 per composite unit and 120 on coyote grid 2000 merges per MFP operations 0.08 per MFP .

Further according to the advantage if future cost estimator searches cost tables for client defined application metric based costs for that category of grid job and none or available or the costs are out of date then future cost estimator initiates job microcosm controller to determine current costs for microcosms of the particular classification category of grid job.

In addition it is important to note that as pricing per grid provider metric changes over time or in response to market conditions the new cost can be inserted into the offered pricing per grid provider metric column in cost tables and prices estimates for jobs classified within the categories updated without changing the translation values. For example if the acme grid price increases to 55 per hour the wiley grid price drops to 0.013 per composite unit and the coyote grid price drops to 0.05 per MFP the client defined application metric to grid provider metric ratio listed under the translation value column does not change so future cost estimator can still estimate the future cost to complete a 5 000 000 batch merge job tomorrow based on the updated prices e.g. 91.67 on acme grid 3 000 000 merges per hour 55 per hour 108.33 on wiley grid 600 merger per composite unit 0.013 per composite unit and 125 on the coyote grid 2000 mergers per MFP operation 0.05 per MFP .

Referring now to there is depicted a high level logic flowchart of a process and program for a grid client agent to estimate future costs of grid jobs of a client defined classification in accordance with the method system and program of the present invention. As illustrated the process starts at block and thereafter proceeds to block . Block depicts a determination of classifying a grid job according to nature into a client defined category. Next block illustrates a determination whether grid jobs of the same category are already priced in the cost table. If grid jobs of the same category are already priced in the cost table then the process passes to block . Block depicts predicting the cost of the current grid job based on the previously stored pricing in the cost table for the particular category of grid job and the process ends. In particular the cost table is cost table which includes the translation value. Thus predicting the cost of a current grid job requires determining the number of client defined application metric operations required and converting the number of client defined application metric operations to a grid provider metric based cost through the translation value of the category of grid job.

Returning to block if there are not already grid jobs of the same category priced in the cost table then the process passes to block . In addition although not depicted at block a determination may also be made that even though there grid jobs of the same category already priced in the cost table that the pricing is outdated and the process passes to block .

Block depicts creating a grid job request for a small part of the grid job. Next block illustrates distributing the grid job request to multiple grid providers. Thereafter block depicts a determination whether the grid client agent receives grid bids for the small part of the grid job. As depicted if no bids are yet received the process iterates at block however if no bids are received after a period of time then the job request may be adjusted and resubmitted to the multiple grid providers. Once bids are received then the process passes to block .

Block depicts selecting those grid job providers whose bids meet the bid request requirements. Next block illustrates distributing small parts of the grid job to the selection of the grid job providers. Thereafter block depicts a determination whether the grid client agent receives all the results of the grid job processing with costs. As illustrated if the results are not yet received the process iterates at block however if not all results are received within the expected period of time for response then those grid providers not returning a results may be queried. Once the results are retrieved then the process passes to block .

Block depicts calculating the client defined application metric to grid provider metric ratio for each grid provider. Next block illustrates calculating the cost per grid provider using the ratio based on the number of client defined application metric operations required for the large grid job. Next block illustrates comparing the actual costs per grid provider. Thereafter block depicts distributing the remainder of the grid job to the projected least expensive grid provider based on client defined application metrics. Then block illustrates storing the ratio and grid provider costs in the cost table according to the client defined classification of the grid job and the process ends.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

