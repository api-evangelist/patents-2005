---

title: Template-based multimedia authoring and sharing
abstract: Systems and methods for template-based multimedia authoring and sharing are described. In one aspect, media content is selectively applied to a content description template to author media in a content description. The content description template provides a temporal structure for the applied media content. A content representation template is selected and combined with the temporally structured media in the content description to specify rendering criteria and generate a content description and representation for one or more of rendering, sharing, and exporting the temporally structured authored media.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08196032&OS=08196032&RS=08196032
owner: Microsoft Corporation
number: 08196032
owner_city: Redmond
owner_country: US
publication_date: 20051101
---
The rapid adoption of digital cameras and camcorders has resulted in explosive growth of personal photos and home video in digital form. There is a huge demand for new tools and systems to enable an average user to efficiently and effectively process manage author and share digital media contents. Although video authoring tools exist video authoring remains as a tedious and extremely time consuming task that often requires trained professional skills. Thus a powerful multimedia authoring tool to substantially reduce a users efforts in editing home video images etc. would be very useful.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

In view of the above template based multimedia authoring and sharing is described. In one aspect media content is selectively applied to a content description template to author media in a content description. The content description template provides a temporal structure for the applied media content. A content representation template is selected and combined with the temporally structured media in the content description to specify rendering criteria and generate a content description and representation for one or more of rendering sharing and exporting the temporally structured authored media

The systems e.g. systems apparatus computer readable media means etc. and methods for template based multimedia authoring and sharing as described below in reference to implement media content analysis and allow for selective application of content aware two layer authoring templates i.e. content description templates and content representation templates to extracted media content. With two layers of authoring templates the systems and methods separate video authoring operations from video representation. Once multimedia content such as video has been authored i.e. generated the authored content is simply and flexibly represented in one or more other forms according to user preference. The systems and methods provide an open and extensible multimedia authoring and sharing framework that supports dynamic update of core components such as content analysis algorithms editing methods and the two layer authoring templates. These aspects significantly reduce user efforts in video editing as compared to conventional multimedia authoring systems and techniques while preserving flexibility and personalization

These and other aspects of the systems and methods for template based multimedia authoring and sharing are now described in greater detail.

Although not required the systems and methods for template based multimedia authoring and sharing are described in the general context of computer executable instructions program modules being executed by a computing device such as a personal computer. Program modules generally include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. While the systems and methods are described in the foregoing context acts and operations described hereinafter may also be implemented in hardware.

Media library building module analyzes the input media to extract metadata i.e. extracted metadata to facilitate selective user application of corresponding media content to authoring templates Content Description Templates CDTs and Content Representation Templates CRTs . The media content analysis operations are configurable and extensible e.g. via plug ins and include for example online and off line media content filtering parsing operations. Examples of content filtering include shot detection sub shot detection scene grouping motion detection key frame extraction histogram extraction quality assessment etc. The types of extracted metadata are a function of the particular content filtering applied by media library building module . For purposes of exemplary description input media that has been parsed and or filtered via content filtering operations to generate extracted metadata is hereinafter often referred to as analyzed input media . Exemplary media content analysis is described in greater detail below in the section titled Media Content Analysis. 

Media management and browsing module provides a framework to allow a user to browse and visualize input media content. In one implementation the framework provides a temporal structure and thumbnail based media browsing interface. This interface helps the user to find appropriate video segments and photo collections from analyzed input media and thereby facilitate media authoring operations.

Media authoring module allows a user editor to select one or more video clips and or photos from analyzed input media portion of the media library for placement onto a timeline to generate a storyline. Media authoring module facilitates the placement operations in view of the information provided by extracted metadata . As described below captions credits transitions and video effects may also be added to the selected media content. To facilitate these media content authoring operations media authoring module allows the user to select a CDT . The CDT provides a temporal structure to the story line along with composition methods rules and preferences within which the user can organize and edit select portions of analyzed input media from media library and thereby generate authored content through a media authoring and sharing user interface UI . The media authoring and sharing UI is shown as a respective portion of other data . More particularly each temporal unit in a CDT is associated with a configurable editing method or tool and corresponding editing parameters e.g. style duration incidental music etc. providing the user with substantial flexibility to manually or programmatically assign select portions of the analyzed input media to the temporal structure.

These media content authoring operations which have associated select portions of the analyzed input media with the temporal structure of the CDT to describe the authored content result in a CDF . Exemplary aspects of CDTs and CDFs are described in greater detail below in the section titled Content Description Template . The media authoring module allows a user to select a CRT to indicate how the authored content in the CDF is to be rendered a target rendering . More particularly a CRT specifies CDT authored content rendering criteria. Such criteria include for example information to render authored content to a DVD a web site as slides for presentation has a file for playback and sharing etc. Exemplary aspects of a CRT are described in greater detail below in the section titled Content Representation Template. 

Media authoring module combines the resulting CDF with the selected CRT to generate a content description and representation file CDRF rendering e.g. to a player to a DVD to a web site as slides for presentation etc. sharing and exporting as described by the selected CRT . Exemplary aspects of a CDRF are described in greater detail below in the section titled CDRF and CDRF Player. 

In system of media content analysis algorithms are media content filters and or media content parsers. For example a shot detection filter is used for shot detection and a histogram extraction filter is applied for extracting color histogram. There are two types of content filters one is online filters and the other one is offline filters. Online filters require parsing the entire video or audio stream or photo files to extract the corresponding basic metadata from the stream. While offline filters extract higher level metadata directly from these basic metadata without parsing the original media data. Examples of online filters include shot detection timestamp extraction and histogram extraction filters. Offline filters include scene detection quality assessment filters etc.

In this implementation Extensible Markup Language XML is used to represent extracted metadata . If a new metadata is to be extracted a new filter based on a filter template e.g. a base C class can be written and then plugged into the extensible and configurable architecture of system . For example in one implementation advanced users utilize a predefined online or offline base class and then implement the real metadata extraction functions.

In this implementation media library building module supports one or more of video photo and music content filters. Video content filters include for example shot detection sub shot detection scene grouping motion detection key frame extraction color histogram attention detection quality assessment correlegram video signature face detection and or so on. Photo content filters include for example color histogram static attention detection quality assessment correlegram image signature face detection and or so on. Music content filters include for example onset detection beat detection tempo detection and or so on.

In this implementation a CDT is described in XML. The basic unit of CDT is a MSeg which represents Media Segment also called slot when it is rendered please see . MSeg could be a chapter a scene or a shot or whatever temporal segment of a video. For a specific template MSegs may be arranged hierarchically. All MSegs share the same definition and structure. The default settings for a child MSeg are inherited from its parent MSeg while a child MSeg can have its own settings which have higher priority. A typical hierarchical structure could be Chapter Scene which is similar to a general DVD content menu. In this paper we will use this structure to present our idea.

In this implementation a template contains the least one chapter MSeg . A chapter may contain several scenes also MSegs while a scene can contain one or more smaller scenes and so on.

Referring to table 1 the source data of this MSeg is shown as a collection of photographs the final duration of this segment is 60 seconds the incidental music is abc.mp3 and the automatic editing method specifies a known Photo2Video computer program application e.g. a respective portion of other program modules of . TABLE 2 shows an exemplary XML description of MSeg corresponding to Chapter 2 of which includes three child MSegs C2S1 through C2S3 .

Exemplary XML syntax for a CDT is now described with respect to TABLES 3 through 6. Typically a CDT file contains one root element which includes a sub element called CDTInfo as well as a series of flat or hierarchical MSegs. CDTInfo provides the basic information of the CDT including five basic sub elements as shown in TABLE 3.

As described MSeg is the basic element of a CDT . In this implementation all MSegs share the same definition and structure. An MSeg has two primary attributes and four sub elements as listed in TABLES 4 the 5 respectively.

TABLE 6 shows the attributes for the sub element Method of MSeg . This sub element identifies the editing method that will be applied by media authoring module to the raw media content i.e. input media content that is assigned by a user to this slot.

The editing method portion of a CDT indicates whether manual automatic or semi automatic editing methods will be used to edit source media content in a slot of CDT . In one implementation an automatic editing method such as AVE e.g. the AutoMovie feature in MovieMaker Photo2Video etc. is used to automatically edit the source media content. If the editing method is manual editing media authoring module provides a manual editing UI a respective portion of other data . The UI allows a user to cut and select particular video segments for dragging on to a timeline as well as add transitions effects captions and incidental music manually. Depending on the particular editing method used there will be a different set of editing parameters or preferences.

Referring TABLE 2 the ChannelNum parameter refers to the number of channels that raw media data will be fed in by users . Typically the number is set to 1 while 2 or a higher value might be applied to generate fancier results. For example two source video streams may be combined into one stream by patching two frames one from each video into one frame as shown by . The Style parameter refers to desired editing style or preference. The SyncMusic parameter indicates whether media authoring module will synchronize beat of a selected set of music content with extracted shot transitions. In one implementation this parameter is set to true or false .

The UI engine of media authoring module parses the hierarchical structure of a user selected CDT e.g. an XML file to determine the structure of the CDT . Based on the structure the UI engine generates and presents a user interface e.g. interface onto a display device e.g. display device of . To generate the user interface the UI engine creates a set of lattices that correspond to the MSegs e.g. L C1 C2 C2S1 etc. and the CDT as a timeline as shown in the example of . The UI engine displays the titles of the slots i.e. MSegs in the corresponding lattices. The UI engine displays details of a particular slot e.g. title duration method etc. responsive to user selection of the particular slot or responsive to the slot obtaining focus in any other manner. A user can adjust these parameters e.g. one or more of the duration caption editing method etc. for a certain MSeg in the presented detail window. The UI engine also supports for example the following operations adding deleting copying pasting and or moving slot operations.

Responsive to a user inputting raw media content into a certain CDT media authoring module generates a CDF . The CDF is in the same form as the CDT file with the exception of several additional sub elements CDFinfo which has been added into the root element and Content which has been added into element MSeg . TABLE 7 shows an exemplary portion of a CDF with CDFInfo and Content. 

Referring to TABLE 7 there is shown references to two example source video clips i.e. aaa.mpg and bbb.mpg which are put into the MSeg. Additionally as shown the total duration of this exemplary source video is 810.5 seconds. As shown in this example these two video clips will be passed to the specified editing method e.g. AVE and the output video is 240 seconds.

A CDF provides a description of authored media content. In contrast to a CDF a CRT describes how the authored media content provided by the CDF is to be represented or rendered. As described above CRTs can be used to render authored contents in many forms such as DVD VCD website video file slides and so on. In this implementation each type of CRT includes of three components an XML template definition scheme a template rendering engine and a content composition rendering engine. The template rendering engine renders the look and feel of a CRT . The content composition rendering engine renders the authored content CDRF into DVD VCD etc. Similar to a CDT a CRT is an independent component of system . Media authoring module exposes a uniform application programming interface API for a user to design and develop new types of CRTs . A user can also modify an existing CRT and design a new CRT based on an existing CRT type.

Unlike CDTs which have a uniform definition CRT definition depends on the type of the CRT . That is different types of CRTs will have different definition schemes rendering engines and composition engines. Such CRT rendering and composition engines are shown as respective portions of other program modules of . For example a DVD type CRT includes an XML scheme to describe selected media content presentation look and feel as well as parameters for the output DVD e.g. a background image of the menu page menu button styles etc. . The CRT rendering engine displays the look and feel of a specific CRT and the CRT content composition engine generates the corresponding CDRF file and composes the authored content into DVD format i.e. to render CDRF . Thus a DVD burning program burns selected media content i.e. as defined by the corresponding CDF directly to a DVD disc. Analogously a simulated DVD software player plays selected media content.

In another example a web site type CRT includes for example an XML scheme to describe structure layout and format of the website. In this implementation this description is similar to HTML language. Those CRT rendering engine of this example renders the look and feel of the web site type CRT. The corresponding composition engine generates the CDRF as well as the actual website according to the specific CDF and CRT . For purposes of exemplary illustration an exemplary networked environment for fully or partially implementing operations of computing device is shown and described below in reference to .

In another example a video type CRT includes for example an XML scheme that defines transitions effects and caption format of associated output video a corresponding CRT rendering engine to display the appearance of a specific video CRT and a corresponding CRT composition engine to generate the CDRF and the final output video shown as a respective portion of other data .

As shown in a CDRF of is the combination of a CDF and a CRT . TABLE 8 shows exemplary markup language for a CDRF .

Referring to TABLE 8 the CDRF is a description file that includes references to and corresponding representations. A CDRF is used to directly generate final results e.g. a DVD a video a web site video playback etc. . In this implementation system of includes a CDRF player . In this implementation certain portions of the logic implemented by the CDT parser editing method plug ins CRT composition rendering engines are also linked into CDRF player . In this implementation the CDRF player generates an intermediate XML file similar to the XTL file format in DirectShow Editing Service which is a description of the final results but not the real content. According to the description file the final result is created for example as a video stream in DVD format an actual video file etc. In this implementation these description files are virtual video files and do not produce any actual video files.

A CDRF can be shared with others and exported into different CRT types. With respect to sharing for example a CDRF can be communicated to an entity using instant messaging software or other communications software. Subsequent to receiving the shared CDRF the entity opens the CDRF using CDRF player to play the edited content while corresponding raw media data is streamed to the player by a network connection. An exemplary network connection is described below in reference to .

To export authored media content from a CDF a target CRT is selected to create a corresponding CDRF . For example to output authored media content from a CDF to a video file a video type CRT is selected and combined with the CDF to create a corresponding CDRF . The corresponding CDRF is used to directly render the authored media content to a video file which can then be exported for example in an MPEG 2 or MPEG 1 data format. In another example if a website type CRT is selected a corresponding CDRF is generated from the CDF and the website type CRT . This CDRF is then exported as a website. Each CRT is independent of all other CRTs .

System of is an open and extensible system. For instance a general user can modify and personalize existing templates both CDTs and CRTs and create new templates based on existing editing methods and existing CRT types in the system. Additionally an advanced user can use system independent of MLB MMB and MA to develop new editing methods new content filters and new types of CRTs . That is in one implementation one or more of a standalone i.e. independent CDT editor and a standalone CRT editor is provided. In addition to the CDT editing capabilities described above the standalone CDT editor supports adding deleting copying pasting and moving a slot as well as parameter tuning. A standalone CDT editor shares the same local and or remote CDT library with the program modules of system . With respect to CRTs the corresponding standalone editor provides a CRT editing interface for each type of CRT. Each CRT editing interface supports one or more of adding deleting copying pasting and moving a slot parameter tuning and or other operations. New extensions can be compiled and packed into a self installation package or a package imported by system or corresponding template editors. Users sharing media content can download a package and install or import it into local system . After that the new extensions are available to be used by system template editors and the CDRF player .

In one implementation system implements a software development kit SDK enabling fast implementation of new content filters editing methods and CRT schemes. Similar to the base classes defined for content filters discussed above base classes for editing methods CRT render engines and CRT composition engines are well defined in the SDK.

At block media library building module analyzes input multimedia content to identify media content for selective association with independent content description templates and content representation templates . At block a user selects a CDT to generate a temporally based storyline with at least a portion of the identified media content. In one implementation a user creates a new CDT or modifies an existing CDT with a CDT editor. In another implementation the user selects the CDT from a local or remote data source comprising a CDT template library. At block the user assigns at least a subset of the analyzed multimedia content media content to select slots in a temporal timeline defined by the selected CDT . The operations of block result in a CDF . At block the user selects a CRT to facilitate rendering sharing and or exporting the media content. This operation combines the CDF with the selected CRT to generate a content description and representation file CDRF .

At block content description and representation player renders the CDRF . At block a user shares the media content in the CDRF with another user for subsequent rendering sharing and or exporting. At block a user exports the authored media content in the CDRF . Although procedure describes that media content associated with a CDRF is rendered shared and exported whether to user renders shares and or exports media content associated with the CDRF is arbitrary being a function of the user s actions. Sharing and exporting are two possible parallel ways for users to export an edited media content result. A CDRF can be shared and or exported in any order .

The methods and systems described herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use include but are not limited to personal computers server computers multiprocessor systems microprocessor based systems network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and so on. Compact or subset versions of the framework may also be implemented in clients of limited resources such as handheld computers or other computing devices. The invention may be practiced in a distributed computing environment where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to an exemplary system for template based multimedia authoring and sharing includes a general purpose computing device in the form of a computer implementing for example system of . The following described aspects of computer are exemplary implementations of computing devices of . Components of computer may include but are not limited to processing unit s a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures may include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

A computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer .

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or a direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

System memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Application programs includes for example program modules of computing devices or of . Program data includes for example program data of computing devices or of . Operating system application programs other program modules and program data are given different numbers here to illustrate that they are at least different copies.

A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as printer and audio device s which may be connected through an output peripheral interface .

The computer operates in a networked environment using logical connections to one or more remote computers such as a remote computer . In one implementation remote computer represents computing device or networked computer of . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and as a function of its particular implementation may include many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Although the systems and methods for template based multimedia authoring and sharing have been described in language specific to structural features and or methodological operations or actions it is understood that the implementations defined in the appended claims are not necessarily limited to the specific features or actions described. Rather the specific features and operations of system are disclosed as exemplary forms of implementing the claimed subject matter.

