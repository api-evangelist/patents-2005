---

title: Integrated task management systems and methods for executing rule-based operations
abstract: A system for integrating multiple software modules configured to produce output according to established business rules is provided. The system in one embodiment coordinates the printing of a variety of labels and reports according to a set of complex business rules. Complex output tasks may be distributed to remote computers in a network for optimum efficiency. The system may be configured to comply with one or more standard database connectivity standards in order to provide a generic interface with foreign systems. The method in one embodiment includes acquiring an input, sending a query to a database, retrieving business rules and associated tasks, and building scripts or commands for each task.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08537384&OS=08537384&RS=08537384
owner: 
number: 08537384
owner_city: 
owner_country: 
publication_date: 20050401
---
This patent application is a U.S. Non provisional application filed pursuant to Title 35 U.S.C. 100 et seq. and 37 C.F.R. 1.53 b and claiming priority under Title 35 U.S.C. 119 e to a U.S. Provisional application bearing Ser. No. 60 558 930 entitled Strategic Labeling and Report Printing filed Apr. 1 2004. Both the subject application and its corresponding provisional application are under an obligation to be assigned to the same entity.

The following disclosure relates generally to the field of software systems for integrating multiple modules and more particularly to an integrated system for coordinating labeling and printing tasks according to complex business rules.

Many facilities run different software modules for handling different tasks such as shipping receiving inventory control order fulfillment and the like. For every interaction between a user and one of these software modules a corresponding output is usually generated. The output may be in the form of for example a printed document a report or the storage of a record to a database. Running various software modules on an as needed basis represents an inefficient use of labor equipment and resources.

Many software modules currently in use required the user to make decisions based upon a certain input such as the scanning of a bar code or the entry a parcel tracking number. User decisions create a need for training and introduce the risk of human error into the system often when the decision to be made is rote and always the same in response to a particular kind of input.

In addition to the risk of user decisions or choices made in error a user may also neglect to make a decision or enter a choice to produce a desired output. For example a user in a shipping department may print a packing slip but not a shipping label and may neglect to update the inventory indicating an item has been packed and shipped.

Thus there is a need in the art for an improved system for integrating discrete software modules and streamlining the various processes between receiving an input and producing a desired output.

The following summary is not an extensive overview and is not intended to identify key or critical elements of the apparatuses methods systems processes and the like or to delineate the scope of such elements. This Summary provides a conceptual introduction in a simplified form as a prelude to the more detailed description that follows.

Certain illustrative example apparatuses methods systems processes and the like are described herein in connection with the following description and the accompanying drawing figures. These examples represent but a few of the various ways in which the principles supporting the apparatuses methods systems processes and the like may be employed and thus are intended to include equivalents. Other advantaged and novel features may become apparent from the detailed description which follows when considered in conjunction with the drawing figures.

The above and other needs are met by the present invention which provides a task management method that may include the steps of storing a set of business rules for a facility acquiring an input related to the facility sending a query including the input to the set of business rules receiving a list of tasks in response to the query building one or more commands designed to accomplish the list of tasks and sending the one or more commands to an output device related to the facility. The step of receiving a list of tasks may also include receiving stored data related to the input. The step of sending the one or more commands to an output device may also include sending print commands to a printer. The step of sending the one or more commands to an output device may include rendering a document based upon the commands and sending the document to a printer.

In one aspect the task management method may be implemented in a distributed system including a local client computer and a distant server computer. The step of sending one or more commands to an output device may include the steps of sizing each of the commands in comparison to a threshold size wherein those smaller than the threshold size are marked as small jobs and the others are marked as large jobs then for each of the small jobs rendering a document based upon the small job using the distant server computer and sending the document to a printer associated with the local client computer and then for each of the large jobs sending the commands to the local client computer for rendering and printing locally.

The step of sending the one or more commands to an output device may also include stacking the commands in a queue until a scheduled execution time.

The step of acquiring an input may include providing a user interface configured to receive the input from one or more input devices operated by a user at the facility. In one embodiment the user interface may be configured exclusively to receive the input from one or more input devices operated by a user at the facility.

The steps of sending a query and receiving a list may occur via the Internet between a local client computer and a distant server computer.

In another aspect the task management method may also include the steps of providing a database application interface in communication with a database module housing the set of business rules providing an inventory application interface in communication with an inventory module and providing a printing application interface in communication with a printing module the printing module configured to control the output device. The database application interface may be written according to a database connectivity standard such that data from any data source compliant with the connectivity standard may be accepted and processed.

In another aspect of the present invention a task management module is provided for managing and executing commands as part of the system of the present invention. The task management module may be configured to store a set of business rules for a facility acquire an input related to the facility send a query including the input to the set of stored business rules receive a list of tasks in response to the query build one or more commands designed to accomplish the list of tasks and send the commands to an output device related to the facility. The list of tasks may include stored data related to the input. The output device may include one or more printers. The commands may be designed to render a document for printing. The task management module may be configured to stack the commands in a queue until a scheduled execution time. The task management module may include a computer software program product.

In one aspect the task management module may be configured to communicate with a user interface that is configured to receive the input from one or more input devices operated by a user at the facility. In one embodiment the user interface may be configured exclusively to receive the input from one or more input devices operated by a user at the facility.

In one embodiment the task management module may be configured to transmit and receive data via the Internet between a local client computer and a distant server computer. The module may be further configured to differentiate the one or more commands as either simple commands or complex commands wherein the complex commands require greater processing time and capacity and distribute the execution of the commands between and among the local client computer and the distant server computer in order to optimize the use of computing capacity such that the simple commands are executed using the distant server computer and the complex commands are sent to the local client computer for execution.

In another aspect the task management module may be configured to transmit and receive data via the Internet between a local client computer and a distant server computer. The module may be further configured to size each of the one or more commands in comparison to a threshold size wherein those smaller than the threshold size are marked as small jobs and the others are marked as large jobs then for each of the small jobs render a document based upon the small job using the distant server computer and send the document to the one or more output devices associated with the local client computer and then for each of the large jobs send the commands to the local client computer for rendering and printing locally.

The task management module may include a database application interface in communication with a database module housing the set of business rules an inventory application interface in communication with an inventory module and a printing application interface in communication with a printing module the printing module configured to control the output device. The output device may include one or more printers. The database application interface may be written according to a database connectivity standard such that data from any data source compliant with the connectivity standard may be accepted and processed.

These and other objects are accomplished by the method and apparatus disclosed and will become apparent from the following detailed description of a preferred embodiment in conjunction with the accompanying drawings in which like numerals designate like elements.

Reference is now made to the figures in which like numerals indicate like elements throughout the several views.

Example apparatuses methods systems processes and the like are now described with reference to the drawings where like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to facilitate a thorough understanding of the apparatuses methods systems processes and the like. It may be evident however that the apparatuses methods systems processes and the like can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to simplify the description.

As used in this application the term computer component refers to a computer related entity either hardware firmware software a combination thereof or software in execution. For example a computer component can be but is not limited to being a process running on a processor a processor itself an object an executable a thread of execution a program and a computer. By way of illustration both an application running on a server and the server itself can be a computer component. One or more computer components cans reside within a process and or thread of execution and a computer component can be localized on a single computer and or distributed between and among two or more computers.

 Computer communications as used herein refers to a communication between two or more computer components and can be for example a network transfer a file transfer an applet transfer an e mail a Hyper Text Transfer Protocol HTTP message XML a datagram an object transfer a binary large object BLOB transfer and so on. A computer communication can occur across for example a wireless system e.g. IEEE 802.11 an Ethernet system e.g. IEEE 802.3 a token ring system e.g. IEEE 802.5 a local area network LAN a wide area network WAN a point to point system a circuit switching system a packet switching system and so on.

 Logic as used herein includes but is not limited to hardware firmware software and or combinations of each to perform one or more functions or actions. For example based upon a desired application or needs logic may include a software controlled microprocessor discrete logic such as an Application Specific Integrated Circuit ASIC or other programmed logic device. Logic may also be fully embodied as software.

 Signal as used herein includes but is not limited to one or more electrical or optical signals analog or digital one or more computer instructions a bit or bit stream or the like.

 Software as used herein includes but is not limited to one or more computer readable and or executable instructions that cause a computer computer component and or other electronic device to perform functions actions and or behave in a desired manner. The instructions may be embodied in various forms like routines algorithms modules methods threads and or programs. Software may also be implemented in a variety of executable and or loadable forms including but not limited to a stand alone program a function call local and or remote a servelet an applet instructions stored in a memory part of an operating system or browser and the like. It is to be appreciated that the computer readable and or executable instructions can be located in one computer component and or distributed between two or more communicating co operating and or parallel processing computer components and thus can be loaded and or executed in serial parallel massively parallel and other manners. It will be appreciated by one of ordinary skill in the art that the form of software may be dependent on for example requirements of a desired application the environment in which it runs and or the desires of a designer or programmer or the like.

An operable connection or a connection by which entities are operably connected is one in which signals physical communication flow and or logical communication flow may be sent and or received. Usually an operable connection includes a physical interface an electrical interface and or a data interface but it is to be noted that an operable connection may consist of differing combinations of these or other types of connections sufficient to allow operable control.

 Database as used herein refers to a physical and or logical entity that can store data. A database for example may be one or more of the following a data store a relational database a table a file a list a queue a heap and so on. A database may reside in one logical and or physical entity and or may be distributed between two or more logical and or physical entities.

It will be appreciated that some or all of the processes and methods of the system involve electronic and or software applications that may be dynamic and flexible processes so that they may be performed in other sequences different than those described herein. It will also be appreciated by one of ordinary skill in the art that elements embodied as software may be implemented using various programming approaches such as machine language procedural object oriented and or artificial intelligence techniques.

The processing analyses and or other functions described herein may also be implemented by functionally equivalent circuits like a digital signal processor circuit a software controlled microprocessor or an application specific integrated circuit. Components implemented as software are not limited to any particular programming language. Rather the description herein provides the information one skilled in the art may use to fabricate circuits or to generate computer software to perform the processing of the system. It will be appreciated that some or all of the functions and or behaviors of the present system and method may be implemented as logic as defined above.

In one embodiment the facility may be a warehouse distribution center or other center where goods are handled. In the system the facility may have a facility identifier associated with it. Similarly each area may have an area identifier associated with it to differentiate it from other areas within the facility .

A station in one embodiment may refer to an office or locale where a particular activity such as receiving or shipping takes place on a regular basis. A station may be stationary or mobile and may include a variety of equipment. In the system each station may have a station identifier associated with it.

In one embodiment a station may include one or more persons or users generally assigned to conduct activities there. A user may or may not be assigned to a particular station . Each user may be assigned a user identifier so the system can recognize the user and distinguish her from others. In one embodiment each user may also be assigned a user status indicating a feature of the user s role in the system such as his capacity his assigned task or his authorization level.

Each station may include one or more input devices which may be stationary or portable. For example an input device may be a barcode scanner an optical character recognition device or an RFID reader. In one embodiment a simple keypad or keyboard may be the input device associated with a particular station . In the system each input device may include an input device identifier associated with it.

Similarly each station may include one or more output devices which may be stationary or portable. An output device for example may be a general printer a dedicated label printer or a projector. In the system each output device may include an output device identifier associated with it. Each output device may also include one or more types of output media such as plain paper blank report forms label stock and the like.

In one embodiment of the present invention the system may include a user interface through which certain data identifiers and rules may be entered and stored in the system . In this aspect for example when a facility is identified as a participating entity in the system a collection of basic data may be entered into the system in order to facilitate processing.

As illustrated in each participating facility may include one or more components areas stations users input devices and output devices . In one embodiment the system may be configured to accept and store data concerning each facility and its various components in a database. In this aspect when an input is received from any component of a facility the system through the database will associate the input with that particular facility . Similarly for example the system will associate the input with the station user and input device involved in acquiring that particular input.

The system in one embodiment may be configured to accept and store a set of business rules for each participating entity or facility . A business rule may include one or more tasks to be performed automatically when a particular input is received. For example for an input having the characteristics of an item number or Stock Keeping Unit number SKU the facility may establish a business rule that includes the task of sending the retail price to a cash register. The business rule may include multiple tasks such as sending the price printing a receipt and updating an inventory database. For each of a variety of inputs a business rule may be written and stored including a list of the tasks to be performed. In one embodiment the system of the present invention is scalable and of sufficient capacity to handle a large number and variety of business rules and tasks from a variety of different businesses or facilities .

In Step an input is acquired. The input in one embodiment may be a number code or other indicia. The input may be acquired from an object such as a parcel. In one embodiment a user may employ an input device such as a scanner to acquire an input or key value. Once acquired the input may be sent or otherwise communicated to the task management module . In one embodiment the task management module may transmit the input using an internet protocol such as an HTTP post to a server see .

In one embodiment the step of acquiring input may include providing a user interface configured to receive the input. The user interface may be designed for the exclusive purpose of acquiring input . The operator or user need not know which actions to take in response to the input . Also in this aspect the system may be used to limit the interaction between the operator or user and the system thereby allowing the established rules and procedures to take priority over any user input.

In Step the task management module may be configured in one embodiment to send a query to the database module in order to search for any stored data related in any way to the input . For example the input may include a product identifier and the database module may include stored data about certain aspects of that particular product. The query may be sent or otherwise transmitted using an internet protocol. In one embodiment a query function may be included as part of the Database Application Programming Interface API . A query is a command or instruction used extract a desired set of data from a database. The best known query language is Structured Query Language SQL pronounced sequel although other query languages may be used. A query may include a single command or a complex series of commands. SQL includes a wide variety of query commands. Sets of query commands that may be used again can be saved in SQL as a stored procedure. Like running a program calling a stored procedure in sequel is more efficient than sending individual query commands one at a time. Also stored procedures are generally compiled ahead of time and may also be cached by the database management system. In this aspect query commands may be used as a powerful programming tool. In response to the query the database module may return the stored data that is related to the input .

In Step the task management module may send a query to the one or more databases where the business rules are stored in the system . In one embodiment each business rule may include one or more tasks to be triggered in response to a particular input . For example for an input having the characteristics of a tracking number for shipping purposes the associated business rule for shipping may include the task of printing a packing slip and the task of printing a shipping label. For each of a variety of inputs a business rule may be written and stored including a list of tasks to be performed. Each business rule may include one task or it may include many tasks and subtasks.

For each task identified in response to the query sent in Step the system of the present invention may in one embodiment build a script of command or set of commands in Step designed to accomplish each task . For example a task to print a shipping label may include scripts or commands to be sent to a particular station where a particular output device such as a label printer that may be configured specifically to print shipping labels. In general the commands may include specific instructions for producing the desired output .

In Step the system of the present invention may transmit or otherwise communicate the commands to the facility or other location where the output is desired. In one embodiment the commands may be sent using XML directly to a client computer processor. In one embodiment the commands may be held or stacked in a queue until a time scheduled for their delivery. In this aspect for example the system may be used to control batch printing by delaying and grouping certain commands intended to be sent to a particular printer. The commands may also remain stacked in a queue until a certain threshold limit is reached for example a certain quantity or number of commands or a certain type. Various threshold limits may be designed and built in to the business rules used by the system in order to control and optimize the delivery of commands .

In response to the commands the system of the present invention in Step may produce a desired or planned output . The output may be something physical like a printed label an annual report or a bill of lading or the output may be something non physical like the transmission and storage of data into a database. For example in one embodiment the system of the present invention may store the input and output to provide a record of the system operations.

After the desired output is produced in Step the system may receive another input . In one embodiment the system may be designed with sufficient capacity to accept connections from many different users simultaneously and likewise to receive multiple inputs simultaneously for processing. In this aspect for every facility where a set of business rules has been developed and stored the system of the present invention may receive inputs and direct the production of outputs corresponding to those business rules .

Referring again to the task management module of the present invention may be configured to store a set of business rules referred to in for a particular facility . In one embodiment the task management module may be a computer software program product. The task management module may be configured to acquire an input from or related to the facility and in turn send a query including the input to the set of stored business rules . In response to the query the task management module may be configured to receive a list of tasks and then build one or more commands designed to accomplish those tasks . The tasks may include stored data related to the input . In one embodiment the task management module may be configured to send the commands to an output device related to the particular facility . The commands may be stacked in a queue until a scheduled time.

In one embodiment the task management module of the present invention may be configured to communicate with a user interface that is designed to receive the input from one or more of the input devices operated by a user at a facility . The user interface in one embodiment may be designed for the exclusive function of receiving an input . In other words the user interface may be designed and built to actively prevent the user from entering any commands or performing any tasks other than simply acquiring an input .

In one embodiment the output device may include one or more printers located at the facility . The commands when executed may render a document suitable for printing.

In one embodiment the task management module of the present invention may be configured to transmit and receive data via the Internet between a local client computer and a distant server computer. The module in one embodiment may be configured to differentiate the commands and classify them as being either simple commands or complex commands. The complex commands may require greater processing time and capacity. The module may be designed to distribute the execution of the commands between and among the local client computer and the distant server computer in order to optimize the use of computing capacity such that the simple commands are executed on distant server computer and the complex commands are sent to the local client computer for execution.

In another embodiment including a local client computer and a distant server computer the task management module of the present invention may be configured to size each command in comparison to a threshold size. Those commands smaller than the threshold size may be marked as small jobs and the others may be marked as large jobs. For each small job the module may be designed to render a document based upon the small job using the distant server computer and then send the document to one of the output devices associated with the local client computer. For each large job the module may be designed to send the commands to the local client computer where the document may be rendered and printed locally. In this aspect the distribution of more complicated printing and rendering jobs may be handled more efficiently by the system of the present invention.

In one embodiment as shown in the task management module of the present invention may include a database application interface in communication with a database module where the set of business rules may be stored. The module may also include an inventory application interface in communication with an inventory module . The module may also include a printing application interface in communication with a printing module which may be configured to control one or more output devices . In one embodiment the output devices may include one or more printers.

The task management module in one embodiment of the present invention may include a database application interface that has been written according to a connectivity standard such that data from any data source compliant with the connectivity standard may be accepted and processed.

In several of the embodiments of the invention referenced herein a computer is referenced. The computer for example may be a mainframe desktop notebook or laptop hand held or a handheld device such as a data acquisition and storage device. In some instances the computer may be a dumb terminal used to access data or processors over a network. Turning to one embodiment of a computer is illustrated that can be used to practice aspects of the present invention. In a processor such as a microprocessor is used to execute software instructions for carrying out the defined steps. The processor receives power from a power supply that may also provide power to the other components as necessary. The processor communicates using a data bus that is typically sixteen or thirty two bits wide e.g. in parallel . The data bus is used to convey data and program instructions typically between the processor and the memory. In the present embodiment the memory may be considered to include primary memory that is RAM or other forms which retain the contents only during operation or it may be non volatile such as ROM EPROM EEPROM FLASH or other types of memory that retain the memory contents at all times. The memory could also be secondary memory such as disk storage that stores large amount of data. In some embodiments the disk storage may communicate with the processor using an I O bus instead or a dedicated bus not shown . The secondary memory may be a floppy disk hard disk compact disk DVD or any other type of mass storage type known to those skilled in the computer arts.

The processor also communicates with various peripherals or external devices using an I O bus . In the present embodiment a peripheral I O controller is used to provide standard interfaces such as RS 232 RS422 DIN USB or other interfaces as appropriate to interface various input output devices. Typical input output devices include local printers a monitor a keyboard and a mouse or other typical pointing devices e.g. rollerball trackpad joystick etc. .

The processor typically also communicates using a communications I O controller with external communication networks and may use a variety of interfaces such as data communication oriented protocols such as X.25 ISDN DSL cable modems etc. The communications controller may also incorporate a modem not shown for interfacing and communicating with a standard telephone line . Finally the communications I O controller may incorporate an Ethernet interface for communicating over a LAN. Any of these interfaces may be used to access the Internet intranets LANs or other data communication facilities.

Finally the processor may communicate with a wireless interface that is operatively connected to an antenna for communicating wirelessly with another devices using for example one of the IEEE 802.11 protocols 802.15.4 protocol or a standard 3G wireless telecommunications protocols such as CDMA2000 1x EV DO GPRS W CDMA or other protocol.

An alternative embodiment of a processing system that may be used is shown in . In this embodiment a distributed communication and processing architecture is shown involving a server communicating with either a local client computer or a remote client computer . The server typically comprises a processor that communicates with a database which can be viewed as a form of secondary memory as well as primary memory . The processor also communicates with external devices using an I O controller that typically interfaces with a LAN . The LAN may provide local connectivity to a networked printer and the local client computer and one or more local printers . These may be located in the same facility as the server though not necessarily in the same room. Communication with remote devices typically is accomplished by routing data from the LAN over a communications facility to the Internet . A remote client computer may execute a web browser so that the remote client may interact with the server as required by transmitted data through the Internet over the LAN and to the server .

Those skilled in the art of data networking will realize that many other alternatives and architectures are possible and can be used to practice the principles of the present invention. The embodiments illustrated in and can be modified in different ways and be within the scope of the present invention as claimed.

In one embodiment as illustrated in the system may include a server one or more computer networks and one or more local or remote clients distributed in a multi tiered server client relationship. The one or more computer networks may include a variety of types of computer networks such as the internet a private intranet a private extranet a public switch telephone network PSTN a wide area network WAN a local area network LAN or any other type of network known in the art. The network such as the LAN facilitates communications between the server and the one or more local clients . The LAN and the internet facilitate communications between the server and the one or more remote clients . Communication between two or more computer components may including for example a network transfer a file transfer an applet transfer an e mail a Hyper Text Transfer Protocol HTTP message an XML message a datagram an object transfer a binary large object BLOB transfer and so on.

The system of the present invention in one embodiment uses the internet and its highly efficient transmission protocols to send short quick efficient messages and data between and among the various computing components of the system . In this aspect the system is optimized for efficient communications and data transfer.

In one embodiment the system of the present invention may be configured to distribute the tasks and commands in order to optimize the use of computing capacity across the system . In order to optimize communications the system is configured to keep the queries and data exchanges as short and small as possible.

For example in one embodiment when the desired output is a simple print job the server may generate the print job and send a document in its final rendering to a distant output device or printer located at a remote facility . On the other hand if the print job is large and complex such as an international bill of lading with accompanying customs forms the server may send the data to a remote client where the document can be rendered and printed locally. In this aspect the system of the present invention may include a module or step for sizing each job in comparison to a threshold size identifying and marking each set of commands according to its relative size. By using the server to render only the print jobs that are relatively small the system handles larger requests and documents more efficiently.

In one embodiment the system of the present invention may be configured to access and receive data from a variety of database managements systems. In one particular embodiment the system includes a standard database connectivity interface that facilitates the acceptance of data from diverse databases. The single standard database interface may accept and process data from any database or other data source the complies with the connectivity standard.

The connectivity standards currently available include ODBC Open Database Connectivity and JDBC Java Database Connectivity . The system of the present invention may include a database interface configured to comply with one or more of these connectivity standards or with other standards that may be developed.

Referring again to the step of acquiring input in one embodiment may include acquiring or receiving an input or request from a foreign system i.e. a software system not specifically included in the system . If the request or input is standard compliant and the embodiment of the system includes a standard connectivity interface then the system will be able to accept and process the input resulting in the desired output . The input for example may be a simple HTTP message including a standard compliant request to access certain data based upon a key value. The system recognizes the incoming message and processes it like any other input through the steps shown in .

In this embodiment the system may be capable of receiving input data from any of a variety of standard compliant sources. This aspect of the invention makes the system particularly easy to integrate with new and different software systems. For new systems the system may include a number of additional components or drivers to perfect the interface with a new system.

The described embodiments of the invention are intended to be merely exemplary. Numerous variations and modifications will be apparent to those skilled in the art. All such variations and modifications are intended to fall within the scope of the present invention as defined in the appended claims.

The systems methods and objects described herein may be stored for example on a computer readable media. Media may include but are not limited to an ASIC a CD a DVD a RAM a ROM a PROM a disk a carrier wave a memory stick and the like. Thus an example computer readable medium can store computer executable instructions for a method for managing transportation assets. The method includes computing a route for a transportation asset based on analysis data retrieved from an experience based travel database. The method also includes receiving real time data from the transportation asset and updating the route for the transportation asset based on integrating the real time data with the analysis data.

What has been described above includes several examples. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems methods computer readable media and so on employed in a task management system. However one of ordinary skill in the art may recognize that further combinations and permutations are possible. Accordingly this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims. Furthermore the preceding description is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined only by the appended claims and their equivalents.

To the extent the term includes is employed in the detailed description or the claims it is intended to be inclusive in a manner similar to the term comprising as that term is interpreted when employed as a transitional word in a claim. Further still to the extent that the term or is employed in the claims for example A or B it is intended to mean A or B or both. When the author intends to indicate only A or B but not both the author will employ the phrase A or B but not both. Thus use of the term or herein is the inclusive use not the exclusive use. See Bryan A. Garner A Dictionary Of Modem Legal Usage 624 2d ed. 1995 .

