---

title: Multi-segment string search
abstract: A method and system for searching multi-segment strings is provided. The search system receives a query string containing part or all of the segments that are to be matched as query segments. Upon receiving the query string, the search system compares the query segments provided in the query string with segments gathered from previously stored strings. If any segments match the query segments, the search system selects the strings that contain matching segments as search results.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07756859&OS=07756859&RS=07756859
owner: Intentional Software Corporation
number: 07756859
owner_city: Bellevue
owner_country: US
publication_date: 20051219
---
Several circumstances give rise to strings of characters made up of one or more segments connected together. For example in C programming variable names cannot contain spaces but should be descriptive enough for a programmer to understand how the variable is used. One common mechanism for providing the necessary description is called CamelCase in which a variable name is made up of one or more concatenated words or word substitutes e.g. int for integer each of which is capitalized thus creating the appearance of humps in the name like the humps of a camel i.e. Bactrian rather than dromedary . For example a variable containing the number of disk drives on a computer could be named DiskDriveCount. CamelCase has been used beyond computer science for example many corporate trade names have adopted this technique for providing a single string made up of multiple segments i.e. EarthLink PlayStation DaimlerChrysler . Other mechanisms of separating segments within a string are also common for example segments may be separated by a special character such as an underscore i.e. disk drive count in the programming example above or by punctuation as is commonly used in .NET programming i.e. System.IO where a period is used to separate the segments .

Where strings are made up of several segments traditional search methods do not point the searcher to the best results. For example if a programmer searching for a function that deletes a file uses a simple substring search with the string file the search will return results that include not only file manipulation functions but also unrelated functions for manipulating profiles since profile contains the substring file . The programmer may know that the function he is looking for contains both a word starting with De and the word file but may not remember whether the function is called DelFile or DeleteFile or DeleteAFile. Using traditional search methods the search for De and file may return the correct function name e.g. DeleteFile but may also return so many incorrect function names e.g. GetProfileDescription and LaunchProfileReader that it may be difficult to identify the function of interest.

A method and system for searching multi segment strings is provided. In some embodiments the search system receives a query string containing part or all of the segments that are to be matched as query segments. Upon receiving the query string the search system compares the query segments provided in the query string with segments gathered from previously stored strings. If any segments match the query segments the search system selects the strings that contain matching segments as search results. Alternatively the search system may also include strings with partial matches in the search results. A partial match is a string that has segments that match some but not all of the query segments. The search system may rank search results based on the closeness of the match to make it easier for a user to identify the best matching string.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

A method and system for searching multi segment strings is provided. In some embodiments the search system receives a query string containing part or all of the segments that are to be matched as query segments. For example a programmer looking for a function to delete a file might input DeFi thereby specifying the first few letters of each segment and separating them by using CamelCase as described above. Upon receiving the query string the search system compares the query segments e.g. De and Fi provided in the query string with segments gathered from previously stored strings. For example the string DeleteFile has the segments Delete and File and the string CopyFile has the segments Copy and File. If any segments match the query segments the search system selects the strings that contain matching segments as search results. For example if the strings include DeleteFile CopyFile and DeleteProfile DeleteFile would be selected as a match since it contains segments beginning with both De and Fi. 

Alternatively the search system may also include strings with partial matches in the search results such as CopyFile and DeleteProfile. A partial match is a string that has segments that match some but not all of the query segments. For example the string DeleteProfile matches the De query segment but does not match the Fi query segment. The search system may rank search results based on the closeness of the match to make it easier for a user to identify the best matching string. In this way the search system can identify strings whose segments best match the query segments of the query string.

In some embodiments the search system performs a traditional search using the query string after performing a segment based search and adds any matches to the search results. This additional search may find strings in circumstances where the user did not correctly spell one of the segments in a query string or where the user incorrectly divided the segments in the query string. For example if a user is looking for a function to recover a file and the function is named UndeleteFile the user may search for DeleteFile thinking that the function contained three words such as UnDeleteFile. In this example if the search system only searched the beginning of segments it would not add the correct function to the search results. However by also performing a traditional string search the search system will add the correct function to the results.

In some embodiments the search system stores the strings in a string table. The string table has an index with an entry for each segment of a string and each entry points to the strings that contain that segment. When the user performs a search the search system divides the query string into query segments and matches each segment with the segments in the index. When matching segments are found the strings containing those segments both partial and complete matches are added to the search results.

In some embodiments the search system exposes an interface for adding removing and updating strings to the string table. For example a software development project often contains many symbols such as function names variable names and special types such as classes that are multi segment strings. A project management system can automatically add these symbols to the string table using the exposed interface so that a user of the project management system can find symbols in the project using the search system. A software development project may also utilize symbols available through a published application programming interface API which may also be added to the string table using the exposed interface so that a user may easily find available functions or other symbols for use in a project. When adding or updating strings in the string table the interface exposed by the search system can also allow the segmentation of the strings to be specified along with the strings themselves. This allows providing a custom component for dividing strings into segments that is specific to a particular project or problem domain. For example one project may define that segments are delimited by dashes e.g. mod update 1 while another project may only allow a string to comprise predefined segments e.g. UnDelFile where the predefined segments include Un Del and File. .

In some embodiments the search system allows concurrent operations to the string table by maintaining a version number that is modified each time the string table changes. Long operations that would normally need to have exclusive access to the string table can be performed simultaneously with other operations by monitoring the version to detect changes. For example if one user is enumerating strings of the string table and another user adds a string to the string table the enumerating user will know that a string has been added and can modify the enumeration to account for the added string by examining the version number.

In some embodiments the search system stores the segments in the string table as a b tree based on segment prefixes. The branch nodes of the b tree contain alphabetized segment prefixes of the minimal length necessary to distinguish their child nodes. The leaf nodes reference the full segment and hold a list of references to strings containing each segment. The tree grows uniformly such that all leaf nodes are on the same level and can be read linearly to traverse the tree alphabetically. When a search is performed the search system compares each query segment to the tree nodes starting at the root. The search system may store the nodes on a permanent storage medium and load them only as needed in order to use memory more efficiently. The search system traverses the tree until all matching leaf nodes are found. The matching segments referenced by the leaf nodes are then used to select strings for inclusion in the search results.

In some embodiments the search system ranks search results according to the degree to which they match the query string. When matching segments are found in the string table the search system assigns a score based on the level of matching. For example a query segment in the query string found at the beginning of a segment in a string in the string table may have a higher score than a matching segment found in the middle. When a string contains segments matching more than one query segment the search system may increase the score of the search result for that string giving strings with more than one matching segment a higher score. Finally the search system may examine the order in which query segments appear in the query string relative to the order of each matching segment in the string table and assign a score to results based on the similarity of the order.

In some embodiments the query string contains an indication that a query segment or the entire query string should be matched exactly. For example a character at the end of a query segment can indicate that it specifies a full segment and only exact matches should be returned. For example for a query string Delete Fi the multi segment string DeleteFile would be a valid search result but DeletedFile would not. A placed at the end of a query string can indicate that the whole string should be exactly matched. For example for a query string DeleteFile the multi segment strings DeleteFile and UnDeleteFile would be valid search results but DeleteAFile would not.

In some embodiments the search system divides the query string into query segments using a specified set of separator conditions. For example the query string may be divided by CamelCase as described above i.e. DeFi or by other mechanisms such as a special character i.e. de fi or de.fi . The user may configure the rules used for separating segments in strings and query segments in query strings. For example the user may configure rules that conform to a naming convention for a particular software project. The user may also specify that search results should be limited to strings containing the same separator condition as the query string. For example whether DeleteFile could be found by searching for both de fi and DeFi would depend upon the configuration. The user may also configure whether the search should be case sensitive and whether the specified query segments should be matched to the beginnings of segments from the stored list or based on some other criteria such as matching any substring within a segment or the end of the segment.

The computing device on which the system is implemented may include a central processing unit memory input devices e.g. keyboard and pointing devices output devices e.g. display devices and storage devices e.g. disk drives . The memory and storage devices are computer readable media that may contain instructions that implement the system. In addition the data structures and message structures may be transmitted via a data transmission medium such as a signal on a communication link or stored via a storage device. Various communication links may be used such as the Internet a local area network a wide area network a point to point dial up connection a cell phone network and so on.

Embodiments of the system may be implemented in various operating environments that include personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems programmable consumer electronics digital cameras network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and so on. The computer systems may be cell phones personal digital assistants smart phones personal computers programmable consumer electronics digital cameras and so on.

The system may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures and so on that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

From the foregoing it will be appreciated that specific embodiments of the search system have been described herein for purposes of illustration but that various modifications may be made without deviating from the spirit and scope of the invention. For example while matching has been described in terms of matching the query segments to the beginnings of segments in the string table other matching criteria could be used such as matching based on the query segments being found within any part of a string segment. While the search system has been described in the context of a software development system it is also possible to use the search system for other areas in which strings can be divided into multiple segments. Accordingly the invention is not limited except as by the appended claims.

