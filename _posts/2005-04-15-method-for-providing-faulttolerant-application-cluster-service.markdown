---

title: Method for providing fault-tolerant application cluster service
abstract: A method for providing an application cluster service (APCS) with fault-detection and failure-recovery capabilities. This method is composed of the steps of nodes clustering, invoking and detecting applications, fault-recovery of applications, detection of nodes, and node replacement. This method is applicable in a clustered environment to detect if a slave node is failed by sending a heartbeat periodically from a master node; and to detect if the master node still exists by checking if the master node stops sending the heartbeat (i.e. the master node may be failed).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07457236&OS=07457236&RS=07457236
owner: National Cheng Kung University
number: 07457236
owner_city: Tainan
owner_country: TW
publication_date: 20050415
---
The present application is based on and claims priority from Taiwan Application Ser. No. 93111309 filed Apr. 22 2004 the disclosure of which is hereby incorporated by reference herein in its entirety.

The present invention relates to a providing fault tolerant application cluster service APCS scheme and more particularly to providing the APCS method with concise processes for detecting node failure and replacing functions of the failed nodes.

The cluster service architecture i.e. Microsoft Cluster Service MSCS provided by U.S. Microsoft corporation is directed to a solution for total fault tolerant management with respect to platform resources which not only can mange the fault tolerant capability of application programs but also can manage disk drives printers and other Microsoft software systems such as SQL Server 2000 and Exchange Server 2000. When the node detection mechanism of MSCS applied in a relatively complicated cluster all of the nodes therein will send periodic heartbeats to notify other nodes that I am alive thus resulting in heavier network burden.

With regard to existing patents U.S. Pat. No. 6 636 982 entitled Apparatus and method for detecting the reset of a node in a cluster computer system provides a scheme regarding a process of adding load balancing cluster nodes to a cluster environment. Among the nodes activated in the original cluster environment one node acts as a master node usually the node first activated is the master node . When there is a new node desired to be added to the cluster environment the master node will determine if the new node is allowed to be added the determining process thereof including verifying the network connection of the new node is consistent with its configuration etc. If the new node is permitted to be added the master node will command the new node to provide service together. This prior patent mainly provides a verification scheme of cluster nodes for ensuring the new nodes in the cluster environment can be added correctly. However this prior patent fails to provide a heartbeat communication method among the nodes in the updated cluster environment after the new nodes are added in.

U.S. Pat. No. 6 502 203 entitled Method and apparatus for cluster system operation provides the concept of using a secondary channel wherein nodes in a normal cluster environment issue heartbeats via a primary channel. When a node in the cluster is detected to be abnormal a heartbeat will be sent via the second channel for further validation. If the results are the same for two channels the lost node detected can then be confirmed to be abnormal. The main purpose of this prior patent is to prevent abnormal cluster operation due to heartbeat loss by using multiple communication channels. However the method of this prior patent merely resolves the problem superficially but not fundamentally and does not provide any substantial improvement on the conventional heartbeat communication method which is relatively complicated.

U.S. Pat. No. 5 502 812 entitled Method and system for automatic fault detection and recovery in a data processing system adds one or more backup elements for each member in a data processing system and uses the signal sent by a watchdog circuit to check if the member in execution is abnormal. If a fault occurs the tasks undertaken are transferred to the backup elements for continuous execution. The prior patent mainly provides a redundancy mechanism for a single unit hardware environment. However the prior patent does not support distributed structures and merely provides 1 1 backup support but not 1 N backup support.

U.S. Pat. No. 6 212 649 entitled System and method for providing highly reliable coordination of intelligent agents in a distributed computing discloses an intelligent agent to detect if information transmitted in a distributed system is correct. If a fault occurs then the sending agent is asked to re send the information thereby promoting system reliability. However if the receiving agent has the errors of such as system down etc. the receiving agent cannot recover back to normal operation even if the information is re sent. Further the distributed object system built by applying the prior patent also lacks of the recovery function for faulty programs. Thus when the programs in the system have errors users cannot freely select other normal services in the system to replace the faulty programs.

Hence there is an urgent need to develop a method for providing fault tolerant application cluster service thereby simplifying detection processes and achieving better fault tolerant efficiency for application programs further reducing network burden and improving the shortcomings of the conventional skills.

An object of the present invention is to provide a method for providing fault tolerant application cluster service thereby simplifying detection processes and achieving better fault tolerant efficiency for application programs.

Another object of the present invention is to provide a method for providing fault tolerant application cluster service so as to have generic applicability and be suitable for use in various high tech industries to promote the availability and reliability of a manufacturing execution system MES .

Still another object of the present invention is to provide a method for providing fault tolerant application cluster service for reducing network burden by issuing periodic heartbeats merely from one single master node during normal operation.

According to the aforementioned objects a method for providing fault tolerant application cluster service is provided for use in a group in a cluster environment wherein there are a plurality of nodes and a database in the cluster environment and these nodes belong to the group and can be classified into a master node and a plurality of slave nodes.

According to a preferred embodiment of the present invention the method for providing fault tolerant application cluster service comprises performing a node clustering step performing a step of invoking and detecting applications performing an application fault recovery step performing a slave node detection step performing a master node detection step performing a slave node replacement step and performing a master node replacement step.

The node clustering step is used for storing node information for each of the nodes into the database wherein the node information includes a node ID and APCS service data.

The step of invoking and detecting applications is used for activating a first application of a first node of the nodes via a first cluster service of the first node updating the execution state of the first application as UP in the first node and the database after the first application is activated wherein the first cluster service also monitors the execution status of the first application.

The application fault recovery step is used for changing the execution state of the first application in the first node and the database to DOWN when the first node learns that the first application has execution errors selecting a second node having a second application and notifying the second node to invoke the second application wherein the function of the second application is the same as the function of the first application and after the second application is activated successfully changing the execution state of the second application in the second node and the database to UP wherein the execution status of the second application is then monitored.

The slave node detection step includes the following steps. When the first node is activated the first node retrieves data in the database to determine if there exists the master node in the cluster environment thereby generating a first result. When the first result is yes the first node is one of the slave nodes. Thereafter the first node notifies the master node that the first node is added to the cluster environment. Then the master node activates a heartbeat mechanism for sending a master heartbeat periodically to each of the slave nodes and waits for an acknowledgement response from each of the slave nodes. Meanwhile each of the slave nodes starts a timer for waiting for the heartbeat sent by the master node and resets its timer after receiving the master heartbeat.

In the master node detection step when the sending of the master heartbeat is interrupted due to the master node s errors each slave node s timer will be stopped Timeout after each slave node has not received the master heartbeat for a period of time and thus each slave node stops waiting for receiving the master heartbeat. Thereafter each of the slave nodes starts detecting if the master node is still in normal operation.

In the slave node replacement step the master node stops sending the master heartbeat to a first slave node of the slave nodes in the cluster environment after having detected that the first slave node has already had no response and notifies the database and the rest of the slave nodes except the first node to change the execution state of the first slave node to Failure . Thereafter the master node retrieves data from the database to select at least one second slave node having the same application executed in the first node before failure. Then the master node notifies the second node to invoke its application.

In the master node replacement step when one of the slave nodes has detected that the master node has malfunctions the execution state of the master node in the database is changed to Failure . Then other slave nodes in the cluster environment are notified to stop detecting the master node. Thereafter each of the slave nodes retrieves data in the database to determine if it should be a new master node. Then the new master node re activates a new heartbeat mechanism for sending a new master heartbeat to the rest of the slave nodes which are not the new master node and waits for a new acknowledgement response therefrom. Then the new master node retrieves data from the database to select at least one third slave node having the same application executed in the master node before failure.

Hence the present invention can simplify detection processes and achieve better fault tolerant efficiency for application programs has generic applicability and is suitable for use in various high tech industries to promote the availability and reliability of such as a manufacturing execution system MES and can reduce network burden by sending heartbeats via one single healthy master node.

The APCS provided by the present invention basically classifies the nodes in a cluster environment into two roles of master node and slave nodes wherein only one mater node exists in the cluster environment and the rest of the nodes are slave nodes. In normal operation the master node sends periodic heartbeats to each of the slave nodes for letting the slave nodes be aware of the existence of the master node and detecting if the salve nodes have errors and have no response. When the heartbeats stop being sent out for three successive occasions the master node may have errors at this time each of the salve nodes starts making an inquiry to detect if the master node is still available. If no response is returned for the inquiry for three successive tries it can be concluded that the master node is failed. If any of the slave nodes has detected that the master is failed the rest of the slave nodes will be notified to stop making the inquiry. Thereafter a new master node will be selected from all the slave nodes.

The entire operation procedure of the application cluster service of the present invention mainly including the following five parts a node clustering step a step of invoking and detecting applications an application fault recovery step a node detection step and a node replacement step.

The node clustering step is used for configuring the cluster environment. In the step of invoking and detecting applications any one of the nodes in the cluster environment may be used to invoke an application of itself or other nodes and the associated cluster service starts detecting the execution status of the application. In the application fault recovery step once the abnormal breakdown of the application occurs the associated cluster service will look for a healthy node with the backup application and transfers the failed service to the node found so as to provide continuous services.

In the node detection step after users activate the cluster service of some node this node will become a master node if it is the first node activated in a group of the cluster environment. Thereafter all the subsequent nodes starting their cluster services are assigned to be slave nodes. Following node assignment the master node periodically informs all of the slave nodes that I am alive via a heartbeat mechanism and meanwhile checks whether an acknowledgement response is returned normally from each of the slave nodes. If the breakdown of the master node occurs the slave nodes will start detecting if the master node is really broken.

In the node replacement step once the master node has learned that a certain slave node has no response the rest of the activated slave nodes will be notified to perform a function transfer step for transferring all the services originally provided in the failed slave node to other healthy nodes thereby providing continuous services. When the master is broken and fails to send out heartbeats the slave nodes activated will execute a Reconfigure instruction to select a new mater node. Then the new master node selects at least one healthy node the new master node or other slave nodes and then transfers all the services originally provided in the failed slave node to the healthy node for providing continuous services.

Referring to is a schematic flow diagram showing a node clustering step of APCS according to a preferred embodiment of the present invention. In a cluster environment there are a plurality of nodes and and a database wherein nodes and can be application servers and . In the node clustering step a user first has to establish a name for a group and then stores node information and of the nodes and respectively to the database . The node information includes a node ID and APCS service data.

The step of invoking and detecting applications can be classified into two modes wherein one mode is a step for invoking and detecting local applications and the other mode is a step for invoking and detecting remote applications.

Referring to is a schematic flow diagram showing a step of invoking and detecting local applications according to the preferred embodiment of the present invention. In the step of invoking and detecting local applications the user start to invoke a local application via a user interface of the node step . Thereafter the cluster service of the node uses an application s name transmitted thereto and a method of calling OS API Operation System Application Programming Interfaces to invoke an application step . After the application is successfully activated the node changes the execution state of the application in the database to Up step . Then the node calls the rest of the activated nodes to change the execution state of the application to Up step . Thereafter the node starts detecting the status of the application and generating a related report step .

Referring to is a schematic flow diagram showing a step of invoking and detecting remote applications according to the preferred embodiment of the present invention. In the step of invoking and detecting remote applications the user start to invoke a remote application i.e. another node in the cluster environment via a user interface of the node step . Thereafter the node desired to invoke its application is notified step . The node uses an application s name transmitted thereto and a method of calling OS API to invoke an application step after receiving the notification of activating its application. After the application is successfully activated the node updates the execution state of the application in the database to Up step . Then the node calls the rest of the activated nodes to change the execution state of the application to Up step . Thereafter the node starts detecting the status of the application and generating a related report step .

Referring to is a schematic flow diagram showing a fault recovery step of APCS according to the preferred embodiment of the present invention. In the application fault recovery step at first errors occur for one certain application of the node step . Thereafter the node has detected that the application has execution errors step . Thereafter the node tries to re activate the faulty application step . After the node has failed in re activating the application for three successive tries step the node changes the state of the application in the database to Failure step and notifies the rest of the activated nodes in the cluster environment to change the state of the application to Failure step . Then the node retrieve data from the database so as to select the activate nodes having the backup of the application in the cluster environment step wherein at least one node with the smallest node ID except the node is selected for continuously providing the service of the failed node . For example the node having the application is selected wherein the application is the backup application of the application .

The node notifies the node to invoke the application after selecting the node step . After receiving the notice for invoking the application the node uses the method of calling OS API to invoke an application step . After successful activation the node changes the execution state of the application in the database to Up step . Thereafter the node calls the rest of activated nodes in the cluster environment to change the state of the application to Up step . Then the node starts monitoring the execution status of the application and generated a report.

The node detection step can be classified into two modes wherein one mode is a master node detection step and the other mode is a slave node detection step.

Referring to is a schematic flow diagram showing a slave node detection step of APCS according to the preferred embodiment of the present invention. In the slave node detection step at first when a certain node is activated this node will retrieve data in the database to determine if there exists the master node for example the node in the cluster environment step . If existing this node will become a slave node such as the node or . Generally the first node activated in the cluster environment becomes the master node. Thereafter the newly activated node or notifies the master node that there is a newly added node or in the cluster environment step . Thereafter the slave nodes and start timers and respectively for waiting for the master node to send a master heartbeat step wherein after receiving the notification of step from the salve nodes and the master node activates a heartbeat mechanism for sending the master heartbeat periodically to each of the slave nodes and waits for an acknowledgement response from each of the slave nodes and step . After receiving the master heartbeat the slave nodes and reset the timers and respectively.

Referring to is a schematic flow diagram showing a master node detection step of APCS according to the preferred embodiment of the present invention. In the master node detection step when the master node has malfunctions step the malfunctions interrupt the sending of the master heartbeat step . While the slave nodes and do not receive the heartbeats from the master node for a period time such as the time for sending three successive heartbeats the slave nodes timers and used for waiting for heartbeats are stopped Timeout step . Meanwhile the slave nodes or stop the operation of the timer and used for waiting for receiving the master heartbeats. Thereafter the slave nodes and start detecting if the master node is still in normal operation step .

The node replacement step used while the node has errors in application execution is classified into two modes wherein one mode is a slave node replacement step and the other mode is a master node replacement step.

Referring to and and are schematic flow diagrams showing a master node replacement step of APCS according to the preferred embodiment of the present invention. Such as shown in in the master node replacement step when the master node has malfunctions the slave nodes and in the cluster environment start detecting if the master node is still in normal operation step . If some slave node for example the node has learned that the master node has had no response for three successive tries it is confirmed that the master node is faulty step . Thereafter the slave node changes the execution state of the master node in the database to Failure step and notifies the rest of activated slave nodes in the cluster environment to stop detecting the master node and start to select a new master node by performing a reconfiguring step step . The salve nodes and receiving the notification of reconfiguring will retrieve data in the database to determine if the node itself should be the new master node step 

Such as shown in after receiving the notification of reconfiguring and determining if the node itself should become the new master the earliest node activated in the cluster environment for example the slave node will be selected as the new master node hereinafter referred as the new master node step and the rest of the non master nodes still act as the slave nodes such as the slave nodes and step . Thereafter the slave nodes and start their timers and respectively step for waiting the new master node to send heartbeats. Meanwhile the new master node activates a new heartbeat mechanism to send periodic heartbeats respectively to the slave nodes and step and waits for the slave nodes and to return acknowledgement responses. Then the new master retrieves data from the database to select at least one slave node step having the same application executed in the master node before failure wherein the node with the smallest node ID for example the node is first to be selected for providing continuous services. Then the master node notifies the slave node to invoke its application step .

It is worthy to be noted that the present invention has generic applicability and is suitable for use in various high tech electronic industries such as semiconductor and TFT LCD industries etc. As long as the applications programs to be managed are linked with network the present invention is applicable. When the present invention is applied in a MES the availability of the MES can be greatly enhanced. When the module services of some node in a cluster environment have errors the other node can be notified promptly to replace the failed module services thereby increasing the availability and stability for the entire system.

Hereinafter a MES suitable for use in semiconductor and TFT LCD industries are used as an illustrative example for explaining the application of the present invention.

Referring to is a schematic diagram showing hardware and software implementation in a MES employing the method of the present invention wherein the MES includes five major application modules an equipment manager EM a lot control LC a statistics process control SPC a bar code management BCM and an alarm management ALM and those five modules are respectively implemented on application servers and wherein CORBA communication infrastructure are used for transmitting information and management a plurality of equipments . In normal operation the application server merely activates EM SPC and BCM modules and uses LC and ALM modules as backup and the application server merely activates LC and ALM modules and uses EM SPC and BCM modules as backup. Step is performed for installing the APCS of the present invention respectively to the application servers and for providing fault tolerant APCS.

The following explanation is stated in accordance with the aforementioned five major steps of the APCS of the present invention.

The application servers and are respectively added to a cluster environment and thus become two nodes in the cluster environment.

With respect to the activated modules EM SPC and BCM of the application server the APCS of the application server changes the execution status of these applications modules to Up working and starts monitoring the execution status of them.

As to the activated modules LC and ALM of the application server the APCS of the application server changes the execution status of these applications modules to Up working and starts monitoring the execution status of them.

For example the EM module of the application server has execution errors. The APCS of the application server will detect this situation and try to re activate the EM module. If the APCS of the application server fails to activate the EM module for three successive tries the execution state of the EM module will be changed to Failure . Thereafter the APCS of the application server retrieve data in a database to determine and find out that the application server is also one of the nodes in the cluster environment so that the application server is notified to activate its backup EM module.

After receiving the notification of activation the application server activates the backup EM module and changes the execution state of this backup EM module to Up for continuously providing the service of the failed EM module.

In the save node detection step the first node activated in the cluster environment is the master node. Therefore suppose the APCS of the application server is first activated and the APCS of the application server follows the application server will then be considered as the master node and the application server as the slave node. After the application server is activated a timer is established therein for waiting for the heartbeat sent from the APCS of the application server . After learning that the APCS of the application server is activated the APCS of the application server starts sending heartbeats to the APCS of the application server and waits for an acknowledgement response returned from the application server . The aforementioned step is used for detecting if the application server is faulty due to breakdown.

In the master node detection step if the application server is down due to malfunctions the heartbeats sent by the APCS of the application server will be stopped and thus the timer of the APCS of the application server used for waiting the heartbeats will be stopped Timeout after the APCS of the application server has not received the heartbeats for a period of time. Meanwhile the application server starts to detect if the application server is still in operation.

In the slave node replacement step if the application server is down due to malfunctions the application server will detect and learn via the heartbeat mechanism that the application has no response. If no response is returned for the heartbeats sent by the application server for three successive tries the application server will stop sending heartbeats to the application server . Thereafter the application server changes in the database the execution state of the application server to Failure . Thereafter the application server activates its backup modules LC and ALM to provide continuous services.

In the master node replacement step if the application server is down due to malfunctions the application server s timer will be stopped Timeout after the application server has not received the master heartbeat for a period of time. Meanwhile the application server starts to detect if the application server is still in operation. If the application server has learned that the application server has had no response for three successive tries it is confirmed that the application server is faulty. Thereafter the application server changes the execution state of the application server in the database to Failure and the application server become a new master node. Then the application server activates all of its applications modules EM SPC BCM LC and ALM for continuously providing services.

Therefore it is known from the above description that the combination of the APCS of the present invention and the MES can enhance the stability of the system services of the MES thus achieving the objective of near zero downtime services.

From the aforementioned embodiment of the present invention it can be known that the method for providing fault tolerant APCS can simplify the detection process and achieve fault tolerant efficiency has generic applicability and is suitable for use in various high tech industries thereby enhancing the availability and reliability of such as MES and can reduce network burden by sending heartbeats via one single healthy master node.

As is understood by a person skilled in the art the foregoing preferred embodiments of the present invention are illustrated of the present invention rather than limiting of the present invention. It is intended to cover various modifications and similar arrangements included within the spirit and scope of the appended claims the scope of which should be accorded the broadest interpretation so as to encompass all such modifications and similar structure.

