---

title: Incorporating technical computing into a DBMS
abstract: The present invention enables customized technical computing within a database. The present invention provides a method and system to insert a software function implemented in a technical computing environment into a database to manipulate data and use the software function as a database procedure. Once the software function is generated, in response to a single action being performed, two components are generated and stored in the database. The two components working together allow the software function to be invoked as a database procedure. The present invention offloads a user's burden to learn the often complicated database query language and decreases the amount of network traffic between a client computer and a database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07921406&OS=07921406&RS=07921406
owner: The MathWorks, Inc.
number: 07921406
owner_city: Natick
owner_country: US
publication_date: 20051212
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention generally relates to databases and specifically relating to using technical computing in databases.

A database is an organized collection of data that enables the data to be retrieved updated and managed. Databases may include many different types of data such as texts numbers graphics media and other types of information. Databases are commonly used to store data for many applications and systems such as inventory systems medical record keeping systems financial record keeping systems airline reservation systems and other systems.

To access and manage a database a database management system DBMS is commonly utilized such as in accounting human resources and customer support systems. Typically for every database there is a schema a structural description of the type of data held in the database. The schema describes the data that are represented in the database and the relationships among them. There are many different ways of organizing a schema. In other words there are many ways to model a database structure. Such a model is referred to as a database model or a data model . DBMSs are usually categorized according to the data model that they support relational object relational network and so on. The data model usually determines the types of query languages that are available to access the database.

One popular query language is the Structured Query Language SQL . However SQL like many other query languages only has a relatively small set of commands that one can use to manipulate data. Additionally a user needs to understand the rules for formulating the query and to program the query according to the requirements and the syntax for the query language is usually rather complex. Additionally when a user needs to manipulate a large set of data the user will usually use a technical computing program such as MATLAB of The Mathworks Inc. from Natick Mass. running on a client computer to write code to connect to the database and then submit queries one by one to retrieve data and then perform calculations such as statistical analysis using the data. After calculations are done in the technical computing environment users sometimes need to connect to the database again and submit queries to store calculation results in the database. However this method requires the user to understand the syntax of the query language to connect to the database to read and write data and it also requires a great deal of network traffic. Hence there is a need to simplify this process.

The present invention enables customized technical computing within a DBMS. The present invention provides a method and system to insert a software function implemented in a technical computing environment into a DBMS to manipulate data and use the software function as a database procedure.

In one embodiment of the present invention a method of inserting a software function into a database is introduced. The method includes the step of providing a software function that is implemented in a technical computing environment. The method also includes the step of selecting a target database where the software function is desired to be stored wherein the target database is managed by a DBMS that has an API. The method further includes the step of in response to a single action being performed automatically generating in the technical computing environment a first component containing the software function and a second component acting as an interface between the target database and the first component. The method also includes the step of storing the first component and the second component in the target database wherein the second component is used to invoke the first component by the target database as either a stored procedure or a database trigger.

In one aspect of the present invention the first component is either a COM object a JAVA jar file or a library built in the technical computing environment. In another aspect of the present invention the second component is either a VBA module a PL SQL module or a JAVA module. In still another aspect of the present invention the database management system is either an Open Database Connectivity ODBC compliant system or a Java Database Connectivity JDBC compliant system. In yet another aspect of the present invention the technical computing environment is provided by a MATLAB based software product. In a further aspect of the present invention the single action is clicking of a button. In still another aspect of the present invention the single action is choosing an item in a drop down menu. In yet another aspect of the present invention the single action is a specific sequence and combination of keystrokes. In still another aspect of the present invention the method further includes the step of custom building the software function in the technical computing environment. In yet another aspect of the present invention the method further includes the step of identifying at least one of a table or an associate field where data is retrieved or entered.

In another embodiment of the present invention a computing device including a storage medium storing a method for inserting a software function into a database is provided. The method includes the step of providing a software function that is implemented in a technical computing environment. The method also includes the step of selecting a target database where the software function is desired to be stored wherein the target database is managed by a database management system that has an API. The method further includes the step of in response to a single action being performed automatically generating in the technical computing environment a first component containing the software function and a second component acting as an interface between the target database and the first component. The method also includes the step of storing the first component and the second component in the target database wherein the second component is used to invoke the first component by the target database as either a stored procedure or a database trigger.

In still another aspect of the present invention a system for inserting a software function into a database is introduced. The system includes a technical computing program including a technical computing environment. The system also includes a software function that is implemented in the technical computing environment. The system further includes a target database and a database management system for managing the target database using an API. The system also includes a software module that in response to a single action being performed automatically generates in the technical computing environment a first component containing the software function and a second component acting as an interface between the target database and the first component and stores the first and second component in the target database wherein the second component is used to invoke the first component by the target database as either a stored procedure or a database trigger.

In one aspect of the present invention the first component is either a COM object a JAVA jar file or a library built in the technical computing environment. In another aspect of the present invention the second component is either a VBA module a PL SQL module or a JAVA module. In yet another aspect of the present invention the database management system is either an Open Database Connectivity ODBC compliant system or a Java Database Connectivity JDBC compliant system. In still another aspect of the present invention the technical computing program is a MATLAB based software product.

The present invention provides a method and system to insert a software function into a DBMS to manipulate data and use the software function as a stored procedure where the software function is implemented in a technical computing environment providing a wider range of data manipulation capability than the database itself. A stored procedure is a procedure that is physically stored within a database. They are usually written in a proprietary database language such as Procedural Language SQL PL SQL for Oracle database. The advantage of a stored procedure is that when it is run in response to a request it is run directly by the database engine which usually runs on a separate database server and is generally faster at processing database requests. The database server has direct access to the data it needs to manipulate and only needs to send the final results back to the user. This prevents the many overhead of communicating potentially large amounts of data back and forth between a client machine and the database. A stored procedure that runs a series of queries will usually run faster as a stored procedure than if it had been implemented as a program running on a client computer that communicates with the database by submitting queries.

The stored procedure also can simplify data management when a database is manipulated from many external programs. Embedding logic in the database using stored procedures eliminates the need to duplicate the same logic in each the program that accesses the data. This simplifies the creation and maintenance of the programs involved. One of ordinary skill in the art will appreciate that other database procedures such as database triggers may be utilized with the present invention instead of stored procedures.

Furthermore another advantage of the present invention is that a user can use a technical computing program with an easier programming language to create a custom function that the user wishes to use to manipulate data in the database. The user does not need to learn about the syntax of the proprietary database language and then manually write code to achieve the same purpose which is a cumbersome error prone and time consuming process. The present invention enables the transformation of a function implemented in a technical computing environment to a stored procedure or database trigger in response to a single action being performed.

The memory may comprise a computer system memory or random access memory such as DRAM SRAM EDO RAM etc. The memory may comprise other types of memory as well or combinations thereof. A human user may interact with the computing device through a visual display device such as a computer monitor which may include a user interface that a user may use to interact with technical computing program . The computing device may include other I O devices such as a keyboard and a pointing device for example a mouse or stylus for receiving input from a user. Optionally the keyboard and the pointing device may be connected to the visual display device . The computing device may include other suitable conventional I 0 peripherals. The computing device may further comprise a storage device such as a hard drive or CD ROM for storing an operating system and other software and for storing a database procedure generator and a technical computing program such as MATLAB of The MathWorks Inc. from Natick Mass. including a technical computing environment . Those skilled in the art will appreciate that database procedure generator can be a software module that is adaptable to be included as part of the technical computing program or a stand alone application that responds to calls from the technical computing program . Additionally the operating system and the technical computing program of the present invention can be run from a bootable CD such as for example KNOPPIX a bootable CD for GNU Linux.

Additionally the computing device may include a network interface to interface to a Local Area Network LAN Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 broadband connections e.g. ISDN Frame Relay ATM wireless connections or some combination of any or all of the above. The network interface may comprise a built in network adapter network interface card PCMCIA network card card bus network adapter wireless network adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein. Moreover the computing device may be any computer system such as a workstation desktop computer server laptop handheld computer or other form of computing or telecommunications device that is capable of communication and that has sufficient processing power and memory capacity to perform the operations described herein. Furthermore computing device can communicate with a target database via a database server that has a database management system for managing the target database using an API. Using the database management system the computing device can manage the target database such as read or write data and make queries regarding data in the target database . Database management system can be but not limited to a system that is Open Database Connectivity ODBC or Java Database Connectivity JDBC compliant such as DB2 Universal Database and Informix software of International Business Machine Corporation from Armonk N.Y. Ingres Open Source of Computer Associates from Islandia N.Y. Microsoft Access Microsoft Excel Microsoft SQL server of Microsoft Corporation from Redmond Wash. MySQL of MySQL AB from Sweden Oracle Database of Oracle International Corporation from Redwood Shores Calif. PostgreSQL Sybase SQL Server and Sybase SQL Anywhere.

The illustrative embodiment will be described solely for illustrative purposes relative to a MATLAB technical computing environment. Although the illustrative embodiment will be described relative to a MATLAB based application one of ordinary skill in the art will appreciate that the present invention may be applied to other technical computing environments such as technical computing environments using software products of LabVIEW or MATRIXx from National Instruments Inc. or Mathematica from Wolfram Research Inc. or Mathcad of Mathsoft Engineering Education Inc. or Maple from Maplesoft a division of Waterloo Maple Inc.

A specific table or an associate field may optionally be identified in step so that data may be retrieved or entered. A user may specify a table or an associate field where data is retrieved for computation by the software function. A user may also specify a table or an associate field where results of the computation of the software function may be entered and written. A single action may be performed by a user or programmatically and in response to the single action being performed the technical computing program automatically generates a first component and a second component in the technical computing environment in step . The first component may be but not limited to a COM object a JAVA jar file a .NET object or a library file that contains the algorithm of the software function. The second component may be but not limited to a VBA module a PLlSQL module or a JAVA module that will invokes the first component from within the target database. Once the first component and the second component are generated they are then stored in the target database in step . The second component enables the algorithm of the software function to be invoked as a database procedure such as a stored procedure or a database trigger. The second component uses the API associated with the specific database management system that manages the target database to enable the first component to interact with the database. The second component can be viewed as a wrapper for the first component so that even though the programming language and the compatibility of the first component is different from the specific database management system the second component is able to act as the interpreter between the database management system and the first component so that messages and data may be communicated seamlessly between the database management system and the first component.

A software function can be implemented using many different programming languages. As way of an example each MATLAB function is stored in an m file. A simple sum function can be implemented in MATLAB with an m file named sumThem . The sumThem.m can contain the following sample code 

A first component generated from a function can be implemented in many different ways such as one described in U.S. patent application Ser. No. 10 190 288 which is incorporated herein by reference. A builder tool can be provided for database procedure generator to build a first component using a COM object that is associated with the sumThem.m file. The builder tool automatically generates a COM object that includes a class with a method that will associate the class method with the m file sumThem.m. A user can provides the specific class name and the COM object name to be used by the builder tool to incorporate the function defined in sumThem.m. For example if OracleSum10.dll is the COM object and the class is called oracleSumClass a command can be executed such that the oracleSumClass will have a method called sumThem that corresponds to the sumThem.m file. In a preferred embodiment of the present invention a GUI is provided such that a build option can be implemented as a button. Once clicking on the build option button a command such as the following can be passed to the MATLAB command line to generate a COM object that invokes the sumThem.m function as a class method 

mcc M silentsetup d D work databases oracleSum src B ccom oracleSum oracleSumclass 1.0 S D work databases sumThem.m 

The generated COM object OracleSum10.dll can be invoked within a ORACLE database with the following PL SQL code. The following PL SQL code is an example of a second component that is used to call a first component that is a MATLAB generated COM object here the OracleSum10.d11 COM object . The following code is automatically generated by the database procedure generator so that a user does not need to learn the API or programming language for a database to use a function that was implemented outside of the database.

drop package ORDMATLAB if this package already exist in the database then clear the old code and inserts the new code below 

 the following code specifies what the externally callable subprogram will do which is calling the MATLAB generated COM object 

i ORDCOM.CreateObject OracleSum.OracleSumClass.10 0 servername applicationToken this object is created in the database so that it can be associated with the MATLAB COM object. This newly created object allows the MATLAB COM object functions to be called from within the database 

i ORDCOM.Invoke applicationToken sumThem 4 retNum this method is trying to invoke the sumThem function in the MATLAB COM object 

The present invention enables the transformation of a function implemented in a technical computing environment to a stored procedure or database trigger in response to a single action being performed. The present invention offloads a user s burden to learn the often complicated database query language and decreases the amount of network traffic between a client computer and a database.

Many alterations and modifications may be made by those having ordinary skill in the art without departing from the spirit and scope of the invention. Therefore it must be expressly understood that the illustrated embodiments have been shown only for the purposes of example and should not be taken as limiting the invention which is defined by the following claims. These claims are to be read as including what they set forth literally and also those equivalent elements which are insubstantially different even though not identical in other respects to what is shown and described in the above illustrations.

