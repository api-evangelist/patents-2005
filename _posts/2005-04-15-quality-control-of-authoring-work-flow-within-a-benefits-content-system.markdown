---

title: Quality control of authoring work flow within a benefits content system
abstract: A first change request is generated in a work flow process to implement a first change to a portion of content within the benefits content system. A first status indicator, indicating whether the first change has passed a quality check, is associated with the first change request. A second status indicator, indicating whether the first status indicator should be overridden, is associated with the first change request. The first change request is moved to a next step in the work flow process if the associated first status indicator indicates the first change has passed the quality check. The first change request is moved to the next step in the work flow process if the associated first status indicator indicates the first change has failed the quality check and the associated second status indicator indicates that the first status indicator should be overridden.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08788311&OS=08788311&RS=08788311
owner: FMR LLC
number: 08788311
owner_city: Boston
owner_country: US
publication_date: 20050415
---
The present invention relates to quality control of authoring work flow within a benefits content management the system.

Managing the human resources HR and benefits functions of an organization e.g. a corporation can be a daunting task. Different benefits plans and policies that the organization offers are stored in different places. Some may be stored electronically and others mechanically. Different departments can be responsible for different benefits so that an employee has to make several inquiries to different people to obtain answers. To assist an organization vendors have developed automated software products to centralize and automate the management of the organization s benefits programs. For example systems are described in U.S. Pat. Nos. 5 590 037 5 600 554 6 505 183 6 640 216 and 6 633 859 and U.S. Patent Published Application Nos. 2002 0022982 2002 0049617 2002 0069077 2002 0099659 2002 0103680 and 2003 0101091.

For many organizations an investment in new and unknown technology is unappealing. These organizations want to focus on what they do best and outsource human resources management to service providers specializing in that area. One survey result indicated that 72 percent of large companies surveyed outsourced at least one HR benefits function. Human resource outsourcing HRO providers span the spectrum of the scope of services they provide. Some provide information technology IT services for the HR function such as IT strategy data centers development of in house applications voice and data networks and help desks. Others provide call centers for employees. Others provide transactional services such as training and development benefits record keeping accounts receivable tax services compensation and payroll and storeroom warehouse administration. Others provide all of these services plus other top level and strategic planning such as information management budget forecasting risk management and material resource planning MRP . These service providers provide full service benefits programs outsourcing BPO . According to another survey in 2003 the growth in the global full service HRO market was 24 with annualized revenues of 1.6 billion dollars US . The amount of employees serviced by full service HRO providers was 2.6 million employees. The average total contract value for transactions for the reported HRO contracts was 215 million dollars.

There are several service providers specializing in providing the management of benefits programs and who are providing full service to these organizations. One example is Fidelity Investments of Boston Mass. In being a full service benefits outsourcer Fidelity Investments provides a Web based user interface called netBenefits to assist an employer with delivery of the employer s benefits programs to its employees. The netBenefits user interface allows a plan participant e.g. employee to access one or more benefits programs e.g. a 401 k plan and obtain self help to answer questions about the benefits programs e.g. balance of a 401 k plan loan availability and loan requirements etc. and self service to perform certain transactions associated with the benefits programs e.g. transfer funds loan initiation etc. .

The description describes methods and apparatus including computer program products for a benefits content management system. In general in one aspect there is a computerized method for quality control of authoring work flow within a benefits content system. The method includes generating a first change request in a work flow process to implement a first change to a portion of content within the benefits content system and associating a first status indicator indicating whether the first change has passed a quality check with the first change request. The method also includes associating a second status indicator indicating whether the first status indicator should be overridden with the first change request and moving the first change request to the next step in the work flow process if the associated first status indicator indicates the first change has passed the quality check. The method also includes preventing the first change request from moving to the next step in the work flow process if the associated first status indicator indicates the first change has failed the quality check and the associated second status indicator indicates that the first status indicator should not be overridden. The method also includes moving the first change request to the next step in the work flow process if the associated first status indicator indicates the first change has failed the quality check and the associated second status indicator indicates that the first status indicator should be overridden.

Other examples can include one or more of the following features. The next step in the work flow process can include production. Some examples prevent the first change request from being closed while the associated first status indicator indicates the first change has failed the quality check. Some examples prevent the second status indicator to indicate an override of the first status indicator if the associated first status indicator does not indicate the first change has failed a non critical quality check. Some examples verify the first change to complete the quality check. Some examples associate a second change request in the work flow process to implement a second change to the portion of content with the first change request and the second change request includes an associated first status indicator indicating that the second change request has passed the quality check. Some examples move the second change request to a next step in the work flow process if the first status indicator associated with the first change request indicates the first change has passed the quality check. Some examples prevent the second change request from moving to the next step in the work flow process if the first status indicator associated with the first change request indicates the first change has failed the quality check and a second status indicator associated with the first change request indicates that the first status indicator should not be overridden and move the second change request to the next step in the work flow process if the first status indicator associated with the first change request indicates the first change has failed the quality check and the second status indicator associated with the first change request indicates that the first status indicator should be overridden. Some examples verify the second change through quality assurance to complete the quality check.

The first change request and the second change request can be associated by comprising content of a common subject. The second change request can be prevented from moving to production if the first status indicator of the first change request indicates failure and the second status indicator of the first change is not set to override. Some examples automatically transmit an electronic message to an author associated with the first change request in response to the change request having a change in status. The electronic message can be an email. The change in status can include the associated first status indicator being set to indicate that the first change has failed the quality check. Some examples generate a local database associated with an author associated with the first change request where the local database includes the first change to the portion of content. Some examples associate a location indicator indicating a location of the first change with the first change request. The location can include a location of the local database. The location can include a location of a local database associated with a user wherein the user is co worker of the author assisting the author with the first change.

In another aspect there is a computer program product tangibly embodied in an information carrier for quality control of authoring work flow within a benefits content system. The computer program product includes instructions being operable to cause data processing apparatus to perform any of the processes described above. In another aspect there is a system for quality control of authoring work flow within a benefits content system. The system comprises a computing device configured to perform any of the processes described above.

Implementations can realize one or more of the following advantages. As outsourcing continues to grow and more organizations request services from a human resources benefits outsourcer the benefits content management system is scalable and can easily handle the increase in volume of both viewing content and changing content. The system provides processes to allow multiple user authoring allow authors to make decisions about controlling access to related content control viewing at many different granularities control the quality of changes to the content while also allowing the change process to progress when certain faults can be tolerated and indicate pending changes to content being viewed. The system combines many available and existing the systems together to provide the features described herein and some of those features are a result of having to join different the systems together.

The system can coordinate changes across multiple authors to maintain content consistency eliminate record locking issues and prevent authors from overwriting each other s work. The system can control access to changes based on a variety of parameters keeping changes to content close to the users who own the content. The authoring tools security e.g. access control settings carry over into the runtime environment where users of different experience levels can have different access rights. The system ties the transfer process to a workflow process so that efficiencies can be realized through a systematic schedule of object transfers. The system also links a pending change indication process to the workflow process so that the system can automatically generate a pending change indicator on viewed content when a change request is pending and automatically remove that indicator when a change request is closed. The system also links a quality control process to the workflow process so that automatic notifications can be sent to the applicable users when a change request changes status eliminating the need for a user to query the system regarding the current status. The quality control process also enables users to decouple failed content so that other related content changes are not held up and to allow content with minor problems to move to production without losing an indication that a problem still needs to be addressed.

The system can control the granularity of the content viewed based on the role of the user viewing the content automatically providing more or less content as the situation requires. Out of the hundreds of benefits programs an outsourcer might manage the system enables the outsourcer to associate individual employees with specific benefits programs. This also allows multiple plans from the same plan type to be designated as actively enrolled in or available to a single participant. The system also enables sharing of benefits program content across multiple programs to realize efficiencies of scale. One implementation of the invention may provide all of the above advantages.

The details of one or more examples are set forth in the accompanying drawings and the description below. Further features aspects and advantages of the invention will become apparent from the description the drawings and the claims.

This detailed description includes headings to several sections. This first section presents an overview that highlights components included in a benefits content management system. The overview also provides some exemplary roles of different users of the system. The second section of the description describes processes for viewing content in the benefits content management system. These processes highlight the filtering of content based on a user identity and or role. The third section of the description describes processes for changing content in the benefits content management system. These processes highlight the allowance of multiple authors changing the content the indication of pending changes to users of the content and the quality control used to process changes.

A benefits program refers to a plan e.g. health dental life disability insurance benefit plan 401 k retirement plan a policy e.g. policy manual on sexual harassment in the workplace an event e.g. having a baby or getting married etc. The content of a benefits program refers to all of the information used to describe that benefits program. For example a health insurance benefit plan may apply to a child of an employee that is over 18 as long as the child is registered as a full time student. The information describing whether such coverage is allowed and the requirements of such coverage constitutes a portion of the content of this health benefit program. The particular sentence or paragraph describing this particular benefit i.e. coverage of a child over 18 can be referred to as a content element as this sentence or paragraph description is a portion of all of the content that makes up the complete description of the health insurance benefit. The content element can include both a template shared across benefits programs and variables that may also be shared across benefits programs or be specific to a single benefit program. The variables can be used to generate content dynamically and such variables also can be considered part of the content.

Generally the benefits guide manages all of the content for a service provider that provides the service of managing content of benefits programs for one or more organizations. The service provider enables employees of an organization to access content related to benefits programs the organization offers providing access to answers about the benefits programs. The service provider also maintains the accuracy of the data changing the content when necessary and maintains the technology e.g. the system required to provide these services. The content management module manages the interface between users of the benefits guide and the repository in which the content is stored. The repository serves as the centralized storage for all of the content and is used to store and access the content of the benefits programs.

Connected to the exemplary repository shown in there are five databases and generally referred to as benefits content databases . The database is a defined benefits DB database which stores content of benefits programs related to defined benefits plans e.g. pension plans . The database is a defined contributions DC database which stores content of benefits programs related to defined contributions plans e.g. 401 k plans . The database is a health and insurance HI database which stores content of benefits programs related to health and insurance such as health insurance programs dental insurance programs disability insurance programs etc. The database is a human resources HR and payroll HRPR database which stores content of benefits programs related to the payroll and human resources policies of an organization. The database is a centralized database which stores content of one or more benefits programs e.g. defined contributions defined benefits heath and insurance human resource payroll etc. . In the system the content management module accesses the databases using an access server . The exemplary server uses a request protocol e.g. a structured query language SQL that communicates with the databases using an open standard application programming interface API e.g. open database connectivity ODBC for allowing access to dissimilar proprietary databases. Other examples of the repository can use other database management technologies such as Java database connectivity JDBC . Other examples of the request protocol by the exemplary server may include Web services e.g. HTTP SOAP requests .

The role of user is customer support services CSS . The CSS user is for example a telephone representative that talks to a participant over a telephone network e.g. public switched telephone network PSTN . The CSS user is generally an employee of the service provider and a viewer of the content of one or more benefits programs stored in the repository . The CSS user views the content to answer questions of a participant . There can be multiple levels of CSS users for example a junior CSS user and a senior CSS user. These levels can limit how the CSS user interacts with other users and with the system . The CSS user can access the content management module using a front end application that executes locally on a computer associated with the CSS user . For example the local application can be referred to as a benefits workstation. The benefits workstation application provides a user interface to enable the CSS user to enter data about the participant e.g. social security number and to display the content returned from the content management module based on the entered information. The benefits workstation application may also automatically receive participant context information e.g. social security number from a voice response system VRS not shown and pass that information to the content management module to display appropriate content. In one example the benefits workstation application is a portal application and communicates with the content management module using application communication technologies e.g. a client server paradigm or a Web based client paradigm . If the CSS user notices an error in content e.g. a typographical error while answering a question for a participant the CSS user can notify another user to make a change. For example the CSS user can notify a service delivery specialist SDS user .

The SDS user is generally an employee of the service provider and a viewer of the content of one or more benefits programs stored in the repository . The SDS user views the content to verify the errors found by the CSS user . The SDS user can access the content management module using the benefits workstation application that executes locally on a computer associated with the SDS user . In some examples the SDS user can initiate a request to change a portion of the content. The system includes or communicates with a workflow process e.g. to track a request for a change to a portion of content. The SDS user serves as a liaison between the CSS user and a client service manager CSM user . In such a situation the SDS user communicates with the CSS user and the CSM user until a change request is resolved e.g. change is incorporated into content or change request is closed as not being needed .

The CSM user is generally an employee of the service provider and a viewer of the content of one or more benefits programs stored in the repository . The CSM user may view the content by accessing through the benefits workstation application or by accessing the content management module directly in which case the module applies security restrictions to limit access to particular benefits programs or subsets of content elements. The CSM user views the content to verify that the content is accurate according to a client . The client is a representative of an organization e.g. an employer to which the service provider provides the content management services. The CSM user can initiate a request to change a portion of the content and view and or change the status of pending change requests in the workflow process. Because the CSM user has a direct relationship with the client the CSM user typically is involved in the approval process of a change request for content associated with that user .

The roles of users and are as content authors generally referred to as the authors . The authors are generally employees of the service provider. The authors have direct access to the content management module so that they can generate and maintain the content of the benefits programs stored in the repository . The authors also generate and maintain templates that can include both static content and logic to generate dynamic content. The authors also generate and maintain logic to incorporate business rules that can trigger specific content based on client participant or benefits program data e.g. variables .

The role of user is a systems support and development SSD user. The SSD user is generally an employee of the service provider. The SSD user maintains the technology of the system . In other words the SSD user configures tests debugs and upgrades the hardware and software components of the system . The SSD user can also generate applications needed to integrate the different components some of which can be off the shelf components of the system . The SSD user may also perform administrative functions on the system e.g. setting security access .

The modules and interact with a knowledge base module and a workflow process . The knowledge module models the content and enables the use of templates to generate content dynamically using organizational variables. The knowledge module can be implemented using for example one or more of the Authoria Advisor Series products such as Employee Advisor and or Manager Advisor manufactured by Authoria Inc. of Waltham Mass. or one or more of the Vignette suite of products manufactured by Vignette Corporation of Austin Tex. The workflow process tracks changes to the content. The system shows the use of a workflow process that is external to the content management module and can be used for other enterprise workflows in addition to tracking the changes to content. The logical view is intended to show the functionality of the content management module and the physical boundaries of the implementation can be different from the logical boundaries shown in the exemplary the system . In some examples a single server and or a single application implement all of the modules and . In other examples two or more servers and or applications implement the modules and without regard to the logical boundaries shown in . In yet other examples the knowledge module can be external to the content management module and or the workflow process can be included in the content management module. For example Vingette of Austin Tex. offers a platform referred to as Vignette V7 that includes a suite of content management products. The Vignette V7 products are marketed as a Web content manager but the platform is adaptable to be incorporated as part of the implementation of the system . For example the Vignette V7 products from Vingette of Austin Tex. include a workflow process and a content modeler that can be integrated into a single content management solution. The Vignette V7 platform also includes a rich set of APIs that enable the modules and to provide their associated features on top of this platform. Further examples can include any other products that perform in the enterprise content management space notably Documentum and IBM which can be adapted as described herein.

Irrespective of the content management tools used to implement the system e.g. a combination of products from vendors and custom written software modules written by in house developers the content of the system is modeled in a fashion to implement the processes described herein. illustrates an exemplary logical diagram modeling the content included in the system . The diagram shows that the health and insurance database within the benefits guide repository includes two benefits programs a health plan and a dental plan . The content of the health plan and the dental plan is modeled by a collection of content elements having certain relationships with other content elements. In the health plan a content element CE has a relationship R with a content element CE a relationship R with a content element CE and a relationship R with a content element CE. The content element CE has a relationship R with a content element CE. Similarly in the dental plan a content element CE has a relationship R with a content element CE a relationship R with a content element CE and a relationship R with a content element CE. The content elements CE and CE have relationships R and R respectively with a content element CE.

A content element is a portion of the content and can be for example a sentence a paragraph a section of multiple paragraphs a variable or some combination of these. The system can generate a content element using a template. The following examples describe content elements describing the eligibility of dependents and are used in conjunction with to help illustrate an example of content elements and their relationships. The content element CE represents the following template 

This exemplary template includes the variable health plan name the value for which is inserted when the system generates this content element for viewing. The value for the variable health plan name varies by plan. The value for the variable health plan name and any other variables may be retrieved from the centralized content or from one of the record keeping system stores or . Variable values stored in the record keeping system stores may also be used for record keeping and benefits program transactions. For the health plan the value of the variable health plan name is Blue Cross PPO. The exemplary template above is content element CE so the variable health plan name is content element CE and the association between the template and the variable for this plan is the relationship R. The relationship R can be implemented using for example a database table. In this example there can be one or more rows in a table for the health plan identifying that the content element CE is the template above and the associated value for the variable health plan name is Blue Cross PPO. When a variable is used the content element of the variable e.g. CE can also have a relationship not shown to a question content element that facilitates content entry by content authors . A question content element is a piece of content that describes what the variable represents typically in the form of a question. For the CE example the question content element can be a string of text as follows WHAT IS THE NAME OF THE HEALTH PLAN The system uses these questions when obtaining values for these variables from a user of the system who enters them such as the content author or the CSM user .

The CE exemplary template above also includes the variable dependent eligibility over 18 the value for which is used by the system to determine whether the IF condition is met. The value for the variable dependent eligibility over18 varies by plan. For the health plan the value of the variable dependent eligibility over18 is TRUE. The exemplary template above is content element CE so the variable dependent eligibility over18 is content element CE and the association between the template and the variable for this plan is the relationship R. The relationship R can be implemented using for example the same database table as R. Similar to above the content element of the variable CE can also have a relationship not shown to a question content element as follows DOES THIS HEALTH PLAN ALLOW DEPENDENT COVERAGE FOR A DEPENDENT OVER THE AGE OF 18 

If the conditional statement of the CE exemplary template is TRUE then the system includes the content element CE when generating the content for viewing. The following is an exemplary template for the content element CE describing the eligibility of a child over 18.

The system uses these stored relationships when dynamically generating content for viewing. A benefit of the dynamic generation using variables is that templates can be reused across benefits programs by simply changing the variable values for each program. With so many different benefits programs the system includes processes to limit the benefits programs that a particular participant can view. One of the features provided by the viewing filtering module is filtering benefits programs available to a particular user on an individual basis.

For example the presentation page displayed in the second area includes a content element at the top of the page. The content element is a title indicating to the user what is displayed on the page. In this case the page includes an overview of the highlighted health plan. The page includes a content element displayed directly under content element . The content element is a paragraph describing an overview of the type of health plan selected. Under the content element there is a group of six hyperlinks to move the user quickly to a specific topic within the page. Topics are stored as content elements within the repository . The first topic of the page is summary. The page includes a content element displayed under the summary heading that describes the summary for the participant. As described above the system can dynamically generate this content element with a template. The page includes a hyperlink to move the user quickly to the one or more content elements describing related information such as the exemplary content element templates described above.

To determine which benefits programs are displayed in the first area and available to a user to view the system e.g. viewing filtering module employs a filtering process. illustrates an exemplary filtering process to filter content viewed by a particular user. The system associates identifiers for each of the benefits programs stored in the repository and available to a participant to view. For example the system can use a database table that lists all of the available plans and the identifiers with which they are associated. Table 2 lists an example of associations between benefits programs in different databases of repository and their identifiers. As shown in Table 2 the same plan e.g. ABC Corp. Medical Plan can have more than one identifier and different variations of a plan e.g. ABC Corp. Bonus Plan can each have their own identifiers thus limiting an employee to be able to view only the variation applicable to that employee.

The system also stores mapping rules that instruct the system on how to use retrieved data to generate an access key. For example the system can use a mapping dictionary that contains the instructions. One exemplary mapping rule in the mapping dictionary for benefits programs in the HI database is Client Practice Subject Status Plan Type Plan Code where the symbol indicates appending the listed variables to generate an identifier. Another exemplary mapping rule in the mapping dictionary for benefits programs in the HRPR database is Client Practice Subject Hourly Salary HighlyComp . The mapping dictionary also includes a variable mapping portion that maps the variables in the mapping rules to the variables used in the system . In some examples a system implements the variable mapping as its own separate dictionary.

When the system receives a request to view content the system also receives a user identifier for the request. The user identifier is based on the role of the user making the request to view some content. For example the user can be the participant requesting the information through the Web server . In such an example the system authenticates e.g. receives correct user credentials the participant . One example identifier is the participant s social security number SSN . The participant may include this identifier as part of the log in process or the system can retrieve the identifier from a participant database not shown based on the user credentials. The participant database can be part of the repository or the participant database can be located external to the benefits guide and accessible to the benefits guide using a Web services paradigm. In another example the user making the request is the CSS user talking to the participant over the phone network . In this example the CSS user makes the request using the benefits workstation application . Again the request includes some identifier to identify the participant such as a SSN. The system can determine e.g. by receiving different parameter values in the requesting URL whether the request is from the participant using Web server or the CSS user using the benefits workstation and can provide different services depending on the user role. The CSS user may obtain a broader view than what the participant might be able or want to view or the CSS user may select a filtered view to limit the view down to what the participant would see.

In response to the received request the system retrieves the applicable mapping rule. In order to retrieve the applicable mapping rule the system may need additional information. In one example the mapping dictionary is organized by client e.g. employer practice e.g. Health Welfare database and subject e.g. medical . In this example the system uses the participant identifier e.g. SSN to determine the client with which this participant is associated. For example the system receives a SSN 999 99 9999 as an identifier for a participant who is requesting to view a list of benefits programs e.g. the list in the first area of display . The system retrieves from the participant database that this participant is an employee of the client ABC Corp. The system can use an identifier for the client other than the client s name. For example ABC Corp. can have a client ID of XX8052. Because the request is for a list of all benefits programs the system searches for all rules associated with ABC Corp. If this was not the case e.g. if the request was only for a medical plan the system would narrow the search even further to rules applicable to the health and insurance database where the subject is medical. The system first finds the rule Client Practice Subject Status Plan Type Plan Code for client ABC Corp. for the HI practice for medical plans. Using this rule the system determines that the mapping elements for which the system needs to retrieve values are Employee Status Plan Type and Plan . In other words because this rule is applicable for client ABC Corp. for the HI practice for medical plans the system already has values for the mapping elements Client Practice and Subject . The system retrieves values for each of these variables that correspond to the participant with a SSN of 999 99 9999. Table 3 shows exemplary values for the participant 999 99 9999.

The system generates an access key using the mapping rule and the retrieved values. Using Table 3 the system inserts the value XX8052 for the mapping element Client the value HI for the mapping element Practice the value Med for the mapping element Subject since the rule is applicable for medical plans the value Active for the mapping element Status the value Med for the mapping element Plan Type and the value 100 for the mapping element Plan Code . The system appends these values to generate the access key is XX8052HIMedActiveMed100. The system uses the generated access key to determine whether there are any program identifiers that match the access key. Using Table 2 for example the system determines that there is a match to the ABC Corp. HealthFlex Medical Plan. The system retrieves that matched benefits program from the respective database e.g. or at least retrieves its title and other location information so that the title can be used as a hyperlink in a displayed list e.g. the first area of the display .

The system determines whether there are any additional applicable mapping rules. For example if the request is to generate a page with an area similar to first area of the display then the system searches for all of the benefits programs in repository associated with the client ABC Corp. In addition to the medical plan the system finds the rule Client Practice Subject Hourly Salary HighlyComp in the mapping dictionary for client ABC Corp. for the HRPR practice for bonus plans and retrieves this rule. Using this rule the system determines that the mapping elements for which the system needs to retrieve values are Hourly Salary and HighlyComp . The system retrieves values for each of these variables that correspond to the participant with a SSN of 999 99 9999.

The system generates an access key using the mapping rule and the retrieved values. Using Table 3 the system inserts the value Exempt for the mapping element Hourly Salary and the value Yes for the mapping element HighlyComp . The system appends these values to generate the access key is XX8052HRPRBonusExemptYes.

The system uses the generated access key to determine whether there are any program identifiers that match the access key. Using Table 2 for example the system determines that there is a match to the ABC Corp. ABC Corp. Bonus Plan Highly Compensated Employees. The system retrieves that matched benefits program from the respective database e.g. or at least retrieves its title and other location information so that the title can be used as a hyperlink in a displayed list e.g. the first area of the display . The system determines whether there are any additional applicable mapping rules. In this example there are only those two benefits programs for the client ABC Corp. Not finding any additional applicable mapping rules the system generates the display e.g. the first area of the display listing the two plans that the participant 999 99 9999 can view.

The two examples of mapping rules and generated access keys used variables that represented characteristics of the participant e.g. Salary Hourly indicator highly compensated indicator and variables that represented characteristics of the benefits program e.g. status plan type plan code . Tables 4 and 5 include additional examples of both. Table 4 includes additional examples of characteristics of the participants that can be used for generating benefits requirements identifiers mapping elements used in mapping rules and variable values used for generating an access key for a participant. For the characteristics of the participant there may be a one to one relationship or a one to many relationship with the participant identifier e.g. SSN and the client. For example participants may have 401 k plans with more than one client in the system .

Table 5 includes additional examples of characteristics of the benefits programs that can be used for generating benefits requirements identifiers mapping elements used in mapping rules and variable values used for generating an access key for a participant. For the characteristics of the benefits programs there can be a one or many to zero one or many relationship with the client and the participant identifier e.g. SSN . In other words for each client or participant identifier there are zero to multiple benefits programs with which that identifier is associated.

In addition to filtering the benefits programs available to view by a participant the system e.g. the viewing filtering module can also filter what content is viewed. In one example the system filters content based on the role of the user viewing the content. As an illustrative example the participant has accessed her 401 k plan that the employer provides to initiate a loan. While participant the is attempting to perform this self help transaction through Web server she is probably not interested in other content about the 401 k plan not related to taking out a loan. Even more narrowly she is probably only interested in the content that corresponds to the specific part of the transaction she is performing at that time. For example when asked to enter an amount for the loan she would like to know what the rules are e.g. minimum of 5 000 and maximum of 50 for her 401 k plan. If the participant encounters problems or has questions she may call the CSS user . The CSS user to help her resolve her problems and questions is going to want more of the content than just that related to specific task the participant is performing. For example the CSS user may want all of the content related to the employer s 401 k plan that describes taking out a loan or the CSS user may want the content for the entire 401 k plan. To accomplish this the system provides different levels of granularity to view the content of a benefits program.

The system stores the contents of a benefits program as several content elements. Some content elements have relationships to other content elements. The relationships provide a process to the system to determine whether changes to one content element may affect another content element. The system also uses another entity referred to as a collection to group content elements together that might be applicable for different roles of users of the system . Using the 401 k plan example the content elements for the 401 k have the granularity so that one or a few content elements are used to describe each transaction that a participant can accomplish on their own using user interface . If a few content elements are used the system can make this a collection. For example the transaction where the participant selects an amount might have three content elements that describe that particular transaction. The system can define e.g. using a database table a collection named Selecting a Loan Amount that associates the three content elements with that transaction screen. The system can define a larger collection named Loan Requirements that associates all of the content elements that describe the loan process of that 401 k plan including the three content elements in the Selecting a Loan Amount collection. The system can define nested collections meaning the Loan Requirements collection can include a reference to the Selecting a Loan Amount collection as an alternative to referencing each of the content elements individually.

If the system determines that the role of the particular user is a not a participant the system determines whether the role of the particular user is a CSS. If the user is a CSS then the system filters the collection for example based on the help the user is trying to provide. The filtering rule can be that for a particular transaction a participant is attempting the system transmits the entire collection containing that transaction such as the entire Loan Requirements collection. If the system determines that the role of the particular user is a not a CSS the system can step through other roles and apply the predetermined rules established for that role. For example for a content author the collection could be filtered by whether that content author is the author of a content element allowing the content author to view only those content elements in the collection for which he is an author. The rule for filtering content can also be based on security issues.

In one example implementation the system uses a Web services paradigm to retrieve and filter content. In such an example the collections can be transferred between modules using extensible markup language XML . The content elements and the collections can also be implemented using objects where object oriented technology is employed.

In addition to enabling users to view the content in the repository the system also enables the content authors to change the content when problems e.g. typographical errors are found and when benefits programs change. When the system is used to provide the content to participants as an outsourced service to a client e.g. an organization the system includes benefits programs from a large number of different clients. The system is scalable so that as the number of clients grows and the content in the repository grows the number of content authors and the number of transactions they can accomplish can also grow. The features described below enable this scalability.

The system includes the multi user authoring module to provide a process to handle multiple authors. illustrates an exemplary process to manage multiple authoring in the system . The system defines relationships between content elements. As described above e.g. the system can define relationships between content elements that have a dependency with other content elements. For example a relationship can be defined when one content element is used in another content element when a variable is used with a particular content element and when a question content element for a particular variable is used in a process to obtain a value for a variable. When the content author wants to make a change to a content element the system receives a request from the content author identifying the particular content element e.g. CE . The system identifies e.g. a database lookup the other content elements with relationships to the content element that the content author is going to change. For example if CE is the content element identified in the request that the content author wants to change the system identifies that CE CE CE and CE have a relationship to CE.

The system provides a user interface to the content author identifying these related content elements and enables the content author to control the access to these related content elements while the content author is making the change. In some examples the system includes a sub process that is performed for each of the related content elements. In sub process the system determines whether the content author making the change wants to check out the related content element. The system can determine this for example by providing a check box element e.g. in the user interface that the system provides . If the system determines that the content author does want to check out the related content element the system checks out the related content element. For example the system marks the content element as checked out in the repository and allows access to that content element by the content author making the change. In some examples the system makes a copy of the checked out content element and puts the copy into a working area such as a local database e.g. residing on the content author s computer such as so that the content author can make changes to the local copy. In such examples the changes to the local copy have to be moved back to a centralized database e.g. so that they can be incorporated into repository

If the system determines that the content author does not want to check out the related content element the system determines whether the content author making the change wants to lock the related content element. The system can determine this for example by providing a check box element e.g. in the user interface. If the system determines that the content author does want to lock the related content element the system locks the related content element. For example the system marks the content element as locked out in the repository and prevents access to that content element by any other content author requesting to make a change to that related content element.

If the system determines that the content author does not want to lock the related content element the system sets a warning that is associated with the related content element. For example the system marks the content element in the repository with an indicator so that the system generates a warning when another content author requests to make a change to that related content element. The warning e.g. indicates that other related content is being changed by another content author.

In the second area the user interface includes four rows and one row for each related content element. Row corresponds to the related component Domestic partner documents row corresponds to the related component Domestic partner restrictions row corresponds to the related component Domestic partner contact and row corresponds to the related variable Domestic partner eligible which is a Boolean variable indicating whether or not a domestic partner is eligible for medical coverage under this plan. Also included in the rows are check boxes generally referred to as that enable the content author changing the component Domestic Partner to control access to the related content elements in rows and respectively. In the check boxes the content author can select to lock to warn and to check out each of the related content elements.

In the user interface the content author has indicated to the system that he wants to lock the Domestic partner documents e.g. using the selection button in check box and check out Domestic partner restrictions e.g. using the selection button in check box . Instead of automatically locking or checking out all of the related content elements and preventing access to other content authors user interface advantageously enables the content author to prevent access. This way the content author who knows what the scope of the change is can lock only those content elements that the content author knows should be locked due to the particular change. Similarly the content author only checks out those content elements that he needs to check out to make corresponding changes. In the user interface the content author has indicated to the system that he wants to set a warning for the Domestic partner contact content element e.g. using the selection button in check box and the Domestic partner eligible content element e.g. using the selection button in check box . This leaves those content elements available to other content authors so that other content authors can change those content elements in parallel e.g. simultaneously .

For the related content elements that the content author checks out the system can generate a recursive popup window e.g. another user interface for each included item that is also checked out. In the example above the system can spawn another window for the Domestic partner restrictions component. If the content author makes modifications to one of the included variables or components the system allows the content author to check them in separately. The system tracks the content elements as a single group to ensure that at the end the content author checks in all of the related content elements. In one example when the content author checks in the original component e.g. Domestic Partner the system generates an auto check in window not shown that requires the author to check in the items e.g. any related content elements not previously checked in. At this time all locked content elements are also marked as unlocked.

Similar to the controlling the viewing of content based on user roles described above the system can also control the changing and Web based delivery of content based on user role. User access for changing content and user access for viewing the content delivery through a Web browser can be configured separately. illustrate exemplary user interfaces that enable an administrator to control access to content based on user roles. illustrates a graphical user interface to enable the creation of user roles in the system . For example the system can further define the content author role into content author full access which indicates that the content author can have access to all of the content in repository . The system can define a content author role indicating a restriction to a specific practice such as content author HI which indicates a restriction to the HI database and the HI benefits programs content in the centralized database . The system can define a content author role indicating a restriction to a specific client such as content author ABC Corp. which indicates a restriction to benefits programs associated with the client ABC Corp. A user is associated with a defined user role for example indirectly by associating a role name with one or more user groups e.g. using NT groups or LDAP groups and or directly by associating a role name with the user directly e.g. using user IDs .

For these roles and any other that can be defined the system generates the exemplary user interfaces in to enable the administrator to explicitly define these user roles.

Restricting access to change content based on the factors above advantageously allows the system to have content changes placed as close to the origin of the change as possible i.e. in the hands of the content owner . For example phone center senior representatives e.g. a CSS user are aware of and or responsible for the contact information like telephone hours and hours of service. The system can enable this using restrictions on multiple levels of objects within the system including employer restrictions e.g. benefits program restrictions e.g. and or the questions restrictions e.g. . CSM users or plan sponsors work with clients directly and are responsible for the plan data and content how the plan works what are the plan rules etc. for those clients with whom they work. The CSM users are able to change certain plan data elements that drive plan content for their plans. The system can enable this using the employer restrictions e.g. . In addition users can be restricted to different views of the content from a production capacity. For example a phone representative only trained to service defined contribution calls should not have access to medical plan information. The system can enable this using the benefits program restrictions e.g. .

In some examples to incorporate a change e.g. the content is transferred from a centralized database to a local database associated with the user incorporating the change. For example a portion of the database is instantiated locally on a computing device associated with the user so the user can access the source of the content and make the necessary changes. In such examples the changes have to be moved back to the centralized database accessible to all users so that the process can be completed. An author can also incorporate a change e.g. by making changes directly within the centralized database.

In examples where the workflow process is a process external to the content management module the system uses the quality control module to serve as an interface between the database management and the workflow process to ensure that changes are automatically processed when a user completes a modification. The quality control module generates a user interface that enables the user making the change to notify the quality control module that the change is completed and ready to be moved back into the centralized database so that the change can be tested by quality assurance QA and moved to production. For example the user making the change transfers the modified content to a submit location e.g. a submit database and then changes the status on the user interface e.g. using a change request status entry button e.g. a pull down menu to a status of Content Submitted. The user making the change can also input into the user interface the location indicator e.g. path name of the content ready to be submitted. In response to the change in status the quality control module queues the changed content for transfer and moves and integrates the changed content into the centralized database. When the centralized database confirms the transfer the quality control module changes the status of the change request to Content Checked In . The use of the quality control module advantageously enables an administrator to review the queue of pending transfers to the centralized database of all of the changed content which would not be available if each user manually transferred her content back to the centralized database. This review of the queue allows the administrator to manage the queue e.g. change priorities cancel a transfer and or manually effect a transfer .

With the processes described above the system can have pending changes to content that is being viewed e.g. by a CSS user helping a participant . To give the user viewing the content a more complete picture the system indicates in the generated view that a change is currently pending for that particular content element. illustrates a screen shot that includes an indicator indicating that the Approval section e.g. the content element that contains that text has one or more pending changes. This indicator is also referred to as a caution note. The indicator can also serve as a hyperlink. When the user interacts with the indicator e.g. uses a mouse to move the cursor over the indicator or clicks a mouse button over the indicator the system generates a description that provides information about the pending changes.

The mainframe includes an integrated database IDB which is a general information database. The IDB is in communication with the benefits guide if it is not part of the repository . The IDB can include information such as participant information high level plan relationship information client configurations etc. In the system the IDB also includes information about pending changes so that the system can quickly retrieve the pending change information whenever the system is generating content for viewing that has a pending change.

The workflow process includes a workflow process interface module that allows the BG to retrieve information from the workflow process corresponding to certain work items that the workflow process is handling. For example the workflow process interface module can include an API that allows the retrieval of data. The workflow process is configured to assign work items to certain queues based on a set of rules. The workflow process includes a communication and education C E queue a back office queue a SDS queue a SIG queue and a BG operator queue . The workflow process uses the C E queue for work items to be handled by the content authors . The workflow process uses the back office queue for work items to be handled by back office personnel e.g. document scanners . The workflow process uses the SDS queue for work items to be handled by the SDS users . The workflow process uses the service installation group SIG queue for work items to be handled by SIG users e.g. SIG users are responsible for configuration of DC plan data in BG and in the record keeping system .

The BG operator queue is not for any particular users but is used by the BG to keep track of work items related to the pending changes of content in the BG repository . The workflow process has a set of rules to determine when work items going to the other queues e.g. and or should be copied and sent to the BG queue . For example if the other queues and or always deal with work items changing content only in the BG repository then the rule can be to simply copy each work item to the BG queue as the work item enters into one of the other queues and or . If there are other areas the workflow process is used for then the rule can be more sophisticated and look at values of certain parameters of the work item to determine if that work item relates to the BG repository . For example the rule can be to obtain the value the source of content being changed and if that value is one of the databases in the repository e.g. and or then the workflow process copies that particular work item to the BG queue .

The BG includes a BG work item servlet and a delete listener to keep track of the work items sent to the BG queue . The BG work item servlet and the delete listener can be for example included in the pending change indication module . By having the BG queue the BG work item servlet and the delete listener advantageously only have to monitor a single queue. When a new work item enters the BG queue the servlet obtains some data needed for the change indication and copies that data to the IDB . Table 6 illustrates an example of the data the servlet obtains from the workflow process e.g. using interface module and transfers to IDB for storage as long as the work item is open.

The work item type code i.e. parameter ITEM TYPE CODE is a parameter that the workflow process rule can use when determining whether to send the work item to the BG queue . For example all work item related to the benefits guide can have a value of OPTREQ for this parameter and in that case that value would trigger a copy. Similarly the product ID code i.e. parameter PROD ID C is a parameter that the workflow process rule can use when determining whether to send the work item to the BG queue . For example the value for this parameter is the database in which the source is stored. All work items related to the benefits guide can have a value of DB DC HI and PR.

These parameters also identify the specific content elements that are being changed by the work item. The parameters identify the plan name subject code page ID and section name.

When the system is generated content for viewing the system queries the IDB to find out if there are any parameters with the same values of the content being generated. If there is a match the system applies the pending change indication at the appropriate section in the displayed page.

Workflow process A closes a work item when the change has been tested and put into production e.g. the change has been incorporated into the repository . Workflow process A can also close a work item when it is not desired for example when a user e.g. a CSM user does not authorize the change because the change is not necessary or incompatible in some way with a client s instructions. As a work item is closed the delete listener deletes the values for that work item from the IDB . In one example the delete listener periodically e.g. at a period set by configuration checks the status of the work items in the BG queue to determine if any of them have changed to a closed status e.g. status code RESOLV . Using these processes the data in the IDB represents the currently pending changes in the workflow process with a tolerance of the period set by the configuration. The system simply has to query the IDB to obtain a quick indication of whether a particular page section in the generated display has an associated change currently pending.

For example using the screen shot Table 7 and Table 8 include values for the parameters of Table 6 that are stored in the IDB while the two change requests are pending e.g. status code INPROC in process .

When the indicator is selected by the user viewing the content the system displays a description window describing the pending changes. To perform this part the system uses the work item IDs that were returned in response to the query e.g. 123456654321 and 123456655555 . The system uses the work item identifiers to obtain a description directly from the workflow process e.g. using an API . With the unique IDs for the specific work items searching the work items through the workflow process can be efficient and quick. This process advantageously allows the description to be changed as needed as the work item is moved in the workflow process and enables the system to display the most current description available. Further when the work item is closed the system no longer displays the pending change indicator on the page as the data is removed from the IDB and nothing returned on subsequent queries.

In other examples alternatives to the system are used to implement indicating the pending changes. Some of these alternatives are described now only as illustrative examples and not to limit the alternatives in any way. For example as an alternative to the BG queue the BG work item servlet and the delete listener can monitor each queue and individually and apply rule logic similar to the rules described above to determine whether the data e.g. Table 6 for a work item should be transferred to the IDB while the work item is pending. The BG queue can be moved so that all of the work items flow through the BG queue first and the BG queue transfers the work items to the other appropriate queues e.g. and or . The description for the change can be stored in the IDB . This advantageously eliminates the need for the system to query the workflow process when generating a description of the changes. This requires that the description in the IDB be updated when it is changed in the workflow process .

The system includes the quality control module to track and control the movement of changes through the system . The quality control module can have its own associated database not shown to keep information that the quality control module uses in controlling quality of the process. Such information can include for example the work item identifier e.g. the unique ID the subject of the content being changed the date and time information of the change request the type of the content the status of the change request the owner of the change request and a brief description of the change request. The information can also include the availability of the content such as whether the content is in the centralized database available to be checked out or is already checked out by another user making a change. The quality control module generates a user interface that displays this information and can be used to enable users to enter and or update this information. In some examples where the same data is used by the QCDB and the workflow process that information can be automatically passed between the two e.g. changes in status .

The process also has a location division that includes a local database a submit database a centralized database a QA database an ACP database and a production database . These databases are used to move the changed content through the change process to different groups of users involved with the process . Although the process uses databases in other examples the locations are not databases but particular file locations on a network to which the changes can be stored as they move through the change process. Further other examples may not use as many individual locations. For example the local database and the submit database can be combined into the centralized database the QA database can be combined with the ACP database or there can be a single centralized database from which all users access the changes.

An author making a change to content checks out the content that she is modifying. In the process checking out the content includes transferring the content from the centralized database to the local database associated with that author. As described above when an author is done making the changes to the content she transfers the content to the submit database and changes a status e.g. in the workflow process or the quality control module which can automatically update the workflow process to Content Submitted . When the author changes the status the system checks in the changed content which includes transferring the changed content from the submit database to the centralized database . When the content is checked in the systems user verifies that the content objects identified to be moved exist in the database in the location specified e.g. if manual entry is involved verify there are no mistakes . If this verification fails the changed content is flagged as failed e.g. the value of a parameter associated with the change is marked failed or the system failed .

If the systems verification passes then the systems user changes the status of the changed content to a status representing the change content is ready for QA verification. When the systems user changes the status the system queues and transfers the changed content from the centralized database to the QA database . Content elements have relationships to other content elements. The relationship can be for example that certain content elements are included in other content elements. In other examples the relationship can be that all of the content elements are part of the same subject such as all the content elements related to the subject air travel for a particular policy. A group relationship can also be multiple change requests to the same content element.

The system moves the changed content and the related content e.g. all of the content elements for the same subject as a group to the QA database . This advantageously allows a QA user to see the changed content in context with related content elements to ensure that the change does not inadvertently affect one of the related content elements. Further since the system allows different authors to work on related content elements this advantageously allows a QA user to the different changes to related content to ensure that the different changes do not inadvertently conflict with each other. When reviewing the group of related content elements if the QA user determines that all of the content elements are acceptable the QA user indicates that each of the content elements in the related group passes QA verification. In that case the QA user changes the status of each of the changed content elements to a status e.g. QA Verified representing the changed content is ready for ACP verification. When the QA user changes the status the system queues and transfers the changed content from the QA database to the ACP database .

If the QA user determines that one or more of the content elements are not acceptable the QA user indicates which of the content elements in the related group fails QA verification. In that case some of the content elements are marked as passed e.g. their status is changed to QA Verified and some of the content elements are marked as failed e.g. their status is changed to QA Failed . If one of the content elements of the group of related content elements is marked as failed then the default is that the system does not transfer any of the content elements in that group to the next location i.e. the ACP database . The system includes an override process that enables the content elements of the group that are marked as passed e.g. QA Verified to be transferred.

In one example the user interface generated by the quality control module described above includes a listing of the group of content elements and the status e.g. QA Verified or QA Failed . The listing includes an element e.g. a check box that enables a QA user to override the restriction of not allowing any content element in the group to progress in the process . For a change to a content element that has passed e.g. QA Verified the user selects a checkbox with the status QA Override to indicate to the system that this passed content element can be moved independently from the group. A user may override the group restriction when for example the passed content element does not have an object dependency with the content element that has failed. The user interface displays an indicator e.g. a yellow check mark next to the status e.g. QA Verified of the content element that has passed. This indicator identifies that this content element has been overridden and allowed to progress through the process without one of its related content elements from the group. The system can impose a security restriction for example allowing only those users who are associated with a QA approver role to be able to access the override check box and select it.

When a user selects an override the system determines that that particular content element can be split from the group and moved to the next approval stage e.g. ACP verification . The system transfers those content elements that have failed e.g. their status is QA Failed back to the centralized database and notifies the author e.g. by sending an email that the change has failed and needs to be modified.

If the QA verification passes then the group or those individual content elements that have been overridden are transferred to the ACP database and are ready for ACP verification. The ACP user verifies each of the content elements and indicates whether the ACP verification has passed e.g. sets the status to ACP Verified or failed e.g. sets the status to ACP Failed . For failure conditions the ACP user can differentiate between a critical failure e.g. the change to the content element is incorrect and a non critical failure e.g. the change contains a typographical error . The status of a non critical failure can be indicated as ACP Failed Non Critical .

Similar to the QA override the user interface generated by the quality control module includes a listing of the group of content elements and the status e.g. ACP Verified ACP Failed or ACP Failed Non Critical . The listing includes an element e.g. a check box that enables an ACP user to override a non critical failure and allow the failed content element to progress in the process . The system uses the check box selection to determine whether an ACP failure can be overridden. For a change to a content element that has a non critical failure e.g. ACP Failed Non Critical the user selects a checkbox with the status ACP Failed Non Critical Manager Approval to indicate to the system that this failed content element can be moved into production even though there is an associated failure. An ACP user may override the failure when for example the content element has some important changes in it such as a new requirement which outweigh the reason it failed such as an identified typographical error. The user interface displays an indicator e.g. a green check mark next to the status e.g. ACP Failed Non Critical Manager Approval of the content element that has failed. This indicator identifies that this content element has been overridden and allowed to progress through the process even though it has a failure. The system can impose a security restriction for example allowing only those users who are associated with an ACP approver role to be able to access the override check box and select it.

After the overridden failed content element goes through the production cycle the system does not close out the change request. Instead the system changes the indicator e.g. green check mark to a different indicator e.g. a red check mark to indicate to the author that the change has gone through production but has an ACP failure that must be addressed before the change request can be closed. The system can automatically notify the author e.g. by sending an email that the change has been through production and needs to be addressed before the change request can be closed. In some examples the system notifies the applicable users each time a status changes and or a change is transferred from one database to another. This automatic notification advantageously allows the applicable users to become aware of the changes without periodically having to check the quality control module e.g. using the user interface generated by the quality control module .

The above described processes can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The implementation can be as a computer program product i.e. a computer program tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

Method steps can be performed by one or more programmable processors executing a computer program to perform functions of the invention by operating on input data and generating output. Method steps can also be performed by and apparatus can be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit . Modules can refer to portions of the computer program and or the processor special circuitry that implements that functionality.

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Data transmission and instructions can also occur over a communications network. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the above described processes can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer e.g. interact with a user interface element . Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The above described processes can be implemented in a distributed computing the system that includes a back end component e.g. as a data server and or a middleware component e.g. an application server and or a front end component e.g. a client computer having a graphical user interface and or a Web browser through which a user can interact with an example implementation or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet and include both wired and wireless networks.

The computing the system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

The invention has been described in terms of particular embodiments. The alternatives described herein are examples for illustration only and not to limit the alternatives in any way. The steps of the invention can be performed in a different order and still achieve desirable results. Other embodiments are within the scope of the following claims.

