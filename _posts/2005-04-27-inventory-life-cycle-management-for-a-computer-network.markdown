---

title: Inventory life cycle management for a computer network
abstract: An inventory management system (IMS) is described herein that captures historical data for network elements of a computer network. The IMS maintains the historical data to provide a life cycle view of the elements as utilized within the computer network. For example, the IMS may include a network scan module that receives current inventory information from at least one of the network devices, wherein the current inventory information lists elements currently deployed within network device. An event generator compares the current inventory information with the stored inventory information. A database manager updates the database to store historical data for the network devices based on the comparison.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07979530&OS=07979530&RS=07979530
owner: Juniper Networks, Inc.
number: 07979530
owner_city: Sunnyvale
owner_country: US
publication_date: 20050427
---
The invention relates to inventory management systems and more particularly to inventory management for computer networks.

A computer network is a collection of interconnected computing devices that can exchange data and share resources. Example devices include routers switches gateways wireless access points servers printers and other devices. Each computing device may have a number of internal elements. A router for example may have interface cards IFCs power supplies a primary and a backup routing engine a forwarding engine or other components.

Conventional inventory management systems maintain an inventory database of the current locations of all the elements in the network. Most inventory management systems for computer networks periodically reconcile the inventory database with the network. The primary objective is generally to synchronize the network with the inventory database thereby giving a real time view of the devices and elements deployed within the network.

It is often important for an enterprise to have an accurate view of current elements as various departments in the enterprise may base decisions on the current inventory. In particular an enterprise may make purchasing deployment or other decisions based on the current inventory. For example a service provider a network engineer a network planner accounting or customer support may interact with the inventory management system to make these or other decisions.

In general techniques are described for inventory management of computer networks. In particular an inventory management system IMS is described that provides a complete life cycle view of elements in a computer network. The IMS captures and maintains complete historical data for inventory elements and allows the elements to be tracked according to location time and network changes. Thus unlike conventional inventory management systems that provide only a current view of the network the described IMS may be used to provide a cradle to grave life cycle view for inventory elements.

The IMS makes the life cycle information available to users such as network administrators allowing the users to probe the historical data and make more informed decisions. For example the IMS allows an administrator to examine the history or life cycle of a particular element including the particular devices and periods of use for the element. For example the administrator may access the IMS and determine the history of a particular power supply. As another example the administrator may determine when a particular version of software was installed and on which devices.

In one embodiment a method comprises storing inventory information associated with a plurality of network devices and receiving current inventory information from at least one of the network devices wherein the current inventory information represents a state of one or more elements of the network devices. The method further comprises comparing the stored inventory information with the current inventory information maintaining historical data for the network devices based on the comparison and updating the stored inventory information to reflect the current inventory information.

In another embodiment a system comprises a database that stores inventory information for a plurality of network devices. The system further comprises a network scan module that receives current inventory information from at least one of the network devices wherein the current inventory information lists elements currently deployed within the network device. An event generator compares the current inventory information with the stored inventory information. A database manager updates the database to store historical data for the network devices based on the comparison.

In another embodiment a system comprises a plurality of network devices wherein each of the network devices is configurable to include one or more elements. The system includes an inventory management system that maintains inventory information and historical data for the network devices. The inventory information specifies the elements deployment to the network devices and the historical data specifies a life cycle for each of the elements.

In another embodiment a computer readable medium comprises instructions that cause a programmable processor to store inventory information associated with a plurality of network devices and receive current inventory information from at least one of the network devices. The current inventory information represents a state of one or more elements of the network devices. The instructions further cause the programmable processor to compare the stored inventory information with the current inventory information generate an event upon detecting differences between the current inventory information and the stored inventory information maintain historical data for the network devices based on the events and update the stored inventory information to reflect the current inventory information.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

IMS provides administrator with a life cycle view of the elements within network devices of network . IMS tracks the configuration of network devices and maintains current as well as historical data within inventory database .

In one embodiment each of network devices has an interface by which administrator enters configuration information such as a version of a software application licensing information serial and part numbers of hardware items within the network device. For example this may be done by a command line interface CLI by which administrator enters commands for configuring devices. In the example of a router administrator may interact with a management daemon MGD in one of network devices that presents the CLI. In turn the MGD interacts with one or more configuration modules in the network device such as a chassis configuration module CCM or a device configuration module to configure the router.

In general IMS scans network devices of network either in real time on demand or in accordance with a schedule. In one embodiment IMS scans network by sending a request for configuration information to each of network devices via an application programming interface API of IMS provided by an operating system executing on the device. In the example of routers IMS issues requests to the routers via the API. In response the MGD of each router communicates with the configuration modules such as the CCM to retrieve the current configuration information and send the information back to IMS .

A user such as an administrator may configure IMS to scan at a particular frequency. For example IMS can perform inventory scanning as part of a scheduled operation or in response to an ad hoc command from administrator . Administrator may also configure a range of the scan i.e. may select a subset of network devices for scanning. Although shown in with a single administrator IMS may be accessed by multiple administrators or other users.

IMS receives the current configuration for each of network devices and generates inventory records that represent the current state of all the elements in network . IMS then compares the inventory records with the existing inventory records stored in inventory database . When IMS identifies a difference in the current inventory records compared to the stored inventory records IMS generates one or more events. For example IMS may generate a Create event upon detecting a new inventory element not previously deployed within any of the existing network devices in network . As another example IMS may generate an Add event upon detecting the addition of an inventory element that was previously deployed within network to one of network devices . Thus a Create event is generated once for each inventory element the first time it is seen in network and may be viewed as a birthdate for the inventory element whereas an Add event occurs any time an inventory element has moved from one location to another within network signaling a change of home address for the inventory element. Other examples include Delete Update and Unknown events. In particular when an inventory element undergoes a change in spatial attribute such as device slot number or port number an Add event is generated for the new location and a Delete event is generated for the inventory element s corresponding old location. In contrast when an inventory element undergoes a change in a non spatial attribute such as its version or description an Update event is generated. An Unknown event may indicate IMS is unable to store an inventory element due to missing information e.g. a serial number or licensed feature name. Other event types may also exist such as Error events Shipping events and Surplus events. Some of these events may for example be manually generated by Administrator .

When a new network device is added to network administrator typically accesses and configures the network device. During the next network scan IMS polls the new network device for its configuration information. As a result IMS may generate Create events for each element of the new network device that was not previously utilized within network . If administrator removes one of network devices from network IMS recognizes both the network device and the elements of the removed network device as deleted. That is when IMS next polls network and fails to find the removed one of network devices IMS generates a Delete event for the removed network device and for each element that was previously used within the removed network device. In another embodiment IMS may receive event driven notifications from network devices indicating change to the current inventory elements.

Moreover IMS may categorize the elements by type. For example the elements may include inventory elements such as hardware items software items licensing items or others. Hardware items may include routing engines fans mid planes back planes power supplies interface cards and other items that IMS may uniquely identify by a serial number and a part number. IMS may uniquely identify software items by a version of the software running on a routing engine and licensing items by a feature that the licensing item is for and a device associated with the licensing item.

IMS records the events to inventory database . This log of events is accessible to administrator . For example administrator may view the event history for the entire network or may filter these event history entries based on a set of predefined criteria e.g. by time period device or event type. In response to a query from administrator IMS generates one or more reports . Further administrator may select predefined reports or create customized reports. Administrator may choose to view all hardware items and sort by name part number or description or search the hardware items by name part number or serial number. Administrator may view all software items and sort by version or search software packages by name or device. Similarly administrator may view all license items and sort or search the license items by name or device. In this manner administrator may view reports detailing the current inventory of network or a life cycle view for one or more inventory elements.

For example administrator may use reports to detail the total inventory of network display summaries by device model or reveal where particular items are or have been installed in network . IMS saves reports within inventory database . Administrator may view reports by a web based application e.g. a web browser in the hypertext markup language HTML format. Administrator may direct IMS to export reports to higher layer inventory applications in a variety of formats. For example IMS may export reports in the portable document format PDF a data description format such as the extensible markup language XML or a spreadsheet format.

Hardware inventory table stores data identifying hardware items elements such as routing engines fans back planes mid planes chassis power supplies or interface cards that may be utilized within network devices of network . Hardware inventory table includes a plurality of rows and columns as is typical in relational databases. Each row may associate a hardware item with a location in the network i.e. with a particular one of network devices as listed in devices table . Thus each of network devices may be associated with zero or more hardware items and each hardware item may be associated with a single network device.

In some instances the hardware item may further be associated with a particular slot or port in the network device. In one embodiment each row stores a unique identifier for the respective hardware item for example a serial number and a part number of the hardware item and a unique identifier associated with the particular network device. In this manner the hardware item identifier and network device identifier within the row associate the hardware item with a particular location in the network. Hardware inventory table may further define a chassis identifier a version a name and description a date the hardware item was created a date the hardware item was deleted the last time the hardware item was scanned and the last time the hardware item was modified. IMS may periodically update hardware inventory table based on the current locations of the various elements in the network thus presenting a current view of the locations of all hardware items in the network.

Similarly software inventory table stores data identifying locations of software items in network . Each row may associate a software item with a particular one of network devices in network . In one embodiment each row stores a unique identifier for the respective software item for example a version of the software and a unique identifier associated with the particular network device. In this manner the software item identifier and network device identifier within the row associate the software item with a particular location in the network. For each software item software inventory table may further define a version a date the software item was created a date the software item was deleted the last time the software item was scanned and the last time the software item was modified. IMS may periodically update software inventory table based on the current locations of the various software elements in the network thus presenting a current view of the locations of all software items in the network.

Licensing inventory table stores data that identifies locations of licensing features installed on network devices in network . Each row may associate a licensing item with a particular network device in the network. Further in one embodiment each row stores a unique identifier for the respective licensing item a feature name a number of licenses used a number of licenses installed a number of licenses needed a date the licensing item was created within database and a date the licensing item was deleted.

Events table stores data identifying a log of events that have occurred in a network. Each event is associated with an event type such as Create Add Update and Delete that is defined within event type table . In one embodiment each row of events table associates an event with the unique identifier for a specific inventory element and a date and time of the event. In this manner events table may list particular events for hardware software and licensing items. In addition each event may be associated with a particular network device listed within devices table . Events table may be populated as IMS compares current inventory records produced from a network scan with the data stored in hardware inventory table software inventory table and licensing inventory table . Upon detecting any differences IMS generates an event and creates a row in events table to record the event.

As illustrated in a single inventory element in one of tables and may be associated with one or more event entries in events table . For example for a particular interface card listed in a row of hardware inventory table events table may have several entries including a create event an add event a delete event and several update events. In this manner events table records an event history for inventory elements of network .

As further illustrated in each device may have zero or more hardware elements software elements or licensing elements. Moreover multiple inventory elements may be associated with a single device allowing devices table to convey a current view of inventory elements of network .

Although illustrated for purposes of example as a relational database inventory database may store data in a variety of forms including data storage files one or more database management systems DBMS executing on one or more servers or combinations thereof. The database management systems may be a relational RDBMS hierarchical HDBMS multidimensional MDBMS object oriented ODBMS or OODBMS or object relational ORDBMS database management systems. Inventory database may store data for example within a single relational database such as SQL Server from Microsoft Corporation.

Administrative interface presents a user interface by which administrator or other users interact with IMS . Administrator may for example interact with administrative interface to request and customize an inventory report or to search inventory information stored within inventory database . Administrator may also use administrative interface to configure a frequency for network scans performed by network scan module . In addition administrator may use administrative interface to request IMS to perform an ad hoc inventory scan in addition to scheduled scans. Administrator may use administrative interface to configure the range of network devices in network that network scan module must scan.

Network scan module may periodically poll network devices in network to obtain current information about the locations of inventory elements in network . For example network scan module may issue a request to each of network devices requesting current configuration information. MGDs or other software agents executing on network devices respond by returning the requested information. Network scan module may scan network devices one at a time or may scan multiple network devices in parallel threads. In another embodiment network scan module may not poll the network but may instead receive event driven notifications from the network devices indicating changes in inventory elements.

Database manager receives from the network devices the current information requested by network scan module . Database manager updates the hardware software and licensing tables in inventory database to reflect the current information.

During this process database manager compares the current information with the inventory information stored in inventory database . For example for each inventory element specified by the current information database manager may search the inventory information stored within inventory database . If database manager finds the inventory element listed in the stored inventory information database manager determines whether the inventory element is currently deployed to the same one of network devices with which it is currently associated within inventory database .

If the inventory element is not deployed to the same one of network devices or is not found at all in inventory database database manager directs event generator to generate an appropriate event such as an add update or create event. Moreover if there are inventory elements that exist in the stored inventory information but not found within the current scan event generator may generate a delete event. Database manager records any events generated by events generator to the events table of inventory database .

Report generator generates inventory reports as requested by administrator . Administrator may request customized reports from report generator via administrative interface . For example administrator may request a report of all events that have occurred in the network during a particular time span. As another example administrator may request a report of the history of a particular inventory element e.g. a power supply. Report generator formulates and issues queries to database manager to access inventory database and retrieve relevant data based on criteria provided by administrator .

Initially IMS receives current inventory information from network devices of network . For example network scan module may initiate a network scan and poll each of network devices in response to a schedule or manual request from administrator . In some embodiments IMS may receive the current inventory information as an event driven notification from network devices .

Database manager compares the current inventory information with inventory information stored in inventory database . In the event any differences are detected event generator generates one or more events based on the comparison . Database manager logs the events to events table in inventory database .

In addition database manager updates the stored inventory information in inventory database to reflect the current inventory information received by network scan module . In this manner IMS updates hardware inventory table software inventory table and licensing inventory table to reflect the current inventory items deployed within network devices of network .

At any point IMS may also receive a request from administrator via administrative interface for a report . Administrator may request one of a selection of standard reports or may customize a report. For example administrator may request a report on events generated in network . In response report generator outputs report based on criteria provided by administrator . In this way administrator may utilize IMS to obtain a historical view of inventory items associated with network .

In general IMS processes each inventory element identified in the current configuration information received from network devices . IMS may analyze multiple inventory elements in a parallel process or may analyze inventory elements one after another. In any case IMS selects an inventory element listed in the current information and searches inventory database for the selected inventory element. For example database manager may query inventory database based on a serial number part number or other unique attribute for the inventory element .

If IMS does not find the selected inventory element within inventory database no branch of event generator generates a create event . This event is typical when a new inventory element is deployed for the first time within a network device of network . Specifically database manager inserts a row in inventory database for this inventory element in the correct table to which the element corresponds i.e. hardware software or licensing. The row may contain a timestamp indicating the time the inventory element was created. IMS also inserts a row in the events table of inventory database recording the event type create the unique identifiers of the particular inventory element and the corresponding network device and the date and time the event was generated. IMS then repeats the process until all of the current inventory information has been processed .

If however IMS does located the selected inventory element within inventory database yes branch of IMS performs another comparison to determine whether the stored inventory information indicates any spatial attribute of the inventory element has changed . One example of a change to a spatial attribute is the inventory element being moved to a different port or slot within one of network devices according to the current configuration information. For instance in the case of an interface card a hardware element the interface card may be moved from one slot to another within the same network device. Another example of a change to a spatial attribute is the inventory element being moved from one network device to another.

If a spatial attribute of the inventory element differs yes branch of event generator generates an add event for the network device in which the inventory element is currently located according to the current information . This is similar to a create event except that the add event indicates that the inventory element has previously been deployed within network and therefore inventory records already exists inventory database . IMS inserts a row in the events table recording the add event the unique identifiers of the inventory element and the network device and the date and time of the event. IMS also updates the row in hardware inventory table in inventory database to reflect the new location of the inventory element in network and updates the corresponding timestamp. In addition event generator generates a delete event for the network device with which the inventory element was previously associated . IMS again repeats the process until all of the current inventory information has been processed .

Alternatively if the inventory element currently being processed has no change in spatial attributes no branch of event generator determines whether any non spatial attributes in the inventory element are different from the current information to the stored information . One example of a change in a non spatial attribute is that an installed software application may have been upgraded to a new version.

If event generator detects a change in a non spatial attribute yes branch of the event generator generates an update event . IMS inserts a row in the events table recording the update event the unique identifiers of the inventory element and the network device and the date and time of the event. IMS also updates the row in the hardware table in inventory database to reflect the modified non spatial attribute for the inventory element and updates the corresponding timestamp. IMS then repeats the process until all of the current inventory information has been processed .

Alternatively if neither the spatial nor the non spatial attributes of the inventory element have changed no branch of i.e. no differences are found between the stored inventory information and the current inventory information database manger updates the timestamp in the row for that inventory element in inventory database to reflect the current scan time . IMS then repeats the process until all of the current inventory information has been processed .

Once all current configuration data has been processed and there are no more inventory elements to be checked no branch of database manager searches inventory database for any entries with old timestamps . These entries indicate inventory elements that formerly were present in the stored information but which are not present in the current information. Event generator recognizes these elements as no longer present in network and generates a delete event . Database manager inserts a row in the events table recording the delete event the unique identifiers of the inventory element and the date and time of the event. IMS also updates the row in the corresponding table in inventory database to reflect the status of the inventory element as deleted and updates the timestamp. IMS continues this process until all inventory elements with an old timestamp have been deleted . In this manner IMS updates inventory database to reflect the current state of network while logging the changes in the network as events in the events table to compile a historical life cycle view of the inventory elements utilized within the network.

Various embodiments of the invention have been described. These and other embodiments are within the scope of the following claims.

