---

title: System and method for temporary application component deletion and reload on a wireless device
abstract: A system and method for managing the deleting and reloading of software application components on a wireless device, such as a cellular telephone, personal digital assistant, pager, or other computer platform. The wireless device has one or more resident executable software applications wherein each application has one or more application components and application-associated data, such as software licenses and user-specific data. The wireless device selectively deletes one or more application components of the resident software applications without loss of the application-associated data to clear resources on the wireless device, and selectively prompts an application download server across a wireless network to transmit deleted application components needed to be reinstalled on the wireless device to execute the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07454199&OS=07454199&RS=07454199
owner: QUALCOMM Incorporated
number: 07454199
owner_city: San Diego
owner_country: US
publication_date: 20050906
---
This application is a continuation of U.S. application Ser. No. 09 929 250 filed Aug. 13 2001 now U.S. Pat. No. 6 941 135 allowed and issue fee paid the contents of which are hereby incorporated by reference.

The present invention generally relates to data networks and computer communications across the data networks. More particularly the invention relates to the installation and deletion of software applications and their components on wireless devices in selective communication with one or more application download servers across a wireless data network.

Wireless devices such as cellular telephones communicate packets including voice and data over a wireless network. Cellular telephones themselves are being manufactured with increased computing capabilities and are becoming tantamount to personal computers and hand held personal digital assistants PDAs . These smart cellular telephones have installed application programming interfaces APIs onto their local computer platform that allow software developers to create software applications commonly referred to as programs that are fully executable on the cellular telephone. The API sits between the wireless device system software and the software application making the cellular telephone computing functionality available to the application without requiring the software developer to have the specific cellular telephone system source code.

The software applications can come pre loaded at the time the wireless telephone is manufactured or the user may later request that additional programs be downloaded over cellular telecommunication carrier networks where the downloaded applications are executable on the wireless telephone. As a result users of wireless telephones can customize their wireless telephones through the selective downloading of applications such as games printed media stock updates news or any other type of information or application that is available for download through the wireless network. In order to manage the cellular telephone resources the user of the wireless telephone purposefully deletes applications and data from the wireless telephone platform to clear storage space so that new applications can be loaded onto the cleared storage.

In contrast to the larger computer platforms of personal computers and PDAs wireless devices have limited resources such as storage and processing to devote to non essential applications. Typically the telecommunication applications have priority of usage of the system resources with other applications allocated resources as available. The wireless device thus only has a limited capacity for holding all files for applications and the managing of resources is left up to the discretion of user of the telephone to delete applications to make room for new applications desired downloaded to the wireless device. The wireless device will not otherwise download an application that it does not have the resources to hold and execute.

In seeking to free resources on the wireless device the user normally cannot remove certain components of a resident application without disabling the entire resident application. If the user sought to delete specific components such action would controvert the intended freeing of resources as the disabled resident application cannot be restored without full reinstallation of the application. The useless undeleted application components still needlessly take up storage space even though the main application is unexecutable. This all or nothing deletion requirement for the resident software applications on the wireless device greatly limits the number of applications that can be resident on the wireless device and available to the user.

Accordingly it would be advantageous to provide a wireless device that can remove certain components of applications while maintaining important data for the application such as licenses and user specific data to maximize the utilization of computer resources on the wireless device. Upon the wireless device requiring the deleted software components to again execute the application the wireless device can obtain the software components through the wireless network. It is thus to the provision of such a system and method that can control the deletion and reloading of select software application components at the wireless device that the present invention is primarily directed.

The present invention is a system and method for managing the loading and deletion of software application components on a wireless device such as a cellular telephone personal digital assistant pager or other computer platform. The wireless device has one or more resident executable software applications wherein each application includes one or more application components and application associated data such as software licenses and user specific data and the wireless device is in selective communication with a wireless network. There is at least one application download server on the wireless network that selectively communicates with wireless devices and downloads software applications and application components to the wireless devices.

To manage system resources and especially storage space the wireless device selectively deletes one or more application components of the one or more resident software applications without loss of the application associated data and then selectively prompts the application download server across the wireless network for transmission of one or more application components when the application is again desired to be executed on the wireless device. Once the one or more application components are received from the application download server the wireless device installs the one or more application components for resident applications with components previously deleted such that the resident applications are again executable on the wireless device.

The application associated data is data that is typically not recoverable should it be deleted. Examples of the application associated date can be data required to execute the software application such as a license or could be user specific data such as personal identification data high scores for games an address book or the like with or without the license. The application associated data can also include application components necessary to execute the application on the wireless device such as a specific driver or application critical module.

The method for managing the loading and removal of components of one or more software applications resident on a wireless device accordingly includes the steps of selectively deleting at the wireless device one or more application components of the one or more resident software applications without loss of the application associated data selectively establishing a communication link from the wireless device to an application download server wherein the wireless device prompts the application download server for transmission of one or more deleted application components and installs the transmitted one or more application components such that the one or more resident applications including the installed application components are executable on the wireless device.

The step of establishing a communication link is preferably establishing a communication link through a cellular telecommunication network especially if the wireless device is a cellular telephone or pager. The establishing of a communication link typically occurs upon the wireless device intending to execute a resident software application for which one or more associated components have been deleted and wireless device can prompt the user to make a communication link to the application download server to retrieve a copy of the deleted component if necessary.

The step of selectively deleting at the wireless device one or more application components of the one or more resident software applications preferably occurs at the direction of the user of the wireless device when the user desires to clear resources to download a new software application that will require the resources. However the deletion can occur as determined by the wireless device managing its resources in accord with the actions of the user seeking to download applications which requires the freeing of system resources.

The present invention also includes a wireless device itself that can function in the inventive system and a program in a computer readable medium that directs a wireless device having a computer platform to perform the steps of the inventive method.

Accordingly the primary object of the present invention is to provide a system and method that allow a wireless device to delete certain components of its resident software applications while maintaining important data for the applications such as licenses and user specific data to maximize the utilization of computer resources such as storage. The wireless device can still execute the software application for which components have been deleted by retrieving copies of the deleted software components through the wireless network from the application download server. The invention thus provides an advantage to the user of the wireless device through efficient usage of the wireless device system resources such that the user can have ready access to a larger amount of executable software applications than can be completely stored on the wireless device. While the component deletion and reloading processes can be at the direction of the user the processes can also be fully automated on the wireless device such that the processes are transparent to the user.

Other objects advantages and features of the present invention will become apparent after review of the hereinafter set forth Brief Description of the Drawings Detailed Description of the Invention and the Claims.

With reference to there is shown the present inventive system for the deletion and reloading of software application components on a wireless device such as cellular telephone in communication across a wireless network with at least one application download server that selectively transmits software applications and components to wireless devices across a wireless communication portal or other data access to the wireless network . As shown here the wireless device can be a cellular telephone a personal digital assistant a pager which is shown here as a two way text pager or even a separate computer platform that has a wireless communication portal and may otherwise have a wired connection to a network or the Internet. The inventive system can thus be performed on any form of remote module including a wireless communication portal including without limitation wireless modems PCMCIA cards access terminals personal computers access terminals telephones without a display or keypad or any combination or sub combination thereof.

The application download server is shown here on a network with other computer elements in communication with the wireless network . There is a second server and a stand alone server and each server can provide separate services and processes to the wireless devices across the wireless network . There is preferably also at least one stored application database that holds the applications that are downloadable by the wireless devices .

In a block diagram is shown that more fully illustrates the components of the wireless network and interrelation of the elements of the present invention. The wireless network is merely exemplary and can include any system whereby remote modules such as wireless devices communicate over the air between and among each other and or between and among components of a wireless network including without limitation wireless network carriers and or servers. The application download server and the stored application database along any other servers such as server which are needed to provide cellular telecommunication services communicate with a carrier network through a data link such as the Internet a secure LAN WAN or other network. The carrier network controls messages sent as data packets sent to a messaging service controller MSC . The carrier network communicates with the MSC by a network the Internet and or POTS plain ordinary telephone system . Typically the network or Internet connection between the carrier network and the MSC transfers data and the POTS transfers voice information. The MSC is connected to multiple base stations BTS . In a similar manner to the carrier network the MSC is typically connected to the BTS by both the network and or Internet for data transfer and POTS for voice information. The BTS ultimately broadcasts messages wirelessly to the wireless devices such as cellular telephone by short messaging service SMS or other over the air methods known in the art.

The wireless device such as cellular telephone has a computer platform that can receive and execute software applications transmitted from the application download server . The computer platform includes an application specific integrated circuit ASIC or other processor microprocessor logic circuit or other data processing device. The ASIC is installed at the time of manufacture of the wireless device and is not normally upgradeable. The ASIC or other processor executes the application programming interface API layer that interfaces with any resident programs in the memory of the wireless device. The memory can be comprised of read only or random access memory RAM and ROM EPROM flash cards or any memory common to computer platforms. The computer platform also includes a local database that can hold applications not actively used in memory . The local database is typically a flash memory cell but can be any secondary storage device as known in the art such as magnetic media EPROM optical media tape or soft or hard disk.

The wireless device such as cellular telephone accordingly downloads one or more software applications such as games news stock monitors and the like and holds the application on the local database when not in use and uploads stored resident applications on the local database to memory for execution on the API when so desired by the user. However there are significant cost and size constraints on the wireless device that limit the installed storage capability available in the local database and memory so a limited amount of resident software applications can be held on the wireless device. The present inventive system and method manages this limitation of storage capacity through the selective deletion and reloading of individual software application components as is further described herein.

With reference to there is shown an illustrative file structure or data management structure held in the API . The top level domain is Files that contains all of the discrete software files on the computer platform . The file structure of is merely illustrative and may not appear in this form on the computer platform and may even be present purely in machine code on the wireless device with no discernable file structure. In the Files is the API which here is shown as binary runtime environment for wireless BREW which is the API used by QUALCOMM to interact with software applications on the wireless device computer platform . The BREW files include application files and one file is game of chess that has been downloaded from the application download server and is now resident on the local database of the computer platform of the wireless device. For purposes of illustration the chess application is a resident software application of the wireless device.

The chess application includes several software components such as the files chess.mod and chess.bar. The application components are necessary modules to execute the chess application on the computer platform . Chess also includes specific application associated data shown here as a scores.sig which are the stored scores for the user playing games of chess on the computer platform . There also can be a license included as a hidden file in the chess application. Thus the application components that allow execution of the game of chess are easily duplicated with a copy transmitted from the application download server while the associated application data such as the scores and the license will be lost if their files or modules are deleted. The present invention therefore utilizes the ability to obtain another copy of the non essential application components from the application download server while maintaining the non retrievable application associated data such as a license or user specific data such as personal information and addresses or even purely entertainment related data such as the previous scores for chess games.

When the user desires to download another software application to the computer platform and there are insufficient resources especially in terms of storage on the local database the BREW API or other space managing components can trigger a prompt to the user to ask if the application components for chess can be removed so that the requested downloaded application can be placed on the computer platform . Otherwise the BREW API can determine which components to delete and automatic manage the system resources. While the chess.mod and chess.bar files are deleted from the chess file the chess game will not be executable on the computer platform . Through the separation of essential and non essential files on the computer platform the wireless device can selectively delete one or more of the application components of the one or more resident software applications without loss of the application associated data such as the scores file .

When the application which has had one or more application components deleted such as the chess game with the chess.mod and the chess.bar application components deleted and the user desires to again use that application the wireless device will selectively prompts the application download server across the wireless network for transmission of one or more application components . Once the wireless device receives the application components the wireless device installs the transmitted one or more application components back onto the computer platform such that the resident application or here chess is again executable. It should be noted that all of the application components do not have to be removed and can be deleted based upon size of the application or other criteria. Further the files containing application associated data such as scores.sig can also contain application components required to execute the application and are not necessarily pure data containers.

The process to reinstall the deleted components is shown in when a request to execute the application with one or more deleted components is received as shown at step . An example of this would be the user seeking to play the chess game once again. The user is then preferably prompted to make a communication link to the application download server as shown by step . However the wireless device at receipt of the execution request can alternately automatically establish the communication link. If a request to execute the application is requested of the user then a decision is made as to whether the user has authorized the link as shown at decision . If the user declines establishing the link the user is informed that the needed application components must be downloaded in order to execute the request application as shown at step and then the execution request is terminated. If the user authorizes the communication link at decision then a communication link is establish with the application download server as shown at step .

Once the communication link is established with the application download server the application download server is prompted by the wireless device to transmit one or more application components that are needed by the wireless device to execute the requested application as shown at step . It is then determined if the server transmitted requisite application components as shown at decision and if not the user is informed of the failure to obtain the requisite components as shown at step and the execution request is terminated. Otherwise if the server has transmitted the requisite components at decision the wireless device receives the components form the application download server as shown at step and installs the received components into the application such that the application is executable as shown at step . The application is then executed on the wireless device until terminated as shown at step .

If the reloading of the deleted application components such as application components were automatic the process of would go right from the receipt of the request to execute the application at step to prompting the application download server at step . The wireless device would only inform the user if the application failed to download the components as shown at step .

The step of establishing a communication link is typically establishing a communication link through a digital or analog cellular telecommunication network as shown in but other wireless networks such as a wireless LAN or a microwave or infrared network can alternately be used. Further establishing a communication link can occur automatically upon the wireless device intending to execute a resident software application for which one or more associated components have been deleted i.e. the wireless device bridges a communication through the wireless network to the application download server . Otherwise the step of establishing a communication link can occur upon the specific prompt of user of the wireless device to bridge a communication link the application download server to transmit over the wireless network one or more application components for a resident software application for which one or more associated components have been deleted. If the user of the wireless device will be billed for the communication link such as a cellular phone call in order to have the new application components transmitted to the wireless device then the user should be prompted prior to deletion of the component s to authorize the communication link that will be necessarily to reload the components. The user can again be prompted when the communication link is needed to retrieve the components of the application to render the application executable. However if the wireless device is fully automated and the communication link does not necessitate a charge to the user then no prompt needs to be made to the user and the reloading of the component s is transparent unless a problem is encountered and an error message generated such as at step .

In view of the inventive method the present invention includes a program resident in a computer readable medium where the program directs a wireless device having a computer platform to perform the inventive steps of the method. The computer readable medium can be the memory of the computer platform of the cellular telephone or other wireless device or can be in a local database such as local database of the cellular telephone . Further the computer readable medium can be in a secondary storage media that is loadable onto a wireless device computer platform such as a magnetic disk or tape optical disk hard disk flash memory or other storage media as is known in the art. In the context of the present invention methods may be implemented for example by operating portion s of the wireless network to execute a sequence of machine readable instructions. These instructions may reside in various types of signal bearing media. This signal bearing media may comprise for example RAM not shown accessible by or residing within the components of the wireless network . Whether contained in RAM a diskette or other secondary storage media the instructions may be stored on a variety of machine readable data storage media such as DASD storage e.g. a conventional hard drive or a RAID array magnetic tape electronic read only memory e.g. ROM EPROM or EEPROM an optical storage device e.g. CD ROM WORM DVD digital optical tape paper punch cards or other suitable data storage media including transmission media such as digital and analog.

While the foregoing disclosure shows illustrative embodiments of the invention it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. Furthermore although elements of the invention may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated.

