---

title: Technique for managing messages
abstract: A technique for managing messages stored in a messaging system may include determining whether messages designated for deletion within a current data container exceed a predetermined threshold. If such a determination is made, thereafter, a first amount of time required to delete the messages designated for deletion is calculated. A second amount of time required to copy the messages not designated for deletion in the current data container is also calculated. Thereafter, messages are selectively deleted or copied based at least in part on the calculated first and second amounts of time. In some variations, if the second amount of time exceeds the first amount of time (or exceeds the first amount of time by a predetermined threshold), then the messages designated for deletion are deleted. Otherwise, the messages not designated for deletion may be copied into a new data container and the current data container may be dropped.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08306952&OS=08306952&RS=08306952
owner: SAP AG
number: 08306952
owner_city: Walldorf
owner_country: DE
publication_date: 20050329
---
The following description relates to business systems for example a messaging system for use with an exchange infrastructure for collaborative business systems.

Software components that perform a certain function are known as applications. Applications are widely used in a variety of business processes each being an execution of one or more Web services according to a description of an active business process. Business process applications are increasingly used in collaborative situations that is situations in which one or more applications receive data such as messages from another application.

A collaborative application environment typically relies on a precise messaging and transport layer for proper routing addressing and transport of messages from one application to another. Collaborative business processes however tend to require a more sophisticated infrastructure that can execute real time business logic.

For instance in a messaging and transport layer a messaging system also referred to as a message exchange system may transport messages as a payload in an envelope such as an extensible markup language XML file. The system may access the envelope analyze the origin or sender of a message and determine an intended recipient. The messaging and transport layer typically utilizes a database in which to store messages for persistence at least until processing is complete.

In conventional high throughput messaging systems the messaging system may receive a high volume of messages that must be processed and then deleted in the same sequence as they were received. The processing time from a message in a messaging system is usually short. After processing the message can be reorganized e.g. moved saved or deleted . If the input message rate exceeds or otherwise does not match the output message rate the messaging persistence layer e.g. database may overfill. Such an overfill may result in the termination or delay of message processing thereby affecting a wide variety of applications among an enterprise network.

If a message is to be deleted after processing with conventional systems each row in a database is deleted with a single delete. However this delete operation can be relatively slow and create a rollback segment when a command word or other command instructing the database to save all changes made to the database is received. A delete function then deletes the entry and the rollback segment. This process tends to consume additional processing resources and may also delay messaging processing.

A method for managing messages stored in a messaging system may include determining whether messages designated for deletion within a current data container exceed a predetermined threshold. If such a determination is made then a first amount of time required to delete the messages designated for deletion is calculated. Also calculated is a second amount of time required to copy the messages not designated for deletion in the current data container to a new data container. Thereafter the messages designated for deletion may be selectively deleted or the messages not designated for deletion may be selectively copied based at least in part on the calculated first and second amounts of time.

In some variations if the second amount of time exceeds the first amount of time the messages designated for deletion are deleted. If the first amount of time exceeds the second amount of time then the messages not designated for deletion are copied into a new data container. Optionally the current data container may be dropped or otherwise deleted.

In some variations the first amount of time may be calculated based on the number of designated messages and a determined amount of time to delete a single message. Additionally or alternatively the second amount of time may be calculated based on the number of non designated messages and an amount of time to copy a single message. Optionally the second amount of time may also be based on an amount of time needed to drop the current data container and or to generate a new data container. For any determination based on amount of time a threshold or other margin may be added or subtracted as desired for a particular implementation. In some variations the first and second amounts of time are determined or otherwise provided by an administrator or other user. Such determinations may be based on past measurements or other statistical estimates.

The predetermined threshold for the number of designated messages may occur when the number of designated messages exceed the number of non designated messages. Other factors may be taken into account when setting the threshold such as percentage of designated versus non designated messages 65 35 delays in outputting messages etc.

The data containers may be encapsulated in an application programming interface. The application programming interface may provide an interface for applications external to the messaging system to read write or change entries within the data container.

The method may process messages concurrently with one or all of the determining calculating and deleting steps. It may handle a wide variety of messages including invoices orders pictures XML messages WDSL messages and SOAP messages.

The method may also include designating messages to be deleted. This designation may be based on a variety of factors including the amount of time since a particular message or group of messages was processed the number of messages within the current data container amount of free storage within the current data container and the like.

An apparatus to manage messages may include a determination unit to determine whether messages designated for deletion within a current data container exceed a predetermined threshold. A calculation unit to calculate a first amount of time required to delete the messages designated for deletion and to calculate a second amount of time required to copy messages not designated for deletion in the current data container to a new data container. In some variations the first and second amounts of time are inputted into or otherwise provided to the calculation unit by an administrator or other user that may have calculated the respective amounts of time . The apparatus may also comprise a deletion unit to selectively delete the messages designated for deletion based at least in part on the calculated first amount and second amounts of time and a copy unit to selectively copy the messages not designated for deletion to the new data container based at least in part on the calculated first amount and second amounts of time.

In some variations the calculation unit may calculate the first amount of time based on the number of designated messages and a determined amount of time to delete a single message. Additionally or in the alternative the calculation unit may calculate the second amount of time based on the number of non designated messages and an amount of time to copy a single message. Yet further the calculation unit may calculate the second amount of time also based on an amount of time required to drop the current data container and to generate a new data container.

The messaging system may be coupled to a plurality of enterprise applications via a computer network or it may reside within a self contained system. The data containers may be tables within a database or other storage device as may be desired.

Computer program products for managing messages which may be embodied on computer readable material are also described. Such computer program products include executable instructions that cause a computer system to conduct one or more of the method steps described herein.

Similarly computer systems are also described for managing messages. These computer systems may include a processor and a memory coupled to the processor. The memory may encode one or more programs that cause the processor to perform one or more of the method steps described herein.

The systems and techniques described here relate to enterprise application integration. Specific embodiments include systems and methods employing a common persistence layer for executing message transport and business process logic services for messages communicated between applications through an enterprise application integration system.

In some variations step may include as illustrated in step deleting the designated messages if the second amount of time exceeds the first amount of time. Alternatively step may include as illustrated at step copying the non designated messages into the new data container and dropping the current data container if the first amount of time exceeds the second amount of time.

The following provides optional variations that may be implemented singly or in combination with the above identified method and apparatus. Background information useful for understanding and implementing the claimed subject matter is also described.

The XI is a self contained modularized exchange platform for driving collaboration among the components . The XI includes a central integration repository and directory storing shared collaboration knowledge. The XI supports open standards such as various standard markup languages like the extensible markup language XML web service description language WSDL and simple object access protocol SOAP to provide an abstraction of technical interfaces for the components and for message based communications across heterogeneous component interfaces. The self contained modularized functions of the XI can be provided as one or more Web services based on standard Internet technology and therefore can be published discovered and accessed within a network of components using open standards.

A persistence layer for a message exchange system of an application integration system may be provided. The message exchange system may include a message transport layer configured to transport messages from at least one sending application to one or more receiving applications and a business process layer configured to execute business process logic on select ones of the messages processed by the message transport layer. The persistence layer may be accessible by both the message transport layer and the business process layer.

In one variation a copy and drop technique is used for deleting data in the persistence layer of a messaging system. The first step is to copy needed messages in a new data container e.g. tables in a database and then drop the current data container from which the data was copied. In order for the technique to be advantageous more messages should be deleted than copied. Also the time to delete the messages should be higher than the time to create a new data container copy the needed messages from the current data container in the new data container and drop the current data container. In another variation the messaging system may monitor the performance of the copy and drop mechanism and if these conditions are not met switch to another technique for deleting messages in the persistence layer.

In another variation two tables data containers are used to copy and drop messages. Unlike typical systems the copy and drop phases may be performed while the messages are being processed without the need to stop the message processing which may improve the speed and performance of the persistence layer in the messaging system.

As shown in the data container may be encapsulated in an application programming interface API that interfaces with applications external to the message handling system. Needed messages may be copied from Table A current container to Table B new data container and then the entire Table A is deleted in a fast delete operation. Thereafter Table B is the current container. The copy phase and the drop phase can run parallel with the message processing obviating the need to stop message processing.

The API may handle Read Entry Write Entry Copy Entry and other queries . The API may utilize SQL functions such as DROP INSERT SELECT and COPY to control access to the data containers in which the messages are stored.

The determination of whether messages should be deleted or copied may take into account various factors. In one variation a determination is first made whether the number of messages for deleting within a current data container or other storage receptacle exceeds the total number of messages minus the number of messages for deleting. An additional margin or threshold may be added or subtracted respectively requiring a greater or lesser number of messages to be deleted to ensure that there is a sufficient number of potential overfill messages for deletion.

If it is determined that the messages for deleting exceeds the total number of messages minus the number of messages for deleting then it is determined whether the amount of time required to delete the messages for deleting will exceed the amount of time required to copy the other messages. One technique for estimating the amount of time required to delete the messages is to multiply the number of messages by an estimation or average of the amount of time required to delete a single message. The amount of time required to copy the messages other than those for deletion may be estimated by multiplying the number of such messages by an estimation or average of the amount of time required to copy a single message. Optionally an amount of time required to drop one data container may also be added to this calculation. Furthermore an amount of time required to create a new data container may be also added to this calculation.

The subject matter described herein may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Apparatus of the subject matter described herein may be implemented in a computer program product tangibly embodied in an information carrier e.g. a machine readable storage device or in a propagated signal for execution by a programmable processor and method steps of the subject matter described herein may be performed by a programmable processor executing a program of instructions to perform functions of the subject matter described herein by operating on input data and generating output. The computer program product may transmit data and instructions to a storage system at least one input device and at least one output device. The subject matter described herein may be implemented in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that may be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program may be written in any form of programming language including compiled or interpreted languages and it may be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory may be supplemented by or incorporated in ASICs application specific integrated circuits .

A number of variations of the subject matter described herein have been described. Nevertheless it will be understood that various modifications may be made without departing from the scope of the subject matter described herein. For example the techniques described herein may be used as part of a standalone system or they may be used on a network node that is coupled to multi user network such as a LAN WAN or other type of distributed computing network. Accordingly other variations are within the scope of the following claims.

