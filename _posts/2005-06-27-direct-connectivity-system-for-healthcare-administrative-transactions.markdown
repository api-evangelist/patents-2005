---

title: Direct connectivity system for healthcare administrative transactions
abstract: A direct connectivity system provides automated healthcare administrative transaction submission, including claim submission, eligibility verification and claim status, from healthcare service providers directly to payers. The direct connectivity system bypasses transaction processing intermediaries such as clearinghouses by directly connecting providers to payers in a many to many manner. Existing single payer web portals are supplanted by a many to many network that has a common interface across multiple payers. The direct connectivity system may receive responses directly from payers and may prepare or process the responses for a practice management program so that the service provider receives rapid feedback on the administrative transaction submission. The direct connectivity system may automatically analyze transaction file attributes to determine one or more of many payers to which to send a transaction file, from one of many providers. Batch and singleton file transfer is supported for multiple file formats, optionally with secure file transfer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020826&OS=09020826&RS=09020826
owner: Accenture Global Services Limited
number: 09020826
owner_city: Dublin
owner_country: IE
publication_date: 20050627
---
This application claims the benefit of U.S. Provisional Application Ser. No. 60 583 453 filed Jun. 28 2004 and titled Direct Connectivity System for Healthcare Administrative Transactions. 

The present invention relates to communication between data processing systems. In particular the present invention relates to direct communication of healthcare administrative information and related data between service provider computer systems and payer computer systems.

Accurate rapid and reliable payment of invoices is crucial to every business. When a business generates a consistently large volume of invoices claims or other transactions a significant amount of income may become snarled in complex automated claim submission and payment mechanisms. For example a hospital or other health care provider may have at any given time many hundreds or thousands of claims pending for payments totaling hundreds of thousands or millions of dollars.

Healthcare service providers spend a large quantity of time and effort communicating administrative transactions with health insurance companies. These transactions can include claim submission member eligibility verification claim status checks coordination of benefits with third party payers remittance advice for final disposition of claims and notification of payments.

In the past many providers found that their administrative transactions were unduly delayed because third party clearinghouses handled the transactions. For claim submissions for example the clearinghouses acted as middlemen through which claims flowed with additional processing to connect payers and providers. Although clearinghouses attempted to address the need for accurate rapid and reliable submission of claims the clearinghouses were often implemented with dated technology that could not meet or perform at acceptable service levels. In addition the clearinghouses were costly to both the provider and the payer not only because the clearinghouses took a commission on every claim processed but also because the clearinghouses sometimes took days to electronically submit claims failed to communicate claim rejections to the provider and submitted duplicate and dirty claims.

Due in part to the disadvantages of clearinghouses some business turned to administrative transaction portals including claim portals. A transaction portal provides a submission interface for the provider into the payer. However transaction portals were not linked into the providers practice management systems and therefore required time consuming costly and error prone duplicate data entry into the portal. In addition any response from the payer through the portal required additional processing to be recognized by the payers practice management system. Furthermore each transaction portal was payer specific and therefore created significant process and change effort for providers.

Methods and systems consistent with the present invention provide automated administrative transaction submission from service providers directly to payers. The methods and systems determine the appropriate payer for a given transaction file from among many possible payers and bypass transaction processing intermediaries such as clearinghouses and portals. The methods and systems also receive responses directly from the payers and may prepare or process the responses for a practice management program in place at the service provider. The service provider thereby receives rapid feedback to the administrative transaction submission.

In one implementation a direct connectivity system enhances existing service provider data processing systems. The data processing system may include a communication interface a memory and a processor. The memory stores administrative transaction files transaction file configuration data and payer connection data. The memory may also include a transaction file submission program executed by the processor.

The transaction file configuration data may associate transaction file attributes such as filenames or file directories with payers. The payer connection data may specify payer communication addresses for the payers. In operation the transaction submission program may include analysis instructions that determine a payer based on the transaction file attributes as well as transaction transmission instructions that automatically imitate transfer of the transaction file to the determined payer.

In another implementation a separate direct connectivity gateway interacts with a local service provider data processing system. The gateway may include a communication interface for connecting to the service provider data processing system a memory and a processor. The memory may include payer connection data a file interface program and a transaction file submission program executed by the processor.

The file interface program may include file transfer instructions that locally transfer transaction files from the service provider data processing system to the gateway. The transaction submission program may then determine a payer from among many payers to which to send the transaction file. In doing so transaction claim submission program may determine the payer based on an analysis of transaction file attributes and initiate a direct transfer of the transaction file from the provider to the payer.

The elements illustrated in the Figures interoperate as explained in more detail below. Before setting forth the detailed explanation however it is noted that all of the discussion below regardless of the particular implementation being described is exemplary in nature rather than limiting. For example although selected aspects features or components of the implementations are depicted as stored in program data or multipurpose system memories all or part of systems and methods consistent with the direct connectivity solutions may be stored on or read from other machine readable media for example secondary storage devices such as hard disks floppy disks and CD ROMs electromagnetic signals or other forms of machine readable media either currently known or later developed.

Furthermore although this specification describes specific components of a direct connectivity system methods systems and articles of manufacture consistent with the direct connectivity system may include additional or different components. For example a processor may be implemented as a microprocessor microcontroller application specific integrated circuit ASIC discrete logic or a combination of other types of circuits acting as explained above. Databases tables configurations and other data or data structures may be separately stored and managed incorporated into a single memory or database or generally logically and physically organized in many different ways. The programs discussed below may be parts of a single program may be separate programs or may be distributed across several memories and processors.

The administrative transaction files may contain data for any administrative transaction conducted by a health care provider. As one example the transaction files may be claim files and functional responses. As other examples the transaction files may be claim status request and claim status response files or may be membership eligibility verification request and response files. Additional examples include coordination of benefits files electronic remittance advice files e.g. that contains a notification of a final disposition of a claim and electronic funds transfer notifications. For explanatory purposes the discussion below uses the specific example of a claim file. However any other administrative transaction file may instead be processed in the same manner.

The practice management software PMS may be a physician s office management and medical information system POMIS . For example the POMIS may be implemented with the Amicore Practice Management TM software available from Amicore Inc. of Andover Mass. A provider may use any other practice management software available from other vendors however. The PMS may be hosted locally or remotely with respect to the providers .

In addition to the PMS each provider includes a direct connectivity solution. As one example the direct connectivity solution may be a direct connectivity interface to the PMS . As another example the direct connectivity solution may be a direct connectivity gateway . The interface solution and gateway solution are described in more detail below.

The direct connectivity solutions communicate with the payers over one or more of the networks . The networks may adhere to different network topologies and technologies and may be private or public e.g. part of the Internet . For example the networks may be Ethernet networks but in other implementations may be implemented with a Fiber Distributed Data Interconnect FDDI network Copper Distributed Data Interface CDDI network or another network technology.

The networks may be non packet switched networks packet switched networks employing addressed packet communication or other types of networks in place between the providers and the payers . In other words the networks represent a transport mechanism or interconnection of multiple transport mechanisms for bi directional data exchange between the providers and the payers .

The payers generally include back end processing systems and . The back end processing systems may represent claim administration or status systems or other data and systems that the payers employ to process submitted claims track claims generate status reports or take other actions. In addition the payers include direct connectivity payer gateways and explained in more detail below.

Turning next to that figure illustrates one example of a direct connectivity gateway in communication with a service provider PMS over a local network connection . The service provider PMS may include a network interface with an associated network address a memory and a processor . The memory holds practice management software such as the POMIS and transaction file configuration data such as the claim file configuration data . According to the configuration entries in the configuration data the POMIS generates claim files with specific file names in specific directories in specific file formats or according to other specified attributes. As noted above however the direct connectivity gateway may interoperate with other types of administrative transaction files and may include additional or alternate configuration data that specifies desired attributes of those transaction files.

The gateway may include a network interface with an associated network address . The gateway may also include a processor memory and a display . A web services layer may also be present and may include an XML wrapper and encryption program . The display presents a user interface through which the gateway may communicate or accept transaction status information such as claims status information claims processing information gateway configuration information or other gateway data through one or more windows screens graphical reporting elements and user input output elements.

The memory may hold payer connection data and a transaction file submission program . The memory may also hold a file interface program a batching program and a translation program . In operation the gateway may access an XML schema translation data batch configuration data and transaction reports .

The service provider PMS may represent a data processing installation on site at the service provider. The gateway may be a separate data processing system installed locally at the service provider and connected to the PMS through the local network connection . The network interfaces may also provide access to the external network .

The PMS and the gateway communicate through their network interfaces . To that end the network addresses may be a packet switched network destination identifier or a destination address for any other type of network or network protocol. For example the network addresses may be a Transmission Control Protocol Internet Protocol TCP IP address optionally including port numbers .

The processor in the PMS executes the practice management software . According to the claim file configuration data and the inputs from the service provider the POMIS software generates the claim files . The claim file configuration data may represent internal software settings configured in the POMIS software may be a separate configuration file stored in the memory or may take another form.

Turning briefly to that figure shows one example of the configuration entries that may be present in the claim file configuration data . For example the claim file configuration data may include payer identifiers associated with claim file attribute entries . The claim file attribute entries may specify attributes of a claim file prepared for any given payer. For example the attribute entries may include a filename entry a directory name entry or other file attribute entries discussed below.

The POMIS software may generate claim files for many payers. Accordingly the claim file configuration data may direct the POMIS software to generate a claim file with attributes specified by the attribute entries . For example a payer identifier may be a string or numeric identifier that represents ACME insurance and the associated attribute data may be a filename such as ACME insurance claim file.txt. In response the POMIS software saves the claim data for ACME insurance claims in a file named ACME insurance claim file.txt. Alternatively the administrative transaction information for multiple payers may be stored in a single file with an identifier with each record that determines to which payer the administrative transaction should be sent.

Returning to the gateway executes the file interface program to retrieve claim files from the PMS . The interface program may include a File Transfer Program FTP or any other type of file transfer mechanism. The file interface program may automatically execute according to a periodic or non periodic schedule to check for new claim files saved on the PMS . In one implementation the interface program may poll specified directories for one or more file types saved under or more naming conventions. The interface program may access networked drives for example through the HTTP protocol.

The batching program optionally batches together transaction files for efficient transfer to payers. The batching program may read the batch configuration data to obtain a maximum or minimum file size for a batch a maximum or minimum number of individual files to batch together a time delay for how long to wait before sending a batch of files or any other batching parameter. The batching program may concatenate transaction files add them to a common carrier such as an archive file or may batch transaction files together using other techniques.

The translation program may optionally translate a transaction file or batch of transaction files from one format to any other format. The translation program may read the translation data to determine translation rules for converting between file formats. For example the translation program may translate X12 format claim files to NSF format claim files. In general the translation program may keep selected data entries delete selected data entries specify data entries to be included in the translated file change the representation of data entries e.g. from numeric to string or may apply any other translation operations.

When the gateway obtains the claim files the gateway executes the transaction file submission program to send the claim files to the appropriate payers. In that regard the transaction file submission program acts as a switch to transfer claim files directly to one or more of multiple payers. The transaction file submission program may may include claim file attribute analysis instructions that consult a local copy of the claim file configuration data to match a claim file characteristic or a characteristic of any other transaction file to a payer. In other words the transaction file submission program may analyze and determine from filenames directory names or other file characteristics a payer identifier representing a payer to which the claim file should be sent. In addition the transaction file submission program may consult the payer connection data to determine a payer address to which to send a claim file.

In other implementations the transaction file submission program may consult additional or alternative information than file characteristics to determine to which payer to send an administrative transaction file. In that regard the transaction file submission program may examine entries in the transaction file itself entries in individual transaction files batched together in a batch file separate administrative messages or data or other payer identification data. As one example the transaction file a Payer ID entry may specify to which payer a transaction file should be transmitted.

Turning briefly to that figure shows one example of the payer connection entries that may be present in the payer connection data . For example the payer connection data may include payer identifiers associated with payer communication address entries . The payer communication address entries may specify network addresses port numbers or other destination attributes for a payer. For example a payer identifier for ACME insurance may be associated with an IP address and port number.

With regard again to the transaction file submission program may execute claim transmission instructions to initiate transfer of the claim files directly to the payers. In other words the transaction file submission program bypasses conventional claim processing intermediaries such as clearinghouses and portals. Instead the transaction file submission program transmits the claim files through the network to the payers for direct reception and processing as will be explained in more detail below.

Optionally the web services layer may execute the XML wrapper to apply extensible markup language XML tags to all or part of the transaction file data or other data transmitted from the gateway . The XML wrapper may also remove XML tags from data received by the gateway such as response data from payers. The XML wrapper may apply or remove XML tags specified by the XML schema . In one implementation the XML schema specifies a set of rules for semantic tags that describe the claim file data including start tags end tags attributes and other XML elements tailored for health care claims or any other type of claims or transaction file.

In addition the web services layer may execute the encryption module to encrypt or decrypt any data transmitted through the network interface . For example the encryption module may apply a public key infrastructure encryption or decryption to a claim file to batches of claim files to XML tagged claim files or other data. The web services layer may also execute a program to manage the messaging over the network in a reliable manner by persisting requests in memory until an acknowledgement has been received and sending acknowledgements to the proper payer when a response has been received.

The transaction reports may store reporting records for the gateway . For example the transaction reports may store data transmission error records. As other examples the transaction reports may store data transfer statistics such as time date byte count encryption or other statistics may store claim file names of files retrieved from the CMS batching statistics or any other reporting or statistic data for the gateway .

Many different technologies may be employed to implement the gateway . For example the gateway may be a Microsoft Windows TM machine executing the .NET TM framework employing MSXML Core Services for local data stores or employing SQL server technology. The web services may be provided by a Windows 2003 server under the .NET framework and Internet Information Server IIS with support programs for encryption and MSXML tools for XML application or parsing. The Organization for the Advancement of Structured Information Standards OASIS WS Security or WS Reliable Messaging protocols may be employed for secure data storage and access or data transmission between payers and providers. Objects may be stored or access according to the Simple Object Access Protocol SOAP . SOAP standards may be found online at www.w3.org TR soap.

In many instances the gateway may receive administrative transaction responses through the network interface . For example a payer may reply in real time or non real time to the direct submission of claim files with acknowledgements status updates claim file format error messages processing messages claim status indicators or other response data. In one implementation the claim response program accepts and processes the responses from payers.

To that end the response program may include reception instructions that receive the response from the payer. The response program may also include push instructions that configure the response for the practice management program such as the POMIS software in the system . The push instructions may then transmit the optionally reconfigured response to the system for automated processing by the POMIS software .

The push instructions may configure the response by modifying any characteristic of the response or its attributes. As an example the push instructions may store the response according to a filename directory name or any other file attribute expected for response by the POMIS software . As another example the push instructions may include instructions that format in the same or similar manner as the translation program the response data according to an expected format for the POMIS software .

Turning next to that figure shows another example of a direct connectivity solution. In particular shows a more detailed view of the provider with the direct connectivity interface . Like the direct connectivity solution presented in the provider directly sends administrative transaction files to payers through the network interface associated with the network address .

In however the direct connectivity solution is integrated in the data processing system that executes the POMIS software . Accordingly rather than connecting a separate gateway to a PMS data processing system through a local network connection the provider may instead integrate the direct connectivity processing into or with the POMIS software in a data processing system. As a result the direct connectivity solution has local access to claim files and need not initiate their transfer to a separate gateway.

In one implementation the POMIS software is compiled with or otherwise includes or has access to a connectivity application programming interface API . The API may provide the calling convention by which the POMIS software may access direct connectivity services through a formalized set of software calls and routines. Accordingly the API may define one or more function calls and parameter lists to direct connectivity functions.

As one example the API may define a function call that the POMIS software may make to initiate submission of claim files by the transaction file submission program . As another example the API may define a function call that the POMIS software may make to initiate execution of the response program . In other implementations however the POMIS software may instead or additionally directly initiate execution of the direct connectivity programs.

The operation of the elements present in may follow the description above with reference to . As an example the provider may optionally batch transaction files for transmission to a payer. In addition the provider may apply or remove XML tags from data transmitted or sent through the network interface and may apply or remove encryption. The provider may also maintain the transaction reports and translate claim data according to the translation data .

With regard next to a more detailed view of example implementation of the payer is presented. The payer may include one or more back end systems such as payer administrative systems. The back end systems may include as examples a member eligibility system a provider data system a claim status system and a claim administration system . The payer employs the back end systems to validate process and pay claims received from providers as well as to generate status reports for claim payments determine eligibility for providers or their clients generate error reports for rejected claims and to perform other related tasks.

The payer also includes a direct connectivity gateway connected to the back end systems for example through a local network connection . The direct connectivity gateway includes a network interface with one or more network addresses . The network interface may support the local network connection and also provide a connection to the network . The gateway also includes a web services layer a processor and a memory . The web services layer may include an XML wrapper and encryption program .

The memory may include a batching program a validation program and a translation program . In addition the memory may include a business rules program and a database integration program . The payer gateway may also maintain or include an XML schema translation data and batch configuration data . In addition the payer gateway may include transaction reports business rules and validation rules .

The discussion below addresses the specific example of a payer processing a claim file. However the payer may process any other administrative transaction file instead including those noted above in the discussion of the direct connectivity aspects of the provider systems.

In the same manner explained above on the provider side the payer side web services layer may employ the XML wrapper to apply or remove XML tags to all or part of the transaction file data received or to all or part of response data sent back to the providers. The XML wrapper may apply or remove XML tags specified by the XML schema . In one implementation the XML schema specifies a set of rules for semantic tags that describe the response data or claim file data including start tags end tags attributes and other XML elements. In addition the web services layer through the encryption module may encrypt or decrypt any data transmitted through the network interface including responses sent back to the providers . The web services layer may also execute a program to manage the messaging over the network in a reliable manner for example by persisting responses in memory until an acknowledgement has been received and sending acknowledgements to the proper provider when a response has been received.

The payer gateway directly receives claim files transmitted from the providers . To that end the payer gateway may execute the batching program to coordinate reception of batches of claim files. The batching program may read configuration information from the batch configuration data that may as examples specify batch file size parameters file formats or other batch configuration information to assist the batching program with extracting individual claim files from a batch of claim files.

The gateway may also provide validation services on the received claim files. For example the gateway may execute the validation program . The validation program may read the validation rules and apply the validation rules to the received claim files. As examples the validation rules may dictate that data fields include a data value of the appropriate type e.g. a numeric field must include a numeric data value that required data fields e.g. name address or contact information fields actually contain data or that other information is present or that claim files adhere to specified protocols formats or other standards such as the X12 or NSF file standards.

In a manner similar to that explained above the payer gateway may also execute the translation program to convert received claim files to a format expected by any back end processing system . In that regard the translation program may access translation data or translation rules . The translation rules may specify the steps to be taken or conversions to be executed by the translation program to convert one file format to another file format. For example the translation rules may specify that data fields are to be converted from numeric to string fields that numeric fields or string fields are to be truncated or expanded or may specify other file format conversion rules.

The payer gateway may perform additional checks on the claim files. In one implementation the payer gateway executes the business rules program to examine specific characteristics of the claim files. The business rules may specify expected data characteristics for the claim files. As one example the business rules may require that a claim dollar amount be between specified limits. As another example the business rules may require that diagnostic codes in the claim file are standards approved diagnostic codes. In other words the business rules program may substantively examine the claim data content to determine whether the claim data may be processed by the payer .

The database integration program provides an interaction layer that communicates with the back end . The integration program may submit or store a claim into the claim status system for example. The integration program may prepare database read or write requests according to the format expected by one or more of the back end systems . As examples the integration program may frame data transfer requests to the back end or receive data from the back end according to File Transfer Protocol Hypertext Transfer Protocol an Oracle database format DB2 database format IBM WebSphere MQ messaging protocol Vertical Storage Access Method VSAM database format Customer Information Control System CICS transaction protocol or any other data format messaging protocol or transaction control protocol.

Transaction files such as claim files received at the payer gateway may give rise to a response from the payer gateway to the provider indicating that the claim was received at the payer. Similarly transaction files submitted to the back end for processing may give rise to a response to the provider indicating that the transaction file is being processed at the payer. For example when a claim is rejected during the validation or business rules processing the payer may generate a response to the provider indicating that the claim has been rejected. The payer may prepare and send other responses for claim files or for other types of transactions to the providers as well.

Regardless of the source or nature of a response the payer may optionally tag the response e.g. with XML tags encrypt the response and send the response directly back to the provider. The provider may then receive the response remove the tags decrypt the response and store the response for additional processing by claims management software or by another application. Accordingly the providers and payers may engage in direct bi directional communication regarding transaction files.

The transaction reports may store reporting records for the payer gateway . As noted above transaction reports may store data transmission error records data transfer statistics such as time date byte count encryption reasons for claim rejections validation errors business rule errors internal errors claim file names file lengths provider identifiers batching statistics claim counts or any other reporting or statistic data.

The payer gateway may be implemented in part with Microsoft operating systems such as Windows XP TM Windows 2003 server operating under the .NET framework and may include an Internet Information Server IIS . Additionally or alternatively the payer gateway may implement one or more of the programs with commercial software packages such as BizTalk server BizTalk adapter for web services or BizTalk accelerator for HIPAA available from Microsoft. As another example Microsoft MSXML Parser or Core Services may provide support for the XML wrapper XML tags and XML schemas.

A transaction file submission program in the gateway may then analyze transaction file characteristics Act . Based on the transaction file characteristics the transaction file submission program may identify a payer in payer connection data to which the transaction file should be transmitted Act . As examples the transaction file submission program may index or lookup a filename directory name or other attribute in the payer connection data and determine an associated payer communication address.

The gateway may also apply markup tags to all or part of a transaction file Act . For example the tags may be XML tags. In addition the gateway may optionally encrypt transaction file data prior to transmission to the payer Act .

The gateway transmits the transaction file directly to the payer Act . The claim file may propagate along one or more external networks but bypasses processing by intermediary claim processing entities such as clearinghouses. The transaction file arrives at and is processed by the payer .

The gateway may also receive a response from the payer Act . The gateway may responsively prepare the response for example by modifying any of its characteristics data or attributes to format the response for the practice management program running in the provider Act . The gateway may then communicate the response back to the service provider practice management data processing system Act .

Instead the practice management software may execute function calls to direct connectivity functions procedures or other programs through an API 506. For example after the practice management software has prepared a transaction file the practice management software may initiate execution of direct connectivity functions directly or through the API 506.

Accordingly in the operation of a direct connectivity interface such as that shown in a transaction file submission program may analyze transaction file characteristics Act . Based on the transaction file characteristics the transaction file submission program may index or lookup a payer in payer connection data to which the transaction file should be transmitted Act . However as noted above the transaction file submission program may consult other data sources including a Payer ID field in a transaction file to determine an appropriate payer. The provider may optionally apply markup tags to all or part of the transaction file Act and may optionally encrypt transaction file data prior to transmission to the payer Act .

The provider transmits the transaction file directly to the payer Act bypassing intermediary transaction file processing entities. The provider may also receive a response from the payer Act and modify the response in a manner appropriate for the practice management software Act . The response is then stored using a particular filename directory or other file attribute expected by the practice management software Act .

As noted above the direct connectivity solutions may apply to data other than claim data. As examples payers may providers may be directly linked and bi directionally transfer claim rejections claim notifications claim status eligibility data electronic fund transfers instant messages or other data.

The direct connectivity solutions may interoperate with many different file formats. As examples the claim files and responses may adhere to the X12 file format including the 837 4010 format for professional and institutional claim submission and the 997 format for functional acknowledgment. As another example the claim files and responses may adhere to the NSF file format including the HCFA NSF v3.01 format for claim submission the UB 92 v6.0 format for professional claim submission or the HCFA format for flat file functional acknowledgement.

Data transmitted between providers and payers may occur synchronously with immediately available functional reply and receipt acknowledgements asynchronously with immediately available acknowledgement delayed functional reply polling for outstanding responses and receipt acknowledgements or in a multi part manner both asynchronously with immediately available acknowledgement for a sequence of requests and with delayed functional replies.

The data transmission may occur under the WS Reliable Messaging standard. The WS Reliable Messaging standard offers message sequences for multi part asynchronous data transfer and a N Ack for immediate no acknowledgement and a timeout period if no acknowledgement is received. The providers and payers may implement message persistence to maintain messages until an acknowledgement is received. For example a provider may persist messages in a local store until an acknowledgement is received and a payer may persist a response until acknowledgement is received from a client or provider.

A payer may implement a Mailbox for each of its trading partners e.g. each provider that the payer interacts with to hold outgoing messages. The messages may remain or persist in the Mailbox until the trading partner has confirmed their receipt with a receipt acknowledgement. The messages in the Mailbox may include a sequence and message number to confirm receipt.

Table 1 below shows header fields that may be employed in data messages sent between providers and payers 

The direct connectivity solutions may also provide reports and support queries based for example on the transaction reports . For example the reports may include an Activity Summary report that shows the total volume of submissions by date range and type including total claim volume and total rejected claims an Activity by Provider report that shows a detail report of activity by provider identifier and date range optionally including batch header information such as total claims in each submission and number of rejected claims an Error Summary report that shows a breakdown of errors and rejections organized by error code for a date range and submission type e.g. for claims submissions eligibility queries or other data submissions and an Errors by Provider report that shows a breakdown of errors and rejects by error code for a provider by date range and submission type.

The user interface may define a transmission status view screen that shows as examples a view for all types of transmissions locally pending submissions and types submissions pending functional responses current activity e.g. currently sending a claim file or receiving a response and internet or network status e.g. connected disconnected available or any other status .

The user interface may also define a configuration screen with input and output user interface elements. The user interface elements may accept or report general direct connectivity parameters payer parameters e.g. payer connection data file interface parameters or other configuration information.

The user interface also may include claim error screens. The claim error screens may show all functional acknowledgements that have been saved locally. The functional acknowledgements may include an activatable link to underlying detail and may also provide a deletion mechanism to delete locally saved functional acknowledgements. An additional claim error screen may provide detail views and navigation of individual functional acknowledgement records.

Provider configuration data may be stored in a standard location for example based on the installation directory of nay direct connectivity programs. For example a persistence location may be specified as DirConnInstall persistence where DirConnInstall represents the installation directory. For each file type or file format supported by the direct connectivity solutions the provider may store configuration data shown below in Tables 2 and 3.

The payer connection data may be more generally represented with payer configuration data that may include fields such as those shown below in Table 4.

The direct connectivity solutions eliminate intermediary transaction file processors such as clearinghouses by providing automated transaction file submission from service providers directly to payers. The direct connectivity solutions may provide real time or near real time transmission of transaction file data to payers and real time or near real time transmission of responses to providers. Accordingly providers and payers may experience more accurate rapid and reliable submission and payment of claims and other administrative transactions reduce costs and the occurrence of duplicate claims or dirty claims or other transactions.

It is therefore intended that the foregoing detailed description be regarded as illustrative rather than limiting and that it be understood that it is the following claims including all equivalents that are intended to define the spirit and scope of this invention.

