---

title: Graphical interface for defining mutually exclusive destinations
abstract: A user defines mutually exclusive inbox and spam folders to which emails are routed based on a rating assigned to each email. A variable user-defined range defines a mapping of the ratings to each folder. Incoming emails are routing to one of the folders according to the range. A reference set of emails is designated, each having a rating and either an inbox label or a spam label. A display indicates the number the reference emails in each folder if the reference emails are routed to one of the folders according to their ratings and according to the user-defined range.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07730141&OS=07730141&RS=07730141
owner: Microsoft Corporation
number: 07730141
owner_city: Redmond
owner_country: US
publication_date: 20051216
---
As more companies and individuals rely on email systems to communicate there has been a rapid increase in spam and other undesirable email messages. Spam email messages are unsolicited email messages that are not of interest to the recipient usually sent to many recipients at one time. Examples of undesirable email messages include computer viruses programs or piece of computer code that is loaded onto a user s computer without the user s knowledge and runs against the user s wishes phishing attacks where an e mail is sent to a user falsely claiming to be an established legitimate enterprise in an attempt to scam the user into surrendering private information that will be used for identity theft and pharming attacks where an email is sent requesting the user to visit a web site which appear legitimate but the user is actually redirected to a web site where the user is encouraged to surrender private information that will be used for identity theft. Accordingly methods have been developed to detect spam and other undesirable emails before they reach a user.

In one of the models in use today an underlying classification engine maps each email to a value on a proprietary ordinal scale. In such prior models the scale offers a finite number of buckets. To actually filter email each value of that scale is mapped to an output device such as inbox junk email folder on the client side junk email folder on the server side also called quarantine folder and recycle bin. When using the scale emails with low scores are to be mapped to the inbox and emails with high scores to one of the three spam containers.

But spam filtering is not an exact science. Mapping emails with middle scores is a matter of tradeoffs. Directing more email scores to the spam destinations will reduce the amount of spam that will reach the user yet it will also filter out additional emails that should have reached the user. The table below illustrates the tradeoff.

In one embodiment a method is provided for assisting the user in defining mutually exclusive destinations. Incoming objects are rated and then routed to one of the destinations based on the assigned rating and a variable user defined range. The user defined range defines a mapping of the ratings to each destination.

In another embodiment a method provided for assisting the user in defining mutually exclusive folders. Incoming emails are rated and then routed to one of the folders based on the assigned rating and a variable user defined range. The user defined range defines a mapping of the ratings to each folder.

In another embodiment the user interface includes a reference set of emails. Each reference email has been assigned rating and a label. The interface allows a user to define a variable range which defines a mapping of the ratings to each folder. The user interface displays the number of reference emails routed to each folder according to the defined range and the assigned rating. The display also indicates the number of reference emails routed to each folder having a label corresponding to that folder and the number of reference emails having a label that does not correspond to that folder.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

A variable user defined range maps each of the ratings to one of a plurality of folders . For example if the ratings are integers of 1 to 9 rating 1 could be mapped to folder A rating 2 to folder B and so on with rating 9 mapped to folder I. Each incoming email is routed to one of the folders on a data store by a routing software according to the assigned rating of the incoming email and the user defined range .

The user defined range may be modified by a user accessing a user interface displayed on a monitor and the user may modify the user defined range via an input device e.g. a keyboard . In one embodiment the range is a contiguous set of ratings. For example if the ratings are integers of 1 to 9 the range could be defined as mapping ratings 1 to 4 to folder A and ratings 5 to 9 to folder B. In another embodiment the range is set of ratings where the first set of rating is noncontiguous with a second set of ratings. For example if the ratings are integers of 1 to 9 the range could be defined as mapping ratings 1 to 4 and rating 6 to folder A and the rating 5 and ratings 7 to 9 to folder B.

Because each incoming email is routed to one of the folders according to the assigned rating of the incoming email and the user defined range the user can define a mapping which results in each of folders containing a desired level of a specific type of email. For example in an embodiment where a high rating indicates a high probability that an email contains spam emails with high ratings can be routed to a Deleted Items folder and emails with a low rating can be mapped to an Inbox folder. To accomplish this the user defined range specified by the user would map high ratings to the Deleted Items folder and low ratings to the Inbox folder. In general any incoming email can be routed to a particular folder based on its rating. For example in other embodiments incoming emails may be routed to a Junk email folder or a Quarantine folder.

In one embodiment the data store also includes reference data comprising of reference emails which are emails that approximate the incoming email stream of the server . For example the reference emails may be sampled from the incoming email stream . In another embodiment the reference emails are not stored in the data store . Alternatively the reference emails may be stored in a separate memory or only statistical data generated from the reference emails is stored.

Each reference email is assigned a rating by the rating software. The rating indicates a probability that the reference email contains spam. As noted above in other embodiments the rating may indicate a probability that the reference email contains a virus phishing attack pharming attack or some other characteristic. As noted above the rating of the reference email can be on an ordinal or on a continuous scale.

Each reference email is also assigned a label by the user . The user defined label relates to one of the folders which corresponds to the content of the email according to the user . For example in one embodiment the user inspects the reference email for spam and assigns a user defined label to the reference email based on the inspection. If the user concludes by inspection that a particular reference email contains spam the user would assign a spam label to the particular email indicating that according to the user the reference email should be routed to the Deleted Items folder. Similarly if the user concludes by inspection that a particular reference email does not contain spam the user would assign an valid label to the particular reference email indicating that according to the user the reference email should be routed to the Inbox folder.

The user employs the user interface to indicate and or modify the user defined range . In response to the user defining or modifying a range and thus defining or redefining a mapping the defined mapping is applied to the reference emails to determine which folder each reference email would be routed to according to the defined mapping. The user interface presents a display indicating the number of reference emails which would be routed to each of the folders according to their ratings and the user defined modified range . The display includes an indication the total number of reference emails in each folder . Further for each folder the user interface indicates the number of reference emails containing the user defined label corresponding to the folder and the number of reference emails containing one of the user defined labels which does not correspond to the folder . Since the user interface creates the display as if the reference emails were routed to the folders according to their rating and the user defined range the user can manipulate the user defined range in the user interface and observe the impact on the content of the folders before the user defined range is applied to new incoming emails .

In operation for example a system may have two folders an Inbox folder and a Deleted Items folder. As shown in at the example system includes reference data comprising 9 reference emails rated from 1 to 9 9 indicating a high probability that the email is spam. The rating software rated reference email 1 rated reference email 2 and so on with reference email 9 rated 9. At reference emails 1 to 5 have a user defined label of valid and reference emails 6 to 9 have a user defined label of spam . At the nine reference emails are received by the user interface UI . The following table summarizes the reference emails data 

Next shown at the user defined range is received by the UI. In the example system the user defined range maps ratings 1 to 3 to the Inbox folder and ratings 4 to 9 to the Deleted Items folder.

At the UI creates a display as if the reference mails are routed according to their rating and according to the user defined range . Thus the example UI will create a display indicating that 3 reference emails are routed to the Inbox folder and 6 reference emails are routed to the Deleted Items folder. Additionally the example display will indicate that 3 reference emails labeled valid routed to the Inbox folder and no reference emails labeled spam routed to the Inbox folder and 2 reference emails labeled valid routed to the Deleted Items folder and 4 reference emails labeled spam routed to the Deleted Items folder. Two slider based embodiments of the UI are shown in and another radio button embodiment is shown in . The following table summarizes the information indicated by the UI.

At the user is given an opportunity to input a new value for the user defined range . Since the UI creates the display as if the reference emails were routed to the folders according to their rating and the user defined range the user can input new values for the user defined range in the user interface and observe the impact on the folders before the user defined range is applied to new incoming emails . Thus the user may experiment with the user defined range until a desired ratio of valid email to spam email per folder is achieved without effecting the incoming stream of emails .

Continuing with the example above at if the user defines a new user defined range to map ratings 1 to 6 to the Inbox folder and ratings 7 to 9 to the Deleted Items folder the UI at will now update the display to indicate that 6 reference emails are routed to the Inbox folder and 3 reference emails are routed to the Deleted Items folder. Additionally the example display will indicate that there are 5 reference emails labeled valid routed to the Inbox folder and 1 reference emails labeled spam routed to the Inbox folder and 2 reference emails labeled valid routed to the Deleted Items folder and 4 reference emails labeled spam routed the Deleted Items folder. The following table summarizes the information indicated by the UI after the new user defined range has been defined 

At the user is given an opportunity to update the user defined range with the new value. At the user defined range is updated. Once updated new incoming emails will be routed to folders according to their assigned ratings and the mappings defined by the updated user defined range . At the user exits the UI .

In other embodiments other information filtering objects including documents RSS feeds movie reviews and text messages may be routed. Additionally in other embodiments the object may be routed to other destinations. For example the object may be routed to a routine or a program for further processing instead of to a folder for storage.

The user manipulates the sliders vertically on the stack with the input device to define the user defined range . In each slider has nine possible discrete positions. The slider A defines the range A by mapping ratings 1 to 4 to the Inbox folder. Sliders A B define the range B by mapping ratings 5 to 8 to the Junk E mail folder. Sliders B C define an empty range C by mapping no ratings to the Quarantine folder. Slider C defines the range D by mapping rating 9 to the Deleted Items folder.

As the user selects new values for the user defined range by positioning the sliders of the interface the user will observe the impact on the folders because the number of valid emails and number of spam emails per folder are updated in the display. Thus the user may experiment with the user defined range until a desired ratio of valid emails to spam email per folder is achieved without effecting the incoming stream of emails .

Once the user is satisfied with the ratio of valid emails to spam email per folder the user may select the OK or Apply button to update the user defined range. Accordingly new incoming emails will be routed to folders according to their assigned ratings and the mappings defined by the updated user defined range .

The user manipulates the sliders vertically on the stack with the input device to define the user defined range . In each slider may move continuously along the vertical axis of the stack . The slider A defines the range A by mapping rating values above the slider A to the Inbox folder . Sliders A B define the range B by mapping values between the slider A B to the Junk E mail folder B. Sliders B C define an empty range C by mapping no ratings to the Quarantine folder C. Slider C defines the range D by mapping rating values below the slider D to the Deleted Items folder D.

As the user selects new values for the user defined range by positioning the sliders of the interface the user will observe the impact on the folders because the number of valid emails and number of spam emails per folder are updated in the display. Thus the user may experiment with the user defined range until a desired ratio of valid emails to spam email per folder is achieved without effecting the incoming stream of emails .

Once the user is satisfied with the ratio of valid emails to spam email per folder the user may select the OK or Apply button to update the user defined range. Accordingly new incoming emails will be routed to folders according to their assigned ratings and the mappings defined by the updated user defined range .

The user selects the radio buttons of the display with the input device to define the user defined range . For example in the selected radio buttons A B C D define the range by mapping ratings 1 to 4 to the Inbox folder A. The selected radio buttons E F G define the range by mapping ratings 5 to 7 to the Junk folder B. The selected radio buttons H I define the range by mapping ratings 8 and 9 to the Deleted folder D. No radio buttons have been selected to define an empty range by mapping no ratings to the Quarantine folder.

After the user is satisfied with user defined range defined by the selected radio buttons the user may select the OK or Apply button to update the user defined range. Accordingly new incoming emails will be routed to folders according to their assigned ratings and the mappings defined by the updated user defined range .

Referring to the server typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by server . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by server . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM .

A user may enter commands and information into server through input devices such as a keyboard and a pointing device e.g. a mouse trackball pen or touch pad . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. A monitor or other type of display device may be connected to the server .

The server may operate in a networked environment using logical connections to one or more remote computers such as a remote computer. The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to server . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment server is connected to the LAN through a network interface or adapter. When used in a wide area networking environment server typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to server or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Although described in connection with an exemplary computing system environment including server embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any aspect of embodiments of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

An interface in the context of a software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

