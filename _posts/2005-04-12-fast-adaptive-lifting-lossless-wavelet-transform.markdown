---

title: Fast adaptive lifting lossless wavelet transform
abstract: An adaptive lifting transform provides lossless image data compression on an improved edge prediction process. The adaptive predictor works on pixel-by-pixel basis that does not need bookkeeping overhead, especially for integer-to-integer wavelet transform for reducing the number of lifting steps for use in JPEG2000 image compression.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07577307&OS=07577307&RS=07577307
owner: The Aerospace Corporation
number: 07577307
owner_city: El Segundo
owner_country: US
publication_date: 20050412
---
The present application is related to applicant s copending application entitled Fast Lifting Lossless Wavelet Transform Ser. No. 11 105 277 filed Apr. 12 2005 by the same inventor.

The present application is related to applicant s copending application entitled Integrated Lifting Wavelet Transform Ser. No. 11 105 047 filed Apr. 12 2005 by the same inventor.

The invention relates to the field of wavelet transforms. More particularly the present invention relates to lifting methods in wavelet transforms for increased speed of data transformations.

Since lifting method was first introduced the lifting method has become a powerful method to perform wavelet transforms and many other orthogonal transforms. Especially for integer to integer wavelet transforms the lifting method is an indispensable tool for lossless image compression. Prior work has shown that the number of lifting steps can have an impact on the transform performance. The fidelity of integer to integer transforms depends entirely on how well the integer to integer transforms approximate original wavelet transforms. The predominant source of errors in the lifting steps of the lifting method is due to the rounding off of the intermediate real result to an integer at each lifting step. Hence a wavelet transform with a large number of lifting steps would automatically increase the approximation error. In the case of lossy compression where a finite precision arithmetic processor is used the approximation error is less important because the approximation error is usually masked out by the transform coefficient quantization error. However in the case of lossless compression the compression performance is certainly affected by the approximation error. Consequently the number of lifting steps in a wavelet transform is a major concern.

In conventional prior lifting methods the arithmetic computation of a single level and two channel wavelet transform involves two basic filter convolutions each of which is followed by a down sampling operation as shown in filter equations.

In the filter equations the term x is an input signal s n is the down sampled output from a lowpass filter h and d n is a down sampled output from the highpass filter g. For finite impulse response FIR filters lowpass and highpass filters may be split into even and odd parts defined by h z h z zh z and g z g z zg z split equations where subscript e denotes an even part and subscript o denotes an odd part. A P z polyphase matrix is composed of even and odd parts of the filter impulse response functions and is a convenient way to express the wavelet transform operation. Thus the wavelet transform can now be written as a polyphase wavelet transform matrix equation. In the polyphase wavelet transform matrix equation P z is the polyphase matrix.

Initially the conventional lifting method was introduced to improve the performance of wavelet transforms. In a two channel single level wavelet transform the input signal in each channel is first filtered by convolution and then downsampled by a factor of two. That is half of the filtered samples are not used and only the other half is used to compute the wavelet transform. The use of only half of the filtered samples is inefficient and therefore downsampling is performed before the filtering in order to reduce the number of operations. The reduction in the number of operations is the basic idea behind the formulation of polyphase matrices. In the polyphase structure of the wavelet transform the input signal is first split into even and odd parts before entering into the polyphase filters for convolution. By factoring the polyphase matrix into a product of many 2 2 elementary matrices the lifting method may reduce the convolution operations to an algorithm involving simple multiplication and addition. Many orthogonal and biorthogonal wavelet transforms may be constructed by using some number of iterations of the lifting steps. In particular Daubechies and Sweldens have presented a systematic analysis of factoring wavelet transforms into lifting steps. The lifting factorization asymptotically reduces the computational complexity of the wavelet transform by a factor of 2. Importantly the lifting method is the only convenient method that yields integer wavelet coefficients for integer input. The conventional lifting method factorizes the polyphase matrix into a product of 2 2 elementary matrices and a scaling matrix at the end in the form as given by a polyphase factoring equation.

The scalar factor c in the polyphase factoring equation is a normalization factor usually a floating point number. The matrix diagonal c 1 c in the same equation is called the scaling matrix. Each of the other elementary matrices represents a prediction or an update step. The prediction step elementary matrix

Merging the first lifting step of the factorization matrices in scaling matrix with the last lifting step from the rest of wavelet factorization can be accomplished with only three extra steps that are needed to avoid scaling. For example a simple class of wavelet transforms such as 2 2 2 4 4 2 6 2 Haar and 4 4 biorthogonal wavelet transforms may be factored into polyphase factoring equations. The polyphase matrix in the conventional lifting method of such wavelet transforms consists of three elementary matrix factors including one prediction step one update step and one scaling matrix.

In the polyphase matrix of 2 2 biorthogonal wavelet transform for example c 2 Q 1 z 2 and Q 1 z 4. The sample index zdenotes the next sample and z the immediately preceding sample. Therefore for 2 2 biorthogonal wavelet transform Q s s i s i 1 2 and Q d d i d i 1 4. Neglecting the scaling matrix the integer to integer lifting process of the 2 2 biorthogonal wavelet transform comprises of one prediction and one update lifting steps. In the initial step the lifting process is to split the input samples x i into even numbered and odd numbered samples as denoted by s i and d i respectively as s i x 2i and d i x 2i 1 . The following prediction step is to give a new odd numbered sample as d i d i s i s i 1 2 . The next update step is to calculate an updated even numbered sample as s i s i d i d i 1 4 . The square brackets . . . denotes rounding off to the nearest integers. The value within the at the prediction step is a linear interpolation of two adjacent s i and s i 1 values. Thus the d i is the error between the odd numbered sample value d i and the linearly interpolated value of two adjacent even numbered samples.

In terms of the original input samples x i the d i value is given by d i x 2i 2x 2i 1 x 2i 2 2 . Also in terms of the original samples the updated value at the update step is obtained as s i x 2i 2 2x 2i 1 6x 2i 2x 2i 1 x 2i 2 8 . These two samples d i and s i are just the highpass and the lowpass outputs of the 5 3 biorthogonal wavelet transform used by the international image compression standard JPEG 2000 for lossless image data compression.

For integer to integer transform which is required in lossless data compression the scaling matrix in the polyphase matrix can be replaced by the one of the factorization matrices for example the third factorization matrix to derive an expanded P z matrix.

In the expanded P z matrix k c 1 c. Therefore the conventional lifting method disadvantageously requires five lifting steps for 2 2 2 4 4 2 6 2 Haar and 4 4 biorthogonal wavelet transforms.

The polyphase matrix of another class of wavelet transforms such as the fourth order Daubechies orthogonal wavelet D4 the Sequential and Predictive S P and the 1 1 1 TS 2 10 and 2 2 2 biorthogonal wavelet transforms. The wavelet transforms consists of four elementary matrix factors including one first prediction step one update step one second prediction step and one scaling matrix.

For integer to integer transform which is required in lossless data compression the scaling matrix in the polyphase matrix is replaced by one of the scaling factorization matrices. Therefore the conventional lifting method disadvantageously requires six lifting steps for the lossless fourth order Daubechies orthogonal wavelet D4 S P and the 1 1 1 TS 2 10 and 2 2 2 biorthogonal wavelet transforms.

The polyphase matrix of yet another class of wavelet transforms such as the sixth order Daubechies D6 orthogonal wavelet transform and the 9 7 biorthogonal wavelet transform that consists of five elementary matrix factors. These wavelet transforms include one first prediction step a first update step a second prediction step a second update step and a scaling matrix. The conventional lifting method disadvantageously requires seven lifting steps for the sixth order Daubechies orthogonal D6 wavelet transform and the 9 7 biorthogonal wavelet transform.

In a second aspect of the prior art the performance of using lifting method for lossless data compression has been relatively unpredictable. The reasons are due firstly to the overall rounding errors accumulated in many lifting steps that diminish the approximation power of wavelet transforms and secondly to the lifting scheme that is not locally adaptive to image properties. The advantage of using a wavelet transform for image data compression is the power of adapting to local properties of the pixels. In remote sensing hyperspectral data many but not all spectral planes are well correlated. In each spectral plane the spatial data is composed of patches of relatively smooth areas segmented by edges. The smooth areas can be well compressed by a relatively long wavelet transform with a larger number of vanishing moments. However for the regions around edges shorter wavelet transforms are preferable. Despite the fact that the local statistics of both the spectral and spatial data change from pixel to pixel almost all known image data compression algorithms use only one wavelet transform for the entire dataset. For example the current international image data compression standard JPEG 2000 has adopted the 2 2 wavelet transform as the default standard for lossless image data compression for all still images. There is not a single wavelet filter that performs uniformly better than the others. Thus it would be beneficial to use many types of wavelet filters based on local activities of the image. The selected wavelet transform can thus be best adapted to the content of the image locally.

The lifting method is a fast and powerful tool to implement all wavelet transforms. Especially for integer to integer wavelet transforms the lifting method is an indispensable tool for lossless image compression. Many reversible integer to integer wavelet transforms have been evaluated for lossless image compression but no adaptive lifting scheme has been mentioned. Edge adaptive lifting methods have switched the orders of prediction and update steps when applied to lossy image data compression. An adaptive lifting method has been used for lossless image data compression. The prediction step is the median of six predictors that were parts of the prediction filters of the biorthogonal wavelet transforms 2 2 4 2 and 6 2 but poor compression ratio performance for the same image quality is disadvantageously expected from poor prediction image edges.

The current international image data compression standard JPEG2000 has adopted the 2 2 biorthogonal wavelet transform as the default standard of lossless image data compression for all still images. The primary reason for such a decision is that the 2 2 biorthogonal wavelet filter is relatively short and can closely follow the variation of local image contents. The lifting scheme of the 2 2 wavelet transform consists of one prediction step and one update step. At the prediction step a linear interpolation of two adjacent even numbered samples is used to get an estimate of the odd numbered sample in the middle. depicts conventional linear interpolations of four possible scenarios. In the slopes at the two adjacent even numbered samples have the same sign whereas in the two adjacent even numbered samples have the opposite sign. As shown the linear interpolation is more accurate in the former where the two slopes have the same sign than the latter where the two slopes have the opposite sign. In the latter case a cubic interpolation would be more accurate. The estimated odd numbered sample due to linear interpolation of two adjacent even numbered samples is given by linear s s 2. The estimated odd numbered sample due to a four point cubic interpolation of four adjacent even numbered samples is given by cubic s 9s 9s s 16. The first order difference between the cubic and linear interpolated values is i s s s s 16.

Neglecting the scaling factor the conventional 2 2 2 integer to integer lifting wavelet transform comprises of one first prediction one first update and a second prediction lifting steps. In the initial step the lifting process is to split the input samples x i into even numbered and odd numbered samples as denoted by s i and d i respectively as s i x 2i and d i x 2i 1 . The following first prediction step is to give a new odd numbered sample as d i d i s i s i 1 2 . The next update step is to calculate an updated even numbered sample as s i s i d i d i 1 4 . The following second prediction step is to give a new odd numbered sample as d i d i s i s i 1 s i 1 s i 2 16 . The first three lifting steps in 2 2 2 biorthogonal wavelet split prediction and update are the same as in the conventional integer to integer lifting of 2 2 biorthogonal wavelet transform. Thus the predicted value at the first prediction step in the conventional 2 2 and 2 2 2 wavelets is a linear interpolated value as given by linear s s 2. The predicted value at the second prediction step in the conventional 2 2 2 wavelet is the first order difference between the cubic and linear interpolated values i . The first order difference is a mathematical term for commonly named difference. In terms of sample index the operation of z is written as z 1 z z 16. At the second prediction step in wavelet 2 2 2 the estimated odd numbered sample is the difference between cubic and linear interpolations. However the cubic and linear interpolation difference value at the second prediction step is not good enough because the first order difference does not take into account the sudden changes in the first update result.

In a third aspect of the prior art the current international standard for still image compression JPEG2000 has two completely different default wavelet transforms one is the 5 3 biorthogonal wavelet transform used for lossless data compression and the other CDF 9 7 biorthogonal wavelet transform for lossy data compression. The highpass filter coefficients of the 5 3 biorthogonal wavelet transforms in terms of rational numbers are given by h 1 2 1 2 and the lowpass filter h 1 2 6 2 1 8. The highpass filter coefficients of the CDF 9 7 biorthogonal wavelet transforms in terms of rational numbers are given by h 1 0 9 16 9 0 1 16 and the lowpass filter h 1 0 8 16 46 16 8 0 1 64.

Due to the completely different highpass and lowpass filter coefficients in the 5 3 and CDF 9 7 biorthogonal wavelet transforms the polyphase matrices for the 5 3 and CDF 9 7 biorthogonal wavelet transforms must be factorized into two completely different elementary matrices. Thus the 5 3 and CDF 9 7 biorthogonal wavelet transforms cannot be implemented using a common lifting step and hence cannot share processor resources as such portion of the lossless lifting method cannot be used for the lossy lifting method. In some downlink applications communicating lossless compression data the received compressed data must be first disadvantageously decompressed back into the original data set and then lossy compressed in order to generate a lossy compression data set for bandwidth efficient communication of images of a local communications network for broadband distribution. These and other disadvantages are solved or reduced using the invention.

An object of the invention in a first aspect is to reduce the number of lifting steps in orthogonal wavelet transforms biorthogonal wavelet transforms and sequential and predictive S P wavelet transforms.

Another object of the invention in the second aspect is to provide a wavelet transform that accurately predicts image edges for improved compression ratio for the same image quality when predicting image edges.

Yet another object of the invention in the third aspect is to provide a lossy and lossless wavelet transform having common lifting step for conserving processing power and for provide direct compression from lossless compress data into lossy compress data.

The invention is directed to a class of wavelet transforms using lifting steps for image data compression. In the first aspect a wavelet transform requires two fewer lifting steps by using modified lifting steps. The new lifting method reduces rounding errors incurred in the real to integer conversion process at each of the lifting steps. Consequently the compression ratio is improved when the new lifting method is used for lossless image data compression. The reduction of the number of lifting steps saves memory space and signal delay. Floating point round off errors in each lifting step are reduced such as in highpass bands in the 2 2 wavelet transform for improved transform accuracy. The lifting steps for lossless image data compression provide lower bit rates for higher compression ratios.

In a second aspect a fast adaptive lifting scheme is performed at the prediction steps on a pixel by pixel basis for improved prediction of image edges for improved accuracy of transformation along with an improved compression ratio. The fast adaptive lifting steps are used in integer to integer wavelet transforms for improving the performance of lossless data compression. The adaptation is performed on a pixel by pixel basis and is also suitable for multidimensional data with different local statistics of correlation. In addition the lifting steps have reduced the overall rounding errors incurred in the real to integer conversion process at each of the lifting steps. As a result of improving the rounding accuracy the local decorrelation power of wavelet transforms can thus be fully realized. The lifting steps provide for improved compression ratio in lossless compression.

In a third aspect of the invention an integrated lifting step is constructed for lossy and lossless image data compression. Using common lifting steps the integrated lifting method performs lossy or lossless data compression. The lifting step can provide a lossless compression and a lossy compression directly from lossless compression. The compression performance is improved by local adaptation to image statistics that varies from one pixel location to the other. The integrated lifting steps for lossy data compression performs as well as the rational 9 7 wavelet transform in JPEG 2000 standard. The integrated lifting steps improves lossless data compression ratio performance and provides functional flexibility for directly generating lossy compressed data from lossless compressed data. These and other advantages will become more apparent from the following detailed description of the preferred embodiment.

An embodiment of the invention is described with reference to the figures using reference designations as shown in the figures. Referring to a three lifting stage wavelet transform is used for transforming an input . The lifting wavelet transform performs downsampling using an even downsampler for downsampling the input into the even numbered samples a ztime delay for delaying the input into a delayed input and an odd downsampler for downsampling the delayed input into the odd numbered samples. The downsamplers and downsample the input into a sequence of even numbered samples and a sequence of odd numbered samples for generating consecutive even and odd numbered samples that are separated in time by the sampling time delay. The three lifting stage transforms includes three lifting stages. The first lifting stage processes the odd and even numbered samples into a first lifting output. The first lifting stage includes a first Q z C lifting process for processing the even numbered samples into a first predictor output and a summer for adding the first predictor output and the odd numbered samples into the first lifting output. The second lifting stage for processes the even numbered samples and the first lifting output into a second lifting output being a HP output . The second lifting stage includes a second 1 C lifting process for processing the second lifting output into a compensator output and a subtractor for subtracting the even numbered samples from the compensator output into the second lifting output. The third lifting stage for processes the second lifting output and the first lifting output into a third lifting output being the HP output . The third lifting stage includes a third CQ z C lifting process for processing the second lifting output into a first update output and an adder for adding the first update output to the second lifting output into the third lifting output that is a LP output . In the three lifting stage transform Q z C in the first lifting process is a first linear combination of the adjacent even numbered samples z is an index representing consecutive samples and CQ z C in the third lifting process is a second linear combination of the second lifting output at the index sample time z. Each of the first and second linear combinations being the sum of consecutive samples each of which having a respective constant weighting coefficient.

The lifting method is based on the elementary matrix in the factorization of a polyphase matrix that may take on the form as

When merging the first lifting step of the factorization matrices into a scaling matrix the last lifting step from the rest of the wavelet factorization can be accomplished using only two extra steps to avoid scaling. However Theorem I is a preferred way to absorb the scaling factor in the elementary lifting steps using a theorem matrix.

The lifting steps of a three lifting stage wavelet transform are given by Theorem I. The three lifting stage wavelet transform comprises a class of orthogonal and biorthogonal wavelet transforms. The class of three lifting stage wavelet transforms includes but not limits to the Haar orthogonal wavelet the 2 2 2 4 4 2 4 4 6 2 9 3 13 7 and 9 7M biorthogonal wavelet transforms. The 2 2 elementary rotation operator also belongs to this class. For example the first prediction process Q Z and the first update process Q Z are given respectively for the 2 2 biorthogonal wavelet transform by Q 1 z 2 and Q 1 z 4 and for the 4 2 biorthogonal wavelet transform by Q 1 z 2 z 1 z z 16 and Q 1 z 4.

In the front end the integer input data from input buffer are split into even numbered samples and odd numbered samples by the downsamplers and . The symbol Zat indicates a sample delay. The symbols of a downward arrow followed by a number 2 at and indicate downsampling by a factor two namely taking alternate samples. The blocks and perform the same function as a one to two demultiplexer. Therefore a one to two demultiplexer may be used in lieu of the blocks and . C is a scalar factor. The even numbered samples are linearly combined in the first predictor according to the polynomial in Z Q Z C. The integer round off of the results from the first predictor are added to the corresponding odd numbered samples at the adder to give the first lifting output. All the first lifting outputs are divided by a scalar C at the compensator . The integer round off of the compensator are used to subtract the corresponding even numbered samples at adder to yield the second lifting output. The second lifting outputs are the integer highpass output at HP output buffer . The outputs from HP output buffer are linearly combined at the first update according to the polynomial in Z C CQ Z 1 . The integer round off of the first update output are added to the first predictor output at the adder to give the integer lowpass output at LP output buffer . The three lifting stage transform is a three lifting stage lossless wavelet transform for integer input samples. When the integer output from the LP output buffer and the integer output from the HP output buffer are used as inputs in an inverse three lifting stage lossless wavelet transform the output data in the inverse three lifting stage lossless wavelet transform recovers the original integer input data at input buffer . In the forward lossless lifting wavelet transform the round off outputs from the first predictor the compensator and the first update are respectively used for adding at adders and . In the inverse lossless lifting wavelet transform the round off outputs from the first predictor and the first update are respectively used for subtracting at adders and . The operation of adder at remains unchanged in the inverse lossless lifting wavelet transform. Finite precision arithmetic operations such as binary shifts and additions are used at the first predictor the compensator and the first update to replace the real number multiplications and divisions.

The first predictor output and compensator output and first update output can be floating point outputs for providing lossy transform and for providing a lossless transform when the floating point outputs are rounded off into integers. For example the first lifting process rounds off the first predictor output into integers while the second lifting process rounds off the compensator output into integers and while the third lifting process rounds off the first update output into integers. As such the input data from the input buffer and the third highpass output from the HP output buffer and the third lowpass output from the LP output buffer each comprise integer data during lossless compression of the input into the third highpass output and the third lowpass output.

The three stage lifting process compresses the input of floating point values into the third highpass output and the third lowpass output during lossy compression of the input into the third highpass output and the third lowpass output. The transform compresses the input of integer values into the third highpass output and the third lowpass output during lossy compression of the input into the third highpass output and the third lowpass output. Anyone of the first and second and third lifting processes can be integer bit shifting processes for providing lossless compression. For example the input can be integer image data and the third highpass output and the third lowpass output are floating point numbers in JPEG lossy compression format. The input can be integer image data with the third highpass output and the third lowpass output being integer numbers in JPEG lossless compression format.

Referring to a three lifting stage wavelet transform is designed according to the signal flow depicted in . The electronic system is a parallel pipeline with data flow arranged in word serial and bit parallel format. When the input data flow in at every clock edge of a two phase clock from the input buffer the input data split into two paths. The flip flop FF is enabled at even clock edges allowing even numbered data flowing in. The flip flop FF is enabled at odd clock edges allowing odd numbered data flowing in. Subsequently flip flops FF and FF are enabled at even clock edges. Flip flop FF is enabled at odd clock edges. The first lifting pipeline in the first lifting stage performs a prediction process by combining three consecutive input words two even numbered words from the outputs of FF and FF and one odd numbered word from the output of FF . The second lifting pipeline in the second lifting stage performs a compensation process by combining two consecutive input words one even numbered word from the output of FF and one odd numbered word from the output of the first lifting pipeline . The third lifting pipeline in the third lifting stage performs an update process by combining three consecutive input words one even numbered word from the output of FF one even numbered word from the output of the second lifting pipeline and one odd numbered word from the output of FF . The LP output buffer latches on the output of the third lifting pipeline being the third lowpass output. The HP output buffer latches on the output of FF being the third highpass output.

Referring to the FF output buffer the parallel adder and the first lifting pipeline output buffer are all operating in odd numbered clock phases. The FF output buffer the FF output buffer the read only memory ROM and the pipeline multiplier and adder unit PMA are all operating in even numbered clock phases. The multiplying constant 1 2 C is stored in ROM in canonic signed digital codes. In two s complement the FF output data from the FF output buffer multiplies the canonic signed digital codes of 1 2 C in ROM in PMA in even numbered clock phases. In the same PMA the multiplied result is added to the FF output data from the FF output buffer in two s complement. The pipeline multiplier and adder unit composing of many levels of arrays of carry save adders and an array of carry look ahead adders at the output end of the unit performs array multiplications and additions in the same unit. The number of array levels depends on the bit length of each data involved in multiplication and addition operations. The output from PMA is piped to buffer register at even numbered clock edges. After finishing data loading in buffer register the output buffer of the buffer register is enabled at odd numbered clock edges allowing the data to pipe out to the parallel adder . The same enable circuit is used to enable the FF output buffer allowing the FF output data to load the parallel adder at the same instant as the output from buffer register . The parallel adder performs the two s complement addition and pipes out the addition result to the first lifting pipeline output buffer at odd numbered clock edges.

Referring to the FF output buffer the parallel adder and the second lifting pipeline output buffer are operating in even numbered clock phases. The first lifting pipeline output buffer the read only memory ROM and the array multiplier AM are all operating in odd numbered clock phases. The multiplying constant 1 C is stored in ROM in canonic signed digital codes. In two s complement the first lifting output data from the first lifting pipeline output buffer multiplies the canonic signed digital codes of 1 C from ROM in the array multiplier AM at odd numbered clock phases. The multiplication result is latched on by the buffer register at odd numbered clock edges but piped out at even numbered clock edges. Being operated in even numbered clock phases parallel adder sums the FF output data from the FF output buffer and the output data from buffer register together then pipes out the summation result at even numbered clock edges to the second lifting pipeline output buffer .

Referring to the FF output buffer and the parallel adder are operating in odd numbered clock phases. The FF output buffer the read only memory ROM the read only memory ROM the second lifting pipeline output buffer and the pipeline multiplier and adder unit PMA are all operating in even numbered clock phases. The multiplying constants C 4 and C 4 C are respectively stored in ROM and ROM in canonic signed digital codes. In two s complement the FF output data from the FF output buffer and the second lifting output data from the second lifting pipeline output buffer are multiplied to the canonic signed digital codes of C 4 in ROM and C 4 C in ROM respectively by PMA in even numbered clock phases. In the same PMA the two multiplied results are added together in two s complement. The summation result is latched on by buffer register at even numbered clock edges but piped out at odd numbered clock edges. Being operated on odd numbered clock phases parallel adder sums the FF output data from the FF output buffer and the output data from buffer register together then pipes out the summation result at odd numbered clock edges to the LP output buffer .

Referring to a fourth lifting stage is used for processing the third highpass output from the HP output buffer and the third lowpass output from the LP output buffer into a fourth lifting output being the fourth highpass output stored in the HP output buffer . The fourth lifting stage includes a fourth Q z C lifting process for processing the third lowpass output into a second predictor output and an adder for adding the second predictor output to the third highpass output into the fourth lifting output being the fourth highpass output stored in the HP output buffer . The third lowpass output is also the fourth lowpass output stored in the LP output buffer .

Using Theorem I the polyphase matrix of a class of four lifting stage wavelet transforms is factorized into four elementary matrices as given by the four stage polyphase factoring equation.

The class of four lifting stage wavelet transforms includes but not limit to the fourth order Daubechies orthogonal wavelet D4 S P and the 1 1 1 TS 2 10 and 2 2 2 biorthogonal wavelet transforms. For examples for D4 the Daubechies orthogonal wavelet transform can be defined by c 3 1 2 Q 3 Q z 3 2 4 Q z. For the 2 2 2 biorthogonal wavelet transform c 2 Q 1 z 2 Q 1 z 4 and Q z 1 z z 16.

The class of four lifting stage wavelet transforms comprises of four lifting stages. The first three lifting stages have the same structure as the three lifting stage wavelet transform. The fourth lifting stage is a fourth integer to integer lifting stage receiving data from the LP output buffer and the HP output buffer . The data from the LP output buffer are linearly combined at the second predictor according to the polynomial in Z Q Z C. The integer round off of the output of the second predictor is added to the corresponding output data from the HP output buffer at adder . The output of adder is the highpass output of the fourth lifting stage being stored in the HP output buffer . The lowpass output of the fourth lifting stage being stored in the LP output buffer is the same as the third lowpass output from the LP output buffer .

Referring to the implementation of the fourth lifting stage comprises of a fourth lifting pipeline and three flip flops FF FF and FF . The HP output buffer and the HP output buffer are enabled at even numbered clock edges. The LP output buffer the LP output buffer and flip flops FF FF and FF are all enabled at odd numbered clock edges. In word serial and bit parallel format the third highpass output from the HP output buffer flows into the fourth lifting pipeline during even numbered clock phases. In the same data format the output from the fourth lifting pipeline is stored in the HP output buffer . Four consecutive data words flowing in from the LP output buffer are input to the fourth lifting pipeline during odd numbered clock phases. The four consecutive words are the third lowpass output from the LP output buffer and outputs from flip flops FF FF and FF . The third lowpass output from the LP output buffer after passing through flip flops FF FF and FF is input to the LP output buffer during odd numbered clock phases.

Referring to the HP output buffer and the parallel adder are operating in even numbered clock phases. The LP output buffer the read only memory ROM the FF output buffer the FF output buffer the FF output buffer and the pipeline multiplier and adder unit PMA are all operating in even numbered clock phases. The multiplying constant 1 C is stored in ROM in canonic signed digital codes. In two s complement the output data from FF output buffer FF output buffer and FF output buffer and the LP output data from the LP output buffer are added subtracted and multiplied to the canonic signed digital codes of 1 C in ROM by PMA during odd numbered clock phases. The result from PMA is latched on by the buffer register at odd numbered clock edges but piped out at even numbered clock edges. Being operated in even numbered clock phases parallel adder sums the HP output data from the HP output buffer and the output data from buffer register together then pipes out the summation result at even numbered clock edges to the HP output buffer .

Referring to a fifth lifting stage is for processing the fourth highpass output from the HP output buffer and the fourth lowpass output from the LP output buffer into a fifth lifting output being the fifth lowpass output at the LP output buffer . The fifth lifting stage includes a fifth CQ z lifting process for processing the fourth highpass output from the HP output buffer into a second update output and an adder for adding the second update output to the fourth lowpass output from the LP output buffer into the fifth lifting output being the fifth lowpass output at the LP output buffer . The fourth highpass output from the HP output buffer is also the fifth highpass output in the HP output buffer .

Using Theorem I the polyphase matrix of a class of five stage lifting wavelet transforms is factorized into five elementary matrices as given by the five stage polyphase factoring equation.

The class of five stage wavelet transforms includes but not limit to the 6th order Daubechies orthogonal wavelet D6 and the CDF 9 7 biorthogonal wavelet transform. For example for the CDF 9 7 biorthogonal wavelet transform Q 1 z with 1.586134342 Q 1 z with 0.05298011854 Q 1 z with 0.8829110762 and Q 1 z with 0.4435068522 and c 1.149604398.

The five lifting stage wavelet transform comprises of five lifting stages. The first four lifting stages have the same structure as the four lifting stage wavelet transforms. The fifth lifting stage is an extension adding to the LP output buffer and the HP output buffer . The fourth highpass output from the HP output buffer is linearly combined at the CQ Z second update process using the linear polynomial Qin time index Z. The integer round off of the output of the second update is added to the fourth lowpass output from LP output buffer using adder . The output of adder is the fifth lowpass output at the LP output buffer . The fifth highpass output at the HP output buffer is the same fourth highpass output from the HP output buffer .

Referring to the implementation of the fifth lifting stage comprises of a fifth lifting pipeline and a flip flop FF . The LP output buffer and the LP output buffer are enabled at odd numbered clock edges. The HP output buffer the HP output buffer and flip flops FF are all enabled at even numbered clock edges. In word serial and bit parallel format the LP output data flows into the fifth lifting pipeline during odd numbered clock phases. In the same data format the output from the fifth lifting pipeline is stored in the LP output buffer . Two consecutive data words flowing out from the HP output buffer are input to the fifth lifting pipeline during even numbered clock phases. The two consecutive data words are output from the HP output buffer and the output from flip flop FF . The data from the HP output buffer after passing through flip flop FF is input to the HP output buffer during even numbered clock phases.

Referring to the LP output buffer and the parallel adder are operating in odd numbered clock phases. The FF output buffer the read only memory ROM the HP output buffer and the pipeline multiplier and adder unit PMA are all operating in even numbered clock phases. The multiplying constant k C is stored in ROM in canonic signed digital codes. In two s complement the FF output data from the FF output buffer and the HP output data from the HP output buffer are added together in PMA . In the same PMA the summation result is multiplied to the canonic signed digital codes of k C from ROM in even numbered clock phases. The multiplication result is latched on by the buffer register at even numbered clock edges but piped out at odd numbered clock edges. Being operated in odd numbered clock phases parallel adder sums the LP output data from the LP output buffer and the output data from buffer register together then pipes out the summation result at odd numbered clock edges to the LP output buffer .

To compare the performance of the lifting method to the conventional lifting method for integer to integer wavelet transform the 2 2 wavelet transform is used as an example. Both the integer to integer three stage lifting and the conventional integer to integer lifting of the 2 2 biorthogonal wavelet transform were applied to two dimensional images and compared them to that using the floating point 2 2 wavelet transform. The overall real to integer round off errors of the transform coefficients in the highpass and highpass quadrant were compared. Ten gray scaled images from various sources have been used in the comparison. The results are listed in the Overall Round Off Mean Square Error Table.

The integer to integer three stage lifting of 2 2 biorthogonal wavelet transform not only saves two lifting steps than the conventional integer to integer lifting of 2 2 biorthogonal wavelet transform but also results in better accuracy for approximating the floating point 2 2 biorthogonal wavelet transform. As expected using for lossless image data compression the integer to integer three stage lifting of 2 2 biorthogonal wavelet transform outperforms the JPEG 2000 international image compression standard that uses the conventional integer to integer lifting of 2 2 biorthogonal wavelet transform for lossless image compression. In terms of bit rates the comparison of lossless compression results is listed in the Bit Rate Comparison of Lossless Compression of 8 bit Images Table.

The comparisons of lossless compression performance have also done on 12 bits per pixel images. The results are listed in the Bit Rate Comparison of Lossless Compression of 12 bit Images Table.

Both the Bit Rate Comparison of Lossless Compression of 8 bit Images Table and the Bit Rate Comparison of Lossless Compression of 12 bit Image Table show that the integer to integer three stage lifting of the 2 2 biorthogonal wavelet transform provides improved compression ratios than the JPEG2000 that uses the conventional integer to integer lifting of the 2 2 biorthogonal wavelet transform for lossless compression.

Referring to an adaptive lifting wavelet transform is used for transforming an input into an adaptive highpass output and an adaptive lowpass output. The adaptive lifting wavelet transform is an extension of the three stage lifting wavelet transform that transforms an input into a third highpass output and a third lowpass output. An adaptive lifting stage is used for processing the third highpass output from the HP output buffer and the third lowpass output from the LP output buffer into an adaptive highpass output at the adaptive HP output buffer and an adaptive lowpass output at the adaptive LP output buffer . The adaptive lifting stage includes a P z C adaptive predictor process for providing an adaptive predictor output from the third lowpass output. The adaptive lifting stage also includes an adder for subtracting the adaptive predictor output from the third highpass output into the adaptive highpass output at the adaptive HP output buffer . The third lowpass output from the LP output buffer is the adaptive lowpass output at the adaptive LP output buffer .

In the adaptive predictor process the sum of one quarter of a third order difference and the first order difference between the cubic and linear interpolated values is used as a refined prediction process. The first order difference between the cubic and linear interpolated values i is defined as z 1 z z 16. A second order difference is the difference between two consecutive first order differences and a third order difference is the difference between two consecutive second order differences. E is defined as one quarter of the third order difference. To be precise E is given by E i 1 2 i i 1 4 and z 1 z z . Therefore the adaptive predicted value P z is given by P z E i A i 1 2 i i 1 4.

The adaptive four stage integer to integer lifting transform of 2 2 2 biorthogonal wavelet transform comprises of four lifting stages. The first three lifting stages have the same structure as the three stage lifting wavelet transforms. The inputs to the adaptive fourth lifting stage are the third lowpass output data from the LP output buffer and the third highpass output data output from the HP output buffer . The third lowpass output data are linearly combined at the adaptive predictor according to the polynomial in z P z C . The integer round off of the output of the adaptive predictor is added to the corresponding HP output data at adder . The output of adder is the highpass output of the adaptive lifting stage at the adaptive HP output buffer . The lowpass output of the adaptive lifting stage at the adaptive LP output buffer is the same as the third lowpass output data from the LP output buffer . The adaptive four stage lifting transform is operated based on pixel to pixel adaptation and there is no bookkeeping overhead.

Referring to the implementation of the adaptive lifting stage comprises of an adaptive lifting pipeline and three flip flops FF FF and FF . The HP output buffer and the adaptive HP output buffer are enabled at even numbered clock edges. The LP output buffer the adaptive LP output buffer and flip flops FF FF and FF are all enabled at odd numbered clock edges. In word serial and bit parallel format the third highpass output from the HP output buffer flows into the adaptive lifting pipeline during even numbered clock phases. In the same data format the output from the adaptive lifting pipeline is stored in the adaptive HP output buffer . Four consecutive data words flowing in from the LP output buffer are inputs to the adaptive lifting pipeline during odd numbered clock phases. The four consecutive words are output from the LP output buffer and the outputs from flip flops FF FF and FF . The third lowpass output data from the LP output buffer after passing through flip flops FF FF and FF is input to the adaptive LP output buffer during odd numbered clock phases.

Referring to the HP output buffer and the parallel adder are operating in even numbered clock phases. The LP output buffer the read only memory ROM the FF output buffer the FF output buffer the FF output buffer and the pipeline multiplier and adder unit PMA are all operating in even numbered clock phases. The multiplying constant 1 C is stored in ROM in canonic signed digital codes. In two s complement the output data from FF output buffer FF output buffer and FF output buffer and the third lowpass output data from the LP output buffer are added shifted subtracted multiplied to the canonic signed digital codes of 1 C in ROM by the PMA during odd numbered clock phases. The result from PMA is latched on by the buffer register at odd numbered clock edges but piped out at even numbered clock edges. Being operated on even numbered clock phases parallel adder sums the third highpass output data from the HP output buffer and the output data from buffer register together then pipes out the summation result at even numbered clock edges to the adaptive HP output buffer .

Using for lossless image data compression the integer to integer adaptive four stage lifting of 2 2 2 biorthogonal wavelet transform outperforms the JPEG 2000 international image compression standard that uses the conventional integer to integer lifting of 2 2 biorthogonal wavelet transform for lossless image compression. In terms of bit rates the comparison of lossless compression results is listed in the Bit Rate Comparison of Adaptive Compression of 8 bit Images Table.

The comparisons of adaptive compression performance have also been performed on 12 bits per pixel images. The results are listed in the Bit Rate Comparison of Adaptive Compression of 12 bit Images Table.

Both the Bit Rate Comparison of Adaptive Compression of 8 bit Images Table and the Bit Rate Comparison of Adaptive Compression of 12 bit Image Table show that the integer to integer adaptive four stage lifting of the 2 2 2 biorthogonal wavelet transform gives ever better compression ratio than the JPEG 2000 that uses the conventional integer to integer lifting of the 2 2 biorthogonal wavelet transform for lossless compression.

Referring to the adaptive highpass output from the adaptive HP output buffer and the adaptive lowpass output from the adaptive LP output buffer are input into an integrated lifting stage . An integrated lifting wavelet transform is used for transforming an input into an integrated highpass output and an integrated lowpass output. The integrated lifting wavelet transform has an integrated lifting stage that is the next lifting stage following the adaptive lifting stage. The integrated lifting stage processes the adaptive highpass output and the adaptive lowpass output into an integrated highpass output at the integrated HP buffer and an integrated lowpass output at the integrated LP buffer . The integrated lifting stage includes an CQ z integrated lifting process for processing the adaptive highpass output into an integrated lowpass output. A scalar constant A read out from ROM scales the adaptive lowpass output from the adaptive LP buffer into a scaled lowpass output. An adder adds the scaled lowpass output and the integrated lifting output into the integrated lowpass output at the integrated LP output buffer . The adaptive highpass output from the adaptive HP output buffer is also the integrated highpass output at the integrated HP buffer .

The conventional lifting steps of 2 2 2 biorthogonal wavelet transform can be modified into an integrated transform lifting steps. In the initial step the lifting process is to split the input samples x i into even numbered and odd numbered samples as denoted by s i and d i respectively as s i x 2i and d i x 2i 1 . The following first prediction step is to give a new odd numbered sample as d i d i s i s i 1 2 . The next first update step is to calculate an updated even numbered sample as s i s i d i d i 1 4 . The following second prediction step is to give a new odd numbered sample as d i d i s i s i 1 s i 1 s i 2 16 . When the second predicted value s i s i 1 s i 1 s i 2 16 is approximated by s i s i 1 s i 1 s i 2 16 the new odd numbered sample d i becomes s i 1 9s i 16x 2i 1 9s i 1 s i 2 16 x 2i 2 9x 2i 16x 2i 1 9x 2i 2 x 2i 4 16. The approximated expression of d i is the highpass output of the 9 7 biorthogonal wavelet transform h. Furthermore the lowpass output of the CDF 9 7 biorthogonal wavelet transform h may be written as s i x 2i d i d i 1 4 x 2i 4 8x 2i 2 16x 2i 1 46x 2i 16x 2i 1 8x 2i 2 x 2i 4 64. But x 2i is closely approximated by x 2i 32s i 33 8 d i di 1 33. Thus the lowpass output of the 9 7 biorthogonal wavelet transform h may be approximately given by the s i equation where s i 32s i 33 d i d i 1 132. For improved performance the second prediction step has been made adaptive as d i d i P s i . For lossy data compression the last s i equation results in a very good approximation of the lowpass output of the lossy CDF 9 7 biorthogonal wavelet transform. For lossless data compression s i takes on the form as s i s i d i d i 1 64 . The last lossy and lossless lifting steps for s i are combined into one expression to get the combined s i equation where s i A s i d i d i 1 B . In the combined s i equation A 32 33 and B 132 are used for lossy data compression and A 1 and B 64 for lossless data compression.

The integrated lifting wavelet transform comprises of five lifting stages. The first three integer to integer lifting stages are the same as the three stage lifting wavelet transform. The fourth lifting stage is the same adaptive lifting stage. The complete integrated lifting wavelet transform is to integrate the adaptive four stage lifting wavelet transform with a fifth lifting stage. The fifth lifting stage can be adaptively used for either lossless data compression or lossy data compression. The adaptive highpass output from the adaptive HP output buffer is processed by the cQ Z process in the second update processor . The cQ Z process performs the function of c 1 Z B where the sum of the previous adaptive highpass output sample and the current adaptive highpass output sample is multiplied by cand divided by a constant B which is read out from a read only memory ROM . The adaptive lowpass output from the adaptive LP output multiplies a constant A being read out from a ROM at multiplier and the scaled lowpass output is sent to adder to be added with the second update output. The result from adder is the integrated lowpass output at the integrated LP output buffer and the integrated highpass output at the integrated HP output buffer is the same as the adaptive highpass output from the HP output buffer . For lossy data compression A 32 33 and B 132 are used. For lossless data compression A 1 and B 64 are used.

Referring to the implementation of the integrated lifting stage comprises of an array multiplier a read only memory ROM an integrated lifting pipeline and a flip flop FF . The adaptive LP output buffer the ROM the array multiplier AM and the integrated LP output buffer are all enabled at odd numbered clock edges. The adaptive HP output buffer the integrated HP output buffer and the flip flop FF are all enabled at even numbered clock edges. The multiplying constant A is stored in ROM in canonic signed digital codes. In word serial and bit parallel format the adaptive LP output data from the adaptive LP output buffer and the canonic signed digital codes of A from ROM are multiplied together in the array multiplier . The multiplication result in two s complement is input to the integrated lifting pipeline during odd numbered clock phases. In the same data format the output from the integrated lifting pipeline is stored in the integrated LP output buffer . Two consecutive data words flowing out from the adaptive HP output buffer are input to the integrated lifting pipeline during even numbered clock phases. The two consecutive words are output from the adaptive HP output buffer and the output from flip flop FF . The data from the adaptive HP output buffer after passing through the flip flop FF is input to the integrated HP output buffer during even numbered clock phases.

Referring to the array multiplier AM output buffer the parallel adder and the integrated LP output buffer are all operating in odd numbered clock phases. The FF output buffer the read only memory ROM the adaptive HP output buffer and the pipeline multiplier and adder unit PMA are all operating in even numbered clock phases. The multiplying constant 1 B is stored in ROM in canonic signed digital codes. In two s complement the FF output data from the FF output buffer and the adaptive HP output data from the adaptive HP Output buffer are added together in PMA . In the same PMA the summation result is multiplied to the canonic signed digital codes of 1 B from ROM at even numbered clock phases. The multiplication result is latched on by the buffer register at even numbered clock edges but piped out at odd numbered clock edges. Being operated in odd numbered clock phases parallel adder sums the array multiplier output data from the AM output buffer and the output data from buffer register together then pipes out the summation result at odd numbered clock edges to the integrated LP output buffer .

In terms of the Peak Signal to Noise Ratio PSNR as a measure of decompressed image quality in lossy image data compression the results of lossy compression using the integrated lifting wavelet transform are listed in the PSNR of Integrated Lifting of 8 bit Images Table.

For lossless data compression for which A 1 and B 64 the PSNR values are slightly better than those obtained from the adaptive four stage lifting wavelet transform. The integrated lifting wavelet transform is advantageously used to perform both lossy and lossless data compression. The integrated lifting wavelet transform including the adaptive lifting feature outperforms any other lifting methods for lossless data compression. Thus the integrated lifting wavelet transform offers not only functional flexibility but also better performance. Those skilled in the art can make enhancements improvements and modifications to the invention and these enhancements improvements and modifications may nonetheless fall within the spirit and scope of the following claims.

