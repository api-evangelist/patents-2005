---

title: Method, system and article of manufacture for metadata replication and restoration
abstract: Data and metadata are generated in a computational device, wherein the generated data is stored in a first physical storage device coupled to the computational device, and wherein the generated metadata is stored transiently in the computational device. The data and the metadata are replicated to a second physical storage device. The replicated data and the replicated metadata in the second physical storage device are used to recover from a failure of at least one of the computational device and the first physical storage device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07987158&OS=07987158&RS=07987158
owner: International Business Machines Corporation
number: 07987158
owner_city: Armonk
owner_country: US
publication_date: 20050209
---
The disclosure relates to a method system and article of manufacture for replicating and restoring metadata.

Information technology systems including storage systems may need protection from site disasters or outages. Furthermore information technology systems may require features for data migration data backup or data duplication. Implementations for disaster or outage recovery data migration data backup and data duplication may include mirroring or copying of data from one storage system to another. For example in certain information technology systems data may be replicated from a primary storage system to a secondary storage system. If the primary storage system is unavailable then the replicated data in the secondary storage system may be used instead of the unavailable data in the primary storage system.

Recovery time objective is the time in which data availability should be restored. For example if a trade execution program of a stock exchange should be up and running within thirty seconds of the primary storage system being unavailable then the recovery time objective for the trade execution program is thirty seconds.

Recovery point objective is the point in time to which data must be restored in order to resume processing. For example if a trade execution program of a stock exchange fails then certain data may be lost if all data is not synchronously backed up to the secondary storage. The recovery point objective is the point in time to which the trade execution program and any lost data should be restored. The recovery time objective is a period of time while the recovery point objective is a point in time.

Provided are a method system and article of manufacture wherein data and metadata are generated in a computational device wherein the generated data is stored in a first physical storage device coupled to the computational device and wherein the generated metadata is stored transiently in the computational device. The data and the metadata are replicated to a second physical storage device. The replicated data and the replicated metadata in the second physical storage device are used to recover from a failure of at least one of the computational device and the first physical storage device.

In certain embodiments the computational device is a first computational device wherein the data and the metadata are generated by a first application that executes in the first computational device and wherein the recovering from the failure further comprises restoring the replicated metadata to a second computational device and allowing a second application that is a copy of the first application to use the replicated data in the second physical storage device wherein the second application is capable of executing in the second computational device. The second application is executed from a point of failure of the first application by using the restored metadata and the replicated data.

In certain additional embodiments the replicating of the data and the metadata to the second physical storage device further comprises copying the data from the first physical storage device to the second physical storage device and copying the metadata from memory of the computational device to the second physical storage device.

In additional embodiments the metadata comprises messages for communication from the computational device to another computational device. In yet additional embodiments the metadata comprises state information of an executing application that generates the data and the metadata.

In yet further embodiments a first time period for recovering from the failure is of a lesser duration in a first system that replicates the data and the metadata in comparison to a second time period for recovering from the failure in a second system that replicates the data but not the metadata

In still further embodiments the metadata is a first metadata that is selected from a second metadata generated by the computational device wherein an amount of the first metadata selected from the second metadata is based on a recovery time objective.

In additional embodiments the data and the metadata are replicated to the second physical storage device in a consistent manner.

In the following description reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments. It is understood that other embodiments may be utilized and structural and operational changes may be made.

Certain applications such as database applications may have metadata transiently stored in the cache or in internal memory. Although the majority of the data for an application may reside in a physical storage device not all of the data is kept in the physical storage at all times. Even if the physical storage device is replicated for data protection in the case of a system failure the metadata that is transiently stored in the cache or in the internal memory may be lost. As a result recovery of a consistent version of a failed application may not be possible and may take a substantial amount of time to accomplish where the substantial amount of time may be greater than a recovery time objective.

It certain situations the recovery time objective may be important and applications that failed may have to start running within the period of time defined by the recovery time objective. Certain embodiments replicate the metadata transiently stored in the cache and internal memory so as to reduce the recovery time when compared to the situation where the transiently stored metadata is not replicated. For example in certain embodiments in which a failure of a database occurs the recovery of the database may be much faster since all the data and metadata necessary to recover a consistent version of the database may be replicated.

While shows the computational device as being directly coupled to the primary storage device and the replication storage device in other embodiments the computational device the primary storage device and the replication storage device may coupled over a suitable network including those presently known in the art such as a Storage area network SAN a Local area network LAN the Internet an intranet a Wide area network WAN a wireless network etc.

The computational device may include an executing user application application metadata and a replicator . The user application is any suitable application including those presently known in the art such as a database application a spreadsheet application a word processing application etc. In certain embodiments the user application executes in the computational device . The application metadata is metadata associated with the executing application . Metadata is data about data. For example when the user application executes in the computational device application data associated with the user application may be stored in the primary storage device . The application metadata may be metadata for the application data where the application metadata is stored transiently in the computational device while the user application executes in the computational device . For example the user application may be a database application the application data may be the database corresponding to the database application and the application metadata may be the metadata corresponding to the executing database application and the database.

The replicator may be any suitable application implemented in hardware software or firmware where the replicator copies the application data to the replication storage device . In certain embodiments the copied application data is stored in the data element the copy of application data . Additionally the replicator also copies selected portions of the application metadata to the replication storage device for storage in the data element selected application metadata .

In certain embodiments in which the computational device is a first computational device a second computational device may be coupled to the replication storage device . In certain embodiments a restorer may be present in the second computational device where the restorer may be any suitable application implemented in hardware software or firmware. In case of a failure of the computational device a system comprising the second computational device and the replication storage device may recover from the failure by using the copy of the application data and the copy of the application metadata to restart a user application that is a copy of the user application from the point at which the user application failed.

The restorer may in association with a higher level application not shown start the user application within a recovery point objective by using the selected application metadata that is present in the replication storage device . Since the user application is a copy of the user application restarting the user application may in effect continue the execution of the failed user application . Therefore in case of a failure of the first computational device the restorer restores the selected application metadata to the second computational device . In certain embodiments a higher level application not shown in association with the restorer may continue the execution of the user application by starting the user application that is a copy of the user application with the selected application metadata .

Therefore illustrates an embodiment in which the replicator in a first computational device replicates the application metadata and the application data corresponding to an executing user application in a replication storage device . In case of a failure of the first computational device the restorer in the second computational device in association with a higher level application may use the application metadata stored in the selected application metadata and the replicated application data stored in the copy of application data to restart the user application within a recovery point objective of the failure of the user application where the user application is a copy of the user application

The exemplary application metadata may comprise metadata in cache metadata in main memory messages state information of executing user application internal memory state of executing user application intermediate calculated data and other information that is not stored in the primary storage device . The elements in that comprise the exemplary application metadata are exemplary and information present in one exemplary component may be present in another exemplary component. For example portions of the metadata in main memory may also be present in the metadata in the cache. The components of the exemplary application metadata could also be categorized differently from that shown in .

Parts of the exemplary application metadata may be stored in a cache or main memory of the computational device where the parts stored in the cache or main memory may be transient i.e. temporary and not saved in the primary storage device . For example in certain embodiments the metadata in the cache of the computational device and the metadata in main memory of the computational device may not be stored in the primary storage device . The metadata may be generated during the execution of the user application

During the execution of the user application certain messages may be generated. For example a message that indicates the status of the executing user application may be generated in computational device for sending to another computational device. Such generated messages may be stored transiently in the computational device and may not be stored in the primary storage device .

In certain embodiments state information of the executing user application and the internal memory state of the executing user application may be stored transiently in the computational device . In certain additional embodiments a series of calculations may be performed by the executing user application and intermediate values generated during the series of calculations may be stored transiently in the intermediate calculated data rather than in the primary storage device . In certain embodiments only the final result of the series of calculations may be stored in the primary storage device . In certain embodiments other information not stored in the primary storage device i.e. information not stored in the application data may also comprise the exemplary application metadata .

The executing user application generates reference numeral the application data and may also generate reference numeral the application metadata . The application data may be written reference numeral to the primary storage device .

In certain embodiments the replicator reads reference numeral the application data and controls reference numeral the writing of the application data to the replication storage device to generate the copy of the application data . The replicator may read the application data as the application data is being generated by the user application or may read the application data from the primary storage system . In certain alternative embodiments the copying of the application data from the primary storage device to the replication storage device may be performed by an application different from the replicator .

In certain embodiments the replicator reads reference numeral the application metadata from the computational device and writes reference numeral selected parts of the application metadata to the replication storage device in the selected application metadata .

The selected application metadata in combination with the copy of the application data may be adequate for restarting the executing user application within the recovery time objective in the event of a failure in either the computational device or the primary storage device . In certain embodiments the restorer may in association with a higher level application start the user application user application is a copy of the user application in the second computational device in the event of a failure of the first computational device . In certain embodiments if a first recovery time objective is of a smaller duration of time than a second recovery time objective then a greater amount of application metadata may have to be selected for storage in the selected application metadata . The application data and the application metadata are replicated in a consistent manner to the replication storage device in certain embodiments. In case the replication is performed asynchronously consistent replication may be necessary in certain embodiments.

In the event of an unavailability of the application data stored in the primary storage device or a failure of the user application the restorer i.e. the restoration application establishes communications reference numeral with the replication storage device . The restorer reads reference numeral the copy of the application data and the copy of selected metadata from the replication storage device . The copy of the application data and the copy of selected metadata may have been stored by the replicator prior to the unavailability of the application data or the failure of the user application

The restorer restores reference numeral the selected metadata to a computational device such as the second computational device . For example the restored selected metadata may be stored in the second computational device . A higher level application that may be located inside or outside of the second computational device may restart reference numeral user application indicated as the executing user application in . The restarted executing user application executes with the restored selected metadata and the copy of the application data . The restoration of the selected application metadata may allow the restarted executing user application may correspond to the user application to be up and running within a smaller waiting period when compared to no restoration of the selected metadata .

Therefore illustrates certain embodiments in which the restoration of the selected metadata allows the restored executing application to be up and running within a time period less than a recovery time objective. While shows the restorer in the computational device in certain alternative embodiments the restorer may also be present in the computational device .

Control starts at block where a replication application such as the replicator reads the application data and the application metadata . The application data and the application metadata may have been generated by the execution of the user application

The replication application controls at block the writing of the application data to the replication storage device . In parallel the replication application selects at block at least some part of the application metadata where the selected part of the application metadata can be used to satisfy the recovery time objective in case of an unavailability of the application data stored in the primary storage device or in case of a failure of the user application

Subsequent to the selecting at block of the at least some part of the application metadata the replication application writes at block the selected application metadata to the replication storage device . Control returns to block from blocks and the replication application reads at block further generated application data and application metadata . Therefore the replication application may repeatedly keep on updating the replication storage device as the executing user application causes the generation of updated application data and updated application metadata .

Control may also proceed from block to block where the primary storage system fails to make the application data available to the executing user application or the executing user application fails. The unavailability of the application data to the executing user application may be for a plurality of reasons including failure of disks or other storage units in the primary storage device . The unavailability of the application data from the primary storage device may cause the executing user application not to make further progress in execution. The user application may also fail because of a failure of the first computational device .

A restoring application such as the restorer establishes at block communications with the replication storage device . The restoring application reads at block the copy of the selected application metadata .

The restoring application in combination with the higher level application restores at block the executing user application via the copy of the user application i.e. via the user application to continue execution with the restored selected metadata and the copy of application data . The restoration of the selected metadata causes the user application to continue execution with a lesser time period for waiting in comparison to situations where no application metadata corresponding to the user application is replicated to the replication storage device . The user application i.e. that continues execution already expects the application data to be in the replication storage device so the restoring application does not have to read the copy of application data .

Therefore illustrates certain embodiments in which an application can replicate application metadata to a replication storage device . In the event of a system failure the replicated application metadata can be used to recover from a failure in a lesser period of time in comparison to a situation where no replication is performed of the application metadata.

In certain embodiments the restorer and the replicator may be on same or different computational devices. For example in certain embodiments the replicator may be present in the first computational device and the restorer may be present in the second computational device as shown in . In such a case the restorer would restore the replicated metadata to the second computational device for recovery from a failure.

In certain embodiments the replicator and the restorer may be implemented by creating a container class that holds all the relevant metadata that is replicated. This container class may be enhanced to automatically replicate all metadata in to the replication storage device in the event of a data update. In certain other embodiments a user can select which parts of the metadata to replicate and the corresponding metadata classes may be replicated.

Alternatively in certain embodiments an application programming interface can be implemented for reading and writing metadata to internal memory. The application programming interface may replicate all necessary metadata to the replication storage device whenever a data update is carried out. In certain implements a ramdisk in the internal memory of the computational device may be created to store all the metadata. A ramdisk is a portion of memory that is allocated to be used as a partition i.e. the portion of memory comprising the ramdisk can store data in a manner similar to a hard disk drive. The access to this ramdisk memory may be via a ramdisk device driver that also synchronously replicates all writes to ramdisk to the replication storage device .

In certain embodiments to provide for a faster recovery from a failure a high speed data link is provided to the replication storage device and the replication storage device is kept proximate to the second computational device that continues with the execution of the user application

In certain embodiments the replication storage device combines both the metadata and disk data updates into a single consistency group. As a result the replicated data and the replicated metadata may include all the necessary information to enable a recovery of a system within a recovery time objective. The data and the metadata are replicated in a consistent manner to the replication storage device especially for asynchronous replication schemes.

Certain embodiments allow the replication of entities other than just physical storage in a data replication solution. Products in the data replication industry that are capable of replicating physical disk volumes to a secondary storage site may have a low recovery point objective of the replicated data but may not have means to control the recovery time objective. Certain embodiments provide the capability to replicate nonphysical storage along with the physical storage. For instance replication of a server s internal memory or cache or data transfers that occur over a data line between two servers are replicated. Certain embodiments also maintain data consistency between the physical volumes and nonphysical volumes.

Certain embodiments provide a replication solution that is able to provide both replicated physical storage and replicated internal cache memory or state with the expectation that recovery from the replication storage device would take less time as a result of having additional replicated metadata. The recovery time objective of the data replication solution can therefore be attained in certain embodiments.

The described techniques may be implemented as a method apparatus or article of manufacture involving software firmware micro code hardware and or any combination thereof. The term article of manufacture as used herein refers to program instructions code and or logic implemented in circuitry e.g. an integrated circuit chip Programmable Gate Array PGA ASIC etc. and or a computer readable medium e.g. magnetic storage medium such as hard disk drive floppy disk tape optical storage e.g. CD ROM DVD ROM optical disk etc. volatile and non volatile memory device e.g. Electrically Erasable Programmable Read Only Memory EEPROM Read Only Memory ROM Programmable Read Only Memory PROM Random Access Memory RAM Dynamic Random Access Memory DRAM Static Random Access Memory SRAM flash firmware programmable logic etc. . Code in the computer readable medium may be accessed and executed by a machine such as a processor. In certain embodiments the code in which embodiments are made may further be accessible through a transmission medium or from a file server via a network. In such cases the article of manufacture in which the code is implemented may comprise a transmission medium such as a network transmission line wireless transmission media signals propagating through space radio waves infrared signals etc. Of course those skilled in the art will recognize that many modifications may be made without departing from the scope of the embodiments and that the article of manufacture may comprise any information bearing medium known in the art. For example the article of manufacture comprises a storage medium having stored therein instructions that when executed by a machine results in operations being performed.

Certain embodiments may be directed to a method for deploying computing instruction by a person or automated processing integrating computer readable code into a computing system wherein the code in combination with the computing system is enabled to perform the operations of the described embodiments.

At least certain of the operations of may be performed in parallel as well as sequentially. In alternative embodiments certain of the operations may be performed in a different order modified or removed.

Furthermore many of the software and hardware components have been described in separate modules for purposes of illustration. Such components may be integrated into a fewer number of components or divided into a larger number of components. Additionally certain operations described as performed by a specific component may be performed by other components.

The data structures and components shown or referred to in are described as having specific types of information. In alternative embodiments the data structures and components may be structured differently and have fewer more or different fields or different functions than those shown or referred to in the figures. Therefore the foregoing description of the embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching.

