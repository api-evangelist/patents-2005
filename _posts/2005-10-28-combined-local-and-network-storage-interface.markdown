---

title: Combined local and network storage interface
abstract: Firmware for the common data storage interface assigns a unique identifier that classifies an I/O request as a local or remote networked I/O request and adds the I/O request to a common stack for local and remote networked data storage elements. When an I/O request is removed from the stack, the unique identifier is used to identify the I/O request as a local or remote networked I/O request. Local I/O requests are executed via a local bus such as PCI, or SCSI. Remote networked I/O requests require a connection to one or more remote networked storage elements via a network. Memory space in a cache may be allocated for both local or remote networked I/O requests. DMA transfer may be employed for both local and remote networked I/O requests. Both local and remote networked I/O requests are executed using the same firmware and the same data interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08433770&OS=08433770&RS=08433770
owner: Broadcom Corporation
number: 08433770
owner_city: Irvine
owner_country: US
publication_date: 20051028
---
This application claims priority to U.S. Provisional Application. No. 60 703 500 filed Jul. 29 2005 entitled A COMBINED LOCAL AND NETWORK STORAGE INTERFACE and which is incorporated by reference herein in its entirety.

This application is related to U.S. application Ser. No. 11 260 250 entitled A COMBINED LOCAL AND NETWORK STORAGE INTERFACE filed concurrently herewith and incorporated by reference herein in its entirety.

The disclosed invention generally relates to data storage and more specifically to an interface for local and network data storage.

In the field of information technology the terms storage or memory refer to media that retain data for some interval of time possibly even after electrical power to the computer is turned off. In a business or personal computer system storage often takes the form of either a hard disk random access memory RAM or cache memory. A hard disk stores the user s files and programs even if the computer is turned off and has a large capacity. RAM is used to store information such as programs and data temporarily while the computer is using them. RAM can be accessed at very high speeds which makes it suitable for applications however RAM used for these purposes is typically volatile and all information in it is lost when the computer is turned off. Cache memory is often built into the microprocessor hard drives or other devices providing high speed dedicated memory to minimize repeated access to slower storage devices.

There are many applications particularly in a business environment where there are needs beyond what can be fulfilled by a single hard disk regardless of its size performance or quality level. Many businesses can t afford to have their systems go down for even an hour in the event of a disk failure. They need large storage subsystems with capacities in the terabytes. And they want to be able to insulate themselves from hardware or software failures to any extent possible. Some people working with multimedia files need fast data transfer exceeding the speeds current drives can deliver without spending a fortune on specialty drives. These situations require that the traditional one hard disk per system model be set aside and a new system employed. One popular technique is known as Redundant Arrays of Inexpensive or Independent Disks or RAID. See D. Patterson G. Gibson and R. Katz. A Case for Redundant Array of Inexpensive Disks RAID Proceedings of ACM SIGMOD 88 pages 109 116 June 1988.

Data can also be stored in storage systems over a network. This option may be attractive due to spatial and or financial constraints involved with implementing a dedicated storage system for each individual in a group or to facilitate sharing of data among members of a group. Sharing storage usually simplifies storage administration and adds flexibility since cables and storage devices do not have to be physically moved to move storage from one server to another.

Currently computer system I O boards have any of a local storage controller interface such as Advanced Technology Attachment ATA Integrated Drive Electronics IDE Serial ATA SATA Small Computer System Interface SCSI RAID Serial Attached SCSI SAS or Enhanced IDE EIDE etc. to access local storage or a network interface such as 10 100 Mbps network cards or gigabit Ethernet network cards to access network storage via network storage protocols such as internet Small Computer System Interface iSCSI or Fibre Channel FC . As distinct interfaces the hardware cards and software interfaces are managed separately by the operating system OS and the user interacts with each associated storage system individually. However distinct local and remote networked storage units do not provide the same functionality or capabilities that can be delivered by a single local storage unit. The inventors have found that there is a need for improved data storage interfaces.

A common data storage interface for local and remote networked storage is implemented via a method system and computer program product. The data storage interface is accessible by an operating system and data is transmitted from an application running under the operating system to the data storage interface and selectively stored using a single data storage interface to access both local and remote networked storage locations.

Firmware for the common data storage interface assigns a unique identifier that classifies an I O request as a local or remote networked I O request and adds the I O request to a common stack for local and remote networked data storage elements. When an I O request is removed from the stack the unique identifier is used to identify the I O request as a local or remote networked I O request. Local I O requests are executed via a local bus such as PCI or SCSI. Remote networked I O requests require a connection to one or more remote networked storage elements via a network. Memory space in a cache may be allocated for both local or remote networked I O requests. DMA transfer may be employed for both local and remote networked I O requests. Both local and remote networked I O requests are executed using the same firmware and the same data interface.

Additional features and advantages of the invention will be set forth in the description which follows and in part will be apparent from the description or may be learned by practice of the invention.

It is to be understood that both the foregoing summary and the following detailed description are exemplary and explanatory and are intended to provide further explanation of the invention as claimed. The summary and detailed description are not intended to limit the scope of the claimed invention in any way.

The present invention will now be described with reference to the accompanying drawings. In the drawings like reference numbers may indicate identical or functionally similar elements. Additionally the left most digit s of a reference number may identify the drawing in which the reference number first appears.

While the present invention is described herein with reference to illustrative embodiments for particular applications it should be understood that the invention is not limited thereto. Those skilled in the art with access to the teachings provided herein will recognize additional modifications applications and embodiments within the scope thereof and additional fields in which the invention would be of significant utility.

This specification discloses one or more embodiments that incorporate the features of this invention. The embodiment s described and references in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment s described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic.

Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is understood that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

The present invention will be described in terms of several embodiments applicable to a generic interface for local and network storage. It will be understood that the essential generic interface concepts disclosed herein are applicable to a wide range of designs and can be applied to applications having varied purposes. Thus although the invention will be disclosed and described using a generic interface application as an example the scope of the invention is not in any way limited to this field.

I O generally refers to transferring data or control signals between the CPU and a peripheral device. Every transfer is an output from one device and an input into another. I O may be considered as a collection of interfaces that different functional units of an information processing system use to communicate with each other or to transfer data. Inputs are the signals received by the unit and outputs are the signals sent from it.

The CPU and main memory i.e. memory that the CPU can read and write to directly with individual instructions and any movement of information between the CPU and main memory for example to or from a disk drive is also considered I O.

Any request for data transfer between storage devices is also referred to as an I O request. An I O request from an application to store or retrieve data from a local or remote networked storage element may be in the form of a command packet incorporating variables necessary for data transfer.

 Local storage elements refers to storage elements that are local to the user in the sense that a network connection such as a modem network interface card or other remote communication link is not required to access these storage elements. An I O request that requires data to be transferred to or from a local storage element is referred to as a local I O request . Common local storage elements include but are not limited to local IDE and SCSI drives. Another common method for local storage is the use of IDE or SCSI drives in a RAID configuration. The fundamental structure of RAID is the array. A RAID array is a collection of drives that is configured formatted and managed in a particular way. The number of drives in the array and the way that data is split between them is what determines the RAID level the capacity of the array and its overall performance and data protection characteristics. A number of RAID levels are known. These include JBOD which stands for Just a Bunch of Drives. RAID or striping provides the highest performance but no data redundancy. Data in the array is striped i.e. distributed across several physical drives. RAID or mirroring mirrors the data stored in one physical drive to another. RAIDor n way mirroring mirrors the data stored in one hard drive to several hard drives. RAID is also known as RAID 0 1 or striped mirror sets. This array type combines mirrors and stripe sets. RAIDstripes multiple n way mirror sets. RAID also known as a stripe with parity stripes data as well as parity across all drives in the array. RAID is also known as striped RAID sets. Parity information is interspersed across each RAID set in the array.

 Network storage remote storage or remote networked storage elements refers to data storage elements that are accessed via a remote communication link such as a local wide area or public area network link. An I O request that requires data to be transferred to or from a network storage element via a network is referred to as a remote networked I O request . Network storage elements store data remote to the user and provide access via a network access protocol. Network storage elements may include but are not limited to IDE or SCSI drives or a combination of IDE and SCSI drives in a RAID configuration that has to be accessed over a network. Different protocols are used to access different types of network storage. These protocols include but are not limited to any combination of iSCSI Server Message Block SMB Network File System NFS Common Internet File System CIFS Inter network Packet Exchange IPX and Sequenced Packet Exchange SPX . Network storage types include but are not limited to Storage Area Networks SANs Network attached Storage NAS Internet SCSI iSCSI and ATA over Ethernet AOE .

SANs are normally built on an infrastructure specially designed to handle storage communications. SANs provide faster and more reliable access than higher level protocols such as NAS. The most common SAN technology is Fibre Channel networking with the SCSI command set. A typical Fibre Channel SAN is made up of a number of fibre channel switches which are connected together to form a fabric or network. An alternative and more recent SAN protocol is iSCSI which uses the same SCSI command set over Transmission Control Protocol TCP Internet Protocol IP and typically Ethernet. Connected to the SAN will be one or more servers and one or more disk arrays tape libraries or other storage devices. In the case of a Fibre Channel SAN the servers would use special Fibre Channel host bus adapters HBAs and optical fiber. The AOE protocol embeds the ATA or IDE protocol inside of raw Ethernet frames. While a raw Ethernet protocol like AOE cannot be routed over a network like iSCSI it does provide a simple discovery model with fairly low overhead. iSCSI SANs typically use Ethernet network interface cards or special TCP Offload Engine TOE cards.

Network attached storage NAS systems are generally computing storage devices that can be accessed over a computer network rather than directly being connected to the computer via a computer bus . This enables multiple users to share the same storage space at once and often minimizes overhead by centrally managing hard disks. Network storage systems usually contain one or more hard disks often arranged into logical RAID arrays. NAS is an alternative to a specialized storage area network SAN where devices communicate using the block based SCSI protocol over dedicated Fibre Channel or IP networks. NAS devices are often connected to a shared general purpose local area network reducing cost overhead while also reducing access speed. The protocol used with NAS is a file based protocol such as Network File System NFS or Microsoft s Common Internet File System CIFS .

When the OS or an application wants to access a hard disk drive it typically employs hardware drivers and system BIOS Basic Input Output System services. The system BIOS provides basic input and output routines for communicating between the software and the peripherals such as the keyboard monitor and disk drive.

At the simplest level an operating system manages hardware and software resources provides an Application Programming Interface API and other system services. In a desktop computer the hardware and software resources may include but are not limited to a processor memory disk space etc. On some cell phones PDAs and other mobile computing devices that also run an OS they include the keypad the screen the address book the phone dialer the battery and the network connection. The OS provides a stable and consistent way for applications to deal with the hardware without having to know all the details of the hardware by providing an API. APIs allow a software developer to write an application on one computer that is portable to another computer even with different hardware and software configurations on the two machines. Operating systems can be either real time operating systems RTOS used to control machinery scientific instruments and industrial systems single user single task operating systems designed to manage the computer so that one user can effectively do one thing at a time single user multi tasking operating systems that most people use on their desktop and laptop computers and multi user operating systems that allow many different users to take advantage of the computer s resources simultaneously.

Computer software or simply software refers to one or more computer programs stored in a storage element and executed to perform a desired function. Program software performs the function of the program it implements either by directly providing instructions to the computer hardware or by serving as input to another piece of software.

Application software is a subclass of computer software that employs the capabilities of a computer directly to a task that a user wishes to perform. This is in contrast with system software which involves integrating a computer s various capabilities. Typical examples of application software include but are not limited to word processors spreadsheets video games media players etc. Applications are typically separate from the operating system though they are often tailored for specific platforms. User written software tailors systems to meet the users specific needs. User software includes but is not limited to spreadsheet templates word processor macros scientific simulations graphics and animation scripts.

A cache is used to speed up data transfer and may be either temporary or permanent memory. Memory and disk caches are common in computer systems and are used to speed up instruction execution data update and retrieval. These temporary caches serve as staging areas and their contents are constantly changing.

A memory cache or CPU cache is a memory bank that bridges main memory and the CPU. It is faster than main memory and allows instructions to be executed and data to be read and written at higher speeds.

Instructions and data are usually transferred from main memory to the cache in blocks. A level 1 L1 cache is a memory bank built into the CPU chip. A level 2 L2 cache is a secondary staging area that provides data to the L1 cache. L2 cache may be built into the CPU chip reside on a separate chip in a multi chip package module or be a separate bank of chips on the motherboard.

A disk cache is a section of main memory or memory on the disk controller board that bridges the disk drive and the CPU. When the disk is read usually a larger block of data is copied into the cache than is immediately required. If subsequent reads find the data already stored in the cache there is no need to retrieve it from the disk which is slower to access. If the cache is used for writing data are queued up at high speed and then written to disk during idle machine cycles by the caching program. Disk caches are usually just a part of main memory which is usually made up of common dynamic RAM DRAM chips whereas memory caches usually use higher speed static RAM SRAM chips.

For the purpose of this application a cache can be located on either a local or remote networked storage element on a controller card such as a RAID controller the CPU or any other suitable media.

DMA allows certain hardware subsystems within a computer to access system memory for reading and or writing independently of the CPU or a local processor. Many hardware systems use DMA including but not limited to disk drive controllers RAID controller cards graphics cards network cards and sound cards.

DMA allows devices of different speeds to communicate without subjecting the CPU to a massive interrupt load. Without a DMA controller the CPU would have to copy each piece of data from the source to one of its registers and then write it back again to the new location. During this time the CPU would be unavailable for other tasks.

A DMA transfer usually copies a block of memory from one device to another. While the CPU may initiate a data transfer the transfer itself is performed by the DMA controller. A typical example is moving a block of memory from external memory such as a disk drive to faster internal memory or over a network to internal on chip memory such as an L1 or L2 cache a disk cache or memory on a RAID controller card. Such an operation does not stall the processor which as a result can be scheduled to perform other tasks.

 Scatter gather DMA allows the transfer of data to multiple memory areas in a single DMA transaction. It is equivalent to the chaining together of multiple simple DMA requests. This method allows off load of multiple I O interrupts and data copy tasks from the CPU or local processor.

Remote Direct Memory Access RDMA is a concept whereby two or more computers communicate via DMA directly from the main memory of one system to the main memory of another. As there is no CPU cache or context switching overhead needed to perform the transfer and transfers can continue in parallel with other system operations this is particularly useful in applications where high throughput low latency networking is needed such as in parallel clusters.

In RDMA over TCP IP the TCP IP protocol is used to move the data over a commodity data networking technology such as Gigabit Ethernet. The RDMA implementation may have its TCP IP stack implemented on a RAID controller card or a network adapter card which would thus act as an I O processor taking up the load of RDMA processing.

Software based RDMA emulation allows interoperation between systems with dedicated RDMA hardware and those without. One example of this might be the use of an interface with a hardware equipped RDMA to serve a large number of clients with software emulated RDMA implementations.

Software applications run under the OS in computer system . OS provides an API and a gateway to system resources by providing services to applications at various levels. There are a variety of operating systems available for computers and these are selected depending on the type and power of the computer and the software to be executed. Examples of popular operating systems for personal computers include but are not limited to Microsoft Windows Apple Macintosh OS and Linux. The OS acts through hardware connections and appropriate interfaces to access a network interface such as internet interface which provides connectivity to a local or wide area network such as the internet . OS also acts through appropriate hardware and interfaces to access network storage interface that provides access to network storage elements via network . OS is also operatively connected to access local storage interface that provides access to local storage elements . The internet is accessed independently of network via internet interface .

When an application needs to store data it accesses a service provided by OS and requests storage of the data either in local storage elements or network storage elements via the network or local storage interface as appropriate.

Most computer systems have either a local storage interface such as SATA IDE RAID etc. and associated software and or a network storage interface such as iSCSI 10 100 Mbps or gigabit Ethernet network cards and associated software to access local or network storage elements .

As distinct interfaces these are managed separately by the OS and applications . The inventors have found a novel way to present the user applications and OS with a combined data storage interface.

Local storage and network storage shown in provide separate stacks and separate interfaces to OS and therefore appear for example to the OS as different devices. In a Microsoft Windows system this separate interface structure is normally manifested in the representation of the local storage and network storage by different drive letters for example local storage may be seen by the operating system as the C drive and network storage may be seen as the D drive.

The storage configuration presented in does not facilitate mirroring between RAID arrays on local storage elements and RAID arrays drives or files on network storage elements nor can it readily boot from files stored on network storage elements .

In various embodiments of the invention an improved apparatus and method for an interface to access local and network storage elements provides a single data storage interface that virtually combines multiple storage units local and remote into a single virtual storage unit. Instead of seeing several different disk drives on local and remotely networked systems and accessing them as separate devices these storage units are presented to the OS as a single storage unit. This structure makes multiple storage units whether local or remote invisible to the operating system storage service so that they appear to be a single device to the applications and the end user. This single storage entity can perform any and all the functions of a local storage unit even though some of the storage locations may be accessed over a network. One way to create a virtual single storage entity is as part of a RAID array that includes local and network storage elements . The user can view the multiple storage units both local and remote during configuration through software provided for that purpose.

In another aspect of the invention network booting and low level device mirroring to network servers is possible and can be done invisibly to the OS . A unified storage interface may be presented by using a single memory stack for accessing data on local and remote networked storage elements . For example a modified RAID stack may be employed. The stack determines if a memory access is to a local or remote networked storage device using a unique identifier associated with an I O request. In this example the RAID stack is aware of both local and remote storage topologies via the unique identifier and accesses the required storage location upon request from a host. Another aspect of the invention allows loading of software onto remote storage and executing the software from the remote location.

Software firmware or drivers for a combined interface can run on a system processor an auxiliary processor mounted on a motherboard or on a local processor mounted on a local network storage interface card. The common interface is capable of using appropriate network protocol s to access storage devices over a network . it is the firmware that presents a single storage stack to OS and applications for accessing or storing data in local and remote networked storage elements . The firmware may run on the combined interface or independently on the system controller. In a software only embodiment firmware running on a processor alone without any specialized hardware might be used to provide a virtual unified storage interface to the OS and application .

Data transfer may be initiated by the combined interface while actual data transfer is performed using a DMA or RDMA controller. The DMA or RDMA controllers may be located on the hardware or software portion of the combined interface on the local or remote networked storage device controllers or on other suitable media.

Memory or cache data space may or may not be allocated to buffer the data that is to be transferred to a local or remote networked storage location .

A management application with a GUI may be used to configure the local and network storage elements . On system startup the combined interface firmware enumerates local and network storage elements e.g. disk drives and presents this information to the management application. The user can then selectively arrange the enumerated drives in a desired configuration. For example the user can virtually combine selected local and network drives into a RAID array or configure network drives as a RAID array and manage local drives individually. In another example the user may choose to increase available storage space by adding drives from remote network storage through the management application. The management application also allows the user to set the system to boot up from either a network or a local drive. The management application also allows for authentication procedures when accessing remote networked devices. The management application may also allow remote mirroring of data. A simpler management application runs at boot up and allows the user to configure local and network storage .

Common interface presents a single storage stack to OS . To end users and particularly to applications and OS both local storage elements and network storage elements will thus appear as a single storage unit.

In step the firmware receives an I O request via OS from a host which may be application . In other embodiments the I O request may originate from another hardware or software element internal or external to computer system .

In step a unique identifier is assigned to the I O request. This unique identifier specifies whether the I O request is for data transfer to or from a local or remote networked storage element . The unique ID may include information such as whether it is a read or write operation the block number to read from or write to and size of the data to be transferred. For remote networked I O requests the unique identifier may also specify the location of the one or more remote networked storage elements protocol and password that may be required to access these. After assigning a unique identifier the I O request is added to the common storage stack for local and remote networked I O requests.

In step an I O request is removed from the common storage stack and the unique identifier assigned to it is used to determine if its is a local or remote networked I O request.

In step the O request identified as a local I O request is allocated space in a memory or cache to enable data transfer between applications and remote networked storage elements . The amount of space to be allocated in the cache may be determined by obtaining data transfer size from the unique identifier.

In step data is transferred to or from a local storage element over a PCI SCSI or other local storage element bus. In some embodiments the data transfer to or from local storage elements may be performed by a DMA controller. The firmware may initiate the data transfer by giving the location and data size to a DMA controller and having the DMA controller complete the data transfer to or from the allocated memory space in step and the local storage element.

In step the I O request identified as a remote networked I O request is allocated space in memory or a cache to enable data transfer between applications and remote networked storage elements . The amount of space to be allocated in the cache may be determined by obtaining data transfer size from the unique identifier.

In step after allocating space in the cache for the remote networked I O request a connection is made between computer system and one or more remote networked storage elements via network to enable data transfer between applications and remote networked storage elements . The data transfer between applications and remote networked storage elements is usually via temporary local buffer memory in computer system . The data transfer may occur via a cache buffer or any other form of memory in computer system and remote networked storage elements as directed by the firmware. The network connection reserves a bus such as a Fibre Channel bus for data transfer. In some embodiments the network connection and authentication process is executed by obtaining information from the unique identifier associated with the I O request.

In step after a network connection to one or more remote networked storage elements has been established data is transferred to or from remote networked storage element s . In an exemplary embodiment an ordered DMA or RDMA transfer between computer system and one or more remote networked storage elements is utilized to reduce processor load. The firmware may initiate the data transfer by giving the location and size of the data to a DMA or RDMA controller and have the controller complete the data transfer between the allocated memory space in step and the remote networked storage element . In an ordered data transfer the blocks to be transferred are in order. Generally remote data transfer requires blocks to be in order.

In step after either the local or remote networked I O request has been completed notification is sent to the OS and or the application to indicate that the I O request has been completed.

In some embodiments steps and which allocate memory space may be skipped by allocating space on the fly during data transfer. Generally space in a cache is allocated if data is to be transferred via DMA or RDMA. The cache may be bypassed for some non DMA data transfers and even for some DMA data transfers.

An I O request may require the data to be written to or read from multiple local and or remote networked storage elements . An example of this is a RAID array that includes local and remote network storage elements . Using unique identifiers and other information such as location protocol and passwords to be used for remote transfer such I O requests can also be executed.

The firmware used may be divided into three parts a top middle and bottom driver each of which may be run together or separately in different locations to perform the steps shown in . For example the top driver may run on the system CPU the middle driver on a local processor on a RAID controller card and the bottom driver on a disk drive controller. In some embodiments all three drivers may run on a local RAID controller processor. The top driver may be used to receive an I O request from OS and assign a unique identifier to the I O request. The middle driver may be used to perform the necessary computations to process the I O request such as XOR AND etc. The bottom driver may be used to generate the signals to communicate with the local and or remote network storage elements .

The common stack used to store local and remote networked I O requests may use a Last In First Out LIFO or First In First Out FIFO algorithm to sort I O requests. The common stack may also use other algorithms to sort I O requests to optimize efficiency or to meet user and system requirements.

Network includes but is not limited to any combination of network architectures including the integrated services digital network ISDN the internet a local area network LAN a wide area network WAN a metropolitan area network MAN a wireless communications network asynchronous transfer mode ATM network personal area network PAN or a wireless LAN WLAN . The network topology for network includes but is not limited to any combination of a bus network star network ring network mesh network or star bus network.

Application includes but is not limited to any combination of platform software applications and or user written software. Platform software has the basic input output system often described as firmware rather than software device drivers an operating system and typically a graphical user interface which in total allow a user to interact with the computer and its peripherals associated equipment . Examples of application include office suites and video games.

The local and network storage elements can include but are not limited to bubble memory cache memory core memory also known as ferrite core memory core rope memory delay line memory holographic memory magnetic disk memory such as floppy disk hard disk magnetic drum magnetic tape magneto optical disk memory stick optical media PD CD R CD ROM CD RW DVD DVD RAM DVD RW Blu ray paper tape selectron tube semiconductor memory such as EPROM flash memory NVRAM RAM ROM VRAM WRAM thin film memory and other forms of memory that may be volatile non volatile mutable or immutable.

Embodiments of the invention may be implemented in hardware firmware software or any combination thereof. Embodiments of the invention may also be implemented as instructions stored on a machine readable medium which may be read and executed by one or more processors. A machine readable medium may include any mechanism for storing or transmitting information in a form readable by a machine e.g. a computing device . For example a machine readable medium may include read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices electrical optical acoustical or other forms of propagated signals e.g. carrier waves infrared signals digital signals etc. and others. Further firmware software routines instructions may be described herein as performing certain actions. However it should be appreciated that such descriptions are merely for convenience and that such actions in fact result from computing devices processors controllers or other devices executing the firmware software routines instructions etc.

The invention has been described for local and remote networked storage systems. The invention is not however limited to these example embodiments. Based on the description herein one skilled in the relevant art s will understand that the invention can be applied to combine only local and or only remote applications and create a common interface that is invisible to the OS application and or user.

The following description of a general purpose computer system is provided for completeness. The present invention can be implemented in hardware or as a combination of software and hardware. Consequently the invention may be implemented in the environment of a computer system or other processing system. An example of such a computer system is shown in . The computer system includes one or more processors such as processor . Processor can be a special purpose or a general purpose digital signal processor. The processor is connected to a communication infrastructure for example a bus or network . Various software implementations are described in terms of this exemplary computer system. After reading this description it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and or computer architectures.

Computer system also includes a main memory preferably random access memory RAM and may also include a secondary memory . The secondary memory may include for example a hard disk drive and or a RAID array and or a removable storage drive representing a floppy disk drive a magnetic tape drive an optical disk drive etc. The removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit represents a floppy disk magnetic tape optical disk etc. As will be appreciated the removable storage unit includes a computer usable storage medium having stored therein computer software and or data.

In alternative implementations secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include for example a removable storage unit and an interface . Examples of such means may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to computer system .

Computer system may also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Examples of communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card etc. Software and data transferred via communications interface are in the form of signals which may be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals are provided to communications interface via a communications path . Communications path carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link and other communications channels.

The terms computer program medium and computer usable medium are used herein to generally refer to media such as removable storage drive a hard disk installed in hard disk drive and signals . These computer program products are means for providing software to computer system .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable the computer system to implement the present invention as discussed herein. In particular the computer programs when executed enable the processor to implement the processes of the present invention. Where the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using raid array removable storage drive hard drive or communications interface .

In another embodiment features of the invention are implemented primarily in hardware using for example hardware components such as Application Specific Integrated Circuits ASICs and gate arrays. Implementation of a hardware state machine so as to perform the functions described herein will also be apparent to persons skilled in the relevant art s .

While various embodiments of the present invention have been described above it should be understood that they have been presented by way of example and not limitation. It will be apparent to persons skilled in the relevant art that various changes in form and detail can be made therein without departing from the spirit and scope of the invention.

The present invention has been described above with the aid of functional building blocks and method steps illustrating the performance of specified functions and relationships thereof The boundaries of these functional building blocks and method steps have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed. Any such alternate boundaries are thus within the scope and spirit of the claimed invention. One skilled in the art will recognize that these functional building blocks can be implemented by discrete components application specific integrated circuits processors executing appropriate software and the like or any combination thereof. Thus the breadth and scope of the present invention should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

