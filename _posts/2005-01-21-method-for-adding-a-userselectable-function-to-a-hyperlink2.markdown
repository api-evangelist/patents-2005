---

title: Method for adding a user-selectable function to a hyperlink
abstract: A multifunction hyperlink and method for providing an multifunction hyperlink are provided. This invention permits the user to interact with a hyperlink in a variety of ways without necessarily having to open and/or follow the hyperlink. This is accomplished by detecting the presence of a cursor near a hyperlink. After detecting the hyperlink, a toolbar is displayed containing one or more link functions that the user may select. In response to the users' selection of a particular link function, that link function would be performed without requiring any further action by the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09569555&OS=09569555&RS=09569555
owner: GOOGLE INC.
number: 09569555
owner_city: Mountain View
owner_country: US
publication_date: 20050121
---
The present application is a Continuation of U.S. application Ser. No. 10 503 205 which was the National Stage of International Application No. PCT US03 02876 filed Jan. 31 2003 which claims the benefit of U.S. Provisional Application No. 60 352 591 filed Jan. 31 2002. The present application is a Continuation in Part of U.S. application Ser. No. 09 847 999 filed May 4 2001 which is a Continuation in Part of U.S. application Ser. No. 09 594 786 filed Jun. 16 2000 which claims the benefit of U.S. Provisional Application No. 60 202 029 filed May 4 2000. U.S. application Ser. No. 09 847 999 claims the benefit of U.S. Provisional Application No. 60 277 279 filed Mar. 21 2001 U.S. Provisional Application No. 60 283 142 filed Apr. 12 2001 and U.S. Provisional Application No. 60 202 029 filed May 4 2000. The entire disclosures of U.S. application Ser. Nos. 09 847 999 and 09 594 786 and U.S. Provisional Application No. 60 202 029 are hereby incorporated by reference.

This invention relates to the field of hyperlinks contained in hypertext and computer applications utilizing and producing hypertext containing hyperlinks and more specifically relates to software that increases the function set of hyperlinks and produces hyperlinks with increased functionality.

The Internet is a fast growing and important communication medium. One integral and familiar aspect of utilizing the Internet is an application called a browser . This application by reading hypertext and other related programming code and displaying corresponding text and graphics allows virtually anyone interested in using the Internet to use this amazing tool easily and simply. One of the most used and familiar aspects of Internet browsers is the ability to click on a hyperlink in a hypertext environment and follow the link to additional hypertext. A hyperlink is a connection between an element in a hypertext document such as a word a phrase a symbol or an image and a different element in the document another document a file or a script. The user activates the link by clicking on the linked element which is usually underlined or in a color different from the rest of the document to indicate that the element is linked. Without hyperlinks the Internet could not be utilized by users with the ease simplicity and speed that it is today. Hyperlinks are an inextricable part of the Internet browsing experience and will be for the foreseeable future.

Hyperlinks are utilized to navigate through hypermedia. Hypermedia is the combination of text video graphic images sound hyperlinks and other elements in the form typical of web documents and interactive software media and games. Hyperlinks and hypertext have changed the way information is delivered and consumed by users. However due to the vast complexity of the Internet and or electronic documents and files giving users the constant ability to follow hyperlinks from one page to another while giving users great benefit often results in users losing their train of thought and getting lost in the billions of possible pages documents and or files available reducing their ability to extract the information they are looking for. For example lets say a user has delved deeply into a web site about automobiles. Usually each page is filled with hyperlinks offering the user other places to go related to cars some within the current web site some that will take the user to other related web sites. Now the user is faced with a decision. Which hyperlink to chose It s important because if he selects one that eventually takes him to a place he really wasn t interest in going it s often difficult to get back to the original page from which he left. While there are some ways to minimize this problem using modern browsers and opening additional windows there is no easy way to prevent the users from losing their train of thought or simply getting lost while clicking hyperlinks. This also translates to a waste of time and money for commercial users and energy for users and an often inefficient method of browsing the web.

Anyone that has followed the evolution of the Internet over the last five years knows that the Internet of 1996 bears little resemblance to the Internet of the year 2000. Today s Internet is bolder more graphical faster and largely multimedia based. As a result the user has more opportunity to become lost or removed from the web document he started his viewing with or a web document that arose in the middle of his researching. In addition some web documents may contain multiple hyperlinks that the user may wish to visit but is unable to efficiently achieve the desired outcome because the user is constantly transferred away from the current web document. As such there is a need for increased functionality in hypertext documents containing hyperlinks to allow a user to effectively and efficiently proceed through desired information and hyperlinks.

Accordingly the present invention provides methods and software which overcome one or more disadvantages of the prior art.

The present invention solves this problem by providing additional options upon designation of a hyperlink wherein at least one of the additional options has non linking functionality. One aspect of the present invention is a method of operating a computer system. The method comprises providing a visual display displaying digital content in a first window on the visual display the digital content including a hyperlink wherein the hyperlink comprises computer program code providing a graphical interface on the visual display that is operative to effectuate a designation of a hyperlink and visually generating a plurality of user selectable options on the visual display in response to the designation of the hyperlink wherein the user selectable options comprise at least one option with non linking functionality.

Another aspect of the present invention is a computer software program comprising computer executable instructions for altering or constructing hypertext documents containing hyperlinks wherein the hyperlink is encoded to have a plurality of user selectable options when displayed by a graphical user interface and wherein the user selectable options comprise at least one option with non linking functionality.

Still other advantages and novel features of the present invention will become apparent to those skilled in the art from the following detailed description which is simply by way of illustration various modes contemplated for carrying out the invention. As will be realized the invention is capable of other different obvious aspects all without departing from the invention. Accordingly the drawings and description are illustrative in nature and not restrictive.

Reference will now be made in detail to various embodiments of the invention examples of which are illustrated in the accompanying drawings wherein like numerals indicate similar elements throughout the views.

The software platform for developing a Multifunction Hyperlink MFHL is designed to enable web page designers and other users to create MFHL by use of a Graphic User Interface GUI that contains building block applets and graphics manipulation that enables building MFHL without prior program knowledge. The end results are Multifunction Hyperlinks represented most commonly but not limited to on the users computer screen in a graphical metaphor that is often referred to as a toolbar . This toolbar can be graphically represented in a variety of designs sizes and color schemes without reducing or enhancing the actual functionality of the Multifunction Hyperlink. Furthermore the Multifunction Hyperlink creation software is designed in a manner that allows individual web site designers to change the graphical look and feel of the Multifunction Hyperlink to closely match the colors and theme of their individual web sites or for any other reason without changing Multifunction Link functionality. This is to enable a Multifunction Hyperlink to seamlessly integrated into any web site without detracting from the user experience.

In one embodiment of the present invention a toolbar may be designed to appear when a user mouses over a hyperlink. Alternatively the toolbar may display with the page or the toolbar may appear when the cursor or pointer is in a predetermined area around the hyperlink. Preferably the toolbar is presented to the user instantly on mouse over or after the user keeps the mouse pointer on the hyperlink or banner ad for a predetermined time for example one to three seconds. In another embodiment of the present invention the toolset can also be added to the right mouse click menu. In a further embodiment a short time delay is added before displaying the toolbar which prevents the browser from becoming jumbled with too much information if the user simply desires to click through on any given hyperlink.

Once the toolbar is in view the user is presented with a number of options. At least one of the options comprises non linking functionality. Exemplary options allows the user to look at the content later rather than lose a train of thought.

In another embodiment of the present invention a software program enables users such as web designers to develop their additional user selectable options to be displayed on the toolbar. In addition the software program allows the user to select the desired appearance of the toolbar. The following paragraphs describe exemplary user selectable options that can be displayed on the toolbar for a designated hyperlink.

This feature takes a snapshot of the hyperlink including its link information capturing a copy of any hyperlink including a string graphic or banner advertisement may shrink graphics to 35 of their original size and may then dock it a function that attaches the graphic to the edge of the operating systems desktop to the edge of the computer screen. This now docked graphic can be moved to any location on the screen the user desires in order to take full advantage of viewable area. It has the capability to dock several hyperlinks text graphics or banners stacked on top of each other. Each of these docketed hyperlinks since they still contain all of their original hyperlink code information can be activated and clicked through at any given time by the user or deleted from the screen at any time. The system also enables the user to automatically delete these docked hyperlinks at time intervals that the user can select.

When this feature is selected from the toolbar the user only views a new item residing in the taskbar a graphical element used by operating systems to let users see which applications are currently running the desktop that references the web page connected to the hyperlink selected. This new item is actually a hypertext page corresponding to the chosen hyperlink so selecting this feature will enable users to view the page referenced by the hyperlink at any given time in the session the user chooses simply by clicking on the icon labeling it thus making this new page the active visible page on the desktop in the taskbar of the operating system in use.

This feature enables users to anchor the page they are currently visiting. This means the toolbar will store the current page s address in memory and attach this address to a small graphical element or icon which will dock on the edge of the computer screen which will be the user s anchor . Then the user can click through on a hyperlink explore anywhere on the Internet or other hyperlinked media they desire then when they are ready to return to the page of origination or anchor page they simply click on the anchor icon to be presented with the page that originally contained the hyperlink that began the exploration.

 Open the Hyperlinked Page in a New Browser Window at a Predetermined and or Smaller Size than the Original Window 

This feature enables users to click through on a hyperlink which will present the hypertext page referenced by the hyperlink in a new window. This new browser window can have a predetermined size which is configurable by the user or the web designer. This enables users to view the page referenced by the hyperlink while keeping the original web page visible in the background for instant re visiting.

This feature invisibly to the user saves the pages referenced by the hyperlink to the users hard drive for later viewing at the users discretion. In one embodiment the user is asked what folder or directory in which to store the hypertext page. In another embodiment the hypertext page is stored in a predetermined folder or directory. This is beneficial to any user but particularly to users with slow connections to a network. This feature enables users to see what the hyperlink would have presented to them while they were on line even if the user doesn t have a live network connection at the time of this later viewing because the hypertext pages are saved to the user s computer readable medium such as a hard drive.

In one embodiment the present invention may be provided through an application or subroutine running as part of or in concert with a browser. Alternatively in another embodiment a JAVA applet servlet script or embedded program can provide the code to generate the toolbar and user selectable options.

If the user does not desire to use any of the user selectable options then the user may either click on the hyperlink and follow that link or the user may move the cursor away from the link and the toolbar may be hidden. In either case the functional flow will terminate at end . With the toolbar displayed in block the user may select one of the user selectable options from the toolbar. Exemplary choices are illustrated in blocks and . Decision blocks and reflect the choices that a user may make in selecting an option. Decision block represents the user wanting to utilize one of the options to interact with the hyperlink. Decision block represents the user s desire to follow the selected link and decision block illustrates a user s desire to follow the selected link at a later time.

Decision block represents the user s desire to return to the selected link at a later time without losing their current train of thought or place on the current page. Three exemplary enhancements are presented for illustration in Blocks and . For example the user may select open new window minimized from the exemplary toolbar displayed in Block . This selection in Block causes a new browser window to be opened with the page associated with the selected link displayed in that browser window. When this browser window is opened in block the window automatically is minimized so that the user may continue to view the current page with a minimum of distraction. The minimized window however enables the user to quickly and easily access the selected hyperlink with a single click at a later time. While current browsers enable the user to perform a similar function by right clicking on the link however the user is required to manually minimize this browser window. Thus the present application enables the user to accomplish in a single click what might otherwise take three or more user actions. The more user actions taken by the user the greater the distraction from viewing the current page.

In one embodiment the icons and or snapshots are placed in a window or a box so that they are conveniently placed together. Additionally it may be desirable to integrate the check it later feature with the browser such that one of the menu items displayed and or available for display would be the check it later feature. This integration would provide an alternative method of saving the items selected by the user to check later. Thus when the user started the browser and selected the check it later menu item then a window with all the items selected for checking later could be displayed.

The third illustrated alternative is one where the user selects the view later off line link enhancement. When the user makes this selection in block the enhancement makes copies of the page s associated with the selected link and then saves them to hard drive or other storage location for later viewing off line. In essence the program downloads the hypertext page or pages associated with the selected link in the background while the user continues to view the current page and or follow additional links associated with the current page. The user may be able to select the number or levels of pages to be downloaded.

A user views a hypertext page containing at least one hyperlink on a web browser . The plug in contains instructions to display a toolbar on a mouse over event for the hyperlink object in block .

In another embodiment the program displays a toolbar if the user left the cursor in place near a designated hyperlink for at a set period of time illustrated by block . Alternatively the program may display a toolbar anytime the cursor is over a hyperlink. Upon detecting this occurrence the program may override the typical standard pre programmed mouse over event with the toolbar and associated options in block . Alternatively the plug in instructions may just detect the presence of the hyperlink based on the mouse over event and not override this event. Thereafter the toolbar selected by the programmer is displayed. The toolbar provides one method for the user to select the particular link enhancement that the user desires to utilize. The user may decide not to utilize any of the enhancements represented by blocks and and the plug in would end as illustrated by block .

When the user decides to select one of the user selectable options flow moves through that option s starting block for Open in a New Window for Open in New Window Minimized for Check it Later and for Anchor Current Page . illustrates four exemplary options that may be utilized. Block represents the user selecting the Open in New Window function. Thereafter the illustrated link enhancement uses Application Programming Interface API calls to open a new browser window and size it or place it so that it does not completely obliterate the view of the original browser window as illustrated in blocks and .

A second function entitled Open in New Window Minimized begins in block . The illustrated link enhancement uses API calls to open a new browser window in the minimized state so it shows up as an icon or is displayed on the system taskbar or toolbar .

The third illustrated function begins in Block . The check it later function in this implementation utilizes a satellite program to manage the hyperlinks that the user desires to save for later access. First the function checks to see if the Check Later satellite function is running. If the satellite function has not yet started then it is initiated. Thereafter the contents of the hyperlink tag are passed to the Check Later satellite via Object Linking and Embedding OLE or some other inter process communication scheme known to one skilled in the art in block . When the Check Later satellite receives a hyperlink tag for the first time the program creates a window to hold Check Later items in Block . Thereafter the satellite may determine if the contents of the hyperlink tag contains art and or text in decision . If the item is a text tag the program flow moves to block where a clickable label is created within the window created in block . If the item is an image tag the program flow moves to block where a clickable image is created within the window created in block . The information passed in provides everything necessary for the satellite to set up a click even handler in block which would launch the appropriate link in a new browser window when the user clicked on the saved hyperlink.

The function titled Anchor Current Page begins in block . In this implementation the satellite program approach has also been utilized. For this function the URL of the current page must be passed to the satellite as shown in block . This is all that the satellite needs to display an Anchor icon on the desktop in block and to set up a click event handler which would reopen the current page in a new browser window when the user click on the anchor icon as illustrated in block .

The hyperlink enhancement function may operate on a computer . Computer may be a personal computer PC or a server. Typically computer has a display keyboard and pointing device connected to CPU . Computer may be connected to a network that contains hyperlinked pages or may be a stand alone system.

The CPU typically contains a microprocessor and RAM . Some CPU s also have some form of mass storage for example a hard drive CDROM or DVD. The computer becomes a hyperlink enhancement device when the hyperlink enhancement function is executed. This device has a hyperlink detector and a display system . The display system may have a display controller and a display . The hyperlink detector may be formed from CPU or microprocessor running a hyperlink enhancement code function such as a browser plug in. When the detector detects the presence of a hyperlink near the location provided by cursor the detector sends a toolbar display signal to the display controller . Upon receipt of a toolbar display signal the display controller sends a signal to the display to display toolbar . The displayed toolbar containing at least one hyperlink enhancement that the user may select. Cursor may be a keyboard a mouse track bal or other pointing device .

This invention provides a platform for many enhancements to the current hyperlink. Several potential enhancements are outlined below. It is expected that these and other hyperlink enhancements could be programmed by a programmer of ordinary skill in the art given this disclosure.

 E mail more information . This feature would prompt for e mail address and allow advertisers to send more information to users who express interest in this way. This way a user can gather more information without necessarily having to follow the link.

 Statistical Information . This feature would allow advertisers to track statistics related to how how much when and under what circumstances their advertisements were being utilized.

 Sweepstakes Information . This feature would allow advertisers to add sweepstake entry information to the toolbar enabling users to enter the sweepstakes without losing their train of thought.

This Submit button the form calls a custom Java Server Page program which compiles all selected items into the text portion of an e mail message. The user is presented with a browser window containing another form with fields for entering their e mail address the address of the recipient the subject of the e mail and any additional message they might want to add. A Send button on the page submits this form to another Java Server Page program which sends the message via SMTP.

JavaScript subroutines are added to the Click it Later window when it is created which utilize DHTML to remove checked items when the user clicks on the Delete button.

JavaScript subroutines are added to the Click it Later window when it is created. When the user clicks on the Make Favorites button these programs utilize DHTML to retrieve the content of checked items and call the AddFavorite Windows API routine to allow the user to add each item to their Internet Explorer favorites.

The user may select a skin through any number of graphic user interfaces created by the programmer. An exemplary interface is illustrated in and B. The interface shown is accessed by selecting hyperlink shown on . Other methods of providing the user access to an interface are well known in the art. Interface provides the user the ability to select a skin from a group of skins provided by the programmer. Examples of large menu skins and are provided in . Similarly examples of small menu skins and are also provided in . Alternatively the user may select their own skin or image for both large and small menus using text boxes and respectively.

When the embodiment shown in is used in conjunction with a search engine to search a web site or the Internet the site owner or an advertiser may desire to inset a skin related to the search term entered. For example if a user searching the Internet used the search term realtor then a skin banner advertisement for a particular realty office or related web site could be displayed. If the user were searching a specific site for example a camera manufacturer and used the search term SLR then the skin could display an image of a single lens reflex camera manufactured sold by the camera manufacturer. Additionally the skin could change after a pre selected time period so that the manufacturer could display their entire SLR product line to the user as they reviewed the search results. Furthermore the skin could change to reflect the product referenced by or related to the link that the user s pointer was over. For example if the search results displayed links to product pages product reviews and or press releases then an image of the associated product could be displayed as the skin by correlating the product image skin with the link using a database. The display of an image related to the link could allow the user to quickly determine which links had the most interest.

In summary numerous benefits have been described with results from implying the concepts of the invention. The foregoing description of the exemplary embodiments of the invention has been prepared for the purposes of illustration and description. It is not intended to be exhausted or to limit the invention to the precise form disclosed. Obvious modifications and variations are possible in light of the above teaching. The embodiment was chosen and described in order to best illustrate the principals of its invention in its practical application to thereby enable one of ordinary skill to best utilize the invention of various embodiments and with various modifications as they are suited to the particular to which is contemplated. It is intended that the scope of the invention be defined by the claims appended hereto.

