---

title: Delivering voice portal services using an XML voice-enabled web server
abstract: An application server, configured for executing an application defined by XML documents for delivering voice portal services, accesses subscriber attributes from a standardized information database server (such as LDAP). The application server, upon receiving a request from a proxy browser serving a user, accesses the standardized database server to obtain attribute information for responding to the application request. The application server sends a request to a content server for media content based on the HTTP request and the attribute information. The application server generates an HTML page, for execution of the prescribed voice portal service application having XML tags configured for controlling delivery of the media content in an audible format, based on the HTTP request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08499024&OS=08499024&RS=08499024
owner: Cisco Technology, Inc.
number: 08499024
owner_city: San Jose
owner_country: US
publication_date: 20050503
---
This application is a continuation of application Ser. No. 09 608 188 filed Jun. 30 2000 now U.S. Pat. No. 6 912 691.

This application claims priority from provisional application No. 60 152 316 filed Sep. 3 1999 the disclosure of which is incorporated in its entirety herein by reference.

The present invention relates to delivering Voice Portal services to a software application designed for an extensible markup language XML enabled hypertext transport protocol HTTP framework.

The evolution of the public switched telephone network has resulted in a variety of voice applications and services that can be provided to individual subscribers and business subscribers. Such services include voice messaging systems that enable landline or wireless subscribers to record playback and forward voice mail messages. However the ability to provide enhanced services to subscribers of the public switched telephone network is directly affected by the limitations of the public switched telephone network. In particular the public switched telephone network operates according to a protocol that is specifically designed for the transport of voice signals hence any modifications necessary to provide enhanced services can only be done by switch vendors that have sufficient know how of the existing public switched telephone network infrastructure.

An open standards based Internet protocol IP network such as the World Wide Web the Internet or a corporate intranet provides client server type application services for clients by enabling the clients to request application services from remote servers using standardized protocols for example hypertext transport protocol HTTP . The web server application environment can include web server software such as Apache implemented on a computer system attached to the IP network. Web based applications are composed of HTML pages logic and database functions. In addition the web server may provide logging and monitoring capabilities.

In contrast to the public switched telephone network the open standards based IP network has enabled the proliferation of web based applications written by web application developers using ever increasing web development tools. Hence the ever increasing popularity of web applications and web development tools provides substantial resources for application developers to develop robust web applications in a relatively short time and an economical manner. However one important distinction between telephony based applications and web based applications is that telephony based applications are state aware whereas web based applications are stateless.

In particular telephony applications are state aware to ensure that prescribed operations between the telephony application servers and the user telephony devices occur in a prescribed sequence. For example operations such as call processing operations voicemail operations call forwarding etc. require that specific actions occur in a specific sequence to enable the multiple components of the public switched telephone network to complete the prescribed operations.

The web based applications running in the IP network however are state less and transient in nature and do not maintain application state because application state requires an interactive communication between the browser and back end database servers accessed by the browsers via a HTTP based web server. However an HTTP server provides asynchronous execution of HTML applications where the web applications in response to reception of a specific request in the form of a URL from a client instantiate a program configured for execution of the specific request send an HTML web page back to the client and terminate the program instance that executed the specific request. Storage of application state information in the form of a cookie is not practical because some users prefer not to enable cookies on their browser and because the passing of a large amount of state information as would normally be required for voice type applications between the browser and the web application would substantially reduce the bandwidth available for the client.

Commonly assigned copending application Ser. No. 09 480 485 filed Jan. 11 2000 entitled Application Server Configured for Dynamically Generating Web Pages for Voice Enabled Web Applications the disclosure of which is incorporated in its entirety herein by reference discloses an application server that executes a voice enabled web application by runtime execution of extensible markup language XML documents that define the voice enabled web application to be executed. The application server includes a runtime environment that establishes an efficient high speed connection to a web server. The application server in response to receiving a user request from a user accesses a selected XML page that defines at least a part of the voice application to be executed for the user. The XML page may describe any one of a user interface such as dynamic generation of a menu of options or a prompt for a password an application logic operation or a function capability such as generating a function call to an external resource. The application server then parses the XML page and executes the operation described by the XML page for example dynamically generating an HTML page having voice application control content or fetching another XML page to continue application processing. In addition the application server may access an XML page that stores application state information enabling the application server to be state aware relative to the user interaction. Hence the XML page which can be written using a conventional editor or word processor defines the application to be executed by the application server within the runtime environment enabling voice enabled web applications to be generated and executed without the necessity of programming language environments.

Hence web programmers can write voice enabled web applications using the teachings of the above incorporated application Ser. No. 09 480 485 by writing XML pages that specify respective voice application operations to be performed. The XML documents have a distinct feature of having tags that allow a web browser or other software to identify information as being a specific kind or type of information. Hence the XML documents define the application to be executed by the application server within the runtime environment enabling voice enabled web applications to be generated and executed without the necessity of programming language environments.

In the past when a user wanted to access content from the World Wide Web the user would employ a search engine. More recently various consolidated web services offer users consolidated access to information such as stock quotes news weather horoscopes etc. Many of these web portal services also offer individualized access to web content once a user indicates what information he or she is interested in accessing. Typically accessing web portal services requires a personal computer and a web browser so that the user can view the web content at his or her computer monitor. There is a need to be able to access an open standards based IP network such as the World Wide Web by a mobile device such as a portable telephone.

There is a need for an arrangement that enables users to access a scalable open standards based information system on an open standards based network such as an Internet Protocol IP network.

These and other needs are attained by the present invention where an application server configured for executing an application defined by XML documents for delivering voice portal services accesses subscriber attributes from a standardized information database server. The application server upon receiving a request from a browser serving the subscriber accesses the standardized database server to obtain attribute information for responding to the application request. The application server sends a request to a content server for media content based on the HTTP request and the attribute information. The application server generates an HTML page for execution of the prescribed voice portal service application having XML tags configured for controlling delivery of the media content in an audible format based on the HTTP request.

Another aspect of the present invention provides an application server including a hypertext transport protocol HTTP interface for receiving an HTTP request specifying execution of a prescribed voice portal application for a subscriber. The application server also includes an application runtime environment configured for dynamically generating in response to the HTTP request a hypertext markup language HTML document for execution of the prescribed voice portal service application having XML tags configured for controlling delivery of media content from a content server in an audible format based on the HTTP request and on accessing attribute information for the subscriber from an Internet Protocol IP based database server configured for storing subscriber attributes.

Additional advantages and novel features of the invention will be set forth in part in the description which follows and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the invention. The advantages of the present invention may be realized and attained by means of instrumentalities and combinations particularly pointed out in the appended claims.

As shown in each of the clients tiny clients skinny clients thin clients and fat clients are able to communicate via a single unified architecture that enables voice communications services between different clients regardless of whether the client actually has browser capabilities. Hence the fat client and the thin client are able to execute voice enabled web applications without any hardware modification or any modification to the actual browser rather the browsers in the clients and merely are provided with an executable voice resource configured for providing browser audio control described below.

The user devices and illustrated as a cordless telephone a fax machine having an attached telephone and an analog telephone are referred to herein as skinny clients defined as devices that are able to interface with a user to provide voice and or data services e.g. via a modem but cannot perform any control of the associated access subnetwork.

The wireless user devices and illustrated as a cellular telephone e.g. AMPS TDMA or CDMA a handheld computing device e.g. a 3 Com Palm Computing or Windows CE based handheld device and a pager are referred to as tiny clients. Tiny clients are distinguishable from skinny clients in that the tiny clients tend to have even less functionality in providing input and output interaction with a user rely exclusively on the executable application in an access subnetwork to initiate communications in addition tiny clients may not be able to send or receive audio signals such as voice signals at all.

Hence the skinny clients and and the tiny clients and access the unified voice messaging services in the network via a proxy browser configured for providing an IP and HTTP interface for the skinny clients and the tiny clients. In particular browsers operate by interpreting tags e.g. HTML tags within a web page supplied via an HTTP connection and presenting to a user media content information e.g. text graphics streaming video sound etc. based on the browser capabilities if a browser is unable to interpret a tag for example because the browser does not have the appropriate executable plug in resource then the browser typically will ignore the unknown tag. Hence the proxy browser can provide to each of the skinny clients and tiny clients the appropriate media content based on the capabilities of the corresponding client such that the cordless telephone and telephone would receive analog audio signals played by the proxy browser and no text information unless a display is available the fax machine and pager would only receive data text information and the cellular telephone and the handheld computing device would receive both voice and data information. Hence the proxy browser interfaces between the IP network and the respective local access devices for the skinny clients and the tiny clients to provide access to the network .

The proxy browser and the web browsers within the fat client and the thin client execute voice enabled web applications by sending data and requests to a web server and receiving hypertext markup language HTML web pages from the web server according to hypertext transport protocol HTTP . The web server serves as an interface between the browsers and an application server that provides an executable runtime environment for XML voice applications . For example the web server may access the application server across a common gateway interface CGI as illustrated in by issuing a function call across an application programming interface API or by requesting a published XML document or an audio file requested by one of the browsers or . The application server in response to receiving a request from the web server may either supply the requested information in the form of an HTML page having HTML tags for display of information by the browser and XML tags for audio control by a voice resource within the browser or may perform processing and return a calculated value to enable the browser or to perform additional processing.

The application server accesses selected stored XML application pages i.e. XML pages that define an application and in response generates new HTML pages having XML tags during runtime and supplies the generated HTML pages having XML tags to the web server . Since multiple transactions may need to occur between the browser or and the application server the application server is configured for storing for each existing user session a data record referred to as a brownie that identifies the state of the existing user session hence the application server can instantiate a procedure return the necessary data and terminate the procedure without the necessity of maintaining the instance running throughout the entire user session.

Hence the application server executes voice application operations from a stored XML document based on a transient application state where the application server terminates the application instance after outputting the generated XML media information to the browser or .

The voice application server is configured for accessing application programming interfaces APIs to external resources based on prescribed procedures that may be called during parsing of an XML tags in a selected XML document . As described below the application server issues function calls to APIs for accessing the external resources for prescribed operations enabling the deployment of a robust scalable unified messaging system having messaging operations distributed across multiple platforms. In particular the application server accesses subscriber profile information from an IP based database server according to LDAP protocol. The attribute information may include subscriber preferences and device capabilities e.g. whether the subscriber device has audio text and or image capabilities . As disclosed in commonly assigned co pending application Ser. No. 09 588 293 filed Jun. 7 2000 entitled Unified Messaging System Using Web Based Application Server For Management of Messages Using Standardized Servers the disclosure of which is incorporated in its entirety by reference the application server is configured for storing and retrieving messages in a standardized format e.g. e mail with binary encoded attachments in an IMAP messaging server . In addition the application server may issue function calls for a text to speech resource . Hence the voice application server may access the text to speech resource for converting an e mail message into a audio based message to be played for the user of the telephony device .

The voice application server is also configured for accessing data retrieval APIs . In particular from the APIs the application server can retrieve content such as XML web pages or structured e mail through a standard web server . Steaming audio news can be retrieved from a streaming information server . Furthermore content from standard HTML web pages can be retrieved using the APIs . Examples include My Yahoo type pages in which the subscriber has defined his or her profile information at the portal and a cookie is used to retrieve the information for the subscriber. A Common Gateway Interface CGI is provided for searching a database using a database query e.g. stock quote generated by the application server.

The application server also includes a runtime environment for execution of the parsed XML documents. As described above the runtime environment may selectively execute any one of user interface operation a logic operation or a procedure call as specified by the parsed XML document by executing a corresponding set of executable functions based on the rule set for the corresponding operation. In particular the application runtime environment includes a tag implementation module that implements the XML tags parsed by the XML parser . The tag implementation module performs relatively low level operations for example dynamically generating an XML menu page using executable functions specified by a menu rule set in response to detecting a menu tag performing a logical operation using executable functions specified by a logic rule set in response to a decision tag or fetching an audio .wav file in response to detecting a sound tag. Hence the tag implementation module implements the tag operations that are specified within the XML framework of the stored XML documents.

The application server also includes a set of libraries that may be implemented as dynamically linked libraries DLLs or application programming interface API libraries. The libraries and enable the runtime environment to implement the procedures as specified by the appropriate XML document. The application server may issue a function call to one of a plurality of IP protocol compliant remote resources or . Note that the mechanisms for accessing the services or should be established within the application server before use of XML documents that reference those services. Once the services or are established the application runtime environment can perform a function operation by using executable functions specified by a function call rule set.

The application server accesses news weather sports stock etc information using the data retrieval API to obtain content information from the steaming information server XML pages or structured content or the HTML web pages via the web server . The application server is configured for delivering web portal services by obtaining subscriber information from the LDAP directory . For example the subscriber information may include subscriber device capabilities and subscriber preferences such as a personalized menu of subjects for which the subscriber wishes to receive information. For example subscriber information may include subscriber preferences for subscriber information services such as My Yahoo normally stored for a browser using a cookie in this case the cookie may be stored in the LDAP directory or generated by the application server causing the API to output an HTTP GET request having the cookie for retrieval of the personalized content from the content server .

As illustrated in the application server receives in step an HTTP request from the proxy browser serving the subscriber. In response the application server accesses an XML document from the database in step and generates a new brownie or accesses an existing brownie in step to determine what web content the subscriber wishes to receive. The application server then accesses the subscriber attribute information in step from the LDAP directory for example subscriber identity subscriber status preferences and device capabilities. The application server also retrieves from the web server based on the subscriber attribute information obtained in step the XML pages structured content or the HTML pages through the API in step . The application server also may retrieve streaming information e.g. a URL from the information server to enable the browser to initiate transmission of a media stream from the server . The application server adds media content such as audio .wav files or URL s that point to the audio files to the accessed web pages containing the information and or converts accessed text based information into audio files using the text to speech resource in step . The application server then generates an HTML document having XML tags that specify parameters of reception of the media stream and the proxy browser plays the media stream for the subscriber. For non streaming information the application server generates an HTML document having XML tags that specify playing of the audio files in step and forwards the HTML document to the proxy browser for playing the files to the subscriber. The application server then updates and stores the brownie in step .

Hence the subscriber can receive via a telephone voice portal services. More detailed information can be obtained by use of menus such as To receive stock quotes press 1 to receive headline news press 2 and so on. Once the input is made the application server can generate a second HTML document having instructions to retrieve the detailed information requested. Further menus can be used by the subscriber to gain even more detailed information such as the price of a particular stock.

The XML document can include the subscriber s telephone number so that for example if a stock of interest reaches a certain price the application server can generate another HTML document with tags to instruct the proxy browser to cause a telephony device to call or page the subscriber.

According to the disclosed embodiment delivery of voice portal services may be deployed on a platform that is customizable scalable and built upon open standards such as Internet protocol. Users can access portal services via PC based browser or via a telephone and proxy browser.

While this invention has been described in connection with what is presently considered to be the most practical and preferred embodiment it is to be understood that the invention is not limited to the disclosed embodiments but on the contrary is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims.

