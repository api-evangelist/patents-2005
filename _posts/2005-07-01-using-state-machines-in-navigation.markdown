---

title: Using state machines in navigation
abstract: Navigating through pages of content. In aspects, a state machine is provided that simplifies navigating. The state machine allows multiple navigation services to work together in a hierarchical manner to obtain content. The state machine also provides a mechanism for stopping navigation and responding to errors.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07802176&OS=07802176&RS=07802176
owner: Microsoft Corporation
number: 07802176
owner_city: Redmond
owner_country: US
publication_date: 20050701
---
Many programs now allow a user to navigate from one page to another. A page may include content such as text that is quickly downloadable and also may include other content such as images that takes longer to download. Furthermore a user may request that a program stop navigating to a requested page and or errors may occur while navigating. As pages have become more complex the difficulty of efficiently and robustly navigating through pages of content has also become more complex.

Briefly aspects of the subject matter described herein relate to navigating through pages of content. In aspects a state machine is provided that simplifies navigating. The state machine allows multiple navigation services to work together in a hierarchical manner to obtain content. The state machine also provides a mechanism for stopping navigation and responding to errors.

This Summary is provided to briefly identify some aspects of the subject matter that is further described below in the Detailed Description. This Summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The phrase subject matter described herein refers to subject matter described in the Detailed Description unless the context clearly indicates otherwise. The term aspects should be read as one or more aspects . Identifying aspects of the subject matter described in the Detailed Description is not intended to identify key or essential features of the claimed subject matter.

Other aspects will become apparent from the following Detailed Description when taken in conjunction with the drawings in which 

Aspects of the subject matter described herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the subject matter described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microcontroller based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Aspects of the subject matter described herein may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures and so forth which perform particular tasks or implement particular abstract data types. Aspects of the subject matter described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing aspects of the subject matter described herein includes a general purpose computing device in the form of a computer . Components of the computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and nonvolatile media and removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers herein to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner a touch sensitive screen of a handheld PC or other writing tablet or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

An application may include multiple pages which may be displayed. Each page may include or be associated with content such as text images and the like. These pages may be linked together with hyperlinks or the like such that when a hyperlink is selected navigation occurs to the page referenced by the hyperlink. Furthermore a development framework may be provided which allows a developer or the like to create pages and link them together via hyperlinks. The developer may be able to define the pages using a markup language or the like. Using the markup language as input the framework may be able to locate content associated with the pages format the content into pages display the pages and allow navigation to occur between pages.

The navigation buttons and may allow a user to navigate to previously viewed content. For example if in the frame a user hyperlinked from a first page to a second page the user may use the backward navigation button to return to the first page. Afterwards the user may use the forward navigation button to return to the second page.

The window and each of the frames may display pages independently of each other. For example frame may display a page associated with stock prices while frame may display a page associated with a sport. In addition a user may navigate in one frame or window without affecting the content in the other frame.

In another embodiment the window and or frames may be dependent on each other. For example the frame may display a table of contents having hyperlinks while the frame may display pages referenced by the hyperlinks. Selecting a hyperlink in the frame may cause the frame to navigate to a page referenced by the hyperlink.

The grid the columns and and the text box may be non navigable elements. That is they may not include or reference code that allows them to navigate to other pages.

The navigation window may comprise an object that has navigation capabilities and is capable of displaying a window. With the appropriate elements an exemplary window that may be displayed by a navigation window is that represented in . The navigation window may include one or more application programming interfaces APIs which may be called to initiate or stop a navigation. The navigation window may also comprise a bookkeeping mechanism sometimes referred to as a journal that indicates a history of pages that have been displayed. The navigation window may display back and forward navigation buttons e.g. such as navigation buttons and of to allow navigation to previously viewed pages.

The frames correspond to navigable regions displayed in a window. A frame e.g. frame may be nested within another frame e.g. frame Q or within a navigation window e.g. navigation window . A user may navigate in a frame with or without affecting other areas displayed by the navigation window as described previously. In one embodiment a frame may act similar to an HTML IFrame.

The navigation window and the frames may be referred to as navigation containers. In this sense they may be thought of as containers in which a navigation may occur. In each container a user may navigate from one page or a portion thereof to another page or a portion thereof .

Typically frames are hosted by e.g. associated with a particular navigation window. For example in one embodiment the frames are hosted by the navigation window .

Each of the navigation services may provide an implementation that downloads pages that are being navigated to and that gives such pages to its associated navigable element. Each navigation service may be implemented as a class that exposes interfaces that allows navigation to begin or stop or to refresh navigated content. Each navigation service may also provide events that indicate when navigation is occurring when navigation has completed if an error has occurred when content is ready to be displayed and when loading of content is completed. Each navigation service may implement a state machine as described in more detail in conjunction with .

A navigation tree may be created from the navigable elements as represented by the dashed lines. The navigation service associated with each navigable element may have pointers to the navigation services associated with each of the element s navigable children elements and vice versa. This may be used to allow the navigation services to communicate with each other e.g. to indicate state changes stop navigation and so forth in a hierarchical manner.

Elements may comprise non navigable elements. For example the elements may comprise a column grid text box drop down list box combo box or any other element that does not navigate to another page.

While navigation has been described with respect to navigation windows and frames it will be recognized that other elements may be used without departing from the spirit or scope of the subject matter described herein. For example aspects described herein may also be applied to images.

One or more of the states may correspond to an event that is fired by each navigation service as it enters a state. Transitions between states may occur in response to an API called by a program e.g. Navigate or in response to something that happens as the navigation service attempts to navigate. For example a transition to the navigation error state may occur if an error occurs e.g. content is not found while in the navigating state or an error occurs in the wait for sub downloads state e.g. if one of a navigable element s navigable descendants in its navigation tree is unable to access content .

When a navigation service is instantiated by a navigable element the navigation service starts in the idle state . When a request to navigate to a page is received by a navigation service the navigation service transitions to the navigating state . In requesting to navigate to a page a program may pass a uniform resource identifier URI or the like to which to navigate.

Upon entering the navigating state the navigation service may fire a navigating event. This may be used to notify that the navigating state has been entered into by a particular navigation service. During the navigating state content from the URI or the like is obtained and used to create an object. When the object is provided with at least some of the content a callback e.g. OnContentReady occurs. Upon receiving the callback the navigating service transitions to the content ready state .

It will be recognized that obtaining content from a URI or the like may occur in stages. In some embodiments when enough content is obtained to aesthetically display something to a user the callback e.g. OnContentReady may occur. In entering the content ready state more content may need to be downloaded before the content is fully loaded. For example when navigating to content that comprises multiple pages after the first page is loaded the callback may be called. In other embodiments the timing of calling the callback may vary. In some embodiments all content may be downloaded before calling the callback. In other embodiments less than all the content may be downloaded before calling the callback.

Upon entering the content ready state the navigation service may fire a content ready event. After a content ready event handler returns the navigation service may transition into the navigated state .

Upon entering the navigated state the navigation service may fire a navigated event. After the navigated event handler returns the navigation service may transition into the wait for sub downloads state . Each time a navigation service associated with a navigable descendent element fires a load completed event the parent navigation service may self transition into the wait for sub downloads state . When all of the navigation services of the navigable descendent elements have fired their load completed events the parent navigation service transitions into the load completed state .

Upon entering the load completed state the navigation service may fire a load completed event. A navigation is fully complete when a navigation window and all of its navigable descendant elements e.g. frames of have completed downloading content. Similarly a frame e.g. frame has completed its navigation when it and all of its navigable descendent elements e.g. frame have completed downloading content e.g. load completed state . Each navigation service provides notification that it has entered the load completed state by firing a load completed event.

Via an API a program may request that navigation stop. For example a user may select a stop button on a browser or other program which may cause the browser or other program to send a stop request to the navigation service associated with the actively navigating e.g. window or frame element. When in any of the navigating state the content ready state the wait for sub downloads state and the navigation error state the navigation service may then transition to the stopped state and inform all navigation services associated with navigable descendent elements to stop navigating.

Upon entering the load stopped state the navigation service may fire a stopped event. After a navigation stopped event handler has returned the navigation service may then transition to the idle state .

During navigation an error may occur. For example when the navigation service fails to bind to a URI e.g. the URI does not exist an ISP fails or a network problem occurs an error may occur. When an error occurs while in the navigating state or the wait for sub downloads state the navigation service transitions to the navigation error state . If an error occurs in the navigating state this is an error associated with navigation service. If an error occurs while in the navigated state this is an error associated with one of the navigation services associated with navigable descendent elements.

From the navigation error state the navigation service may transition to the stopped state e.g. if a stop request is received or may transition to the idle state after a navigation error handler returns.

The navigation program may communicate e.g. via APIs with the graphics framework and the network services layer . The graphics framework may communicate with the navigation program and the network services layer .

The network services layer may include a web request component that is capable of communicating with the server .

In operation the navigation program may call an API of the navigation window or the frame and pass a URI that is associated with content that defines a user interface. The navigation window or the frame may forward the URI to the navigation service . The navigation service may then use the network services layer web request component to obtain the content associated with the URI. This content may reside on a local or remote server as represented by server .

After receiving all or some of the content the network service may pass the content to its associated network window or frame which then may render the content. The navigation program may request that the navigation window or frame stop navigating. In response the navigation window or frame forwards the request to the navigation service which may then take actions as described previously.

As can be seen from the foregoing detailed description aspects have been described for using state machines to navigate through pages of content. While aspects of the subject matter described herein are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit aspects of the claimed subject matter to the specific forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of various aspects of the subject matter described herein.

