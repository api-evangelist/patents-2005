---

title: System and method of transmitting data packets
abstract: A system and method of transmitting data packets. The system determines one or more system conditions of the server computer and modifies a process of transmitting the data packets from a server computer to a client computer, the modifying based at least in part upon the determined system conditions. The determined system conditions can include: (i) the number of forced processings of network events, (ii) the number of clients computers that are behind their scheduled delivery time, (iii) the number of client computers that have requested streamable data objects, (iv) the total byte count of the streamable data objects that have been requested by the client computers, (v) the number of the streamable data objects that have been requested by the client computers, (vi) the number of streamable data objects that are maintained by the streaming media server, and/or (vii) the actual transmission rate of the streaming media server with respect to the client computers. In one embodiment of the invention, the server computer aggregates data packets prior to transmitting the data packets to a client computer when the load of the server computer becomes high or extremely high.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07451228&OS=07451228&RS=07451228
owner: Realnetworks, Inc.
number: 07451228
owner_city: Seattle
owner_country: US
publication_date: 20050419
---
This is a continuation of U.S. patent application Ser. No. 09 454 870 filed on Dec. 3 1999 now U.S. Pat. No. 6 889 257 which is hereby incorporated by referenced in its entirety.

The field of the invention relates to transmitting data via a network. More particularly the invention relates to altering the transmission characteristics of a streaming media server based upon the occurrence of selected conditions.

Streaming media is a method of making audio video and other multimedia data available in real time over a network. illustrates a typical streaming media system. If the source of the streaming media is a live performance the performance is often recorded as a data signal by an input device such as for example a microphone or a camera . The input device then sends the data signal to an encoding system which converts the data signal into a digital form and compresses the digital signal into streamable data objects . The streamable data objects may be sent to a content creation station for editing or may alternatively be sent directly to a streaming media server . The content creation station includes content creation software such as video editing software that allows the user to modify the streamable data objects . The content creation station can also be used to independently create a streamable data objects . After being modified or created by the content creation station the streamable data objects may then be transmitted to the streaming media server .

Once the streamable data objects are located on the streaming media server the streamable data objects are made available for further distribution and presentation over a network such as the Internet to a number of client computers . One problem however related to transmitting streamable data objects over a network is that when the streamable media server may become overloaded number of client computers requesting the streamable data objects becomes too high. In that case the streamable media server is not able to transmit the data packets of the streamable data objects in a timely manner. During peak hours thousands of client computers can simultaneously request the transmission of selected ones of the streamable data objects . In such cases numerous of the client computers may have to wait in the middle of the presentation of the respective streamable data objects for the transmission of additional data packets thereby creating an unpleasant interruption for the user.

Therefore there is a need for a system and method that improves the presentation of streamable data objects to users. The system should determine the system conditions and modify the process of transmitting the data packets from the streaming media server to the client computers thereby improving the presentation of streamable data objects to users at the client computers .

The system and method of the present invention have several features no single one of which is solely responsible for its desirable attributes. Without limiting the scope of this invention as expressed by the claims that follow its more prominent features will now be discussed briefly. After considering this discussion and particularly after reading the section entitled Detailed Description of the Invention one will understand how the features of this invention provide a number of advantages over traditional streaming systems.

One embodiment of the invention comprises a method of transmitting a plurality of data packets from a server computer to at least one client computer the method comprising determining one or more system conditions of the server computer and modifying a process of transmitting the data packets from the server computer to the client computer the modifying based at least in part upon the determined system conditions.

Another embodiment of the invention comprises a server computer for transmitting data packets the server computer comprising a plurality of data packets and a server program for determining one or more system conditions and for modifying a process of transmitting the data packets from the server computer to a client computer the modifying based at least in part upon the determined system conditions.

Yet another embodiment of the invention comprises a system for transmitting data packets from a server computer to at least one client computer the system comprising means for determining one or more system conditions and means for modifying a process of transmitting the data packets from the server computer to the client computer the modifying based at least in part upon the determined system conditions.

Yet another embodiment of the invention comprises a system for aggregating data packets the system comprising a plurality of data packets that collectively comprise one or more streamable data objects and a server computer operably connected to a client computer via a network the server computer transmitting the data objects to the client computer the server computer periodically determining based upon the load of the server computer whether to aggregate one or more of the data packets into an aggregated data packet.

Yet another embodiment of the invention comprises a method of aggregating data packets the method comprising determining based upon the load of a server computer whether to aggregate one or more of the data packets into an aggregated data packet and transmitting the aggregated data packet to a client computer.

The following detailed description is directed to certain specific embodiments of the invention. However the invention can be embodied in a multitude of different ways as defined and covered by the claims.

Referring to an exemplary network configuration will be described. A user communicates with a computing environment which may include multiple streaming media servers not shown or a single streaming media server in a client server relationship on a computer network . In a client server environment the streaming media server includes a server program which communicates with the client computers .

The streaming media server and the client computers may each have one or more conventional general purpose single or multi chip microprocessors such as a Pentium processor a Pentium Pro processor a 8051 processor a MIPS processor a Power PC processor or an ALPHA processor. In addition the microprocessor may be any conventional special purpose microprocessor such as a digital signal processor or a graphics processor. Furthermore the streaming media server and the client computers may be desktop server portable hand held set top or any other desired type of configuration. Furthermore the streaming media server and the client computers each may be used in connection with various operating systems such as UNIX LINUX Disk Operating System DOS OS 2 Windows 3.X Windows 95 Windows 98 and Windows NT.

The streaming media server and the client computers may each include a network terminal equipped with a video display keyboard and pointing device. In one embodiment of network configuration one or more of the client computers includes a media player that is used to access the streaming media server .

For example a user of a client computer may utilize the media player to remotely access the server program using a keyboard and or pointing device and a visual display such as a monitor. It is noted that although only three client computers are shown in the network configuration can include hundreds of thousands of client computers and upwards. Furthermore it is noted that although one streaming media server is shown in the network configuration can include hundreds of thousands of streaming media servers and upwards.

The network may include any type of electronically connected group of computers including for instance the following networks a virtual private network a public Internet a private Internet a secure Internet a private network a public network a value added network an intranet and the like. In addition the connectivity to the network may be for example remote modem Ethernet IEEE 802.3 Token Ring IEEE 802.5 Fiber Distributed Datalink Interface FDDI or Asynchronous Transfer Mode ATM . The network may connect to the client computer for example by use of a modem or by use of a network interface card that resides in the client computers .

Devices other than the hardware configurations described above may be used to communicate with the streaming media server . For example such devices can include a portable personal computer with a modem or wireless connection interface a cable interface device connected to a visual display or a satellite dish connected to a satellite receiver and a television. For convenience of description each of the above hardware configurations are included within the definition of the client computers . Other ways of allowing communication between the user and the streaming media server are envisioned.

Further it is noted the streaming media server and the client computers may not necessarily be located in the same room building or complex. In fact the streaming media server and the client computers could each be located in different states or countries.

The server program comprises various modules each of the modules comprising various sub routines procedures definitional statements and macros. Each of the modules are typically separately compiled and linked into a single executable program. Thus the processes that are undergone by selected ones of the modules may be arbitrarily redistributed to one of the other modules combined together in a single module or made available in a shareable dynamic link library.

The server program transmits selected streamable data objects to selected client computers . The streamable data objects can be formatted according to any streaming data format and can include all or part of any type of media content such as a movie a picture a slide show music a broadcasting program headline information or stock quotes. Upon a request from a selected one of the client computers the server program transmits one or more data packets that collectively define the streamable data objects to the selected client computer so that the media player for the selected client computer can render the streamable data object to a user at the client computer. The server program can transmit the data packets using one of several network protocols including UDP IP TCP ATM or frame relay.

The server program may be written in any programming language such as C C BASIC Pascal Java and FORTRAN and ran under any of a wide variety of operating systems. C C BASIC Pascal Java and FORTRAN are industry standard programming languages for which many commercial compilers can be used to create executable code.

After starting at a step the streaming media server proceeds to a step . At the step the streaming media server processes one or more network events. In one embodiment of the invention the network events can include receiving a command to perform one of the following actions play one of the streamable media objects pause a presentation one of the streamable media objects seek to a selected location in one of the streamable media objects or re send a selected data packet. Furthermore the network events can include receiving a ping message from one of the client computers . It is noted that a ping message may be used by the client computers to indicate to the streaming media server that the client computers are still operational.

Next at a step the streaming media server determines one or more system conditions of the streaming media server . In one embodiment of the invention the occurrence of selected system conditions identifies for the streaming media server a need to adjust the process of transmitting the streamable media data objects to the client computers . For example the determined system conditions can include i the number of forced processings of network events described in further detail below with respect to decision step ii the number of client computers that are behind their scheduled delivery time iii the number of client computers that have requested streamable data objects iv the total byte count of the streamable data objects that have been requested by the client computers v the number of the streamable data objects that have been requested by the client computers vi the number of streamable data objects that are maintained by the streaming media server and or vii the actual transmission rate of the streaming media server with respect to the client computers .

If the streaming media server determines to modify the transmission process of the streamable data objects the streaming media server proceeds to a step . At the step the streaming media server modifies one or more of the transmission characteristics of the streaming media server . Examples of adjustable transmission characteristics can include the aggregation or non aggregation of one or more smaller sized data packets into a larger sized data packet increasing or decreasing the frequency of transmission of the data packets increasing or decreasing the size of the data packets when the data packets are initially prepared changing the network operating system call that is used to transmit and or receive the data packets for example from asynchronous to synchronous or vice versa increasing or decreasing the number of channels in the streaming media server and or changing the types of channels in the streaming media server . In one embodiment of the invention a channel is a network socket. Different types of channels can include various sockets under TCP IP or UDP.

Referring again to the decision step if the streaming media server determines not to modify the transmission process based upon the determined system conditions or alternatively after completion of step the streaming media server proceeds to a step wherein the streaming media server transmits selected data packets to the client computers . In one embodiment of the invention the streaming media server transmits selected packets according to a priority scheme. In this embodiment each of the data packets has an associated transmission deadline time. The transmission deadline time that is associated with the data packet indicates a point in time whereby the streaming media server should have transmitted the data packet to a respective one of the client computers . In one embodiment the streaming media server transmits each of the data packets having the highest priority according to the transmission deadline times that are respectively associated with the data packets.

Next the streaming media server proceeds to a decision step . At the decision step the streaming media server determines whether it has transmitted each of the data packets that are due according to the transmission deadline times that are respectively associated with each of the data packets. If the streaming media server determines that it has processed all of the data packets that are due the streaming media server returns to the step to process any new network events that have occurred.

Referring again to the decision step if the streaming media server determines that all of the data packets that are due have not been processed the streaming media server proceeds to a decision step .

At the decision step the streaming media server determines whether a time out threshold has been exceeded. It is noted that in periods of high load for the streaming media server the streaming media server will not be able to transmit all of the streamable data objects to the client computers in a timely manner. To prevent the streaming media server from occupying all of its time transmitting data the streaming media server employs a watch dog timer that informs the streaming media server when the streaming media server has been processing and transmitting outgoing data packets for a selected time interval. In one embodiment of the invention the selected time interval is about of a second. In another embodiment of the invention the selected time interval is between about of a second and about of a second. In yet another embodiment of the invention the selected time interval is between about of a second and about of a second.

Still referring to the decision step if the streaming media server determines that the time out threshold has not been exceeded the streaming media server returns to the step to process additional data packets. However if the streaming media server determines that the time out value threshold has been exceeded the streaming media server interrupts the transmission of the data packets that are due and returns to the step . It is noted that an interruption of the transmission of the data packets to process the network events is herein referred to as a forced processing of a network event. 

After starting at a step the streaming media server proceeds to a step wherein the streaming media server determines the processing percentage of the forced processings of network events that occur within the streaming media server . The processing percentage is defined as the number of the forced processings of network events that occur within the streaming media server divided by the total number of network events. It is noted that as the percentage of forced processings gets higher this indicates that the streaming media server is spending more of its time in transmitting data packets as opposed to other activities such as processing network events. Accordingly if the percentage of forced processings exceeds a processing threshold the streaming media server assumes that the server load is HIGH.

Moving to a step the streaming media server determines whether the percentage of forced processings of network events exceeds the processing threshold. It is noted that in one embodiment of the invention the processing threshold is about 70 . In another embodiment of the invention the processing threshold is between about 65 and about 75 . In yet another embodiment of the invention the processing threshold is between about 55 and about 95 .

If the streaming media server determines that the percentage of forced processings of network events exceeds the processing threshold the streaming media server determines that the load of the server is either HIGH or EXTREMELY HIGH. In this event the streaming media server then proceeds to a decision step to more particularly determine the server load. It is noted that in one embodiment the state of the load of the streaming media server is initially set to NORMAL.

At the decision step the streaming media server determines whether the percentage of client computers that are behind in their scheduled delivery time is greater than a scheduling threshold. The scheduling threshold is defined as the number of client computers that are behind in their scheduled delivery time divided by the total number of client computers that are being serviced. If the streaming media server determines that the percentage of client computers that are behind in their scheduled delivery time is greater than a scheduling percentage threshold the streaming media server proceeds to a step and the streaming media server determines that the state of the load of the streaming media server is EXTREMELY HIGH. The streaming media server then moves to an end step and the process flow continues at the decision step of .

Referring again to the decision step of if the streaming media server determines that the percentage of client computers that are behind in their scheduled delivery time is less than or equal to the scheduling percentage threshold the streaming media server proceeds to a step and the streaming media server determines that the state of the server load is HIGH. The process flow then continues to the end step discussed in further detail above .

Referring again to the decision step if the streaming media server determines that the percentage of forced processings of network events is less than or equal to the processing threshold the streaming media server proceeds to a decision step . At the decision step the streaming media server determines whether the streaming media server had been in a overload state at any point during a previous predefined duration. In one embodiment of the invention the predefined duration is about 5 minutes. In another embodiment of the invention the predefined duration is about between 4 and minutes and about 5 and minutes. In yet another embodiment of the invention the predefined duration is about between 1 and 8 minutes. Furthermore in one embodiment of the invention the streaming media server defines an overload state to include the states HIGH and EXTREMELY HIGH.

In the embodiment shown with respect to step the streaming media server maintains an overload state until the streaming media server has experienced a below threshold percentage of forced processings for the predefined duration.

If the streaming media server detects an overload state for the previous predefined duration the streaming media server determines that sufficient time has not yet passed to downgrade the status of the server load and the server proceeds to the end step discussed further above . However if the streaming media server was not in an overload state for the previous predefined duration the streaming media server proceeds to a step . At the step the streaming media server reduces the severity of the state of the server load. For example if the state of the server load is EXTREMELY HIGH the streaming media server can reduce the state of the server load to HIGH. Furthermore for example if the state of the server load is HIGH the streaming media server can reduce the load to NORMAL. The streaming media server then proceeds to the end step discussed in further detail above .

If the streaming media server determines that the load does not exceed the selected threshold the streaming media server proceeds to a step . At the step the streaming media server transmits a packet of the streaming media server to one of the client computers . The streaming media server then proceeds to an end step and process flow returns the decision step of .

Referring again to the decision step if the streaming media server determines that the server load exceeds the selected threshold the streaming media server proceeds to a step .

At the step the streaming media server aggregates one or more data packets into an aggregated data packet. In one embodiment of the invention the streaming media server selects each of the data packets that are due for transmission according to a requested transmission time that is associated with each of the packets.

Proceeding to a decision step the streaming media server determines whether the size of the aggregated data packet is greater than an aggregation threshold. The size of the aggregation threshold can either be predefined or alternatively dynamically determined. In one embodiment of the invention the size of the aggregation threshold is based upon the state of the load of the streaming media server as well as the actual delivery rate between the streaming media server and the client computer . In one embodiment of the invention the sizes of the aggregation thresholds are set forth below in Table 1.

As is shown in Table 1 depending on selected conditions the streaming media server aggregates data packets until the size of the aggregated data packet exceeds the minimum threshold without exceeding the maximum threshold. It is noted that if the size of the aggregated packet is below the minimum threshold but another packet cannot be added without exceeding the maximum threshold the streaming media server will not add the data packet to the aggregated data packet. Furthermore it is noted that the actual delivery rate is defined as the average of the total number of kilobytes per second being delivered by the streaming media server to the client computers .

In one embodiment of the invention the streaming media server does not generate an aggregated data packet whose size is greater than the maximum transmission unit MTU for the network configuration . The MTU is defined as the largest packet is that is transported by intermediary network devices. If a data packet is larger than the MTU the intermediary network devices partitions the data packet into multiple data packets each of an acceptable size. However as can be appreciated by one of ordinary skill in the art if a partitioned data packet is lost all of the other partitioned data packets are unusable by the client computer even if received. Accordingly in this embodiment the invention advantageously avoids that problem.

Still referring to the decision step if the streaming media server determines that the size of the aggregated data packet exceeds the selected threshold the streaming media server proceeds to a step . At the step the streaming media server transmits the aggregated data packet to respective ones of the client computers . The streaming media server then proceeds to the end step and process flow returns to the decision step of .

Referring again to the decision step of if the streaming media server determines that size of the aggregated packet is less than the threshold the streaming media server returns to the step to add another data packet to the aggregated data packet.

Advantageously the present invention allows for the modification of a process of transmitting data packets based upon the system conditions of the streaming media server. For example during periods of high or extreme load the streaming media server can aggregate data packets into an aggregated data packets. It is noted that the aggregating data packets into an aggregated data packet may reduce the quality of presentation for selected user data packet aggregation decreases the overall server load and increases the quality of the presentation of the streaming data objects to a majority of the client computers .

