---

title: Monitoring detection and removal of malfunctioning devices from an arbitrated loop
abstract: The detection, removal and reinsertion of possibly malfunctioning devices from an arbitrated loop is disclosed. When a new device is first connected to a storage switch and a loop is formed and begins initialization, a LOOP_DOWN event is sent to a processor and a loop down timer is started for each port in the loop. If initialization is successful, a LOOP_UP event is sent to the processor and the loop down timer is reset for each port in the loop. However, if one of the loop down timers times out, a problem occurred during the initialization. The port associated with the timed out timer is bypassed so that the devices in the remainder of the loop can continue trying to complete the initialization. The processor initiates a PTBI event on the bypassed device. If the bypassed device is operating properly, it is re-inserted back into the loop.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07469361&OS=07469361&RS=07469361
owner: Emulex Design & Manufacturing Corporation
number: 07469361
owner_city: Costa Mesa
owner_country: US
publication_date: 20050104
---
The present invention relates generally to the initialization of devices in an arbitrated loop and in particular embodiments to the monitoring detection removal and recovery of malfunctioning devices from an arbitrated loop during initialization.

Non blocking crossbar switches for storage systems storage switches are generally implemented in several configurations. In one configuration the storage switch is connected within an enclosure to an arbitrated loop of drives referred to as Just a Bunch Of Disks JBODs and the enclosure is referred to as a Switched Bunch Of Disks SBOD . In another configuration the storage switch is contained in an enclosure referred to as a root switch which connects externally to a number of JBODs. In yet another configuration a root switch is connected to SBODs in a fully switched architecture.

In any of these configurations when a device is first connected to a port on the storage switch all of the devices previously connected to that storage switch must be initialized. Note that a device as referred to herein includes but is not limited to disk drives host bus adapters HBAs and other Fibre Channel FC devices. For example illustrates an exemplary storage switch including ports and and a processor . It should be understood that a four port storage switch is illustrated herein for purposes of explanation only but that other commercially available storage switches may have a different number of ports. In the example of the storage switch is initially connected to devices and via the ports. When a new device is first connected to the storage switch at port its operation may be verified before it is inserted into the loop using a well known procedure referred to as Port Test Before Insert PTBI . If PTBI is enabled in the firmware being executed by the processor the processor performs a PTBI event upon the connection of the new device into the storage switch .

The PTBI event first instructs the storage switch to configure port in a loop back mode so that new device is essentially configured in an individual loop isolated from all other devices connected to the storage switch . Processor then sends a number of Loop Initialization Primitive LIP ordered sets a four byte sequence to new device to start an individual LIP cycle. This individual LIP cycle also results in the starting of a device monitor timer in processor . After the device monitor timer times out processor evaluates new device to determine if it is behaving properly or malfunctioning. At the physical layer new device can be identified as malfunctioning if cyclic redundancy check CRC errors were generated if there were ordered set OS errors or if there were bad transmission words. At the FC protocol level new device can be identified as malfunctioning if the new device does not return a start of frame SOF IDLE arbitrate ARB or end of frame EOF ordered set or if the new device does not return a close CLS ordered set which signifies the end of the individual LIP cycle . As long as new device is found to be malfunctioning PTBI events are repeatedly performed.

As illustrated in if the PTBI event indicates that new device is operating properly processor initiates another LIP cycle by sending out additional LIP ordered sets to new device . The purpose of this LIP cycle is to initialize both ends of the communication link by identifying all devices connected to the storage switch with a unique address and establish a common format for communications.

When the LIP cycle is started the storage switch sends a LOOP DOWN event associated with port to the processor and configures all ports in the storage switch connected to a device into a loop configuration . Note that because all of the devices are connected in a loop and all ports are involved in the initialization the transmission of data through the ports must stop during the LIP cycle.

After the at least three LIP ordered sets are received by the new device the LIP ordered sets are then propagated to device and the storage switch sends a LOOP DOWN event associated with port to the processor . The LIP ordered sets are then propagated to the next device and the process continues. In general the storage switch sends a LOOP DOWN event associated with each port in the loop to the processor as the LIP ordered sets are passed along to the next device in the loop.

The new device then sends out a Loop Initialization Select Master LISM frame to all devices in the loop one by one with the address worldwide name of the new device initially stored into the LISM frame . As other devices in the loop receive the LISM frame the address stored in the LISM frame is checked. If a device has a greater worldwide name lower number it replaces the address in the LISM frame with its own greater worldwide name. Eventually the LISM frame arrives back at the new device containing the greatest worldwide name of any of the devices in the loop . The device with the greatest worldwide name lowest number is designated as the loop initialization master LIM of the initialization phase. The new LIM device sends ARB f ordered sets around the loop to indicate that a master has been selected. From that point forward the device designated as the LIM sends out future initialization frames.

In the example of assume that device is designated as the LIM. The LIM then sends out a loop initialization fabric address LIFA frame to all devices in the loop one by one which ensures that if any device was fabric attached and had a fabric address it will retain that fabric address. In particular devices with fabric addresses receive the LIFA frame and can request that same fabric address by partially filling in the LIFA frame with their fabric address. As the LIFA frame makes its way around the loop the fabric addresses being reserved are stored in the LIFA frame so the same address cannot be assigned to two different devices. Note that every device on the loop must have a unique one byte Arbitrated Loop Protocol Address ALPA which can have 127 possible values. When the LIFA frame has made it all the way around the loop the LIM receives the LIFA frame signifying the end of the LIFA phase. The LIM then sends out a loop initialization previous address LIPA frame to all devices in the loop one by one which ensures that if any device had a previous address it would retain that previous address. In particular devices with previous addresses receive the LIPA frame and can request that same previous address by partially filling in the LIPA frame with their previous address. The LIM then sends out a loop initialization hardware address LIHA frame to all devices in the loop one by one which ensures that if any device had a hardware address e.g. hardcoded by dual in line package DIP switches it would retain that hardware address. In particular devices with hardware addresses receive the LIHA frame and can request that same hardware address by partially filling in the LIHA frame with their hardware address. The LIM then sends out a loop initialization software address LISA frame to all devices in the loop one by one which ensures that if any device had a software address it would retain that software address. In particular devices with software addresses receive the LISA frame and can request that same software address by partially filling in the LISA frame with their software address. Optionally the LIM then sends out a loop initialization report position LIRP frame to all devices in the loop one by one which is a frame that provides the address and a mapping of every device in the loop and a loop initialization loop position LILP frame which shows all devices in the loop . Each device on the loop adds their address to the LIRP frame in turn and the LILP frame repeats the completed LIRP frame so that everyone gets the same information about loop position.

If the operations described above are completed without errors indicating a successful initialization the LIM sends a CLS ordered set to all devices in the loop one by one. As the CLS ordered set propagates through each device and port in the loop the storage switch sends a LOOP UP event associated with each port to the processor . When the CLS ordered set has propagated all the way back to the LIM signifying the end of the LIP cycle the storage switch re configures those ports in the storage switch connected to a device for normal operation. After all ports are once again configured for normal operation data can flow again.

Because no data can flow during a LIP cycle it is desirable to minimize the amount of time that the devices are in a LIP cycle in order to maximize throughput. However problems may occur that prevent the LIP cycle from completing and sending out a CLS ordered set either indefinitely or for a predetermined amount of time. For example at a hardware level one of the devices may malfunction and not pass frames around the loop or may pass invalid frames. Furthermore because the storage switch may be partially implemented as a state machine errors in the state machine may occur. In addition at a system level there may be unresolvable contention between devices for the LIM in the LISM phase of the LIP cycle resulting in multiple LISMs being repeatedly sent a LISM storm without any resolution of who is the LIM. There may also be firmware incompatibilities between a device and a storage switch.

If the LIP cycle cannot run to completion as signified by a CLS ordered set the new device may repeatedly retransmit the LIP ordered set. This retransmission of the LIP ordered set may continue indefinitely. As long as no CLS ordered set is received it will appear that a LIP cycle is still in progress and the loop will not be able to resolve itself. The flow of data will remain blocked reducing throughput to zero.

The initialization problems described above may be difficult to isolate. It is possible that communications within the loop during the execution of a LIP cycle may be completely adhering to the FC specification and yet there still may be problems with initialization. Because the only manifestation of a problem LIP cycle is the lack of a CLS ordered set it is also impossible to determine where the failure occurred. In conventional storage switches one way to terminate a LIP cycle that has not run to completion with a CLS ordered set is to manually take the storage switch down and test each device individually using a PTBI operation until the malfunctioning device is located. Another alternative is to cycle power to the storage switch. The storage switch will then treat each device connected to it as a new device being inserted and will run a PTBI operation on each device.

Therefore there is a need to monitor detect and remove malfunctioning devices from an arbitrated loop on a per port basis without having to manually take the switch down and test each device individually until the malfunctioning device is located.

The present invention is directed to the monitoring detection and removal of possibly malfunctioning devices from an arbitrated loop on a per port basis and reinsertion of those devices into the loop should they be verified as operational or become operational again. Embodiments of the present invention may be implemented in hardware or incorporated in firmware in an application programming interface API that may be shipped with a storage switch provided separately on magnetic media or downloaded and is executed by a processor connected to the storage switch.

When a new device is first connected to a storage switch via a first port a processor performs a PTBI event. If the PTBI event indicates that the new device is operating properly the processor initiates a LIP cycle to the new device. Upon receiving a LIP ordered set at the first port the storage switch sends a LOOP DOWN event associated with the first port to the processor and configures the other ports in the storage switch into a loop configuration. The processor also starts a loop down timer for the LOOP DOWN event associated with the first port. The LIP ordered set is then propagated to another device in the loop. As the LIP ordered set propagates around the loop the storage switch sends a LOOP DOWN event to the processor for each device in the loop and the processor also starts a loop down timer for the LOOP DOWN event associated with each port in the loop.

A LISM frame is transmitted around the loop to determine the LIM. After the LIM has been identified the various frames e.g. LIFA LIPA LIHA LISA and optionally LIRP and LILP that comprise the LIP cycle are transmitted around the loop by the LIM and the various actions associated with those frames are performed.

If the operations described above are completed without errors indicating a successful initialization the LIM sends a CLS ordered set to all devices in the loop one by one. As the CLS ordered set propagates through each device and port in the loop the storage switch sends a LOOP UP event associated with each port to the processor and the loop down timer associated with each port is reset. When the CLS ordered set has propagated all the way back to the LIM signifying the end of the LIP cycle the storage switch re configures those ports in the storage switch connected to a device for normal operation. After all ports are once again configured for normal operation data can flow again.

However if a loop down timer associated with an individual port reaches its end count a timeout without having received a LOOP UP event this is an indication that a problem occurred during the LIP cycle and that a CLS ordered set has not yet been transmitted around the loop. If a loop down timer reaches its end count the device associated with that timer is bypassed so that the devices in the remainder of the loop can continue trying to complete the LIP cycle. A new smaller loop is formed by the remaining ports and their associated devices and the smaller loop continues with the LIP cycle in an attempt to complete the LIP cycle.

If the smaller loop still cannot complete the LIP cycle this is an indication that there is still a problem with at least one of the devices connected in the loop. When another loop down timer reaches its end count the device associated with that timer is bypassed a new even smaller loop is formed by the remaining ports and their associated devices and the even smaller loop continues with the LIP cycle in an attempt to complete the LIP cycle.

This process of loop down timer timeout and bypassing of devices continues one device at a time until the devices remaining in the loop are able complete the LIP cycle indicating that all malfunctioning devices have been removed from the loop. When this occurs a CLS ordered set propagates to all of the devices remaining in the loop a LOOP UP event is initiated for each device and the loop down timer for each device is reset.

Meanwhile after a device is bypassed and a predetermined amount of time passes as defined by a recovery wait timer the processor initiates a PTBI event on the port connected to the bypassed device. The PTBI event first instructs the storage switch to configure the port in a loop back mode. Processor then sends a LIP ordered set to the bypassed device to start an individual LIP cycle. This individual LIP cycle also results in the starting of a device monitor timer in the processor. After the device monitor timer times out the processor evaluates the bypassed device to determine if it is behaving properly or malfunctioning. As long as the bypassed device is found to be malfunctioning PTBI events are repeatedly performed. However if the bypassed device is found to be operating properly it is then re inserted back into the loop if the loop is still open. If the loop has closed meaning that the LIP cycle for the devices connected to the storage switch has completed then the device being re inserted is treated like any other device being attached to a storage switch i.e. a new LIP cycle for the device connected to the storage switch is initiated .

In the following description of preferred embodiments reference is made to the accompanying drawings that form a part hereof and in which is shown by way of illustration specific embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the preferred embodiments of the present invention.

Embodiments of the present invention are directed to the monitoring detection and removal of possibly malfunctioning devices from an arbitrated loop on a per port basis and reinsertion of those devices into the loop should they be verified as operational or become operational again. Embodiments of the present invention may be implemented in hardware or incorporated in firmware in an application programming interface API that may be shipped with a storage switch provided separately on magnetic media or downloaded and is executed by a processor connected to the storage switch.

As illustrated in if the PTBI event indicates that new device is operating properly processor initiates another LIP cycle by sending out LIP ordered sets to new device . Upon receiving at least three LIP ordered sets at port the storage switch sends a LOOP DOWN event associated with port to the processor and configures those ports in the storage switch connected to a device into a loop configuration . The processor also starts a loop down timer for the LOOP DOWN event associated with port . The LIP ordered sets are then propagated to device and the storage switch sends a LOOP DOWN event associated with port to the processor which also starts a loop down timer for the LOOP DOWN event associated with port . The LIP ordered sets are then propagated to the next device and the process continues. In general storage switch sends a LOOP DOWN event to the processor for each device in the loop and the processor also starts a loop down timer for the LOOP DOWN event associated with each port in the loop.

A LISM frame is transmitted around the loop to determine the LIM as described above. After the LIM has been identified the various frames e.g. LIFA LIPA LIHA LISA and optionally LIRP and LILP that comprise the LIP cycle are transmitted around the loop by the LIM and the various actions associated with those frames are performed.

If the operations described above are completed without errors indicating a successful initialization the LIM sends a CLS ordered set to all devices in the loop one by one. As the CLS ordered set propagates through each device and port in the loop the storage switch sends a LOOP UP event associated with each port to the processor and the loop down timer associated with each port is reset. When the CLS ordered set has propagated all the way back to the LIM signifying the end of the LIP cycle the storage switch re configures those ports in the storage switch connected to a device for normal operation. After all ports are once again configured for normal operation data can flow again.

However if a loop down timer associated with an individual port reaches its end count a timeout without having received a LOOP UP event this is an indication that a problem occurred during the LIP cycle and that a CLS ordered set has not yet been transmitted around the loop. It should be understood that a timeout does not necessarily mean that the device associated with that timer is malfunctioning. Nevertheless if the loop down timer reaches its end count the device associated with that timer is bypassed taken out of the loop by reconfiguration of the port associated with that device so that the devices in the remainder of the loop can continue trying to complete the LIP cycle. In the example of because new device initiated the LIP cycle the loop down timer associated with port was started first and that if there is a problem with initialization that loop down timer will reach the timeout condition before any other loop down timers in the loop . Thus if the loop down timer associated with port has a timeout first port is reconfigured so that device is bypassed. A new smaller loop is formed by ports and and their associated devices and the smaller loop continues with the LIP cycle in an attempt to complete the LIP cycle.

After the device is bypassed and a predetermined amount of time passes as defined by a recovery wait timer processor initiates a PTBI event on port . The PTBI event first instructs the storage switch to configure port in a loop back mode. Processor then sends a LIP ordered set to new device Q to start an individual LIP cycle. This individual LIP cycle also results in the starting of a device monitor timer in processor . After the device monitor timer times out processor evaluates new device to determine if it is behaving properly or malfunctioning. At the physical layer new device can be identified as malfunctioning if CRC errors were generated if there were OS errors or if there were bad transmission words. At the FC protocol level device can be identified as malfunctioning if the new device does not return a SOF IDLE ARB or EOF ordered set or if the new device does not return a CLS ordered set which signifies the end of the individual LIP cycle . As long as new device is found to be malfunctioning PTBI events are repeatedly performed. However if the device is found to be operating properly it is then re inserted back into the loop if the loop is still open. If the loop has closed meaning that the LIP cycle for the devices connected to the storage switch has completed then the device being re inserted is treated like any other device being attached to a storage switch i.e. a new LIP cycle for the device connected to the storage switch is initiated .

Meanwhile referring again to if one of the other devices in the smaller loop is malfunctioning then the smaller loop will still not be able to complete the LIP cycle and transmit a CLS ordered set. Because the loop down timer associated with port was started second it will be the next loop down timer to timeout. As illustrated in when this occurs port is reconfigured so that device is taken out of the loop in addition to device which was previously taken out of the loop. A new even smaller loop is formed by ports and and their associated devices and the even smaller loop continues with the LIP cycle in an attempt to complete the LIP cycle.

This process of loop down timer timeout and bypassing of devices continues one device at a time until the devices remaining in the loop are able complete the LIP cycle indicating that all malfunctioning devices have been removed from the loop. When this occurs a CLS ordered set propagates to all of the devices remaining in the loop a LOOP UP event is initiated for each device and the loop down timer for each device is reset.

In the example of assume that device is the malfunctioning device. After device is taken out of the loop and a recovery wait timer is started and times out a PTBI event is initiated where the storage switch sends a LIP ordered set to device individually to determine if device is the malfunctioning device or not. Because device is malfunctioning the individual LIP cycle will fail to complete by not returning a CLS ordered set within the time specified by a device monitor timer. When device fails the individual LIP cycle it is identified as a malfunctioning device and is not permitted to rejoin the loop. When a device fails an individual LIP cycle PTBIs may be run on that device repeatedly but as long as the LIP cycles continue to fail the device will not be permitted to rejoin the loop. Failing devices can be identified as bypass events. User applications may check the bypass events to determine which devices are malfunctioning. In addition lights can be made to blink identifying the malfunctioning devices.

Meanwhile as described above new device may eventually be found to be operating properly and if the even smaller loop is still open when new device is found to be operating properly new device will be added back into the loop as illustrated in . When new device is added back into the loop it is again treated like a new device and a PTBI event is executed as described above. If the PTBI event indicates that new device is operating properly a LIP cycle starts over again as described above but minus port . This time however because malfunctioning device has been taken out of the loop the loop will eventually be able to resolve itself complete the LIP cycle and transmit a CLS ordered set around the loop before any loop down timeouts occur causing the loop down timers to reset and the loop to close. If the even smaller loop has already closed when device is found to be operating properly then when device is added back in to storage switch no longer bypassed it is again treated like a new device and the process described above repeats.

Although the present invention has been fully described in connection with embodiments thereof with reference to the accompanying drawings it is to be noted that various changes and modifications will become apparent to those skilled in the art. Such changes and modifications are to be understood as being included within the scope of the present invention as defined by the appended claims.

