---

title: Computer systems management using mind map techniques
abstract: A method for computer systems management using mind map techniques comprises receiving a request to generate a graphical summarization of relationships of a particular entity associated with an information technology (IT) infrastructure with other entities associated with the infrastructure, and generating a graphical representation of the particular entity and its relationships as a mind map comprising a plurality of linked nodes. The network of nodes may include a primary node representing the particular entity, a first link from the primary node to a first sub-network of nodes representing a first relationship, and a second link from the primary node to a second sub-network of nodes representing a second relationship.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08364623&OS=08364623&RS=08364623
owner: Symantec Operating Corporation
number: 08364623
owner_city: Mountain View
owner_country: US
publication_date: 20050727
---
This application claims the benefit of U.S. provisional patent application Ser. No. 60 695 041 entitled COMPUTER SYSTEMS MANAGEMENT USING MIND MAP TECHNIQUES filed Jun. 29 2005.

This invention relates to computer systems and more particularly to computer systems management tools.

The complexity of managing computer systems has been increasing rapidly. Enterprise information technology IT infrastructures may include tens or hundreds of thousands of hardware and software entities such as computer servers workstations storage devices networking devices application software instances and the like. Mission critical enterprise applications may be distributed over a large number of computer servers and storage devices and may in some cases comprise multiple independent layers or tiers provided by different vendors. Even applications intended for single users e.g. intended for execution on a single desktop or laptop computer may incorporate components from multiple vendors and may rely on numerous hardware and software devices. Typically different hardware and or software vendors whose products need to be managed within the IT infrastructure implement their own custom approaches to the presentation of status and the detection diagnosis and resolution of problems and errors. In aggregate the stream of raw detailed status or error related data that may be generated in even a medium sized IT infrastructure will eventually become too large for effective analysis. As a result of the numbers and diversity of the entities involved even the basic systems management task of monitoring the status of hardware and software entities within an IT infrastructure and responding efficiently to unexpected situations such as errors or failures has become progressively more difficult and expensive over time. More complex systems management tasks such as providing desired quality of service e.g. based on service level agreements tailored to individual IT customers or groups have become even harder to accomplish efficiently and effectively.

The problem of effectively distilling information about IT infrastructure entities into a useful form is not restricted to a single group of users such as IT administrators. A number of different groups of users of an enterprise IT environment may be interested in viewing useful information about the IT environment where the definition of usefulness may vary from group to group and sometimes from individual to individual. For example executive level managers may wish to view information on the IT infrastructure in a way that illustrates return on investment and or organizational responsibility e.g. to answer questions like How much additional revenue has been generated as a result of the expansion of our data center in France or Which laboratory or test site is responsible for the software testing of Product X on which we have received N critical customer complaints from our Platinum level customers over the last three months . IT administrative staff may be interested in information that relates more directly to anticipating and or responding to operational hardware and software problems such as answers to questions like When are we likely to run out of storage space for database application D based on the current rate of storage space usage or How many tape devices should we devote to backup of critical data from data center C . Engineering or support staff may be interested in details related to their specific tasks e.g. to answer questions like Where can I get instructions on installing database management system S on operating system O or What is the set of backup related tasks I need to complete before the planned release date of software product P from development organization V to system test organization T . Each group or individual may prefer to manage their tasks using customized graphical views of useful relationships between various entities associated with IT infrastructures.

Traditional graphical techniques for summarizing systems management data have typically not been effective in meeting the diverse requirements of various groups of consumers of IT infrastructure information. For example tree or list views are typically limited to representing containment or parent child relationships and may not work well when more than one type of relationship is to be represented. In addition in some tree views where each parent child link in a long chain of parent child relationships may have to be individually traversed a large number of clicks or expand tree operations may have to be performed before information of interest is obtained. Other techniques such as various versions of Unified Modeling Language UML diagams or Entity Relationship E R diagrams may require users to learn a complex set of rules standards or underlying theoretical principles and may not be capable of easily representing arbitrary relationships or generating custom graphical representations that may be personalized by each individual user.

Various embodiments of methods and systems for computer systems management using mind map techniques are disclosed. According to one embodiment a method comprises receiving a request to generate a graphical summarization of relationships of a particular entity associated with an information technology IT infrastructure with other entities associated with the infrastructure and generating a graphical representation of the particular entity and its relationships as a mind map comprising a plurality of linked nodes. The network of nodes may include a primary node representing the particular entity which may typically be centrally located within a display of the mind map a first link from the primary node to a first sub network of nodes representing a first relationship and a second link from the primary node to a second sub network of nodes representing a second relationship. A wide variety of entities may be represented by the nodes of a mind map include physical entities e.g. hardware devices such as computer servers and storage devices software e.g. applications organizational entities e.g. departments or geographical regions where an enterprise or company may operate tasks to be performed by a user etc. Any type of relationship that is deemed useful by a user may be represented by the links of the mind map. For example mind maps may be used to represent non containment relationships i.e. one or more of the relationships represented may not be strictly hierarchical parent child relationships in some embodiments. Summary information on the entities represented by a sub network may also be displayed in a mind map in some embodiments for example for a sub network representing computer servers the total number of servers that are currently operational as well as the number that are currently unavailable may be included in the summary. In addition in some embodiments a systems management tool may provide an interface allowing a user to perform one or more actions associated with an entity represented by a node of a mind map such as restarting a failed server. Thus mind maps may provide a highly flexible easy to use interface for viewing and performing systems management related actions on interrelated entities associated with IT infrastructures.

According to one embodiment the method may include receiving the request for the graphical summarization from a user and selecting at least some of the entities and or relationships displayed in the mind map based on authorization privileges associated with the user. For example IT administrators may be allowed to view detailed information on various entities represented in a mind map and to perform various systems management actions such as initiating failover of an application or a server while business users may be provided with less detailed information and may not be permitted to perform actions that could potentially result in inadvertent service downtime or data loss. In some embodiments users may be allowed to specify certain attributes of entities represented in a sub network that are to be summarized and a summarization technique to be used e.g. whether an event count is to be displayed in the summary or an average value of some metric over a specified period etc. . A region that includes summarized information obtained in accordance with the user specification may be displayed within the mind map.

According to another embodiment the method may include obtaining information relating the particular entity to other entities from one or more databases and regenerating the mind map in response to a change in the information in the databases. That is the mind map including summary regions may be dynamically and or automatically refreshed or redrawn when the underlying information in one or more databases changes. In some embodiments the method may include providing an interface such as a hypertext link associated with a particular node of the mind map and in response to input received via the interface generating a new mind map with the particular node as the primary node. In other embodiments the method may include providing a different interface such as a double click of a mouse associated with a particular node to regenerate the mind map with the particular node as the primary node.

In one embodiment the method may include providing an interface allowing a user to customize a version of the mind map e.g. by adding a representation of a new relationship and or additional nodes. The customized version of the mind map may be displayed during the current session of user interaction and metadata indicative of the customized version e.g. the coordinates of various nodes within a display area and or information describing how data for the mind map may be obtained from one or more databases may be stored in a persistent database. During a subsequent session of user interaction the metadata may be retrieved from the database and the customized version automatically displayed to the user e.g. without an explicit request from the user for the customized display .

While the invention is susceptible to various modifications and alternative forms specific embodiments are shown by way of example in the drawings and are herein described in detail. It should be understood however that drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

The term mind map is used herein to denote a graphical representation or view of a particular entity and its relationships to other entities as a network of nodes including a primary node representing the particular entity and one or more sub networks of nodes linked to the primary node where each of the sub networks represents a particular relationship between the particular entity and one or more other entities. Any type of relationship that is deemed useful by a user of a mind map may be represented in the mind map for example some relationships represented in a mind map e.g. a relationship between a particular server and an organizational structure of an enterprise may not represent containment relationships. The term containment relationship as used herein refers to a hierarchical relationship in which of each pair of related entities one entity is logically and or physically contained within the other. For example the relationship of a parent directory in a file system to the set of files and child directories contained within the parent directory is a containment relationship. Containment relationships may also be referred to as parent child relationships herein and relationships that are not containment relationships may be termed non containment relationships herein. In the context of computer systems management of an IT infrastructure a user may in general associate any desired type of logical and or physical entity with the IT infrastructure for the purposes of his or her own work and may define an arbitrary relationship between any given entity and any other entities associated with the IT environment to be represented by a mind map . Summary information on groups of related nodes may also be displayed in the mind map as described in further detail below. Examples of various entities that may be represented in a mind map include the IT infrastructure itself i.e. a single entity may be used to represent the entire I T infrastructure grouped entities such as computer servers A networks B storage devices C workstations D user groups E support organizations F data centers G applications H individual entities of each of the grouped entities user tasks grouped or individual documents or notes geographical locations sites enclosures buildings rooms or organizational groups departments divisions groups etc. The ability to define arbitrary relationships between entities of interest and view the relationships and summarized information on groups of entities via a simple intuitive graphical interface may provide a powerful technique to simplify various aspects of computer systems management especially for large IT environments.

The particular entity whose relationships to other entities are the focus of a given mind map may be termed the primary node of the mind map herein and may typically be located centrally within the graphical representation or display of the mind map. The links that represent the relationships of the particular entity to other entities which may be represented by other nodes of the mind map may typically radiate outwards from the primary node in the graphical representation as shown in . . As described below in further detail mind maps may support a variety of features in various embodiments such as dynamically updatable summarization features based on user specified criteria the ability to dynamically regenerate or redraw the mind map with a different node as the primary node the ability to generate a new mind map via an interface such as a hypertext link customization features etc. In one embodiment a mind map may also include one or more graphical interfaces to initiate actions related to systems management e.g. a menu driven interface to initiate failover in response to a detection of a failed application or server or to generate an e mail message to a support organization. In addition in some embodiments graphical attributes such as icons of various types color width of lines representing links fonts etc. may be used as indicators of various properties of the entities and relationships being modeled to help summarize status information etc. For example a color coding scheme may be implemented in one embodiment where the color of a particular node indicates a summary of the operational status of the entity represented by the node e.g. the node may be shown as green if there are no known errors or warnings associated with the entity yellow if at least one warning but no errors associated with the entity have been detected and red if at least one error associated with the entity has been detected.

In order to generate a mind map systems management tool may be configured to retrieve information on the entities and their relationships from one or more databases which may include formally managed databases such as equipment inventory databases human resources HR databases etc. as well as more informal or user specific databases such as personal databases A or N in some embodiments. In one embodiment systems management tool may periodically or on demand retrieve the information from the databases and dynamically refresh or regenerate one or more mind maps when the information changes. For certain kinds of information displayed in a mind map e.g. personal notes of a user or other data that may not be persistently stored anywhere else systems management tool may simply save the information in metadata associated with the mind map and may not have to access any external database. In one embodiment before displaying certain types of information associated with one or more entities and or relationships that may be represented in a mind map systems management tool may be configured to verify that a particular user has sufficient authorization privileges to view and or act on the information. That is only those nodes and links that represent entities and relationships that a particular user is authorized to view or interact with may be displayed to that user. Such authorization verification which may be performed for example by the systems management tool communicating with an authorization engine may be particularly important in embodiments where the mind map includes interfaces to initiate systems management actions in response to various conditions or when the mind map might include information that a particular user is not authorized to see.

In another embodiment systems management tool may save metadata indicative of customized or personalized versions of a mind map e.g. links and nodes representing entities and relationships that may be of interest to a single user preferred coordinates colors font sizes and other attributes of various nodes and links within a display region information identifying databases from which data on entities and relationships may be gathered personal notes etc. for one or more users in a mind map metadata database . When a particular user starts a new session of interactions with the systems management tool previously saved metadata for that particular user may be retrieved from the mind map metadata database and the customized or personalized version of the mind map may be displayed to the user. In some embodiments information about user interaction sessions with the systems management tool may be stored in mind map metadata database even for users who do not personalize their mind maps e.g. cached authorization information for various users or timestamps indicating when a user last viewed a mind map may be stored in the mind map metadata database . Such information may be used for example to more efficiently perform authorization checks before displaying a mind map or to determine whether to refresh a mind map based on how long ago the mind map was last refreshed.

In some embodiments one or more nodes of a mind map such as aggregate nodes A and D in may be displayed with an associated status summary region e.g. status summary region A for node A and status summary region D for node D. A status summary region may include context specific summarized information on the entity or entities represented by the corresponding node. The summarized information may be derived for example by aggregating values for one or more attributes from nodes that are linked directly or indirectly to the aggregate node where the linked nodes may be reached by expanding the aggregate node as described below . Not all the nodes in the summarized portion of the mind map may share the same set of summarized attributes in some embodiments for example a first summarized attribute may be shared by all the nodes a second summarized attributes may be shared by a subset of nodes etc. In some embodiments some nodes in the summarized portion may include attributes one or more attributes that are not summarized. In for example status summary region A indicates that a node A represents a total of 4.5 TB terabytes of storage of which 3.6 TB is currently allocated and 1.5 TB is currently mirrored using two way mirroring. Each node linked to node A for which may include a storage size attribute from which the total storage may be derived but only some nodes may include an attribute related to minoring in some embodiments. Also status summary region D indicates that 427 servers are currently up functioning normally while three servers are down in a failed state and two servers are unreachable i.e. systems management tool is unable to determine the operational state of two servers . In one embodiment the status summary information displayed in status summary regions may be dynamically updated. In some embodiments different portions of the mind map may be updated at different times and an indication or timestamp of when the information was last obtained or summarized may also be optionally displayed within the status summary region. For example a timestamp field may be added to a status summary region or to one or more of the summary information fields as desired. In other embodiments the entire mind map may be updated dynamically in real time or the entire mind map may be dynamically updated in a single transaction so different timestamps for different regions may not be needed. In embodiments where one or more timestamps may be available for display mind map users may be allowed to disable or enable timestamp display as desired e.g. by setting user preferences or by dynamically disabling timestamps using a graphical input interface . The specific types of information displayed in a status summary region may be customizable by a user in some embodiments.

Systems management tool may be configured to provide one or more interfaces to allow a user to issue a request to obtain refreshed or updated summary information in some embodiments e.g. via a double click of a mouse on a status summary region or via a menu driven interface . In response to input received via such an interface systems management tool may be configured to retrieve the latest status information or the latest summary of information e.g. from one or more databases and to modify one or more status summary regions if the summary information has changed. In one embodiment systems management tool may be configured to retrieve raw or unsummarized status information from one or more databases and to perform a summarization operation on the raw status information in order to generate the contents of a status summary region while in other embodiments the task of summarizing raw status information may be delegated to a module or layer of software external to systems management tool . In some embodiments raw and or summarized information may be pushed automatically to the display devices e.g. based on a specified schedule such as once every 30 seconds without requiring users to issue requests for updates. In one implementation systems management tool may be configured to provide users an interface to specify one or more attributes of selected entities represented in the mind map and to specify a summarization technique e.g. whether the summary should include an average value of the attribute a summed value an occurrence count etc. to be used in generating summary information that is to be included in the status summary regions . It is noted that unlike trees and other strictly hierarchical graphical structures mind maps may include loops as illustrated in so summarization techniques for mind maps may have to take the possibility of loops into account. In addition a node representing the same object may appear in multiple locations in a given mind map in some embodiments so care may have to be taken that the attribute values for such nodes are not counted twice in the summary information. For example if nodes representing storage were represented as Application nodes depending on the application using a particular storage element or device and Storage Array nodes depending on the manner in which the storage was organized into array devices the same storage device may well be represented by an Application node and also by a Storage Array node and when computing summary information such as total storage size the storage size for the storage device should not be counted twice.

As noted earlier in some embodiments systems management tool may be configured to obtain information on the relationships represented within a mind map from one or more databases. For example the nodes and links representing individual servers hardware vendors and applications shown in sub network may be obtained from an equipment inventory database e.g. from a set of tables of a relational database management system or from a spreadsheet in one implementation. Some nodes and links may be generated in response to manual interactions from one or more authorized users in some embodiments. The determination of the specific relationships that are to be displayed in a sub network or in the mind map as a whole may also be performed either automatically e.g. based on a default set of relationships and entities expected to be in frequent use in systems management of IT infrastructure or based on customized parameter files read in by systems management tool on startup or in response to user input received by systems management tool in various embodiments. Customized local summaries of status for specified collections of nodes may also be provided by systems management tool in some embodiments. For example local summary region L may display summarized information on one or more attributes associated with the nodes in a sub network rooted at node L i.e. nodes N O R S and T in accordance with a specified summarization technique and local summary region M may display summarized information on nodes of a sub network rooted at node M based on other attributes and a different summarization technique.

The embodiment illustrated in may also support the capability to open other mind maps using interfaces such as hypertext links which are symbolized as shaded arrows in the figure. For example if a user clicks on a hypertext link associated with node B systems management tool may be configured to generate a display of a new mind map with a primary node corresponding to the entity represented by the node B with which the hypertext link was associated i.e. in this example the new mind map would have a primary node that represented server S. The new mind map may also include one or at most a few layers of nodes linked to the primary node instead of being shown fully expanded so that the display is relatively uncluttered. The new mind map may be one that is or was automatically generated by systems management tool or may be a mind map that was created by a user or modified by a user after being automatically generated. Different users may customize one or more mind maps that may be displayed via hyperlinks e.g. by adding deleting nodes changing the layout or summary information etc. and may save their customized versions in some embodiments. In such embodiments a click on a hyperlinked node by one user may generate a different mind map than a click on the corresponding hyperlink by another user. An example of such a new mind map generated as a result of a click on a hypertext link in an existing mind map is shown in . Not all the nodes in a given mind map may support hypertext links or the equivalent interface to generate new mind maps in some embodiments and users may be provided the ability to add hypertext links to other mind maps as desired in other embodiments. It is noted that in one embodiment clicking on the hypertext link associated with node R of which also represents server S may also result in systems management displaying the same new mind map that is displayed when the hypertext link associated with node B. It is also noted in some embodiments interfaces other than hypertext links may be used to generate new mind maps centered on a particular node for example a right click of a mouse or a combination of keys on a keyboard with a mouse click may be used in such embodiments.

Other nodes and sub networks in the new mind map may represent entities that were not included in the original mind map such as Backup Policies node D Repair History node G Pending Tasks node E and My Personal Notes node H . Some of the sub networks such as the sub network starting at node D related to Backup Policies may represent information associated with the primary node that may be shared by multiple users. For example since backup policies associated with server S may be of interest or use to several users a sub network with backup policy information may be displayed as needed or requested in various default or personalized mind maps that have S as the primary node. Other information displayed in the mind map may be user specific for example Pending Tasks may represent a set of tasks that a particular user has to perform such as upgrading a database at server S node N and expanding a file system node P and My Personal Notes may include notes or comments that are only of use to a particular user. In one embodiment such user specific information may be obtained by systems management tool from personal databases shown in associated with one or more users .

Action menu shown in illustrates another feature that may be implemented for mind maps in some embodiments. In response to user input for a selected node such as primary node in systems management tool may be configured to initiate one or more systems management actions. For example as shown in action menu a set of possible systems management actions that may be performed on the server S represented by node may include rebooting the server initiating a failover to some other server sending e mail related to the server to an individual or group etc. The action menu may be displayed in response to a variety of different user inputs in various embodiments such as a left click on node for selection followed by a right click for displaying the action menu . Selecting a particular action on the action menu may in turn lead to additional interfaces being displayed e.g. a window providing a set of potential failover servers from which one may be selected or an e mail client display in some embodiments some of which may require further user input. The specific actions that may be displayed in an action menu may vary from one user to another for example in one embodiment systems management tool may be configured to ensure e.g. by communicating with authorization engine that a particular user has the appropriate authorization privileges for each action that may be initiated from the action menu.

In order to generate a new mind map such as the one shown in systems management tool may be configured to retrieve metadata e.g. the coordinates for various nodes attributes such as colors fonts etc. for the new mind map from mind map metadata database in some embodiments as well as updated data representing the current state of entities and relationships from one or more other databases. It is noted that in one embodiment metadata associated with various mind maps may be cached locally at each host where a display may have to be provided e.g. systems management tool may be configured to maintain metadata caches within various host memories.

In one embodiment systems management tool may also allow a user to request a regeneration of an existing mind map where the regenerated version is centered on a different primary node. For example in response to user input via an interface such as a double click using a mouse a user of the mind map shown in may request a regeneration of the mind map with node D as the primary node. is a block diagram illustrating a regenerated mind map using such an interface according to one embodiment. In regenerating the mind map in some implementations systems management tool may be configured to simply redraw the mind map with a specified node as the new primary node without adding additional nodes or links that were not present in the original mind map. For example because node D Servers was directly linked to nodes My IT Environment L Hardware Vendors and M Applications in the original mind map shown in the primary node Servers in the regenerated mind map shown in is also linked to three nodes representing the same three entities i.e. node A My IT Environment B Hardware Vendors and C Applications . In some embodiments portions of redrawn mind maps may be automatically populated by systems management tool based on one or more specified attributes e.g. when a user clicks on a node labeled Sun the tool may be configured to gather information on all the Sun servers from one or more databases and display them as linked to the new primary node Sun in the regenerated map. Such an ability to redraw or regenerate existing mind maps may help users to focus in on entities and relationships of primary interest while still keeping the display relatively uncluttered and retaining the ability to view all the information that was originally represented e.g. by regenerating the original mind map or any other desired version .

Systems management tool may be configured to obtain information on the particular entity and its relationships to other entities from one or more databases block . Any desired combination of formally maintained databases such as data center inventory databases and informal or personal databases may be accessed to obtain the information. In one embodiment the user s authorization privileges may be used to restrict systems management tool to a subset of available databases and or to limit the specific data that may be obtained from a given database. In other embodiments the data that is obtained from the databases may be the same for different users but the data that is actually displayed in operations corresponding to step may be limited based on the user s authorization privileges. In some embodiments systems management tool may be pre configured to access one or more default databases relevant to a particular IT infrastructure where the tool is being deployed. In such embodiments when a user creates a first version of a mind map the user may be allowed to choose from among one or more default databases of which systems management tool is already aware and may optionally be allowed to specify e.g. provide information allowing systems management tool to obtain information from additional databases such as personal databases .

After the information is obtained systems management tool may be configured to generate the graphical representation as a mind map block with a centrally located primary node representing the particular entity and sub networks linked to the primary node representing the relationships of the particular entity to other entities. It is noted that in general mind maps may be used to represent any combinations of different kinds of relationships for example all the relationships represented in a first mind map may be containment relationships all the relationships represented in a second mind map may be non containment relationships and the relationships represented in a third mind map may include both containment and non containment relationships. In the embodiment depicted in at least one of the relationships may be a non containment relationship. Systems management tool may be configured to dynamically refresh the information that is displayed in the mind map if when the underlying information in the databases changes block . In some implementations for example systems management tool may provide an input parameter to allow users to specify the intervals at which the databases may be accessed to determine whether the displayed data needs to be modified. In other implementations systems management tool may provide one or more interfaces e.g. via a command menu allowing users to dynamically request that the databases be accessed to refresh the display or ensure that it is up to date.

In various embodiments the operations illustrated in may be performed in a different order or omitted entirely for example in one embodiment a check of a user s authorization privileges may be made after information on the entities and relationships is obtained from the databases i.e. operations corresponding to block may be performed prior to operations corresponding to block . In some embodiments where a user may issue a request to view an existing mind map previously saved by the same user systems management tool may determine that no new authorization verification is necessary and the operations corresponding to block may be omitted. In addition in some implementations dynamic refresh of the mind map i.e. operations corresponding to block may not be supported.

In response to input received via the customization interface block of systems management tool may modify the mind map being displayed to the user during the current session of interaction between the user and the systems management tool block . In addition for example in response to a Save or Save As . . . command issued by the user systems management tool may be configured to save metadata associated with the customized version of the mind map in mind map metadata database block . The metadata may include graphical attributes of the mind map e.g. the coordinates of the nodes in the customized version of the mind map colors fonts icons used in the customized version etc. as well as functional attributes such as identification of databases from which information represented in the mind map is gathered refresh intervals etc. During a subsequent session of interaction with the same user systems management tool may be configured to retrieve the metadata from mind map metadata database and display the customized version of the mind map to the user e.g. without receiving an explicit request for the customized version. Thus systems management tool may be configured to retain information on user specific preferences related to mind maps across user sessions in some embodiments.

Part or all of the program instructions that may be executable to implement the functionality of system management tool may also be stored within storage devices . In addition to systems management software memory and or storage devices may also store operating systems software software for various applications such as databases including personal databases and or authorization engine in various embodiments. In some embodiments systems management software may be included within an operating system a storage management software product or another software package while in other embodiments systems management software may be packaged as a standalone product. In some embodiments part or all of the functionality of systems management tool may be implemented via one or more hardware devices e.g. via one or more Field Programmable Gate Array FPGA devices or in firmware. Storage devices may include any desired type of persistent and or volatile storage devices such as individual disks disk arrays optical devices such as CD ROMs CD RW drives DVD ROMs DVD RW drives flash memory devices various types of RAM and the like. One or more storage devices may be directly coupled to host in some embodiments e.g. using the Small Computer Systems Interface SCSI protocol or may be accessible over any desired storage interconnect such as a fiber channel fabric or storage area network SAN in other embodiments.

Although the embodiments above have been described in considerable detail numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

