---

title: Systems and methods for updating imaging device drivers on one or more computer systems
abstract: In an exemplary method, an imaging device that is logically connected to at least one host computer system receives installation of a firmware upgrade. The firmware upgrade includes at least one new feature that is not accessible to the host(s) without a driver upgrade. The firmware upgrade includes the driver upgrade and/or driver upgrade information. In response to receiving installation of the firmware upgrade, the imaging device identifies the host(s) to which it is logically connected. The imaging device sends the driver upgrade and/or the driver upgrade information to the host(s).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07921420&OS=07921420&RS=07921420
owner: Sharp Laboratories of America, Inc.
number: 07921420
owner_city: Camas
owner_country: US
publication_date: 20050429
---
The present invention relates generally to computers and computer related technology. More specifically the present invention relates to systems and methods for updating imaging device drivers on one or more computer systems.

There are many different kinds of computers in use today. The term computer system will be used herein to refer generally to any device or combination of devices that is capable of processing information to produce a desired result. Some examples of computer systems include personal computers hand held computers personal digital assistants PDAs servers mainframes supercomputers minicomputers workstations microcomputers microcontrollers and the like.

 Imaging as the term is used herein refers to one or more of the processes involved in the display and or printing of graphics and or text. The term imaging device as used herein refers to any electronic device that provides functionality related to imaging. Some examples of imaging devices include printers copiers scanners facsimile devices document servers image servers electronic whiteboards digital cameras digital projection systems medical imaging devices and so forth.

For various reasons an imaging device may be logically connected to i.e. placed in electronic communication with one or more computer systems which may be referred to as host computer systems or simply as hosts . For example printers are sometimes connected to a network of computer systems. This allows the users of the various computer systems on the network to use the printer.

Where an imaging device is logically connected to one or more host computer systems the imaging device may be configured as a managed device. In particular an imaging device may be placed in electronic communication with a device server which manages the imaging device. Alternatively an imaging device may be configured for non managed access. For example an imaging device may be placed in electronic communication with one or more other hosts in accordance with a peer to peer architecture.

From time to time an imaging device may receive one or more jobs from a host. A job is a specified amount of processing that is performed as a unit by an imaging device. For example a print job is a single document or a set of documents that is submitted to a printer for printing.

To facilitate communication between a host and an imaging device the host may include a driver for the imaging device. The driver for a particular imaging device allows applications on the host to be able to communicate with the imaging device without knowing specific details about the imaging device s hardware and internal language.

An imaging device typically includes firmware. From time to time the firmware within an imaging device may be upgraded. When this occurs the host s that are connected to the imaging device may not be able to utilize the new features provided by the firmware upgrade without a corresponding upgrade to their imaging device drivers.

Unfortunately known systems and methods for updating imaging device drivers on host computer systems suffer from various drawbacks. Accordingly benefits may be realized by improved systems and methods for updating imaging device drivers on host computer systems. Some exemplary systems and methods for updating imaging device drivers on host computer systems are described herein.

A method for updating device drivers on at least one host computer system is disclosed. The method may be implemented in an imaging device that is logically connected to the at least one host computer system. The method involves receiving installation of a firmware upgrade. In some embodiments the firmware upgrade includes a driver upgrade. The driver upgrade may allow access to at least one new feature provided by the firmware upgrade. Alternatively or in addition the driver upgrade may include at least one new software correction to an existing driver for properly operating the imaging device.

When the firmware upgrade is installed the imaging device identifies the at least one host computer system to which the imaging device is logically connected. In some embodiments this may involve retrieving at least one host identifier from a storage repository. When the at least one host computer system is identified the imaging device may send the driver upgrade to the at least one host computer system. In some embodiments the steps of identifying the at least one host computer system and sending at the driver upgrade to the at least one host computer system are performed in response to receiving installation of the firmware upgrade. Before the imaging device sends the driver upgrade to a particular host computer system the imaging device may verify that the driver upgrade is not already installed on the host computer system.

In some embodiments the firmware upgrade may include driver upgrade information instead of or in addition to the driver upgrade. The driver upgrade information may include a location of the driver upgrade a version number of the driver upgrade identification of one or more supported operating environments etc. The driver upgrade information may be sent to the at least one host computer system instead of or in addition to the driver upgrade.

In some embodiments each time that a job is received from a host computer system the imaging device determines a host identifier that identifies the host computer system that sent the job. If the host identifier has not previously been recorded in a storage repository the imaging device may record the host identifier in the storage repository. The host identifier may be a network address of the host computer system a network user name of an initiator of the job a network machine name of the host computer system a universally unique media access control MAC address of the host computer system etc.

In some embodiments each time that a job is received from a host computer system the imaging device determines an operating environment identifier that identifies an operating environment for the host computer system that sent the job. If the operating environment identifier has not previously been recorded in a storage repository the imaging device records the operating environment identifier in the storage repository. In addition each time that a job is received from a host computer system the imaging device may update heuristic information that is maintained about the host computer system that sent the job.

The firmware upgrade may include multiple versions of the driver upgrade. Each version may correspond to a different operating environment. The imaging device may for each host computer system identify the operating environment for the host computer system. This may involve retrieving an operating environment identifier for the host computer system from a storage repository. Alternatively this may involve querying the host computer system. The imaging device may then send to the host computer system a version of the driver upgrade that corresponds to the operating environment. If the imaging device is unable to identify the operating environment for the host computer system the imaging device may send the multiple versions of the driver upgrade to the at least one host computer system.

The imaging device may save the driver upgrade and or the driver upgrade information. When one or more additional host computer systems become logically connected to the imaging device the imaging device may send at least one of the driver upgrade and the driver upgrade information to the additional host computer systems.

An imaging device that is configured to implement a method for updating device drivers on at least one host computer system is also disclosed. The imaging device includes a processor and memory in electronic communication with the processor. Instructions are stored in the memory. The instructions are executable to implement the method described above for updating device drivers on at least one host computer system. A computer readable medium comprising executable instructions for implementing a method for updating device drivers on at least one host computer system is also disclosed.

Various embodiments of the invention are now described with reference to the Figures where like reference numbers indicate identical or functionally similar elements. The embodiments of the present invention as generally described and illustrated in the Figures herein could be arranged and designed in a wide variety of different configurations. Thus the following more detailed description of several exemplary embodiments of the present invention as represented in the Figures is not intended to limit the scope of the invention as claimed but is merely representative of the embodiments of the invention.

The word exemplary is used exclusively herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments. While the various aspects of the embodiments are presented in drawings the drawings are not necessarily drawn to scale unless specifically indicated.

Many features of the embodiments disclosed herein may be implemented as computer software electronic hardware or combinations of both. To clearly illustrate this interchangeability of hardware and software various components will be described generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

Where the described functionality is implemented as computer software such software may include any type of computer instruction or computer executable code located within a memory device and or transmitted as electronic signals over a system bus or network. Software that implements the functionality associated with components described herein may comprise a single instruction or many instructions and may be distributed over several different code segments among different programs and across several memory devices.

The imaging device is logically connected to multiple host computer systems namely host computer system A host computer system B and host computer system C . For example the imaging device and the hosts may each be connected to a computer network not shown . The imaging device may be configured as a managed device. Alternatively the imaging device may be configured for non managed access. For example the imaging device and the hosts may be set up for peer to peer communication. Each host that is logically connected to the imaging device includes a driver for the imaging device .

The imaging device includes firmware . At some point the imaging device receives installation of an upgrade to the firmware . There are a variety of ways that the firmware upgrade may be installed. For example the firmware upgrade may be manually installed through a locally connected port. Alternatively the firmware upgrade may be manually or automatically installed by a device management application running on a host . Alternatively still the firmware upgrade may be manually or automatically installed by a remote service from a remote site e.g. web site .

In the illustrated embodiment a driver upgrade is embedded within the firmware upgrade . The driver upgrade may allow access to at least one new feature provided by the firmware upgrade . Alternatively or in addition the driver upgrade may include at least one new fix e.g. software correction to the drivers for properly operating the imaging device . In response to the firmware upgrade being installed on the imaging device the imaging device facilitates installation of the driver upgrade on the hosts .

In response to the firmware upgrade being installed the imaging device identifies the host computer systems to which the imaging device is logically connected. In the illustrated embodiment the imaging device accomplishes this by retrieving host identifiers from a storage repository . The host identifiers identify the hosts to which the imaging device is logically connected. Some exemplary ways that the host identifiers may be created and added to the storage repository will be discussed below.

In the repository that stores the host identifiers is shown as being internal to the imaging device . For example the storage repository may be a hard drive flash memory etc. Alternatively the storage repository may be external to the imaging device . For example the imaging device may have a communication link to an offline storage medium such as a storage server a remotely mounted file system etc.

In some embodiments once the imaging device identifies the hosts to which it is logically connected the imaging device may automatically send the driver upgrade to those hosts . In the illustrated embodiment the imaging device may automatically send the driver upgrade to host A host B and host C . In this context the term automatically means that the imaging device may send the driver upgrade to the hosts without having to be prompted to do so by a user of the imaging device . Alternatively the operator of the imaging device may manually send the driver upgrade to the hosts . For example the operator of the imaging device either remotely or from the front panel may see a display of all the hosts to which the imaging device is logically connected. The operator may then select hosts to receive not receive or defer the driver upgrade . In the imaging device is shown as including an upgrade distribution component which implements the functionality of sending the driver upgrade to the hosts . The driver upgrade to a host may be filtered based on access rights to a feature of the driver upgrade .

There are many different ways that the imaging device may send the driver upgrade to the hosts . For example to send the driver upgrade to a particular host the imaging device may use the network address of the host to establish a communication session with the host such as an FTP session a raw TCP IP session a HTTP session Web Service SOAP XML etc. If the imaging device does not know the network address of the host the imaging device may obtain the network address by providing the network host name to a DNS server. Once a communication session has been established the driver upgrade may be pushed to a predetermined directory location on the host . The driver upgrade may then be installed via a background process that monitors for updates in a predetermined location. Alternatively the driver upgrade may be installed via a foreground process.

As another example of how the imaging device may send the driver upgrade to a particular host the imaging device may use the email address of the host s user to email or instant message IM the driver upgrade as an attachment. Once the driver upgrade has been received the user of the host or an automated process may extract the attachment and install the driver upgrade .

As another example of how the imaging device may send the driver upgrade to a particular host the imaging device may use the network address of the host to remotely mount a predetermined file system on the host . The imaging device may then copy the driver upgrade to a predetermined location on the remotely mounted file system. A background or foreground process on the host may be configured to monitor the predetermined location. When the driver upgrade arrives the process may install the driver upgrade .

As another example of how the imaging device may send the driver upgrade to a particular host the imaging device may send the driver upgrade as a remote procedure call. In particular the imaging device may run a native or virtual operating system that is compatible for communication with the host s operating system. The imaging device may transmit and install the driver upgrade using the host s application programming interface via a remote procedure call.

The driver upgrade may be compressed and or encrypted. If the driver upgrade is encrypted it may use either a transport layer of encryption e.g. SSL or a data layer such as using a public key from the host .

The driver upgrade may have configurable options based on the host user preferences. For example the driver upgrade may be configurable to output PCL or Postscript and the user may select Postscript. The host user may also have preferred default driver settings as opposed to the predefined factory settings .

Before the imaging device sends the driver upgrade to a particular host the imaging device may verify that the driver upgrade has not already been installed on the host . For example the imaging device may compare the version number of the driver upgrade to the version number of the device driver that is installed on the host . In some embodiments if the imaging device determines that the driver upgrade has already been installed on the host the imaging device does not send the driver upgrade to the host .

The imaging device may save the driver upgrade to the storage repository . When one or more additional hosts become logically connected to the imaging device the imaging device may send the driver upgrade to those hosts .

In the embodiment described previously in connection with a driver upgrade was embedded within the firmware upgrade . In contrast in the embodiment shown in information about a driver upgrade is embedded within the firmware upgrade . As before the driver upgrade may allow access to at least one new feature provided by the firmware upgrade . Alternatively or in addition the driver upgrade may include at least one new fix e.g. software correction to the drivers for properly operating the imaging device .

The driver upgrade information may include a location e.g. network address URI of the driver upgrade . The driver upgrade information may also include a version number of the driver upgrade . The driver upgrade information may also include an identification of the supported operating environments i.e. the operating environments for which versions of the driver upgrade are available a discussion of why this may be beneficial in some embodiments will be provided below .

In response to the firmware upgrade being installed the imaging device identifies the host computer systems to which the imaging device is logically connected. The imaging device may accomplish this by retrieving host identifiers from a storage repository .

Once the imaging device identifies the hosts to which it is logically connected the imaging device sends the driver upgrade information to those hosts . In the illustrated embodiment the imaging device sends the driver upgrade information to host A host B and host C . The imaging device is shown as including an upgrade distribution component which implements the functionality of sending the driver upgrade information to the hosts .

Each host uses the driver upgrade information to obtain the driver upgrade . In the illustrated embodiment the driver upgrade information indicates that the driver upgrade is located at a remote site . In response to receiving the driver upgrade information each host sends a request for the driver upgrade to the remote site . In particular host A sends a first request to the remote site host B sends a second request to the remote site and host C sends a third request to the remote site . The remote site fulfills the requests by sending the driver upgrade to the hosts .

The imaging device may save the driver upgrade information to the storage repository . When one or more additional hosts become logically connected to the imaging device the imaging device may send the driver upgrade information to those hosts .

Each host that is logically connected to the imaging device includes a driver for the imaging device . In the illustrated embodiment the hosts do not have the same operating environment. For example the hosts may be running different operating systems e.g. Windows XP Windows 98 Windows 2000 AS 400 Citrix Macintosh Linux UNI etc. . Each host includes a version of the driver that is compatible with the host s operating environment. For example if a particular host is running the Windows XP operating system then the host includes a version of the driver that is compatible with the Windows XP operating system. In host A is shown with version A of the driver host B is shown with version B of the driver and host C is shown with version C of the driver

The imaging device includes firmware . At some point the imaging device receives installation of an upgrade to the firmware . Multiple versions of the driver upgrade are embedded within the firmware upgrade . In particular the firmware upgrade includes version A of the driver upgrade version B of the driver upgrade and version C of the driver upgrade . The different versions of the driver upgrade correspond to different operating environments.

Each version of the driver upgrade may allow access to at least one new feature provided by the firmware upgrade . Alternatively or in addition each version of the driver upgrade may include at least one new fix e.g. software correction to the drivers for properly operating the imaging device .

In response to the firmware upgrade being installed the imaging device identifies the host computer systems to which the imaging device is logically connected. As indicated above the imaging device may accomplish this by retrieving host identifiers from a storage repository .

For each host that is identified as being logically connected to the imaging device the imaging device identifies the operating environment of the host . In the illustrated embodiment the imaging device identifies the operating environment of a particular host by retrieving an operating environment identifier for the host from the storage repository . Some exemplary ways that the operating environment identifiers may be created and added to the storage repository will be discussed below. In alternative embodiments the imaging device may identify the operating environment of a particular host by querying the host .

If the imaging device is able to identify the operating environment for a particular host the imaging device sends to the host a version of the driver upgrade that corresponds to the host s operating environment. In the illustrated embodiment the imaging device sends version A of the driver upgrade to host A version B of the driver upgrade to host B and version C of the driver upgrade to host C . The imaging device is shown as including an upgrade distribution component which implements the functionality of sending the different versions of the driver upgrades to the hosts .

In some situations the imaging device may not be able to identify the operating environment of one or more of the hosts . If this occurs the imaging device may send multiple versions of the driver upgrade to the host s . For example in the illustrated embodiment if the imaging device is not able to identify the operating environment of host A then the imaging device may send version A version B and version C of the driver upgrade to host A

The imaging device may save the different versions of the driver upgrade that it receives to the storage repository . When one or more additional hosts become logically connected to the imaging device the imaging device may identify the operating environment of each additional host and send the appropriate version of the driver upgrade to each additional host . Alternatively the imaging device may send multiple versions of the driver upgrade to the additional host s .

The discussion provided above in connection with illustrates various ways that an imaging device may facilitate installation of a driver upgrade on one or more host computer systems . In the embodiments described above when a firmware upgrade is installed on an imaging device the imaging device identifies the host computer systems to which the imaging device is logically connected. As indicated above this may be accomplished by retrieving host identifiers from a storage repository . In addition in some embodiments the imaging device may identify the operating environment of the host s to which it is logically connected. This may be accomplished by retrieving operating environment identifiers from a storage repository .

The imaging device receives jobs via an input channel . Many different kinds of input channels may be used. For example the input channel may be a wired network e.g. LPR 9100 IPP ftp http AppleTalk etc. a connectionless wired network e.g. email a wireless network e.g. IrDA Bluetooth Wi Fi a local connection e.g. a parallel port USB port serial port etc. or the like.

Each time that the imaging device receives a job the imaging device determines a host identifier for the host that sent the job . The imaging device may determine the host identifier from the input channel from the initial portion of the data stream for the job etc.

In some embodiments the host identifier may be a network address e.g. an IP address of the host . There are many different ways that the network address of the host may be obtained. For example the network address of the host may be obtained from the packet header containing the job data that is transmitted from the host to the imaging device . As another example the job data may contain a command directive that identifies the network address of the host . An example of such a command directive is the Sharp AR M277 printer driver s PJL command for specifying the IP address and port for the notify job return function. The format of this command directive is as follows 

Alternatively the host identifier may be the network user name of the initiator of the job. For example the job data may contain a command directive identifying the network user name of the person who created de spooled the job to the imaging device . An example of such a command directive is the HP PJL command for identifying the network user name as the owner of a job . The format of this command directive is as follows 

Alternatively still the host identifier may be the network machine name of the host . For example the job data may contain a command directive identifying the network host name of the host which created de spooled the job to the imaging device . An example of such a command directive is the Sharp AR M277 printer driver s PJL command for specifying the host name of the host . The format of this command directive is as follows 

When a host identifier has been determined the imaging device determines whether the host identifier has previously been recorded in the storage repository . If the host identifier has not previously been recorded the imaging device records the host identifier in the storage repository . In the imaging device is shown as including an information extraction component which implements the functionality of determining host identifiers and recording them in the storage repository .

In addition to determining a host identifier for the host that sent the job the imaging device may also determine an operating environment identifier for the host . If the operating environment identifier has not previously been recorded the imaging device records the operating environment identifier in the storage repository .

The imaging device may also update heuristic information that is maintained about the host . Some examples of heuristic information that may be maintained include the number of jobs that have been received from the host the timestamp of the last and or first received job etc.

In other embodiments the host identifiers may be recorded in the storage repository by other means such as by manual entry from an operator or automatically published in a directory service e.g. Printer Directory Service when the printer connection is initially installed on the host .

The method begins when an imaging device receives installation of an upgrade to its firmware . The firmware upgrade includes a driver upgrade or information about the driver upgrade embedded within the firmware upgrade . The driver upgrade may allow access to at least one new feature provided by the firmware upgrade . Alternatively or in addition the driver upgrade may include at least one new fix e.g. software correction to the drivers for properly operating the imaging device . In some embodiments multiple versions of the driver upgrade are embedded within the firmware upgrade each version corresponding to a different operating environment.

In response to the firmware upgrade being installed the imaging device identifies the hosts to which the imaging device is logically connected. This may be accomplished by retrieving host identifiers from a storage repository . The imaging device may also identify an operating environment for each host . This may be accomplished by retrieving operating environment identifiers from the storage repository .

The imaging device may verify that the driver upgrade is not already installed on the host s . The imaging device sends the driver upgrade and or driver upgrade information to each host that does not have the driver upgrade already installed. If the imaging device has identified the operating environment for a particular host the imaging device may send the appropriate version of the driver upgrade for that operating environment. Alternatively the imaging device may send multiple versions of the driver upgrade to the host s .

The imaging device may save the driver upgrade and or the driver upgrade information to the storage repository . When one or more additional hosts become logically connected to the imaging device the imaging device may send the driver upgrade and or the driver upgrade information to those hosts .

The computer system includes a processor and memory . The processor controls the operation of the computer system and may be embodied as a microprocessor a microcontroller a digital signal processor DSP or other device known in the art. The processor typically performs logical and arithmetic operations based on program instructions stored within the memory .

As used herein the term memory is broadly defined as any electronic component capable of storing electronic information and may be embodied as read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices in RAM on board memory included with the processor EPROM memory EEPROM memory registers etc. The memory typically stores program instructions and other types of data. The program instructions may be executed by the processor to implement some or all of the methods disclosed herein.

The computer system typically also includes one or more communication interfaces for communicating with other electronic devices. The communication interfaces may be based on wired communication technology wireless communication technology or both. Examples of different types of communication interfaces include a serial port a parallel port a Universal Serial Bus USB an Ethernet adapter an IEEE 1394 bus interface a small computer system interface SCSI bus interface an infrared IR communication port a Bluetooth wireless communication adapter and so forth.

The computer system typically also includes one or more input devices and one or more output devices . Examples of different kinds of input devices include a keyboard mouse microphone remote control device button joystick trackball touchpad lightpen etc. Examples of different kinds of output devices include a speaker printer etc. One specific type of output device which is typically included in a computer system is a display device . Display devices used with embodiments disclosed herein may utilize any suitable image projection technology such as a cathode ray tube CRT liquid crystal display LCD light emitting diode LED gas plasma electroluminescence or the like. A display controller may also be provided for converting data stored in the memory into text graphics and or moving images as appropriate shown on the display device .

Of course illustrates only one possible configuration of a computer system . Various other architectures and components may be utilized.

Information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

The various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array signal FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a user terminal.

The methods disclosed herein comprise one or more steps or actions for achieving the described method. The method steps and or actions may be interchanged with one another without departing from the scope of the present invention. In other words unless a specific order of steps or actions is required for proper operation of the embodiment the order and or use of specific steps and or actions may be modified without departing from the scope of the present invention.

While specific embodiments and applications of the present invention have been illustrated and described it is to be understood that the invention is not limited to the precise configuration and components disclosed herein. Various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the methods and systems of the present invention disclosed herein without departing from the spirit and scope of the invention.

