---

title: Method for executing software applications using a portable memory device
abstract: A method for executing a plurality of software applications using a portable memory device, which is equipped with execution files and a virtual registry file of a software application to be executed. Once the portable memory device is plugged into a computer, the presence of the device is automatically detected, and thereafter the application programmable interface (API) calls are mapped to access the virtual registry file and the execution files, thereby allowing the execution of the application residing on the portable memory device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07600216&OS=07600216&RS=07600216
owner: GTEKO, Ltd
number: 07600216
owner_city: Ra' Anana
owner_country: IL
publication_date: 20050421
---
This application claims priority under 35 U.S.C. 119 from U.S. Provisional Patent Application No. 60 564 243 filed on Apr. 22 2004 which is incorporated by reference in its entirety.

The present invention relates generally to the execution of software applications and more particularly to a method for executing software applications on a portable memory device.

Personal computers PCs serve a multitude of software applications features and functions. The applications provide the user with tools to accomplish tasks such as but not limited to document processing spreadsheet management email exchanges and Internet browsing. The features and functions are commonly referred to as the personalized information and may comprise favorite Internet websites contacts Internet cookies digital signatures background images desktop icons application control bars choice of default values and other configurable settings. In general the personalized information differs from one user to another.

Typically software applications are installed and setup using an automated installation process. The installation process is designed to enable the integration of the new functionality into its overall organization by the operating system OS as well as ensuring that the application can be safely removed. Still as installation process is mostly carried out by automatic installation programs installation and setup of software applications remain a tedious task requiring as much as hours of work.

Generally an automatic installation program performs the following activities a copying application software files from a removable storage e.g. a compact disk to the destination computer b configuring the operating system s parameters by for example the configuration of the system registry files c creating the application icons and d deleting temporary installation files.

Normally software applications are executed exclusively within the environment in which they were actually installed. Specifically a software application ought to be installed on each computer that runs the application. As a result a user cannot switch between computers and work with his common applications without installing and registering those applications on each computer. Moreover the user has to configure the personalized information when switching between computers.

Therefore it would be highly desirable for a user to have a portable memory device that comprises one or more common applications and the corresponding personalized information. Such a portable memory device would allow the user to run his common applications and uploading its personalized information just by plugging the device to any computer.

The invention has been made in view of the above circumstances and has an object to overcome the above problems and limitations of the prior art. Additional aspects and advantages of the invention will be set forth in part in the description that follows and in part will be obvious from the description or may be learned by practice of the invention. The aspects and advantages of the invention may be realized and attained by means of the instrumentalities and combinations particularly pointed out in the appended claims.

A first aspect of the invention provides a method for executing one or more software applications on a portable memory device by a computing device. The method comprises providing the portable memory device with virtual registry files and execution files associated with the one or more software applications. When the portable memory device is plugged into a computing device system calls to access the execution files and registry files stored in portable memory device are mapped by the operating system of the computing device. If a system call can not be served by the execution files and or the registry file the system register file is accessed. The virtual registry file comprises system information describing how to execute the one or more software applications and is derived from a system registry file. Execution files may be one or more of EXE file types DLL file types a SYS file types and or data files.

A second aspect of the invention provides a computer program product for executing one or more software applications on a portable memory device by a computing device. The computer program product contains executable code capable of providing the portable memory device with virtual registry files and execution files associated with the one or more software applications. When the portable memory device is plugged into a computing device system calls to access the execution files and registry files stored in portable memory device are mapped by the operating system of the computing device. If a system call can not be served by the execution files and or the registry file the system register file is accessed. The virtual registry file comprises system information describing how to execute the one or more software applications and is derived from a system registry file. Execution files may be one or more of EXE file types DLL file types a SYS file types and or data files.

A third aspect of the invention is a portable memory device capable of executing one or more software applications by a computing device. The portable memory device comprises a non volatile memory containing virtual registry files and execution files associated with the one or more software applications and a data bus interface compatible with the computing device. The virtual registry files comprise system information describing how to execute the one or more software applications and are derived from a system registry file. The execution files are one or more of EXE files DLL files SYS files and or data files. The execution of the one or more software applications comprises mapping system calls to access the execution files and the registry files when the portable memory device is plugged to a computing device. The system register file is accessed if a system call can not be served by the execution files and the registry files. System calls are requests generated then operating system operating on a computing device.

The computing device comprises a data bus that is compatible with the portable memory device. Suitable data buses can be universal serial buses parallel buses and peripheral component interconnect buses. The computing device itself may be one of a personal computer a personal digital assistant a handheld computer a notebook computer and or a networked device e.g. a wired router a wireless router and or a network a switch .

The above and other aspects and advantages of the invention will become apparent from the following detailed description and with reference to the accompanying drawing figures.

The present invention provides a method that allows a user to run his common applications and uploading its personalized information from a portable memory device that comprises one or more common applications and the corresponding personalized information. Therefore by using the present invention the need to reinstall applications and configure the personalized information when switching between computing devices is eliminated.

Referring to an exemplary computer system illustrating the principles of the present invention is shown. The computer system comprises two independent computing devices and a portable memory device PMD . The computing devices may be but are not limited to desktops notebooks personal digital assistants PDAs and other computing devices. The PMD preferably comprises a connector and a non volatile memory such as in the form of flash memory read only memory other types of memory or any combinations thereof. The connector of PMD is compatible with a data bus including but not limited to a universal serial bus USB a parallel bus a PCI bus or other types of bus connectors and or protocols. The computing devices comprise at least one port not shown that is compatible with the connector of PMD e.g. a USB port. The memory capacity of PMD can be any capacity sufficient to store the applications execution files a virtual registry file the personalized information or any other desired data.

In an embodiment of the present invention the PMD may be a DiskOnKey device such as provided by M Systems adapted to operate in accordance with disclosed invention. Currently such devices have 512 Mbytes and more of memory capacity which is sufficient to store the files necessary for the applications and registry files. It should be noted that the PMD comprises solid state memory for its storage medium and does not require a disk drive to access the data contained therein and therefore it ensures the fast execution of the software applications unlike external or even internal hard disk drives.

The execution files and the virtual registry file required to execute an application as well as the personalized information are copied from computing device to the non volatile memory of the PMD . The PMD can then be taken to computing device connected thereto and the application stored in the PMD can be executed directly on the PMD . Additionally the personalized information can be uploaded into the computing device setting it with the user s personalized computing environment. The personalized information comprises but is not limited to Internet favorites Internet cookies contacts calendar information digital certificates passwords desktop icons toolbar configuration color schemes and other configurable items.

The computing device automatically recognizes the presence of the PMD in accordance with conventional plug and play techniques. Once the presence of the PMD is detected the personalized information is automatically uploaded to the computing device and an icon associated with the application stored in the PMD is displayed on device . The user can then run the application by clicking on the icon activating the desired application. Uploading the personalized information to the computing device allows the generation of computing environment familiar to the user.

In one configuration the application can run immediately after the PMD is connected to the computing device . In this configuration an initiator code is comprised in the PMD . The initiator code is an executable code that runs automatically when the PMD is connected to the computing device . The initiator code causes a predetermined application to begin running without the user involvement. Once the PMD is disconnected or accidentally forced out from the computing device the disclosed method removes the personalized information as well as residual data generated during the application runtime from the computing device .

In order to allow the execution of a software application from the PMD by a computing device the PMD should include the application s execution files and a virtual registry file of the software application. The execution files are the outcome of the installation process and may comprise for example EXE files DLL files SYS files and data files. The virtual registry file comprises system information describing how to execute the application. The virtual registry file is derived from the system registry and configured to allow the execution of the software applications stored in the PMD . A detailed description of the virtual registry file and the system registry is provided below.

The disclosed invention provides several embodiments to equip the PMD with the execution files and the virtual registry file of a single application. In a first embodiment a user installs the application on the PMD through a standard installation process. For example the user can plug the PMD to the computing device and install the application on the PMD using installation software from a compact disk CD drive of the computing device . Once the installation process completes a virtual registry file is created by deriving only the information required to run the application installed in the PMD and configuring the derived information in a way that allows the execution on the PMD . As described above the virtual registry file comprises only the information required to run the application.

In a second embodiment of a procedure that automatically copies the execution files from the computing device e.g. the computing device to the PMD is provided. This procedure further creates the virtual registry file and saves it in the PMD . The procedure accesses a directory comprising the execution files of the desired application and copies these files to the PMD .

In a third embodiment a software vendor pre installs the execution files and the virtual registry file of a specific software application on the PMD . In this embodiment the PMD can be sold as a device that comprises a software package. It may be further configured such that it auto installs without any intervention from the user.

The virtual registry file is generated by monitoring the values writing to the system registry file while the application is being installed in computing device . These registry values are simultaneously time written to a virtual registry file.

Referring to a schematic diagram illustrating the execution of a software application on the PMD by a computing device is shown. A software application is executed on the PMD by the operating system OS of a computing device into which the PMD is plugged. A system registry file comprises a hierarchical database of user and system information and is maintained by the computing device. Specifically the system registry file contains hardware configuration information system software configuration information user security information current user information and application configuration information. Any application can write and read data to and from the system registry file . The system registry file is structured as a hierarchy of keys sub keys and values. The keys may have multiple sub keys and values. A virtual registry file is derived from the system registry file and configured to allow the execution of the application on the PMD .

The virtual registry file comprises the information necessary for the OS to execute the application . Specifically the virtual registry file determines which keys to superimpose in the system registry file . For example one of the keys defined in a system registry is the HKEY USERS key which comprises two sub keys with the user setting information the HKEY USERS DEFAULT and the HKEY CURRENT USER sub keys. The HKEY USERS DEFAULT sub key contains system default settings that are used when a logon screen is displayed. The HKEY CURRENT USER sub key contains the user personalized information. To allow the execution of the application with the user personalized information the HKEY USERS key and the HKEY CURRENT USER sub key with their appropriate values are added to the virtual registry file . The virtual registry file has the same structure as system registry file i.e. a hierarchy of keys sub keys and values. As for another example the SECURITY sub key which contains information about specific user permissions for user and group accounts. Once the PMD is plugged the content of the SECURITY sub key is overwritten of with local security account policy information. Generally the registry keys to be overwritten are determined by the OS type and the application executed on PMD .

The application can use entries either from the system registry file or the virtual registry file . The virtual registry file is looked up first for a desired key and if no match is found the system registry file is used. When a user executes an application residing on the PMD all application programming interface API calls of the OS are mapped to access the execution files of the application stored in the PMD .

Referring to a non limiting flowchart describing the method for executing a plurality of software applications on a PMD in accordance with the present invention is shown. For reasons of clarity only the process of executing a single application stored in the PMD is provided. At S the user plugs the PMD e.g. PMD to a computing device e.g. computing device where the user desires to run an application. At S upon connecting the PMD into the computing device the presence of the PMD is detected. At S optionally the personalized information is uploaded and temporarily saved in the computing device. At S the API system calls are rerouted to access the execution files and the virtual registry file stored on the PMD and associated with the application to be executed. At runtime if the operating system requests the value of a specific key or sub key this value is first search for in the virtual registry file and if not found then the operating system searches for the requested value in system registry file. Once the PMD is disconnected from the computing device the personalized information and any residual data generated during runtime are removed from the computing device. Furthermore the system registry values that are overwritten by the detection of the PMD returned to their previous settings once the PMD is removed from the system.

It should be emphasized that the applications stored in the PMD are executed on the PMD and no data is transferred to the computing device in which the PMD is connected. However the data generated by the application residing on the PMD may be stored on the PMD.

In a preferred embodiment applications residing on the PMD can be executed simultaneously on plurality of computing devices. In such embodiment as depicted in the PMD is plugged into a networked device operating in a network . The networked device is connected to a plurality of computing devices that are part of network . The computing devices including but not limited to personal computers PCs personal digital assistants PDAs handheld and notebook computers any other type of handheld or personal wireless electronic device. The network is a local area network LAN a wireless LAN WLAN or combination thereof. The WLAN may be based on the IEEE 802.11 standard WiFi Bluetooth infrared or other suitable networking standards and methodologies. The networked device comprises at least one port not shown that is compatible with the connector of the PMD e.g. a USB port. The networked device may be but is not limited to a wired router a wireless router a switch and similar devices.

Once the PMD is plugged into networked device each of computing devices can access and run the applications resides in the PMD . This is performed without installing any application on the computing device . It would be appreciated by a person skilled in the art that this solution would eliminate the need from a user e.g. a system administrator to install and configure each computing device with the applications resides in the PMD .

In an embodiment of the present invention some or all of the method components are implemented as a computer executable code. Such a computer executable code contains a plurality of computer instructions that when performed in a predefined order result with the execution of the tasks disclosed herein. Such computer executable code may be available is source code or in object code and may be further comprised as part of for example a portable memory device or downloaded from the Internet.

The foregoing description of the preferred embodiments of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. The embodiments were chosen and described in order to explain the principles of the invention and its practical application to enable one skilled in the art to utilize the invention in various embodiments and with various modifications as are suited to the particular use contemplated.

Thus while only certain embodiments of the invention have been specifically described herein it will be apparent that numerous modifications may be made thereto without departing from the spirit and scope of the invention. Further acronyms are used merely to enhance the readability of the specification and claims. It should be noted that these acronyms are not intended to lessen the generality of the terms used and they should not be construed to restrict the scope of the claims to the embodiments described therein.

