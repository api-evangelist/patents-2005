---

title: Discriminative training for language modeling
abstract: A method of training language model parameters trains discriminative model parameters in the language model based on a performance measure having discrete values.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07680659&OS=07680659&RS=07680659
owner: Microsoft Corporation
number: 07680659
owner_city: Redmond
owner_country: US
publication_date: 20050601
---
The task of language modeling is to estimate the likelihood of a word string. This is fundamental to a wide range of applications such as speech recognition and Asian language text input.

The traditional approach to language modeling uses a parametric model with maximum likelihood estimation MLE usually with smoothing methods to deal with data sparseness problems. This approach is optimal under the assumption that the true distribution of data on which the parametric model is based is known. Unfortunately this assumption rarely holds in realistic applications.

An alternative approach to language modeling is based on the framework of discriminative training which uses a much weaker assumption that training and test data are generated from the same distribution but the form of the distribution is unknown. Unlike the traditional approach that maximizes a function i.e. likelihood of training data that is loosely associated with the error rate discriminative training methods ideally aim to minimize the same performance measure used to evaluate the language model namely the error rate on training data.

However this ideal has not been achieved because the error rate of a given finite set of training samples is usually a set of discrete values that appear as a step function or piecewise constant function of model parameters and thus cannot be easily minimized. To address the problem previous research has concentrated on the development of a loss function that provides a smooth loss curve that approximates the error rate. Using such loss functions adds theoretically appealing properties such as convergence and bounded generalization error. However the minimization of a loss function instead of the error rate means that such systems are optimizing a different performance measure than the performance measure that is used to evaluate the system that a language model is applied in. As a result training the language model to optimize the loss function does not guarantee that the language model will provide a minimum number of errors in realistic applications.

A method of training language model parameters trains discriminative model parameters in the language model based on a performance measure having discrete values.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with embodiments of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers telephony systems distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Some embodiments of the invention are designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules are located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing embodiments of the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer is operated in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN . and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one preferred embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device within the scope of the present invention.

Many embodiments of the present invention provide a method of training discriminative model parameters by attempting to minimize the error rate of the word sequences identified using the model parameters instead of optimizing a loss function approximation to the error rate.

Under one embodiment of the present invention the discriminative language model is a linear discriminative function that provides a score for each of a set of candidate word sequences. The linear discriminative function uses a sum of weighted feature functions such as 

In order to use the discriminative language model the features for the model must be selected and their respective model parameters must be trained. provides a flow diagram and provides a block diagram of elements used to select candidate features and to train the discriminative model parameters under one embodiment of the present invention.

In step of phonetic sequences of are provided to a baseline language model to produce a set of training samples . Each training sample corresponds to a single phonetic sequence and includes a list of candidate word sequences that baseline language model considers most likely given the phonetic sequences . In addition baseline language model designates one of the candidate word sequences as being the most likely word sequence. Under many embodiments the baseline language model is a trigram model that uses the Markov assumption that the probability of a current word is based only on the identity of the current word and the identity of the two words that precede it. Using these probabilities baseline language model is able to determine a negative log probability for each candidate word sequence.

At step a discriminative model trainer evaluates an error function for the top candidate identified by baseline language model in each of training samples . This error function is determined using an actual word sequence that corresponds to phonetic sequences . In general the error function provides a count of one for each word in actual word sequences that is replaced with a different word in training samples or is omitted from training samples . In addition any extra word inserted into training sample that is not found in actual word sequence also adds one to the count. Summing the values of the error function for the training samples produces the sample risk for the baseline language model SR .

At step discriminative model trainer performs a line search to identify the best weight and associated sample risk SR for each feature W i 0 in a set of candidate features . The weight of the base feature is fixed during the training procedure. Under many embodiments candidate features include features for specific N grams which add one to a count each time a specific N gram is found in a word sequence. A method for performing such a line search is shown in .

In step of one of the training samples is selected. At step a value for is selected from a set of discrete possible values for . At step the selected value for is used to generate a score for each candidate word sequence in the selected training sample using EQ. 1 above. In using EQ. 1 during step of for all features except the current feature and the feature generated by the baseline model are set to 0. Under many embodiments for the baseline model is set to 1 and the baseline feature is a negative logarithm probability for the word sequence.

After all of the candidate word sequences in the training sample have been scored the candidate word sequence with the highest score is selected and the error function is evaluated using the selected word sequence and the actual word sequence from actual word sequences at step . At step the value of the error function is stored for this particular value for and the current sample.

At step the method determines if there are more values for to be evaluated. If there are more values the process returns to step and steps and are repeated for the new value of . Steps and are repeated until all of the discrete values for have been evaluated for the current feature.

At step the process determines if there are more training samples in training samples . If there are more training samples the next training sample is selected at step and steps are repeated for the next training sample. When there are no further training samples at step the process continues at step where the values of the error function for each value of are summed over all of the training samples to form a set of sample risks SR with a separate sample risk for each value of . In terms of an equation the sample risk for a particular value of is 

At step the optimum value for is selected based on the sample risk values. In some embodiments the value of that produces the smallest sample risk is selected as the optimum value of . In other embodiments a window is formed around each value of and the sample risk is integrated over the window. The value of that produces the lowest integration across the window is selected as the optimum value for as shown by 

Returning to after the line search has been performed to identify the optimum model parameter for each feature and to return the sample risk SR the process continues at step where the features are ranked based on the ability of the feature to reduce the sample risk relative to the baseline language model. In particular each feature is ranked using 

At step the top N features in ranked features are examined to determine which feature provides a best gain value G which is calculated as Red 1 Int EQ. 6 where Red is a sample risk reduction score that is a more generalized for of the reduction score calculated in EQ. 5 Int f is an interference function that indicates the similarity of the feature relative to other features that have already been added to the model and is a weight determined empirically on a holdout data set. Under one embodiment is equal to 0.8.

In EQ. 8 Tr is also a column vector having a separate element for each training sample in training samples . The value of the i th element in Tr is the difference between the value of the error function for the top word sequence candidate identified by baseline model for training sample i and the value of the error function for the top scoring word sequence identified by feature using the optimum weight identified in step . The denominator in EQ. 8 is the product of the Euclidean length of vectors Tr f and Tr .

At step the feature with the highest gain value as computed using EQ 6 is selected. At step the value of the model parameter for the selected feature is updated using the line search of . During that line search features that have already been added to the discriminative model trainer are used in calculating the score for the possible word sequences. The values of the model parameters associated with those features remain constant during the line search for the updated value of .

At step the updated value of and the feature are added to a list of selected features and parameters of the discriminative model at step . The feature that is added to selected features is also removed from ranked features .

At step the gain values for the top N features remaining in ranked feature list are updated using the newly added selected features and parameters to recompute column vector Tr f of EQ. 8.

At step the process determines if more features should be added to the discriminative model. Under some embodiments this is determined using a threshold value compared to the gain values of the top N features in ranked feature list . If at least one feature has a gain value that exceeds the threshold the process returns to step to select the feature with the best gain value and steps and are repeated.

When no more features are to be added to discriminative model at step the selected features and their parameters can be used as a discriminative model to score candidate word sequences and thus select one candidate word sequence from a plurality of candidate word sequences as representing a phonetic string. This is shown in step in .

As shown in some embodiments of the present invention select discriminative model parameters and features based directly on the error function generated when using the model parameters and the features. Thus these embodiments of the invention do not use a loss function approximation to the error function. Instead they measure the error function directly when determining which values of the model parameters and which features to use in the discriminative model.

Although an error function has been used above the present invention is not limited to such error functions. Instead any performance measure with discrete values may be used in the line search of in place of the error function.

Although the present invention has been described with reference to particular embodiments workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention.

