---

title: System and method for storing and restoring communication dialog
abstract: Storing and restoring a communication session includes establishing a communication session by exchanging dialog. Dialog from the communication session is stored to a persistent storage. Endpoints participate in the communication session to assert functionality to a monitoring module. If a failure occurs during the communication session, an endpoint receives the stored dialog from the persistent storage. Furthermore, the endpoint restores the received dialog onto a protocol stack to continue the communication session without loss of dialog.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07916855&OS=07916855&RS=07916855
owner: Cisco Technology, Inc.
number: 07916855
owner_city: San Jose
owner_country: US
publication_date: 20050107
---
This invention relates generally to the field of communications and more specifically to a system and method for storing and restoring communication dialog.

Historically telecommunications have involved the transmission of signals over a network dedicated to telecommunications. Similarly data communications between computers have also historically been transmitted on a dedicated data network. Currently telecommunications and data transmissions are being merged into an integrated communication network using technologies such as Voice over Packet VoP . Since many networks transmit computer data using packet protocols such as the Internet Protocol IP VoP uses this existing technology to transmit signals by converting these signals into digital data and encapsulating the data for transmission over a packet based network. While transmitting data over the network failure by any component may cause a loss of data and interrupt the communication.

In accordance with the present invention a system and method for call processing applications is provided that substantially eliminates or greatly reduces disadvantages and problems associated with previously developed systems and methods. In particular the present invention contemplates a system and method for storing and restoring communication dialog in a communication session.

According to one embodiment of the present invention storing and restoring a communication session includes establishing a communication session by exchanging dialog. Dialog from the communication session is stored to a persistent storage. Endpoints participate in the communication session to assert functionality to a monitoring module. If a failure occurs during the communication session an endpoint receives the stored dialog from the persistent storage. Furthermore the endpoint restores the received dialog onto a protocol stack to continue the communication session without loss of dialog.

Certain embodiments of the invention may provide one or more technical advantages. A technical advantage of one embodiment may be that the session may be restored in the event of an endpoint failure without losing any dialog information. Another technical advantage of one embodiment may be that the communication session between endpoints may be restored without end users and endpoints noticing the failure.

Certain embodiments of the invention may include none some or all of the above technical advantages. One or more other technical advantages may be readily apparent to one skilled in the art from the figures descriptions and claims included herein.

Endpoints may be any combination of hardware and or software that provide communication services to a user. Endpoints may include analog digital or Internet protocol IP telephones cell phones personal computers video conferencing equipment wireless communication devices servers conference servers or any other suitable device. Although system illustrates a particular number of endpoints system contemplates any number and arrangement of endpoints .

Endpoints exchange audio voice data or other information generally referred to as dialog in a communication session in system via network . The term communication session refers to any connection between endpoints that allows the exchange of dialog. One of endpoints may fail during a communication session or communication between endpoints may fail because of software errors memory overloads power failures or any number of other conditions that prevent endpoints from communicating. System preserves the dialog from a communication session without interruption if failure occurs.

Network represents any suitable combination or arrangement of components supporting communications between endpoints and proxy network . For example network may include one or more local area networks LANs one or more wide area networks WANs a global distributed network such as the Internet Intranet or Extranet any other form of a wireless or wireline communication network components of other suitable communications networks or any combination of the preceding. Generally network provides for the communication of packets cells frames or other portions of information generally referred to as packets between endpoints . Network may include any combination of gateways routers hubs switches and any other hardware and or software.

Proxy network includes one or more SIP proxies referred to collectively as SIP proxies . SIP proxies participate in the transfer of communication dialog between endpoints . SIP proxies may refer to a logical entity that transmits messages. SIP proxy may handle any suitable number of messages at any suitable rate. Proxy network may couple to non packet based networks such as telephone network . Although proxy network couples to telephone network system contemplates any number of possible configurations extending from proxy network . For example proxy network may be coupled directly to suitable endpoints .

Telephone network includes gateway and PSTN . Gateway allows endpoints to establish a dialog between a packet based network and a non packet based network such as PSTN . Gateway may handle signaling which notifies endpoints of a communication session or signaling and media which has notification capabilities and exchanges information such as audio video or data between endpoints .

Persistent storage stores the communication dialog as the dialog is transferred between endpoints . Persistent storage provides the communication dialog to endpoints if a failure occurs. Persistent storage may be any suitable memory that stores and facilitates the retrieval of dialog. Persistent storage may include a database a Javaspace or any text file.

SIP stack represents a data structure used in session initiation protocol. SIP stack stores the dialog from the communication session. SIP stack may be a Java SIP stack. The architecture of SIP stack may include the following layers a transport layer a transaction layer a dialog layer and an offer answer layer. Additional layers may be added to SIP stack . Monitoring module monitors the communication session to determine if failure occurs in endpoint . Upon detecting a failure monitoring module initiates the restoration process. In the illustrated embodiment monitoring module connects to persistent storage telephone network and proxy network but monitoring module may connect to any suitable element in system .

In operation endpoints establish a communication session with endpoints . During the communication session initiating endpoints establish dialog over network through SIP proxies to endpoints . The session may be established using SIP H.323 or any suitable protocol. For example if using SIP endpoints send an invite message via network to SIP proxies . SIP proxies transfer the invite message to telephone network . Gateway translates the invite message into a non packet based format. The message proceeds to PSTN and endpoints receive notification of the call. The notification may come in the form of a ring from PSTN .

According to another embodiment of the invention SIP proxies may transfer the invite message to a packet based network. Endpoints send an invite message via network to SIP proxies . SIP proxies transfer the invite message to packet based endpoints . Packet based endpoints may respond with an OK message to initiating endpoints if available for the communication session. Upon endpoints receiving the OK message the communication session begins between endpoints via network and SIP proxies .

As system establishes the communication session gateway or endpoint may store the dialog to persistent storage using an application programming interface API in stack . The back up may occur at any specified time to capture the necessary dialog to restore the communication session in the event of a failure. When the API backs up the dialog to persistent storage the API may select which persistent storage to store the dialog. For instance persistent storage may be a database a Javaspace or a text file. The API may store the backed up dialog in any suitable format.

Storing the dialog includes serializing the dialog in persistent storage . When serializing the dialog the API may selectively choose which field of the dialog to serialize in persistent storage . The chosen fields may include those fields necessary to restore the dialog in the event of a failure. The API may serialize the fields in any manner to store the dialog quickly. For example when system establishes a dialog between user agent client UAC and user agent server UAS the API may serialize the UAC and the UAS as boolean values rather than storing the entire data field. Serializing the dialog in this manner enhances the normally slow process of backing up to persistent storage .

If monitoring module detects a failure in an element of system monitoring module may inform another element a restored element to continue the communication session. Monitoring module may also begin a new instance of the failed element that takes over the communication session. The APIs begin deserializing the dialog from persistent storage and inserting the dialog onto SIP stack . Inserting the dialog onto SIP stack restores the dialog from the failure without interruption in the communication session. For example if gateway fails monitoring module starts a new instance of gateway . The new instance of gateway starts to retrieve dialogs stored in persistent storage and inserts the dialogs onto SIP stack . Because the dialog was custom serialized in persistent storage the restoration process occurs faster. If an in dialog request comes before the dialog is restored into the new instance of gateway the specifically distinguished dialog may be restored quickly on demand. At this time the restoration of other dialogs is held to the priority of the on demand restoration. The communication session between endpoints continues without loss of dialog and without endpoints noticing the failure of the element in the communication session.

An element of system may include any suitable configuration of an interface logic and memory for performing the operations of the element. An interface refers to any suitable structure of a device operable to receive input for the device send output from the device or both and may comprise one or more ports. Logic refers to any suitable hardware software or combination of hardware and software. For example logic may comprise a processor. A processor may refer to any suitable device operable to execute instructions and manipulate data to perform operations. Memory refers to any structure operable to store and facilitate retrieval of information used by a processor and may comprise Random Access Memory RAM Read Only Memory ROM magnetic drives disk drives Compact Disk CD Drives Digital Video Disk DVD drives removable dialog storage any other suitable data storage device or a combination of any of the preceding.

Modifications additions or omissions may be made to system without departing from the scope of the invention. For example telephone network may be omitted and replaced by a packet based network. The components of system may be integrated or separated according to particular needs.

Moreover the operations of system may be performed by more fewer or other modules. For example the operations of SIP proxies and the API may be performed by one SIP proxy . Additionally operations of system may be performed using any suitable logic comprising software hardware other logic or any suitable combination of the preceding.

Endpoints and endpoints exchange audio video data or other information using network . Endpoints and endpoints are substantially equivalent to endpoints of . Additionally network is substantially equivalent to network of . SIP proxy connects to network .

SIP proxy is substantially equivalent to SIP proxies of . Additionally SIP proxy supports an Address of record AoR of a user. An AoR is a uniform resource identifier URI that points to a domain with a location service that can map the URI to another URI where a specific user may be available. In general an AoR is a public address of the user. By supporting AoR the SIP endpoints use a URI in a request instead of an IP address to locate a remote user. SIP proxy resolves the URI into the actual IP address when handling the request. SIP proxy also inserts a record route header to SIP messages. Inserting the header ensures that future message exchanges do not skip SIP proxy and remain in the path of subsequent SIP requests for the same call leg. SIP proxy connects to conference server and Domain Name Server DNS .

Conference server may include any suitable combination or arrangement of logic operating to support a communication session between endpoints and endpoints . Conference server may facilitate the communication session by managing the arrival and departure of endpoints and or endpoints in a conference session. Conference server may also provide several other conference management features such as routing data audio and video or providing for cross dialog participation. For example conference server may provide a centralized repository of web pages for use by endpoints and . Conference server may communicate the web pages to endpoints and in response to web page requests. Conference server may reside within endpoints and or endpoints or in system as a separate element.

Persistent storage connects to conference server and secondary conference server . Persistent storage is substantially equivalent to persistent storage of .

Secondary conference server may include any suitable combination or arrangement of logic operating to support a communication session provided by endpoints and endpoints . Secondary conference server is substantially equivalent to conference server as described above. Secondary conference server may connect to SIP proxy and DNS .

DNS may include any suitable combination or arrangement of logic operating to translate domain names into IP addresses. DNS may locate IP addresses that correspond to a communication session.

In operation endpoints attempt to establish a conference session with endpoints . During the session endpoints establish a dialog over network and SIP proxy with conference server . Endpoints may join the session by dialing into conference server . Upon endpoints dialing into conference server endpoints and endpoints participate in a conference session. During the conference session a dialog which includes media is established between endpoints and endpoints . Conference server backs up the dialog to persistent storage using an API. The back up may occur at any specified time to capture the necessary dialog to restore the communication session in the event of a failure.

Serializing the dialog in persistent storage occurs in substantially the equivalent manner as described with respect to . Serializing the dialog in a custom manner enhances the normally slow process of backing up to persistent storage .

During the communication session monitoring module monitors the session for a failure between endpoints and endpoints . A failure may occur if conference server crashes. If a failure is detected SIP proxy queries DNS to determine a location from which to continue the conference service. If conference server crashes secondary conference server informs DNS of its availability to handle the conference session. DNS provides SIP proxy with the IP address of secondary conference server . Upon receiving the IP address of secondary conference server SIP proxy contacts secondary conference server for conference services. Secondary conference server restores the conference session on SIP proxy and the session continues without noticeable interruption by endpoints and and without loss of dialog.

While SIP proxy finds a server to handle the conference session secondary conference server may restore the backed up dialog from persistent storage . Secondary conference server restores the dialog upon informing DNS of its availability to take over the conference session. During the restoration APIs insert the dialog into secondary conference server . Secondary conference server restores the dialog from the failed conference session while SIP proxy is getting information about available conference servers. When SIP proxy determines that secondary conference server is available and redirects the conference session requests to secondary conference server secondary conference server may restore the dialog from the conference session. Endpoints and do not notice that conference server has failed and that secondary conference server manages the conference session. Additionally dialog from the conference session is not lost when system redirects the conference services to secondary conference server .

In another embodiment of this invention secondary conference server may begin a new conference session rather than continuing the conference session that failed and restoring the dialog from persistent storage . Secondary conference server may manage the dialog transmission of a new conference session. Additionally secondary conference server may handle new requests within a previous conference dialog that have not been restored to secondary conference server . For example once SIP proxy establishes conference services with secondary conference server endpoints may transmit a new request. Secondary conference server delays the restoration of the backed up dialog to handle the new request from endpoints . Secondary conference server searches persistent storage for any dialog that may correspond to the new request transmitted. If secondary conference server finds corresponding dialog to the new request secondary conference server restores that dialog. Then the request is processed normally. If secondary conference server does not find corresponding dialog to the new request an error response is generated and sent to endpoints . Secondary conference server continues to restore the backed up dialog from persistent storage after handling the new request.

Modifications additions or omissions may be made to system without departing from the scope of the invention. The components of system may be integrated or separated according to particular needs. Moreover the operations of system may be performed using any suitable logic comprising software hardware other logic or any suitable combination of the preceding.

Endpoints and exchange audio video data or other information using network . Endpoints and endpoints are substantially equivalent to endpoints of . Furthermore network is substantially equivalent to network of . Network connects to SIP proxy . SIP proxy is substantially equivalent to SIP proxy of . SIP proxy connects to SIP registrar .

SIP registrar may include any combination or arrangement of logic operating to register elements in system . For example conference server and secondary conference server register their addresses with SIP registrar . Conference server registers at SIP registrar with an address of record. When monitoring module detects that conference server is not responding monitoring module informs secondary conference server to register at SIP Registrar using the same address of record that conference server initially used at registration. Conference server is substantially equivalent to conference server of .

Persistent storage connects to conference server and secondary conference server . Persistent storage is substantially equivalent to persistent storage of . Secondary conference server is substantially equivalent to secondary conference server of .

In operation endpoints attempt to establish a conference session with endpoints . Establishing the conference session and backing up the dialog to persistent storage occurs in the substantially equivalent manner as described with respect to .

Serializing the dialog in persistent storage occurs in the substantially equivalent manner as described with respect to . Serializing the dialog in a custom manner enhances the normally slow process of backing up to and restoring from persistent storage .

During the communication session monitoring module monitors the session to detect a failure in the conference session. A failure may occur if conference server crashes. If a failure occurs SIP proxy queries SIP registrar to determine the location of the conference service. If conference server crashes SIP registrar may provide SIP proxy with the IP address of an available server. In the illustrated embodiments SIP registrar provides SIP proxy with the IP address of secondary conference server . Upon receiving the IP address of secondary conference server SIP proxy directs the conference session requests from crashed conference server to secondary conference server .

Restoring the dialog to secondary conference server occurs in a substantially equivalent manner as described in .

In another embodiment of this invention secondary conference server may begin a new conference session rather than continuing the conference session that crashed. Additionally secondary conference server handles new requests within a previous conference session. Establishing a new conference session and handling new requests within a previous conference session occur in a substantially equivalent manner as described in .

Modifications additions or omissions may be made to system without departing from the scope of the invention. The components of system may be integrated or separated according to particular needs. Moreover the operations of system may be performed using any suitable logic comprising software hardware other logic or any suitable combination of the preceding.

As the communication session proceeds system monitors whether it has received a termination message in step . If system receives a termination message it ends the communication session at step and clears the dialog from persistent storage. If system does not receive a termination message the communication session proceeds from step .

The methods described are only examples of storing the dialog from a communication session restoring the dialog from a failure in the communication session and managing a new request in a communication session. Modifications additions or omissions may be made to the methods without departing from the scope of the invention. The methods may include more fewer or other steps. Additionally steps may be performed in any suitable order without departing from the scope of the invention.

Certain embodiments of the invention may provide one or more technical advantages. A technical advantage of one embodiment may include that a persistent storage stores dialog from a communication session and the dialog may be restored if the session fails without the endpoints realizing the failure occurred. Another technical advantage of one embodiment may include custom serializing the dialog when storing it into the persistent storage expedites the storing and restoring processes.

While this disclosure has been described in terms of certain embodiments and generally associated methods alterations and permutations of the embodiment and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

