---

title: Network with broker for device management
abstract: A network having a device management server to execute Sync ML device management (DM) commands and manage associated mobile devices. The network may employ a broker to execute bundles comprising device management and provisioning activities, provisioning parameters etc. The broker may determine the sequence in which these device management and provisioning activities are executed and may employ the device management server to conduct the DM operations to interact with the associated mobile devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09323515&OS=09323515&RS=09323515
owner: QUALCOMM INCORPORATED
number: 09323515
owner_city: San Diego
owner_country: US
publication_date: 20050118
---
This patent application makes reference to claims priority to and claims benefit from U.S. Provisional Patent Application Ser. No. 60 537 374 entitled Network with Broker for Device Management filed on Jan. 16 2004.

The complete subject matter of the above referenced United States Provisional Patent Application is hereby incorporated herein by reference in its entirety. In addition this application makes reference to U.S. Provisional Patent Application Ser. No. 60 523 047 entitled Network that Supports User Initiated Device Management filed Nov. 17 2003 U.S. Provisional Patent Application Ser. No. 60 249 606 entitled System and Method for Updating and Distributing Information filed Nov. 17 2000 and International Patent Application Publication No. WO 02 41147 A1 entitled Systems And Methods For Updating And Distributing Information publication date Mar. 23 2002 the complete subject matter of each of which is hereby incorporated herein by reference in its entirety.

Electronic devices such as mobile phones and personal digital assistants PDA s often contain firmware and application software that are either provided by the manufacturers of the electronic devices by telecommunication carriers or by third parties. These firmware and application software often contain software bugs. New versions of the firmware and software are periodically released to fix the bugs or to introduce new features or both.

Problems often arise while conducting updates of firmware software in such electronic devices problems such as for example managing the millions of devices that require firmware upgrades and provisioning of applications. Sometimes there can be problems in determining the existing firmware version of devices and mapping them to device capabilities.

Electronic devices may use update packages containing information necessary to update firmware software in electronic devices. Update packages may be downloaded into handsets such that their software and or firmware could be updated. Executing instructions in update packages can take a significant amount of time which may be bothersome to users of electronic devices.

Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of ordinary skill in the art through comparison of such systems with the present invention.

Aspects of the present invention may be seen in a network and method that facilitate managing associated electronic devices. The network may comprise a management server that manages the electronic devices in the network a first manager that creates bundles of actions for the electronic devices and a broker that determines a sequence of execution of the actions in the electronic devices wherein the broker utilizes the management server to interact with the electronic devices. In an embodiment of the present invention an electronic device may comprise at least one of a mobile handset a cellular telephone a pager a personal computer and a personal digital assistant PDA .

In an embodiment of the present invention the first manager may interface to a second manager to retrieve information about the electronic devices in the network. The second manager may comprise a component external to the network.

In an embodiment of the present invention the actions may comprise electronic device management and provisioning activities and or updating firmware in the electronic devices.

In an embodiment of the present invention the broker may retrieve information about the electronic devices in the network to determine the sequence of execution of the actions. The broker may determine the sequence in which the electronic devices receive the bundles of actions for execution. The bundle of actions may comprise a sequence of operations to be executed by recipient electronic devices. The broker may receive a signal from each electronic device upon completion of execution of the actions in the electronic device and the broker may signal to the management server the completion of execution of actions in the electronic devices.

The method that facilitates managing associated electronic devices may comprise receiving a request to update at least one of a plurality of electronic devices in a network creating a bundle of actions for the at least one of a plurality of electronic devices to perform determining a sequence of execution of the actions in each of the at least one of a plurality of electronic devices reporting a status of the execution of the actions in each of the at least one of a plurality of electronic devices and signaling completion of the execution of the action in each of the at least one of a plurality of electronic devices.

In an embodiment of the present invention creating the bundle of actions may comprise retrieving information about the at least one of a plurality of electronic devices and creating a sequence of operations to be executed in the at least one of a plurality of electronic devices based on the retrieved information.

These and other features and advantages of the present invention may be appreciated from a review of the following detailed description of the present invention along with the accompanying figures in which like reference numerals refer to like parts throughout.

The present invention relates generally to updating firmware software in an electronic device such as for example a mobile handset in a carrier network. More specifically the present invention relates to updating firmware software components in electronic devices using a device management solution and using a broker for device management DM in the network. Although the following discusses aspects of the invention in terms of a mobile handset it should be clear that the following also applies to other mobile electronic devices such as for example personal digital assistants PDAs pagers personal computers PCs and similar handheld electronic devices.

In an embodiment of the present invention the network may have a device management server which may execute SyncML DM commands and manage the mobile handsets in the network . The network may employ the broker to execute bundles that may comprise device management and provisioning activities provisioning parameters etc. The broker may determine the sequence in which these device management and provisioning activities should be executed. The broker may also employ the device management server to conduct the DM operations to interact with the associated mobile handset such as for example the mobile handset . The broker may employ a bundle manager to define bundles and create instances of bundles.

The bundle manager may transform a bundle template into final form given up to date make model and version information. The bundle manager may interface to a subscriber manager such as for example the subscriber manager to retrieve subscriber specific information. The subscriber manager may be an external component which may be provided by for example a carrier capable of providing subscriber specific information that may be needed for complete application provisioning.

In an embodiment of the present invention the broker may drive the DM activities that the DM server may execute. In an embodiment of the present invention the DM server may be a DM protocol gateway and it may support the Sync ML DM protocol for communicating with and managing the mobile handset.

In an embodiment of the present invention the broker may be designed to manage the delivery of various forms of parameters and content to mobile handsets in the network using available provisioning device management and download protocols. The broker may be designed to manage delivery using protocols such as for example Open Mobile Alliance OMA DM OMA Download and OMA Client Provisioning protocols. In an embodiment of the present invention the broker may be designed to support additional protocols such as for example Wireless Application Protocol WAP Nokia OTA and Openwave PP.

The broker may be a middleware component that may allow higher level software to perform various firmware and software provisioning operations across multiple download and provisioning protocols. The broker may allow a caller to execute an update bundle of download and provisioning operations to be carried out on one or more mobile handsets . The bundles may be represented by for example Extensible Markup Language XML documents that specify sequences of multiple operations to be performed on a given device type in a specific order. A bundle may be a collection of device initialization upgrade and application provisioning steps to be executed in sequence across the protocols needed to achieve the needed changes.

At a next step the OMA DM server may be invoked to discover the device identification make model and version information. In an embodiment of the present invention version identification may involve the retrieval of multiple values such as for example firmware version software version flex version etc. An appropriate firmware upgrade package needed to update the device with the appropriate firmware may then be selected based on the current firmware version and localization information as specified by the update bundle at a next step . The firmware may be downloaded using an OMA download protocol and the device may be updated and rebooted with the updated firmware.

At a next step new applications and a new screen saver based on information provided within the update bundle may be downloaded. Then using the appropriate protocol e.g. OMA DM OMA Client Provisioning WAP etc. the device application parameters such as browser settings bookmarks multimedia messaging service MMS parameters etc. may be provisioned at a next step . The sequence of the bundle operations may then end at an end block .

The specific operations that make up a bundle may be specific to a device type firmware version resulting capabilities carrier specified subscriber plans and subscriber selected options. Bundles may as a result be created as bundle templates which may later be processed into final form once a device is identified and the firmware is updated to a known set of capabilities.

Referring again to the broker may use the bundle manager to process the bundle templates into final form given the up to date set of device capabilities resulting from the device identification firmware upgrade process. The bundle manager may also add any subscriber specific application options and related values such as for example email user ID s and passwords in creating the final form bundle. Subscriber specific data may be processed into the final bundle by substituting subscriber specific values for placeholder tokens in the bundle template.

The broker may provide an interface that may allow a caller to initiate a job to apply a template bundle to one or more devices as may be specified by one or more mobile handset numbers mobile subscriber integrated services digital network MSISDN number mobile identification number MIN etc. . The actual device type and version information may be retrieved prior to the creation of the final bundle.

Each job may be assigned a unique job ID for the purpose of reporting status for a specific job. Upon completion of the entire sequence of operations the caller may be notified via a callback to report job status to a specified universe resource locator URL . During the execution of the job the caller may invoke the broker to retrieve intermediate status concerning the state of the job using the job ID.

In an embodiment of the present invention the broker may for example be responsible for managing all operations across all protocols as needed to execute the entire sequence of operations contained within the final bundle. The sequence of operations in the final bundle may include all possible error recovery with restart immediately following the last successfully completed operation. Additionally each operation within a bundle may specify whether an unrecoverable error at a specific step in the sequence should abort the remaining operations or simply move on to the next step in the sequence for example.

The broker may be invoked by a higher level component to upgrade and provision mobile handsets in the network as defined by their mobile phone numbers for example. This action may be triggered by several situations such as for example when a new subscriber is detected on the network. Another situation may be for example a customer care representative provisioning a new phone either at the point of sale or during a subscriber call to a customer care center. Yet another situation when the upgrading and provisioning action is triggered may be for example when a carrier administrator issues a request to initialize or upgrade a collection of devices perhaps due to a desire to upgrade the firmware of a specific set of devices. In such situations the request may be first handled by some higher level software that may have the ability to handle the scheduling of such operations implement some type of throttling to prevent network overload and resolve the request down to the set of mobile numbers used to contact the required devices.

A list of one or more mobile phone numbers representing subscribers whose devices are to be provisioned and or upgraded may be passed to the broker . The broker may then detect and or update the device and its capabilities and create the final bundle of operations needed to bring the device to the required state. Prior to creating the final bundle the broker may invoke the OMA DM server to retrieve device information such as for example the device ID make model and version information that may be used to transform the bundle into final form.

The broker may use the bundle manager to translate the template bundle to final form. During this process the bundle manager may use for example the mobile phone number to retrieve subscriber specific information from the carrier s subscriber manager component . The bundle manager s interface to the subscriber manager may provide such information for example as what applications to provision e.g. bookmarks MMS personal information manager PIM Sync etc. and to retrieve subscriber specific values e.g. email user ID and password wherever identified by placeholders within the bundle template.

At a next block the broker may invoke an OMA DM server such as for example the OMA DM server to retrieve device information such as for example the device ID make model and all appropriate software and firmware version information. Through the DM server the broker may then at a next step send the management server MS a URL through which the management server may contact the broker for further instructions after the current OMA DM session. This URL callback from the device may provide the basic mechanism by which the broker requests that the device perform subsequent DM sessions or OMA download operations without the use of an additional SMS push notification.

The device and version ID results retrieved from the MS by the DM session may then be used by the broker at a next step to determine what firmware version the device may already have and whether there may be a firmware upgrade pending for that device. This information may then be passed to the bundle manager at a next step to determine what firmware if any may be downloaded and installed and to transform the template bundle into final form based on the resulting set of device capabilities and applicable user settings as retrieved by the bundle manager from the subscriber manager . When the MS invokes the URL passed to it the broker may defer its response until it receives the results used to create the final bundle. When the URL is posted and the final bundle is created the broker may be ready to proceed to the next step which may depend on the response received by the broker . The response may be a request to initiate a new OMA DM session through which the MS may receive the next set of instructions e.g. to perform a firmware upgrade a request to initiate a download operation from a specified URL or a signal that there are no further operations to be performed.

If a device requires a firmware upgrade the MS may be instructed to initiate a DM session where the firmware upgrade instructions are provided at a next step . In this case the firmware upgrade may proceed and when completed the MS may signal a completion status to the broker which may receive further instructions e.g. additional steps to be executed within the bundle sequence .

If a firmware upgrade is performed it may be the first step executed in the bundle sequence to ensure that the device has the necessary capabilities to be able to process the subsequent steps in the sequence as intended. A subsequent step may be for example performing an OMA download from a specific URL where the broker may simply provide the MS with the appropriate URL and the MS may be responsible for contacting the download server. Upon completion the MS may again post the broker s status URL to report status and get its next instruction or completion as the response. Another subsequent step may be for example starting an OMA DM session for the purpose of provisioning application parameters that may be provisioned using the OMA DM protocol where the broker may invoke the OMA DM sever to create a pending session in which the DM server may wait for the MS to initiate the DM session. Upon completion of this session the MS may again post the broker with status and get its next instruction as a response. Yet another subsequent step may be for example calling an external OMA client provisioning server for the purpose of provisioning application parameters that are to be provisioned using OMA client provisioning. The client provisioning server may report completion upon successfully issuing a SMS message to the MS . Additionally if there is more work to be done a new OMA DM session may be initiated using the OMA DM server to reestablish communication and continue the provisioning process.

Once the last operation is completed the broker may record the final status and respond to the MS that there are no further instructions to be processed at a next step . Once all operations are complete for all devices in a given job at a next step the broker may report final status for the job back to the request initiator via a callback to a location such as for example a URL provided by the requestor at request initiation time. Using the job ID the requestor may also request current status of the request at any time to monitor progress in terms of how each device has progressed through each step in its sequence of operations.

Referring again to the broker may be installed such that it interacts with the device management server DM Server the bundle manager BM and the scheduling manager SM . As such application programming interfaces APIs for each of these three interfaces may make it possible to exchange data between the entities. The broker may also interact with the DM server the client provisioning server the download server etc.

In an embodiment of the present invention the broker interface to the DM server may support several APIs. One such API may make it possible to communicate an XML based set of commands that the broker may want the DM server to execute wherein the XML may comprise a collection of commands such as for example Get Replace Exec etc. The Get command may be associated for example with a uniform resource identifier URI in which case the data in the client at that URI may be retrieved and returned to the broker . The following command may initiate communication with the DM server 

Where the values retrieved by the Get commands may be returned as name value pairs. The parameter String transactionID may be associated with the results returned.

Another API command may be for example retrieveStatus String requestIDs which may make it possible to retrieve status for specific requestIDs. When the broker wishes to know the status of tasks that have been initiated on the DM server for which status information may not have been retrieved yet the broker may send a collection of requestIDs to the DM server in order to determine their status. The XML document an example of which is shown below that may be associated as a parameter may specify requestIDs the status for which may be retrieved 

Another API command such as for example bootstrapDevice String transactionID String MSISDN may make it possible to invoke a bootstrap operation on a specific device the MSISDN of which may be provided in the associated parameter.

In an embodiment of the present invention the broker interface to the scheduling manager may support several APIs. The scheduling manager may deliver references MSISDN for example to individual or sets of mobile stations as targets for the delivery of bundles. Each such delivery either individually or in a set may be associated with a transaction ID that may be the basis of further tracking and reporting. One associated API command may be the following 

The status for a specified JobId may be returned. If the JobId has a set of mobile stations associated with it then a collection of statuses may be reported. If the JobId has only one individual mobile station associated with it then the status for the particular mobile station may be reported

In an embodiment of the present invention the broker interface to the bundle manager may support several APIs. The bundle manager may deliver templates for the bundles or completely instantiated bundles when device specific information and subscriber specific information is provided. The bundles retrieved from the bundle manager may be executed by the broker . The MSISDN of a mobile station may be known to the broker but the firmware version may not be known initially. The broker may retrieve the firmware version of the mobile station via for example the DM server in order to assemble the right bundle for the mobile station. One associated API command may be the following 

In an embodiment of the present invention a bundle may be created by the bundle manager and may define the components to be provisioned. The initial bundle created may be a template bundle with placeholders for subscriber specific information. When the final firmware version device capabilities and subscriber preferences are known a final bundle instance may be created. The bundle may define the steps and their order of execution for provisioning various components like software firmware configuration parameters etc. across appropriate protocols. The following is an exemplary specification of the output of the creation process and how these templates may be processed into the final form 

A final form bundle may have all the placeholders filled in. The following exemplary code tells the broker to update the firmware from source version 1.2.3 to 1.2.5 provision the EMAIL Settings using OMA Client Provisioning protocol and install a new game 

The following exemplary bundle specifies to update the firmware from source version 1.2.3 to 1.2.5 provisions the EMAIL Settings using OMA DM and install a new game 

The present invention may be realized in hardware software firmware and or a combination thereof The present invention may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein may be suitable. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system to carry out the methods described herein.

The present invention may also be embedded in a computer program product comprising all of the features enabling implementation of the methods described herein which when loaded in a computer system is adapted to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation and b reproduction in a different material form.

While the present invention has been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the present invention without departing from its scope. Therefore it is intended that the present invention not be limited to the particular embodiment disclosed but that the present invention will include all embodiments falling within the scope of the appended claims.

