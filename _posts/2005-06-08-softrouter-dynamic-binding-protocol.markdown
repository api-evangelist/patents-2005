---

title: Softrouter dynamic binding protocol
abstract: A dynamic binding protocol has three tasks that run in parallel: discovery, association, and operation. During discovery, control elements (CEs) and forwarding elements (FEs) learn about immediate neighbors and CEs in a SoftRouter network that has separate control and data planes. During association, FEs associate with CEs and are configured with basic parameters, such as IP interface addresses, hostnames, and the like. During operation, failover and packet tunneling between CEs and FEs is handled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08953432&OS=08953432&RS=08953432
owner: Alcatel Lucent
number: 08953432
owner_city: Boulogne-Billancourt
owner_country: FR
publication_date: 20050608
---
The present application claims the benefit of provisional application No. 60 623 885 entitled SoftRouter Router Disaggregation filed Nov. 1 2004. In addition the present application is related to copending applications Ser. No 11 147 642 entitled SoftRouter Ser. No. 11 147 472 entitled SoftRouter Protocol Disaggregation Ser. No. 11 147 665 entitled SoftRouter Protocol Failovers Ser. No. 11 147.937 entitled SoftRouter Separate Control Network Ser. No. 11 147 768 entitled SoftRouter Feature Server which were filed on the same date as the present application Jun. 8. 2005. The provisional and related applications are incorporated herein by reference in their entireties.

The present invention relates generally to the field of networking and in particular relates to a dynamic binding protocol in an exemplary SoftRouter architecture.

Traditional router architectures are becoming increasingly complex today as more and more features are being added to the Internet control plane. Many operational tasks such as routing policy enforcement or traffic engineering require network wide control that is difficult and cumbersome to achieve in a network of autonomous and complex routers. Moreover current routers have the route controllers tightly coupled with the forwarding engine and this static binding often results in shared failures.

Despite the end to end architecture design principle that aims at a simple core network traditional router architectures have gotten increasingly complex today. As new features are being defined by the Internet Engineering Task Force IETF in requests for comments RFCs more and more control plane complexity is being added at the routers. These features include routing e.g. BGP based MPLS VPNs traffic engineering e.g. OSPF TE security and the like. In fact the code complexity of an IP router now rivals that of a telephony switch. In contrast the forwarding path implementation has progressively become easier with rapid advances in large scale hardware integration e.g. ASIC and ready availability of off the shelf chips.

Traditional IP networks are constructed using routers that operate relatively autonomously. The potentially unmanageable complexity is present at many points all over the network. This has many undesirable consequences. First the multiple points of control significantly increase operational complexity e.g. misconfiguration . Second in certain circumstances uncoordinated actions of these autonomous routers can lead to sub optimal performance e.g. poor recovery time at best and network instability in the worst case. Finally the introduction of new features may require upgrades to a large number of routers which is both complex and error prone.

Traditional router architectures have integrated control and forwarding. The control processors implementing control plane functions are co located with the line cards that implement forwarding functions and often share the same router backplane. The control processors provide control functions only to the co located line cards and vice versa leading to a scenario where the line cards cannot be managed when there is a failure of the co located controller s .

Various deficiencies of the prior art are addressed by the present invention of a dynamic binding protocol for an exemplary SoftRouter architecture which has many embodiments.

One embodiment is a dynamic binding protocol process where forwarding element FE to control element CE communication paths are dynamically established and traffic transport is controlled for a network. The network includes a data plane and a control plane that are physically and logically separate. The data plane includes a plurality of FEs for packet forwarding. The control plane includes a plurality of CEs for configuring controlling and providing routing information to the FEs via a standard protocol. Another aspect is a storage medium storing instructions for performing this method.

Yet another embodiment is a network architecture including a data plane and a control plane that are physically and logically separate. The data plane includes a plurality of FEs for packet forwarding. The control plane includes at least one CE for configuring controlling and providing routing information to the FEs via a standard protocol. There is a dynamic binding protocol for establishing FE to CE communication paths and controlling traffic transport. The dynamic binding protocol has a discovery task an association task and an operation task.

Yet another emobodiment is a dynamic binding protocol process. FEs and CEs send periodic hello neighbor messages. FEs and CEs send periodic solicitation messages. CEs send advertisement messages in response to the solicitation messages. FEs send reachability messages in response to the solicitation messages. FEs aggregate and propagate the advertisement and reachability messages. FEs associate with CEs so that each FE has associated CEs controlling it. CEs configure the controlled FEs.

Yet another embodiment is a dynamic binding protocol process including booting a control element CE to bring it from a down state to an up state. The CE receives solicitation messages. The CE propagates its identity though advertisement messages. It is determined whether the CE is associated with any forwarding elements FEs and if so the CE controls them.

Still another embodiment is a dynamic binding protocol process including booting a forwarding element FE to bring it from a down state to an up state. The FE receives a control element CE or FE solicitation message and responds to the CE or FE solicitation message by propagating CEs in reachability messages. The FE responds by requesting an association after collecting a set of CEs. The FE receives an association acceptance from the CE. The FE sends heartbeat message to the associated CE and receives heartbeat acknowledgement messages from the associated CE.

Still another embodiment is a dynamic binding protocol process including receiving solicitation messages and responding to the solicitation messages by propagating CEs in reachability messages and by requesting an association after collecting a set of CEs. An FE receives an association acceptance from a CE and is controlled by that CE. The FE responds to the association acceptance by requesting an activation and receives an activation response from the CE. The FE sends an activation request to a backup CE upon failure of the associated CE and receives an activation acknowledgement from the backup CE and is then controlled by the backup CE.

To facilitate understanding identical reference numerals have been used where possible to designate identical elements that are common to the figures.

The invention will be primarily described within the general context of an embodiment of an exemplary SoftRouter architecture however those skilled in the art and informed by the teachings herein will realize that the disaggregation concept may be used to generate various other embodiments of network architectures and that the invention is applicable to local area networks LANs metropolitan area networks MANs wide area networks WANs and other networks many open systems interconnection OSI layers gateway protocols serial line protocols protocol stack routing and bridging protocols many other protocols traffic management optical edge core routing wireless cable data centers auxiliary signal path ASP fault management configuration management accounting management performance management security management other network management enterprise government military applications and many other different kinds of networking characteristics and applications.

Internet protocol IP provides end to end datagram delivery service to protocols and applications and can use many different link layer technologies to deliver packets. illustrates the problem of emerging applications requiring more functions of the IP layer expanding the middle of the hour glass. These emerging applications include email www phone simple mail transfer protocol SMTP hypertext transfer protocol HTTP routing table protocol RTP transmission control protocol TCP user datagram protocol UDP and other protocols which involve quality of service QoS multicast mobility virtual private network VPN and other features and are transported using Ethernet point to point protocol PPP carrier sense multiple access CSMA ASYNC a subset of teletypewriter TTY synchronous optical network SONET and other protocols over copper fiber radio and other physical transport means. Traditional router architectures try to incorporate all of the new IP functions into routers resulting in duplication of complex functions in multiple routers of a network. This also increases capital and operational expenses. In general there is a need to reduce the complexity and expense of operating a network of routers.

Many new features are being added to routers e.g. border gateway protocol BGP multiprotocol label switching MPLS based VPNs and traffic engineering TE . Traditional router architectures have five to ten million lines of code and complexity is spread throughout the network. Achieving an operator s network wide objectives such as traffic engineering requires complex translation of global objectives to configuration information in numerous individual routers. Misconfiguration or uncoordinated configuration can result in poor performance or network instability.

The enormous success of the Internet has led to constant development and deployment of new features and services that have increasingly placed its technical foundations under stress. This has given credence to the notion that re architecting the current distribution of functions in an IP network would lead to significant benefits in network stability simplification of network operations and flexibility in introduction of new network protocols and services.

Many advanced network management tasks such as routing policy enforcement and traffic engineering would benefit significantly from the availability of a network wide view. For instance several common BGP induced network stability and operations problems would be solved by moving BGP from a group of individual routers to a single entity with autonomous system AS wide scope. Similarly many management functions require a network wide view without which a network can exhibit oscillation and poor stability. However network wide control is difficult and cumbersome to achieve in today s network of autonomous and complex routers.

In the traditional router architectures the underlying theme is the deep intertwining of control and forwarding functions in current routers. There is a need to deconstruct routers to keep most of the network entities as dumb as possible by reducing their function to support only a few canonical packet forwarding functions and migrate all control protocols and non forwarding related state and control processing to a few smart network based control entities with the primary function of network wide control. Such a deconstructed router benefits from a dynamic binding protocol for binding control elements and forwarding elements.

Wis the predetermined number of waiting periods of tuntil the link to a neighboring FE is declared down.

Ris the predetermined number of retries to obtain a configuration from a CE before switching the next CE.

Disaggregation of router hardware from router software using open standards based protocols for internetworking has many benefits. The disaggregation concept decouples suppliers for each component which lowers barriers to entry for hardware vendors and encourages independent software vendors ISVs to invest in developing carrier class routing software to supply new hardware market entrants. This disaggregation concept allows each component to focus on its own innovation curve. Hardware manufacturers can focus on the highest speeds per density at the lowest costs decreasing capital expenditures and software manufacturers can focus on new applications and manageability increasing revenue while decreasing operating expenses.

An embodiment of an exemplary SoftRouter architecture deconstructs routers by separating the implementation of control plane functions from packet forwarding functions. Other embodiments of network architectures that achieve this deconstruction are also within the scope of this invention. The present invention encompasses the concept of this deconstruction and its implications for network architecture. In the exemplary SoftRouter architecture all control plane functions are implemented on separate control entities that are not required to be co located with the forwarding engines. By migrating all non forwarding related state and control processing to a few network based control entities simpler implementation of network wide objectives are possible because coordinated configuration changes are required at only a few smart network elements instead of all the network elements in an AS. In addition the association between controllers and the forwarding engines is dynamic allowing flexible control of a forwarding engine by any control entity that is capable of doing so.

The exemplary SoftRouter architecture includes a dynamic binding protocol for establishing and maintaining dynamic bindings between forwarding entities and the control entities in the network. Intra domain and inter domain routing is adapted in the exemplary SoftRouter architecture with improved performance including improved performance for the intra domain protocol OSPF.

Disaggregation of router hardware from router software using open standards based protocols for internetworking has many benefits. The disaggregation concept decouples suppliers for each component which lowers barriers to entry for hardware vendors and encourages independent software vendors ISVs to invest in developing carrier class routing software to supply new hardware market entrants. This disaggregation concept allows each component to focus on its own innovation curve. Hardware manufacturers can focus on the highest speeds per density at the lowest costs decreasing capital expenditures and software manufacturers can focus on new applications and manageability increasing revenue while decreasing operating expenses.

An exemplary embodiment of an exemplary SoftRouter architecture is an approach to disaggregating the complex router functions demanded by emerging applications. SoftRouter centralizes and allows sharing of complexity. SoftRouter enables scalable introduction of new functions without unduly encumbering IP forwarding functions.

By contrast shows a high level abstraction of an exemplary SoftRouter architecture that disaggregates the control and transport planes in separate hardware that communicate using standard protocols. The SoftRouter architecture has a control element and features server component and a packet forwarding element component that communicate using a standards based protocol .

Deconstructing routers in the exemplary SoftRouter architecture separates the control and forwarding functions. This separation is more than logical e.g. the use of a well defined interface with a modular application programming interface API in fact the control is physically separated i.e. executed in a distinct network element by multiple hops from where the forwarding is performed.

A FE is a network element that performs the actual forwarding and switching of traffic. In construction a FE is similar to a traditional router in that it may have multiple line cards each in turn terminating multiple ports and a switch fabric for shuttling data traffic from one line card to another. However a FE is different from a traditional router because there is an absence of any sophisticated control logic e.g. a routing process like OSPF or BGP running locally. Instead the control logic is hosted remotely.

A CE is a general purpose computing element such as a server. It connects to the network like an end host except that it is typically multi homed to the network via multiple FEs so that it is not disconnected from the network when a single link fails. A CE runs the control logic on behalf of FEs and hence controls them. Any control logic typically found on a traditional router can be migrated to the CEs including routing protocols like OSPF and BGP as well as protocols such as resource reservation protocol RSVP label distribution protocol LDP Mobile IP and the like.

An FE functions to forward data traffic between its links. This function may take various forms such as packet forwarding label switching and optical switching among others. Packet forwarding includes both layer 2 medium access control MAC based switching and layer 3 longest prefix match forwarding. Label switching includes for example MPLS forwarding. The data path forwarding functions can include label swapping pushing and popping. In optical switching the traffic can be time switched wavelength switched or space switched among the links. In each of these cases the switching function is driven by a simple local table that is computed and installed by a CE in the network. Thus the ability of a FE to do its work based only on a local data structure means the FE is designed to be dumb and fast while the more complex logic is relegated to a remote yet smart CE .

Both FEs and CEs are understood as logical entities in addition to physical network elements. Specifically a FE is logically defined as a collection of ports where traffic can be switched among one another. For example a FE may include all ports on a single line card in which case the whole physical packet switch is made up of multiple logical FEs . An FE can also span more than one physical switch however a CE can control multiple FEs. Similarly a CE can be understood as a logical process instantiated for providing control on behalf of FEs and can be distinguished from the server machine that actually executes it. In particular a physical CE server machine PCE can host multiple CE processes each serving a different collection of FEs . Vice versa it is also possible for multiple CE processes each instantiated for a different control purpose such as interior gateway protocol IGP and exterior gateway protocol EGP serving the same FE to be hosted on distinct PCEs. The physical and logical definitions of FEs and CEs are used interchangeably.

Without additional restrictions the above definition of NE allows flexibility. For example this definition allows two FEs in disjoint parts of a network to belong to the same NE . It also allows for a traditional router model where the FE includes exactly all the ports in the physical element and the controlling CE s are collocated on the same element.

In clustered routing the FEs making up a NE are part of a contiguous cloud. In other words all ports of the NE are reachable from each other via links internal to the NE . Physically this represents the clustering of neighboring physical FEs into a single NE . A typical scenario is that of several routers being connected back to back in a central office. From a routing perspective this clustering based definition of the NE can provide significant simplification. The reduced number of NEs in the routing view reduces the inter NE routing complexity and a different possibly less complex routing protocol can be employed for intra NE routing.

The control relationship between an FE and a CE is formally called a binding. More precisely a binding between a FE and a CE means that the CE is performing particular control functions on behalf of the FE . Because multiple protocols e.g. IGP and EGP or even multiple instances of a protocol may be required for the operation of a FE a FE may have multiple CE bindings.

The exemplary SoftRouter architecture includes various protocols. A number of different protocols are used for the operation of a network designed according to the exemplary SoftRouter architecture including dynamic binding protocol and FE CE transport protocol. The binding between a FE and a CE is established via a protocol that discovers CEs and FEs and also maintains these bindings in the face of network disruptions. In the most general case of the dynamic binding protocol an FE can bind to any available CE and a CE can perform control functions for any FE thus yielding maximal resiliency and minimal configuration overhead. This dynamic binding ability is a feature of the concept of deconstructed routers that have separate control and forwarding functions. The FE CE transport protocol has two parts namely data and control. For the data part the FE CE transport protocol supports tunneling of routing protocol packets between FEs and CEs so that a routing protocol packet received by an FE can be sent to a CE for processing. For the control part once a binding is established the FEs and the CEs use the FE CE transport protocol to communicate state information and perform control. On the uplink FE to CE direction this control part provides link and forwarding state information e.g. link up down signal to the CE . On the downlink direction the FE CE transport protocol carries configuration and control information e.g. enable disable a link forwarding information base FIB . Known protocols such as forwarding and control element separation ForCES may be used for the FE CE transport protocol.

An exemplary embodiment of the dynamic binding protocol establishes forwarding element FE to control element CE communication paths and controls traffic transport. When a FE boots routing is not available and FEs are only configured with a unique identifier FEID . Each FE discovers its CEs and initiates communication to allow higher layer applications such as open shortest path first OSPF to install routes. The FE to CE communication path is monitored and switched to a backup CE in case of a failure. Each CE is identified through its unique identifier CEID . This exemplary dynamic binding protocol is Internet protocol IP routing independent. This exemplary dynamic binding protocol also acts as a fallback protocol to allow CE to FE control communication for example when a regular routing failure leaves a FE unreachable.

An exemplary embodiment of a dynamic binding protocol a k a Dyna BIND includes various protocol specifications message types state machines and message formats. The Dyna BIND protocol is used to associate an FE with a CE in a NE. The Dyna BIND protocol is used during the boot up phase of an FE CE and helps a FE discover a CE. The Dyna BIND protocol runs all the time in the elements of the exemplary embodiment of the SoftRouter architecture managing and maintaining associations between FEs and their corresponding CEs. The Dyna BIND protocol does not support discovery or maintenance of inter FE topology within a NE. Data path forwarding topology discovery and maintenance are handled by a different protocol within a NE.

This exemplary Dyna BIND protocol is based on a pull model where the FE takes the responsibility of discovering its local neighborhood discovering and maintaining association with a CE and obtaining the basic configuration information from the CE. This is different from the push model for the operation of the FE in the later phases under a different protocol and NE routing protocols.

In this exemplary Dyna BIND protocol FEs and CEs continuously try to learn the path to all CEs in the network. They periodically t broadcast hello messages on all their interfaces to allow neighbor discovery. Also they periodically t solicit CE information by broadcasting solicitation messages on all of their interfaces. On reception of a solicitation message FEs respond with a reachability message and CEs respond with an advertisement message. On reception of a reachability or advertisement message FE or CE create an adjacency entry in their neighbor table storing the neighbor CEID or FEID along with the interface and an aging parameter w t. If a reachability or advertisement message is not received in wperiods the adjacency is declared invalid. Advertisement messages propagate the CEID of the issuing CE along with a single hop source route to the CE. Reachability messages propagate to neighboring FEs aggregated CEIDs and their corresponding source routes. FEs derive source routes to CEs from advertisement or reachability messages whereas CEs derive source routes to a FE from the last received message.

A FE stores CEIDs and corresponding source route in its CE table. Each table entry is associated with an age parameter which specifies the number of seconds remaining before the entry should be deleted from the table. If the CEID of a received reachability or advertisement message is unknown a new entry is added and the initial age value is taken from the corresponding message entry. If a CEID already has a table entry the age is updated. A CE stores FEIDs and corresponding source route in its FE table along with an age parameter w t which specifies the number of seconds remaining before the source route to the FE should be declared invalid. The elements in the FE table are predefined through configuration and identify the FEs which the CE is able to control as primary or backup.

In this exemplary Dyna BIND protocol a FE that is not associated with any CE waits for ttime to populate its CE table or the time it takes to find at least one CE which ever is higher. Once this time passes the FE picks one CE from the CE table and contacts the CE with an associate request message using the source route in the CE table. If the CE is willing to accept this FE then it responds to the FE with an associate accept message. The route from the CE to the FE is obtained by reversing the source route in the request message. When a CE is not willing permitted to configure a FE that requests association then it might know which CE is capable of managing that particular FE. If so then this information is reported to the FE in an optional associate reject message. If the FE does not receive an associate accept or associate reject within t the associate request is retransmitted. After rretries the FE selects the next CE in its table. If all CEs have been tried the FE starts from the beginning. This loop runs indefinitely until an association is obtained.

After receiving an associate accept the FE responds with a configure request message to the CE which allows the CE to configure the FE appropriately. The configuration is done by some method between the CE and the FE and the CE conveys the configuration to the FE in a configure response message. If the FE does not receive a configure response within t the configure request is retransmitted. After rretries the FE selects the next CE in its table. If all CEs have been tried the FE starts from the table beginning.

After receiving a configure response message the FE responds with an activation request message to the CE which indicates the CE that the FE is ready for operation. The CE acknowledges with an activation response. After tretries the FE selects the next CE in the table. If all CEs have been tried the FE starts from the table beginning. The FE association of the previous CE will age out after t. Note that the CE table will continue to be populated during this time based on the reachability messages described earlier. After activation the FE tries to associate a backup CE by cycling the CE table and sending associate request messages. The primary CE table entry will not be considered for backup. Since every FE is assumed to be connected to its corresponding CE either directly or indirectly each FE will eventually come to know of the CE that is capable of managing it. This will ensure that each FE will eventually reach its managing primary CE and hence will be configured. For each FE there exists one primary CE and at least one backup CE. The currently active CE is the managing CE which can either be the primary CE or the backup CE.

Once a FE is associated with a CE the FE periodically t exchanges a heartbeat message with the CE. The FE is responsible for maintaining the association with the CE. The CE acknowledges every heartbeat message sent by the FE. When the FE does not receive this acknowledgement message for more than wperiods the association is declared invalid and the FE tries to re associate to a CE. If a CE does not receive heartbeat messages for wperiods of t the association is declared invalid.

After FE CE association payload messages provide higher layer protocols with a communication path. Higher layer protocols are encapsulated in payload messages and exchanged between associated FE and CE. No guarantees are given for reliable in sequence delivery. Higher layer packet exchange is only possible between associated CEs and FE.

This exemplary Dyna BIND protocol includes various messages which are always broadcasted. If layer 3 interface addresses are used for transport limited broadcasts or multicast addressing ensure message delivery even if the remote peer chose an IP address belonging to a different subnet. The exemplary message formats include a message length in bytes that is less than a predetermined maximum message size such as 2 65536 bytes. The checksum is typically 2 bytes long and is either zero no checksum or 16 bit one s complement of the one s complement sum. The initial value for sequence numbers is chosen randomly and then incremented by one for every message sent and rolled over if the maximum value is reached in this exemplary Dyna BIND protocol. Exemplary message types and formats are provided but other embodiments of the Dyna BIND protocol are envisioned e.g. usage of bridging with spanning tree instead of source routing .

The solicitation message is also used when the association is disrupted temporarily to discover a different CE or an alternate route to a desired CE. When this option is used the message includes an identifier pertaining to the CE that was last associated with the FE and the source route used to contact the CE.

There are five CE originated messages CE advertisement associate accept CE associate reroute configure response and heartbeatack.

There is an embodiment of an exemplary state machine for the Dyna BIND protocol. The state machine includes various states the variables and the tables maintained and the state transitions associated with elements of the network running an embodiment of the Dyna BIND protocol.

After booting the FE remains in the collecting state for tseconds while establishing neighbor adjacencies and soliciting neighbors for CEs and their source routes.

In the try associating primary state the FE iterates the CE table tries to associate a primary CE and waits for a response. If the timeout event i.e. no response in time period tand after rretries is generated the FE tries to associate with the next CE in the CE table.

In the try configuring primary state the FE sends a configure request message and waits for a response. If the events timeout i.e. no response in time period t or primary invalid i.e. heartbeat fails are generated the FE tries to associate with the next CE in the CE table.

In the try activating primary state the FE sends an activate request message and waits for a response. If the events timeout i.e. no response in time period tand after rretries or primary invalid heartbeat failed are generated the FE tries to associate with the next CE in the CE table.

In the primary up state the FE sends an association request message to associate a backup CE and waits for a response. If the event timeout i.e. no response in time period tand after rretries is generated the FE remains in the primary up state. If the event CE learned is generated a new association request message is sent. If the primary invalid event is generated the FE tries to associate with the next CE in the CE table.

In the primary active state the primary and backup CE are associated and the primary CE is the managing CE activated . If the event backup invalid i.e. heartbeat timeout to backup CE is received the FE tries to associate with a new backup CE. If the event primary invalid i.e. heartbeat timeout to primary CE is generated the FE activates the backup CE and tries to associate a new primary CE.

In the try activating backup state the FE sends an activate request message and waits for a response. If the vents timeout i.e. no response in time period tand after rretries or backup invalid i.e. heartbeat fails are generated the FE tries to associate with the next CE in the CE table.

In the backup up state the FE sends an association request message to associate a primary CE and waits for a response. If the event timeout i.e. no response in time period tand after rretries is generated the FE remains in this state. If the event CE learned is generated a new association request message is sent. If the backup invalid event is generated the FE tries to associate with the next CE in the CE table.

In the backup active state the primary and backup CEs are associated and the backup CE is the managing CE activated . If the event primary invalid i.e. heartbeat timeout to primary CE is received the FE tries to associate a new primary CE. If the event backup invalid i.e. heartbeat timeout to backup CE is generated the FE activates the primary CE and tries to associate a new backup CE.

There are eight events associated with FEs in this embodiment of the exemplary state machine 1 collection expire 2 primary invalid 3 backup invalid 4 timeout 5 CE learned not shown 6 associate response received 7 configure response received and 8 activate response received . Collection expire indicates the end of the CE collection period win the collecting state. Primary invalid indicates that the heartbeat to the primary CE timed out. Backup invalid indicates that the heartbeat to the backup CE timed out. Timeout indicates that no response was received to a sent request. CE learned indicates that a new CE was added to the CE table. Associate response received indicates that an associate response message was received. Configure response received indicates that a configure response message was received. Activate response received indicates that an activate response message was received.

There are two variables associated with FEs in this embodiment of the exemplary state machine neighbor table and CE table. The neighbor table is a local neighborhood database maintained at FE and CE. The neighbor table stores information regarding adjacent FEs and CEs and through which local interfaces to reach them. Neighbors are discovered through the reception of hello messages which provide CEID or FEID of the sender. Hello messages are broadcasted by CEs and FEs periodically every tseconds on all Dyna BIND enabled interfaces. Each neighbor table entry has an age value that is reset whenever a solicitation message is received. An adjacency is removed when no hello message is received within w tseconds. The CE table is maintained at the FE and contains the set of CEs and the routes to them from the FE. The CE table is populated whenever the FE receives either an advertisement or reachability message. Each entry in the CE table is of the form . An entry from an advertisement message is entered as t FEID CEID .

In the waiting for association state the CE is idle. The FE configuration data is known but no contact is established. If an association request message is received a response is sent and the state transitions to waiting for configuration.

In the waiting for configuration state the FE is associated. If a configuration request message is received a response is sent and the state is advanced to the waiting for activation state. The waiting for configuration state may be skipped. If an activation request event is received the state transitions to waiting for activation along with a received activation event. If an association request event is received the FE rebooted unnoticed by the CE heartbeat timeout and the state transitions back to the waiting for association state along with an association request event. If the event heartbeat timeout arises the path to the FE or the FE itself failed and the state transitions back to the waiting for association state.

In the waiting for activation state if an activation request event is received a response is sent and the state advances to the up state. If an association request event is received the FE rebooted unnoticed by the CE heartbeat timeout and the state transitions back to the waiting for association state along with an association request event. If the event heartbeat timeout arises the path to the FE or the FE itself failed and the state transitions back to the waiting for association state.

In the up state the FE is up operational and managed by the CE. If an association request event is received the FE rebooted unnoticed by the CE heartbeat timeout and the state transitions back to the waiting for association state along with an association request event. If the event heartbeat timeout arises the path to the FE or the FE itself failed and the state transitions back to the waiting for association state.

There are seven events associated with CEs in this embodiment of the exemplary state machine 1 association request received 2 association response sent 3 configuration request received not shown 4 configuration response sent 5 activation request received 6 activation response sent and 7 heartbeat timeout . Association request received indicates that an association request message was received. Association response sent indicates that an association response message was sent. Configuration request received indicates that a configuration request message was received. Configuration response sent indicates that a configuration response message was sent. Activation request received indicates that an activation request message was received. Activation response sent indicates that an activation response message was sent. Heartbeat timeout indicates that a heartbeat timeout occurred because no heartbeat request message was received in time.

There are two variables associated with CEs in this embodiment of the exemplary state machine neighbor table and FE table. The neighbor table is described above. The FE table is maintained at the CE and lists the FEs that the CE is able to control. The FE table is populated through configuration data. A table entry reaches the associated state if the corresponding FE associated with the CE. A table entry reaches the activated state if the corresponding FE activated the CE. A table entry has a valid source route in the associated and activated state which is refreshed with every heartbeat message received every tseconds. If a heartbeat message was not received for w tseconds the table entry is moved to the unassociated state with an invalid source route indication.

The processor cooperates with conventional support circuitry such as power supplies clock circuits cache memory and the like as well as circuits that assist in executing the software routines stored in the memory . As such it is contemplated that some of the steps discussed herein as software methods may be implemented within hardware for example as circuitry that cooperates with the processor to perform various method steps. The computer also contains input output I O circuitry that forms an interface between the various functional elements communicating with the computer .

Although the computer is depicted as a general purpose computer that is programmed to perform various functions in accordance with the present invention the invention can be implemented in hardware as for example an application specific integrated circuit ASIC or field programmable gate array FPGA . As such the process steps described herein are intended to be broadly interpreted as being equivalently performed by software hardware or a combination thereof.

The present invention may be implemented as a computer program product wherein computer instructions when processed by a computer adapt the operation of the computer such that the methods and or techniques of the present invention are invoked or otherwise provided. Instructions for invoking the inventive methods may be stored in fixed or removable media transmitted via a data stream in a broadcast media or other signal bearing medium and or stored within a working memory within a computing device operating according to the instructions.

While the foregoing is directed to various embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof. As such the appropriate scope of the invention is to be determined according to the claims which follow.

