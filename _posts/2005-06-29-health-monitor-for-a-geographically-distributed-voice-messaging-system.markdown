---

title: Health monitor for a geographically distributed voice messaging system
abstract: A health monitor subsystem detects and responds to faults within a geographically disperse voice messaging system. The health monitor subsystem comprises agent, manager, interface, and common processes. The agent process monitors a respective voice messaging system component operative on the host. The manager process monitors and manages detected faults on the host. The interface process exposes a status responsive to the host. The common process monitors and manages a platform of hosts. The health monitor subsystem enables monitoring at the component, host, and platform levels.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07680254&OS=07680254&RS=07680254
owner: Glenayre Electronics, Inc.
number: 07680254
owner_city: Duluth
owner_country: US
publication_date: 20050629
---
This application claims priority to U.S. provisional application entitled Health Monitor Subsystem filed on Jun. 30 2004 and accorded application No. 60 584 114 which is incorporated by reference herein in its entirety.

This application is related to co pending U.S. utility patent application entitled Distributed IP Architecture For Telecommunications System filed on Mar. 15 2005 and accorded application Ser. No. 11 080 744 which is incorporated by reference herein in its entirety.

Systems and methods that relate generally to voice messaging are invented and disclosed. More particularly systems and methods for managing a system that communicates messages using a voice messaging architecture with geographically distributed components.

Over the past several decades voice mail has continued to expand and establish itself as a key element in the successful operations of most businesses. Some voice mail systems consist of components that communicate with each other on the client side of a public switched telephone network PSTN and thus have been geographically co located. This can be a great disadvantage for companies that have geographically dispersed offices.

In today s global economy even small businesses may have a need for multiple offices for serving clients interacting with vendors or various other reasons. Presently available wide area networks including the Internet support email video conferencing and other products that allow dispersed business sites appear more seamless and integrated. In addition wired and wireless telephonic networks provide network based voice mail services that are used by small business and personal consumers to communicate with others wherever they may be located. Other telecommunication products have been developed to provide voice mail service to small businesses and other institutions such as schools hospitals government offices and the like. These other telecommunication products generally include local voice message storage.

However a significant problem that still exists for geographically dispersed offices is providing a telephonic system that operates as a single co located system while still serving the specialized needs of the various offices. Establishing a separate data storage facility at each office can be a costly endeavor as duplicative hardware must be purchased and maintained at each site. Furthermore logistics for enabling inter office voice mail access can become complex.

For example it is difficult for an operator of a geographically disperse voice mail system to identify a source of a problem when the system fails to behave as intended. Because hardware components are geographically remote from each other an operator may not be able to physically observe more than one hardware component at any time. In addition an operator may not be cognizant of the actual architecture and operational readiness of the components of the voice mail system.

An embodiment of a subsystem for monitoring the health of a voice messaging system comprises agent manager interface and common processes. The agent process is configured to monitor a respective voice messaging system component operative on a host. The manager process is coupled to the agent process and configured to monitor and manage detected faults on the host. The interface process is coupled to the manager process and configured to expose a status associated with the host. The common process is coupled to the manager process and configured to monitor and manage a platform comprising a plurality of hosts.

Related methods of operation are also provided. An embodiment of a method for monitoring conditions across a geographically disperse voice message system comprises monitoring a first status condition responsive to a respective voice messaging system component operative on a host monitoring a second status condition responsive to the operation of a respective host within the voice messaging system monitoring a third status condition responsive to the operation of a respective platform and providing a network accessible mechanism for discerning the operative health of one of the platform the host and the voice messaging system component.

Other features and advantages of the health monitor subsystem and methods for fault management across a geographically distributed messaging system will be or become apparent to one with skill in the art upon examination of the following figures and detailed description. All such additional features and advantages are within the scope of the health monitor subsystem and methods for fault management as protected by the accompanying claims.

Various embodiments of systems methods computer programs communications platforms etc. that monitor status and respond to system faults will be described with respect to . As an introductory matter however an exemplary embodiment of a distributed telecommunications system with a health monitoring subsystem will be briefly described.

A distributed telecommunications system provides functionality to support modern small or large office business settings such as call forwarding auto attendant voice mail voice messaging etc. The telecommunications system is made up of hardware devices that can be located in various locations that are remote from each other. Each hardware device is coupled to an Internet protocol IP based wide area network. The system provides message storage assurance to subscribers and enables a caller to generate a message and terminate the communication with a voice recorder without having to wait on the line for a confirmation that the voice message was successfully delivered and stored. The system also provides message durability in that once the voice message is recorded the system ensures that despite device and network service outages the voice message is saved in the common message store.

The distributed telecommunication system is configured with a health monitor subsystem configured to detect and contain faults throughout the voice message system and restore service to users of the system. The health monitor subsystem supports fault management for dependent third party processes operative within the system. The health monitor subsystem provides a mechanism for monitoring a set of message handling components on a voice message system host. In addition to providing real time information regarding the operative status of hardware and software components on the host the health monitor subsystem identifies and restarts a component that has failed.

The health monitor subsystem comprises a manager process on each host and an agent process for a component process operative on the host. The health monitor subsystem is flexible in that agent processes can be associated with component processes as desired. For example an agent process can be associated with a component process that implements an important function of the voice messaging system. Alternatively agent processes can be associated with additional and less important component processes operative on the host computing device.

The health monitor subsystem can be configured to interface with a hardware mechanism for restarting the host. Conversely software is used to restart failed component processes on the host.

The health monitor subsystem further comprises an interface process and a common process. The interface process resides on a host and communicates with the manager process to report the overall host status to one or more destinations external to the host. The common process monitors and reports status regarding each of the manager processes operative within a platform. The common process communicates with one or more manager processes on each of the hosts forming the platform.

Each of the manager agent interface and common processes are designed to be configurable. Configuration parameters include service check timeouts maximum concurrent service checks status log names log file locations etc.

While there is a centralized manager process resident on each host the mechanisms for monitoring status information including hardware and component process faults are distributed. Information regarding a component such as when it is operational or when there is a failure condition and dependencies between component processes and component sub processes is distributed. Consequently the health monitor system does not need a centralized rule base that has to be updated each time a dependency between component processes changes on a host.

The health monitor subsystem design is extensible and enables incremental development as features or voice message system requirements are added or modified. For example in an initial release the monitoring performed by agent processes can be focused on critical processes. Furthermore initial monitoring can be broad and coarse. In future releases as operational aspects of the voice messaging system are better understood the manager and agent processes can be fine tuned to provide more accurate and finer grained monitoring of hardware devices component processes and component sub processes.

With regard to all described embodiments it should be appreciated that network communications between remote computing devices are not limited to any particular protocol transmission medium communications network topology architecture etc. Furthermore it should be appreciated that the voice messaging system the health monitor subsystem and any associated services and functions need not be provided over a public network but rather may also be provided over a private network such as a local area network wide area network etc. to name a few examples.

The health monitor subsystem comprises a hierarchical relationship between various functional elements within a distributed voice messaging system. These elements include hosts or hardware devices platforms processes components and sub processes. Each of the various elements is associated with a specific level in the described hierarchy. In the described embodiments a host is a computing device coupled to a network a platform is a plurality of hosts a process is the combination of a computer program and data a sub process is the combination of a computer program and data that is dependent on a particular process a component is a binary object or computer program that performs a specific function and is designed to operate with other components and applications.

Having generally described an exemplary health monitor subsystem that is operative across a distributed voice messaging system various additional embodiments will be described with respect to . illustrates an embodiment of a geographically distributed messaging system comprising a media server document server and a common message store that provides for message storage assurance and durability of voice messages. Media server couples the distributed messaging system to one or more networks. Document server located remotely from the media server manages the storage of voice messages in common message store . The complexities of interfacing to telecommunications networks such as the public switched telephone network PSTN are handled through a signaling gateway function SGF coupled between media server and PSTN . The SigTran protocol is used in the link between media server and SGF and signaling system SS protocol is used to perform out of band signaling in support of call establishment billing routing and information exchange functions between SGF and PSTN . As illustrated in media server is also coupled to PSTN via T E or other multiple channel links.

A voice over IP VoIP gateway integrates the media server with a modular voice processor or other devices that use session initiation protocol SIP . Access control manages the complexities of integrating multiple media servers with Internet protocol IP network . When a single media server is used a communication link using SIP SigTran or the H. messaging protocols couples media server to IP network . One or more automatic speech recognition ASR modules and one or more text to speech TTS conversion modules are coupled to media server to enable both audio and text input and output to from distributed messaging system . VoIP gateway integrates the media server with a modular voice processor or other devices that use session initiation protocol SIP . A simplified protocol is used for communications between the remaining components of the distributed messaging system.

Voice extensible markup language VoiceXML or VXML is one mode of communication between media server and remotely located document server . VXML which uses hypertext transfer protocol HTTP to communicate information in packets allows a user to interact with devices coupled to IP networks using voice recognition technology. Instead of a traditional graphical user interface based browser that relies on a keyboard and a mouse VXML relies on a voice browser and or any of a plethora of voice based devices such as telephones mobile phones and combination devices. Using VXML the user interacts by listening to audio output that is either pre recorded or synthesized and submits input through the user s natural speaking voice or a touch tone keypad. VXML is designed for creating audio dialogs that feature synthesized speech digitized audio and recognition of spoken and dual tone multiple frequency encoded inputs recording of voice messages and mixed conversations. As will be explained in further detail below VXML HTTP requests are communicated from media server to document server which manages the storage confirmation and retrieval of voice messages saved in common message store .

Application server coupled to document server and Internet provides a mechanism for subscribers of the distributed messaging system and third parties with proper access privileges to access previously stored voice messages from common message store .

Messages are durable when once a subscriber records a message in a VXML session the message is saved and accessible via a common message store remotely located from the subscriber despite media server failures document server failures and wide area network service outages. This is accomplished because message storage from a local data store to the remotely located common message store can be asynchronous. That is the subscribing caller does not need to wait on the line for acknowledgement of a successful transfer of the message. Because the common message store comprises an array of disks the messages and metadata stored therein can survive numerous device failures and request restarts for transfers of message blocks.

Sender communicates requests to document server via simple object access protocol SOAP . Sender provides a socket connection for VXML browser . The socket connection can be accessed by multiple languages using multiple computing platforms. Request information transferred to the document server includes attachment file path and name message type identifier message status identifier time for delivery originator identifier and identifiers for one or more recipients. Sender is configured to save the request including message request delivery state information into local data store send message header information metadata together with the attachment file to the document server delete the request and delivery information when the message has been successfully delivered to the document server and retry delivery for messages that are not successfully delivered.

Document server comprises receiver message server message manager unified message service layered service provider server and application . Receiver is configured to receive the SOAP requests from sender retrieve the message information and attachments invoke the unified message service to create a Java message service message and save the created message in message server persistently. Receiver is further configured to handle SOAP fault reporting when data transfer errors occur. Unified message service communicates with message server via connector . Message server provides persistent storage to the message and related data on the document server asynchronous message delivery ensures once and only once delivery of the message to the common message store and deletes the message when the message has been successfully stored in the common message store . Message manager gets messages from the message server then forwards them to the common message store using the link provided by the unified message service application interface and the layered service provider server . Message manager is configured to status the message server regarding whether the message was successfully delivered to the common message store . Message manager is further configured to retry message delivery for messages that were not successfully uploaded and integrated with the common message store .

Application server interposed between unified message service and VXML browser exposes previously stored messages to one or more subscribers communicatively coupled to media server .

To ensure message storage and durability using the above described message durability subsystem the various servers and processes implemented therein may be integrated with a health monitor subsystem. As described generally above the health monitor subsystem comprises a set of distributed processes configured to collect and respond to operative status at various hierarchical levels across the voice messaging system.

The health monitor subsystem is not limited to this arrangement. For example one or more of the manager process interface process alarm process and hardware reset process may be implemented on devices external to host computing device .

Regardless of the actual location of the manager interface and alarm processes agent process is implemented within an operative component on host computing device . Agent process is responsible for monitoring and restarting the associated component including component processes and dependent component sub processes operative within the component. The associated component may or may not be critical to the operation of the underlying voice messaging system. Agent process registers or unregisters with the manager process sends status information to the manager process including notifying the manager process when the associated component fails. In addition agent process receives requests to restart the component provide component status information and to shutdown the associated component.

Agent process uses application programming interface to register unregister with and communicate status to manager process . As indicated in the communication link between manager process and agent process is a two way link. In a preferred embodiment agent process forwards status information regarding the associated component periodically to manager process . Alternatively manager process could be configured to poll or otherwise request each agent process to return status information. The manager process could be configured to periodically or aperiodically request such status replies.

Manager process is responsible for the overall health of the host computing device . Manager process receives requests from each agent process to register and unregister. In addition manager process receives error notices and other status information from agent process receives requests from common process to shutdown host computing device . Manager process forwards alarm conditions to alarm process and one or more commands to hardware reset process . Furthermore manager process registers and unregisters with sends periodic status messages including error messages to common process . Moreover common process forwards requests to manager process to restart host computing device and to provide host status information.

Manager process uses application programming interface to register unregister with and communicate status to common process . As indicated in the communication link between manager process and common process is a two way link. In a preferred embodiment manager process forwards status information regarding the associated host periodically to common process . Alternatively common process could be configured to poll or otherwise request each manager process to return status information. Common process could be configured to periodically or aperiodically request such status replies.

Common process uses application programming interface to communicate status to display device and to communicate requests and receive status information from manager process via application programming interface . Display device may include a graphics processor and associated applications for controllably rendering status from one or more components and or from one or more hosts coupled to common process .

Interface process provides a mechanism for system administrators or other software components to retrieve status information concerning the host computing device and the various components implemented therein. While the functionality provided by interface process could be combined with the functionality provided by the manager process the interface process is defined separately to reduce the load and complexity of the manager process . Interface process uses application programming interface to communicate requests for and receive status information from manager process . As indicated in the communication link between manager process and interface process is a two way link. Interface process is configured to communicate with a wide area network based user interface that permits system administrators to observe the health of various platforms hosts components processes and sub processes.

In operation a subscriber of voice services initiates a call with a telephonic device coupled to distributed voice messaging system . Message deposit application operable within media server generates a new filename for the message about to be recorded and collects or otherwise generates metadata in accordance with one or more identifiers used to classify or otherwise describe the nature of the call subscriber and the voice message.

The message deposit application addresses the VXML browser sender file system and local data store to ensure the media server is prepared to record the voice message. If any of these devices reports a non ready condition to the message deposit application the message deposit application immediately informs the subscriber that a system failure has occurred that the message cannot be recorded and aborts the recording process. Assuming that these devices have been configured with agent process health monitor subsystem will detect diagnose isolate and attempt to repair the voice messaging system .

Reference is now directed to which illustrates a functional block diagram of the host computing device of . Generally in terms of hardware architecture as shown in the host computing device may include a processor memory input devices display and modem network interface that are communicatively coupled via local interface .

Local interface can be for example but not limited to one or more buses or other wired or wireless connections as is known in the art or may be later developed. Local interface may have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers to enable communications. Further local interface may include address control and or data connections to enable appropriate communications among the aforementioned components of the host computing device .

In the embodiment of the processor is a hardware device for executing software that can be stored in memory . The processor can be any custom made or commercially available processor a central processing unit CPU or an auxiliary processor among several processors associated with the host computing device and a semiconductor based microprocessor in the form of a microchip or a macroprocessor.

The memory can include any one or combination of volatile memory elements e.g. random access memory RAM such as dynamic RAM or DRAM static RAM or SRAM etc. and nonvolatile memory elements e.g. read only memory ROM hard drives tape drives compact disk drives CD ROMs etc. . Moreover the memory may incorporate electronic magnetic optical and or other types of storage media now known or later developed. Note that the memory can have a distributed architecture where various components are situated remote from one another but accessible by processor .

The software in memory may include one or more separate programs each of which comprises an ordered listing of executable instructions for implementing logical functions. In the example of the software in the memory includes manager module interface module H W reset module alarm module and component that function as a result of and in accordance with operating system . The operating system preferably controls the execution of computer programs such as manager module and provides scheduling input output control file and data management memory management and communication control and related services.

In an embodiment each of the manager module interface module H W reset module alarm module and component is one or more source programs executable programs object code scripts or other collections each comprising a set of instructions to be performed. It will be well understood by one skilled in the art after having become familiar with the teachings of the system and method that various components and modules may be written in a number of programming languages now known or later developed.

The input devices may include but are not limited to a keyboard a mouse or other interactive pointing devices voice activated interfaces or other operator machine interfaces omitted for simplicity of illustration now known or later developed. The input devices can also take the form of data file transfer device e.g. floppy disk drive . Each of the various input devices may be in communication with the processor and or the memory via the local interface .

Display device may be coupled to a video interface that supplies a video output signal to render desired data. Display devices that can be associated with the host computing device are conventional CRT based displays liquid crystal displays LCDs plasma displays image projectors or other display types now known or later developed. It should be understood that various output device s not shown may also be integrated via local interface and or via modem NIC to other well known devices such as plotters printers copiers etc.

Local interface may also be in communication with input output devices that communicatively couple the host computing device to one or more TCP IP based networks . These two way communication devices include but are not limited to modulators demodulators modems network interface cards NICs radio frequency RF or other transceivers telephonic interfaces bridges and routers. For simplicity of illustration such two way communication devices are represented by modem NIC .

When the host computing device is in operation the processor is configured to execute software stored within the memory to communicate data to and from the memory and to generally control operations of the host computing device pursuant to the software. The various modules such as manager module interface module H W reset module alarm module and agent module component component process module and component sub process and the operating system in whole or in part but typically the latter are read by the processor perhaps buffered within the processor and then executed.

It should be understood that the functions described in association with blocks above could be performed substantially simultaneously or in any other order in addition to the illustrated flow embodiment. After one of the functions associated with blocks have been performed the health monitor subsystem provides a network accessible mechanism for discerning or otherwise observing the operative health of one or more of the platform host and the voice messaging component as indicated in block .

When the voice messaging system comprises a plurality of platforms hosts and voice messaging system components the mechanism for discerning the operative health may be configured to enable selective observation of operational status of the voice messaging system. For example operational status associated with system components critical for enabling one or more functions across the distributed voice messaging system can be displayed together. Other example arrangements for reporting operational status may include a designated display for fault or alarm conditions one or more displays for observing media servers document servers and SGF hosts as a group of similarly configured hosts etc.

It should be understood that the functions described in association with blocks above could be performed substantially simultaneously or in any other order in addition to the illustrated flow embodiment. After one of the functions associated with blocks have been performed the health monitor subsystem provides a network accessible mechanism for discerning the health of one or more of the platform host and the voice messaging component as indicated in block .

Thereafter as shown in block health monitor subsystem responds to an undesired condition within a component process by restarting the component process. An undesired condition may be indicated by a failure to respond to a request for information i.e. a polling event or the return of present status information that is outside an expected range. Restarting may include manipulation of various data items used in the component process. In block health monitor subsystem responds to an undesired condition within a host by restarting the host. Restarting the host may include suspending various processes throughout the health monitor subsystem or the distributed voice messaging system until the host reaches a desired operating state. Restarting the host may also include manipulation of various default values used during a system initialization or the retrieval and use of values recorded from associated processes before they were suspended.

The flow diagrams of show the architecture functionality and operation of a possible implementation via software and or firmware associated with a host of communicatively coupled hardware devices and component processes and sub processes implemented therein that monitor and respond to fault conditions across a geographically distributed voice messaging system. In this regard each block represents a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s .

The operational software programs that may be used by the various hosts of the distributed messaging system as well as operational software that may be used in conjunction with the health monitor subsystem which comprise an ordered listing of executable instructions for implementing logical functions can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device such as a computer based system processor containing system or other system that can fetch the instructions from the instruction execution system apparatus or device and execute the instructions. In the context of this document a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer readable medium can be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a non exhaustive list of the computer readable medium would include the following an electrical connection electronic having one or more wires a portable computer diskette magnetic a random access memory RAM magnetic a read only memory ROM magnetic an erasable programmable read only memory EPROM or Flash memory magnetic an optical fiber optical and a portable compact disc read only memory CDROM optical . Note that the computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

While various embodiments of the systems and methods for monitoring and responding to fault conditions in a distributed voice messaging system have been described many more embodiments and implementations are possible that are within the scope of the accompanying claims. Accordingly the health monitor subsystem and methods for fault management are not to be restricted beyond the attached claims and their equivalents.

