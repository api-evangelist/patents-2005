---

title: Configuring a remote management module in a processing system
abstract: A remote management module (RMM) can be configured, in one embodiment, via the processing system that the RMM is monitoring. In one embodiment, the present invention includes allowing a user access to a processing system being monitored by a RMM, and configuring the RMM without the user accessing the RMM.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08090810&OS=08090810&RS=08090810
owner: NetApp, Inc.
number: 08090810
owner_city: Sunnyvale
owner_country: US
publication_date: 20050304
---
At least one embodiment of the present invention pertains to remote management of a processing system and more particularly to configuring a remote management module in a processing system.

In many types of computer networks it is desirable to be able to perform certain management related functions on processing system from a remote location. For example a business enterprise may operate a large computer network that includes numerous client and server processing systems hereinafter clients and servers respectively . With such a network it may be desirable to allow a network administrator to perform or control various functions on the clients and or servers from a remote console via the network such as monitoring various functions and conditions in these devices configuring the devices performing diagnostic functions debugging software upgrades etc. To facilitate explanation such functions are referred to collectively and individually as management functions .

One particular application in which it is desirable to have this capability is in a storage oriented network i.e. a network that includes one or more storage servers that store and retrieve data on behalf of one or more clients. Such a network may be used for example to provide multiple users with access to shared data or to backup mission critical data. An example of such a network is illustrated in .

In a storage server is coupled locally to a storage subsystem which includes a set of mass storage devices and to a set of clients through a network such as a local area network LAN or wide area network WAN . The storage server operates on behalf of the clients to store and manage shared files or other units of data e.g. blocks in the set of mass storage devices. Each of the clients may be for example a conventional personal computer PC workstation or the like. The storage subsystem is managed by the storage server . The storage server receives and responds to various read and write requests from the clients directed to data stored in or to be stored in the storage subsystem . The mass storage devices in the storage subsystem may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage or any other type of non volatile storage devices suitable for storing large quantities of data. The mass storage devices may be organized into one or more volumes of Redundant Array of Inexpensive Disks RAID .

Also shown in is an administrative console coupled to the storage server . The storage server in this configuration includes a serial port e.g. RS 232 and appropriate software to allow direct communication between the storage server and the administrative console through a transmission line. This configuration enables a network administrator to perform at least some of the types of management functions mentioned above on the storage server . Filer products made by Network Appliance Inc. of Sunnyvale Calif. are an example of storage servers which has this type of capability.

In the illustrated configuration the administrative console must be directly coupled to the storage server and must be local to the storage server . This limitation is disadvantageous in that it may be impractical or inconvenient to locate the administrative console close to the storage server . Further this configuration makes it difficult or impossible to use the same administrative console to manage multiple devices on a network.

Technology does exist to enable management functions to be performed on a computer system remotely via a network. In one approach a device known as a remote management module RMM is incorporated into a processing system to enable remote management of the processing system referred to as the host processing system via a network. The RMM is also referred to as a service processor or remote management card and in this application the term RMM is used interchangeably with the term service processor. The RMM is often in the form of a dedicated circuit card separate from the other elements of the host processing system. The RMM normally has a network interface that connects to the network and a separate internal interface that connects to one or more components of the processing system.

One shortcoming of known RMM technology is that the RMM needs to be configured separately from the processing system. This is inefficient as a user would need to perform two separate initializations and possess two sets of credentials one for the processing system and one for the RMM. Hence it would be desirable to have a simple unified configuration system for the RMM.

A remote management module RMM can be configured in one embodiment via the processing system that the RMM is monitoring. In one embodiment the present invention includes allowing a user access to a processing system being monitored by a RMM and configuring the RMM without the user accessing the RMM.

A method and apparatus for a simple unified configuration system for an RMM are described. The technique introduced herein enables an RMM installed in a processing system to be configured simultaneously with the processing system such that the network administrator does not have to separately configure the RMM.

An example of a network configuration in which various embodiments of the present invention can be employed is shown in . It is assumed for purposes of this description that the processing system to be remotely managed is a storage server however it will be recognized that the technique introduced herein can also be applied to essentially any other type of network connected processing system such as standard personal computers PCs workstations servers other than storage servers etc. The configuration of is similar to that of except that the storage server can be managed through a network from a remote administrative console in addition to being capable of being managed through the direct serial interface. Note that while network and network are depicted as separate networks in they can be the same network.

Referring now to the storage server includes a processing unit and memory which can be coupled to each other through some bus or chipset such as a conventional Northbridge Southbridge combination chipset. The processing unit represents the central processing unit CPU of the storage server and may be for example one or more programmable general purpose or special purpose microprocessors or digital signal processors DSPs microcontrollers application specific integrated circuits ASICs programmable logic devices PLDs or a combination of such devices.

The memory may be or may include any of various forms of read only memory ROM random access memory RAM Flash memory or the like or a combination of such devices. The memory stores among other things the operating system of the storage server . In one embodiment the operating system is the Data ONTAP operating system offered by Network Appliance. In other embodiments the operating system can be any generic operating system or any operating system with included or enhanced storage service capabilities. The storage server may include additional memories such as mass storage device . The internal mass storage device may be or include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks.

In one embodiment the storage server also includes a console serial interface a network adapter and a storage adapter coupled to the processing unit . The storage server can also include redundant power supplies various bridges buses controllers and other devices not directly relevant to the present invention.

The serial interface allows a direct serial connection with a local administrative console such as console in and may be for example an RS 232 port. The storage adapter allows the storage server to access the storage subsystem and may be for example a Fibre Channel adapter or a SCSI adapter. The network adapter provides the storage server with the ability to communicate with remote devices such as the clients over network and may be for example an Ethernet adapter.

The storage server further includes an RMM . The RMM provides a network interface and is used to allow a remote processing system such as an administrative console to control and or perform various management functions on the storage server via network which may be a LAN or a WAN for example. The management functions may include for example monitoring various functions and state in the storage server configuring the storage server performing diagnostic functions on and debugging the storage server upgrading software on the storage server etc.

In one embodiment the RMM is designed to operate independently of the storage server . Hence the RMM runs on standby power so that it is available even when the main power to the storage server is off. In certain embodiments of the invention the RMM provides diagnostic capabilities for the storage server by maintaining a log of console messages that remain available even when the storage server is down. The RMM is designed to provide enough information to determine when and why the storage server went down even by providing log information beyond that provided by the operating system of the storage server . This functionality includes the ability to send a notice to the remote administrative console on its own initiative indicating that the storage server is down even when the storage server is unable to do so.

The processor s is are the CPU of the RMM and may be for example one or more programmable general purpose or special purpose microprocessors DSPs microcontrollers ASICs PLDs or a combination of such devices.

In at least one embodiment the processor is a conventional programmable general purpose microprocessor that runs software from local memory on the RMM e.g. flash and or RAM . illustrates the relevant aspects of the software of the RMM according to certain embodiments of the invention. At a high level the software of the RMM has two layers namely an operating system kernel and an application layer that runs on top of the kernel . In certain embodiments the kernel is a Linux based kernel. The kernel includes a network interface to control network communications with a remote processing system and a storage server interface to control communications with the other components of the storage server . The network interface includes a protocol stack that includes a sockets layer a Secure Shell SSH layer an IP TCP UDP layer an SSL layer and an Ethernet driver layer . The storage server interface includes a serial driver through which the RMM can communicate with the operating system of the storage server .

The application layer includes a packet layer which cooperates with the serial driver . The packet layer is responsible for converting packets received from other modules in the application layer into a serial format for transmission by the serial driver and for converting serial data received from the serial driver into packet format for use by other modules in application layer .

The application layer also includes a command line interface CLI to allow an authorized user to access functions of the RMM an application programming interface API to allow an authorized remote application to make calls to the RMM software a Dynamic Host Configuration DHCP layer to enable automatic IP address assignment and various other configuration applications to process configuration data.

When the storage server is initially brought online it needs be configured to operate in the storage network. This is done by providing the storage server with various storage server configuration parameters. Similarly the RMM also needs to be configured by providing the RMM with various RMM configuration parameters. For example to allow for communication independent from the appliance it is monitoring the RMM needs to be initialized with an IP address. Other configuration items may include the name of the system the RMM is used to monitor the RMM s serial number gateway and other such configuration items.

The technique introduced herein as will now be described enables the RMM to be configured automatically when the storage server itself is configured such that the network administrator does not have to separately configure the RMM . One embodiment of a configuration interface also referred to here sometimes as a user interface that enables a configuration entity such as a user or administrator to simultaneously configure the host processing unit of the storage server and the RMM is now illustrated with reference to . The graphical user interface shown in can be implemented by the operating system of the storage server or an admin console . However the operating system ultimately implements some form of configuration interface to allow the input of configuration information. The terms user and configuration entity are used interchangeably in some portions of this description to indicate that the configuration parameters input using interface can originate from a human user or administrator or some software performing configuration either automatically or in response to other user input.

In addition to allowing the user e.g. an administrator to configure the processing unit and the operating system running on the processing unit e.g. ONTAP the user interface allows the user to configure the RMM without establishing a separate connection to the RMM . To accomplish this in one embodiment the operating system running on the processing unit transfers the RMM configuration input parameters entered by the user to the RMM i.e. without the user having to directly interact with the RMM .

In one embodiment this transfer is carried out by sending the configuration information over the bus or chipset coupling the storage server to the RMM using the storage server interface of the RMM as described above with reference to . In a more specific embodiment the processing unit uses a multiplexed packet protocol to send the RMM configuration parameters to the serial driver which in turn forwards it to the packet layer where the configuration information is de multiplexed and forwarded to the appropriate applications to be used to configure the RMM . The storage server interface that helps connect the processing unit and operating system to the RMM and kernel need not be implemented as a multiplexed or serial interface. Other communication paths and protocols both publicly available and proprietary may also be used to transfer the configuration data from the processing unit side of the storage server to the RMM side.

In one embodiment the processing unit generates a configuration file from the received RMM configuration parameters . This file can be a tuple file a tuple being two items a parameter name and a parameter value. For example one tuple in the configuration file may be IP ADDRESS 123.432.543.34. The configuration file is then transferred via the storage server interface to the RMM .

The RMM configuration parameters can include various configuration information such as the IP address netmask gateway DNS server of the RMM . In addition an enable DHCP parameter can set the RMM to use a Dynamic Host Configuration Protocol DHCP layer implemented by the RMM to automatically set the IP configuration parameters such as those mentioned above for the RMM . Various other configuration items that can be configured using the configuration user interface include but are not limited to various alert configuration parameters such as the IP address of the Simple Mail Transfer Protocol SMTP mailhost to which alerts can be sent various Simple Network Management Protocol SNMP configuration parameters various security parameters such as the private key user for SSH connections and various other interface configuration items. Any configuration parameter can be entered in this manner the present invention is not limited to any specific configuration parameters.

The configuration interface shown in is a simplified representation of a user interface to facilitate description. A real world interface may include various pop up windows install wizards input interfaces such as radio buttons and other non configuration related setup parameters.

An example of the overall process performed in the storage system to configure the storage server and RMM is illustrated in . In block the storage server configuration parameters are received by the storage server from for example the administrative console see where a user e.g. network administrator may have input them using the interface described above. In block the RMM configuration parameters are also received by the storage server i.e. the storage server processing unit . In one embodiment prior to blocks and the RMM configuration parameters and the storage server configuration parameters were input concurrently by the user via the same user interface such as described above in connection with .

In block the RMM configuration parameters are pushed by the operating system of the storage server to the RMM for example by sending a configuration file to the RMM as described above. The RMM is thus configured without the user or his administrative console directly accessing the RMM .

One specific example of storage configuration input parameters that may be collected by the user interface in one embodiment is user credentials. User credentials can include identifying parameters such as a user ID or name and authentication parameters such as a password such as may be used to authenticate and or authorize a network administrator to access the storage server and or the RMM . In one embodiment the user credentials are also pushed to the RMM via the process set forth above.

Several embodiments of user credential processing are now described with reference to . In block the user sets the user credentials to be used in the future to access the processing system of the storage server. In block the operating system pushes the user credentials to the RMM . In one embodiment the processing unit does this by sending the user credentials to the RMM via the storage server interface discussed above.

Some or all of the user credentials may be only stored in hashed form in memory by processing unit for security purposes. In one embodiment only the hashed form of the user credentials is pushed to the RMM . However the hash may be re computed at the RMM from the original user credentials. In one embodiment the user credentials are stored in the RMM in flash memory but other types of non volatile memory or RAM memory may be used as well.

As described above the RMM can be accessed separately from the storage server via the network interface . In one embodiment the user credentials used to access the storage server i.e. the processing unit and operating system can be used by a network administrator for example to access the RMM via network interface and network adapter . This is possible because as described above the user credentials have been pushed to and stored by the RMM . In other words in block the RMM is accessed by a user with the same user credentials used to access the storage server . One advantage of such user credential duplication is that the user does not need to set and remember two separate sets of credentials i.e. one set for the storage server and another set for the RMM .

After the passage of some time the user credentials used to access the processing unit may change for example a password may expire or be updated. In block such a change is detected by the storage operating system running on the processing unit . In response to such detection in bock the updated user credentials are pushed by the operating system to the RMM to synchronize the user credentials once again with those on the storage server .

Certain credential update procedures can be implemented by the operating system to keep the user credentials stored in the RMM up to date. For example if a user changes the credentials e.g. a password to access the storage server the changed credentials need to be pushed to the RMM to synchronize the user credentials. The credentials update may be implemented using a special packet recognized by the packet layer .

In one embodiment the RMM is implemented as a Field Replaceable Unit FRU . As such when an RMM is replaced i.e. a service processor card is replaced the new RMM is automatically configured by the operation system of the storage server . In one embodiment the processing unit and operating system detect when a new RMM is connected to the storage server . Upon detecting the presence of an uninitialized RMM in the storage server the operating system provides the configuration parameters e.g. RMM configuration parameters user credentials etc. to the new RMM .

In such an embodiment the RMM configuration parameters are stored in memory so that they are available for an RMM installed in the future or if the RMM were to loose its configuration data. In one embodiment the operating system of the storage server maintains a configuration database for the RMM in the storage server but external to RMM . When a new replacement RMM is detected the operating system can use the configuration database to configure the new RMM.

In one embodiment the processing unit of the storage server detects installation of a new RMM in the storage server by observing a change in some unique signature strings exchanged between the processing unit and the RMM . Such signature strings identifying the RMM could be inserted in all packets of a certain type or sent periodically from the RMM . Furthermore the operating system can be set to automatically push relevant configuration parameters to the RMM whenever the operating system is restarted i.e. when the processing unit is rebooted . Thus the RMM would get proper configuration information in either a hot swap or a switch reboot scenario.

Thus a method and apparatus for enabling an RMM installed in a processing system to be configured alongside the processing system have been described. Although the present invention has been described with reference to specific exemplary embodiments it will be recognized that the invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense.

