---

title: Access point to access point range extension
abstract: An architecture and methods for extending the depth of a WLAN to a four-level hierarchal access point structure including wireless access points. The wireless access points in the WLAN can be networked by scanning for a network, collecting one or more packets that identify the network from one or more access points, each packet including an address identifying an ancestry of the access points to an ancestral wired access point; and applying an access point selection algorithm to configure a parent access point. The architecture includes a scanning object configured to issue a scan request to a network interface and collect access point data; a selection object configured to filter and sort the collected access point data; an authentication state machine configured to perform authentication and validate; and an association state machine configured to compose a packet including hierarchical data indicative of access point ancestry to a conventional access point.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07664075&OS=07664075&RS=07664075
owner: Microsoft Corporation
number: 07664075
owner_city: Redmond
owner_country: US
publication_date: 20050408
---
This application is a division of prior application Ser. No. 10 377 462 filed Feb. 28 2003 entitled ACCESS POINT TO ACCESS PONT RANGE EXTENSION which is incorporated herein by reference.

This invention relates generally to computer systems and more particularly relates to range extension for wireless computer systems.

Wireless networks are becoming more and more popular. With the popularity of wireless networks increasing users also demand broader coverage from a wireless network such as voice video and data communication support. One wireless local area network WLAN standard that has been gaining popularity is the IEEE 802.11 specification. The IEEE 802.11 specification provides requirements for devices to communicate wirelessly. In particular the specification sets physical requirements such as the communication method and requirements for the media access control MAC layer of the WLAN.

The physical requirements for a IEEE 802.11 WLAN allow devices to communicate using modulation techniques such as direct sequence spread spectrum and frequency hopping spread spectrum. The MAC layer is a set of protocols that is responsible for maintaining order in the use of a shared medium. The IEEE 802.11 standard specifies a carrier sense multiple access with collision avoidance CSMA CA protocol.

An IEEE 802.11 infrastructure networking framework in which devices communicate with each other must first connect through an Access Point AP . In general there are two types of mode for connections with a WLAN ad hoc mode and infrastructure mode. In infrastructure mode wireless devices can communicate with each other or can communicate with a wired network via an AP. An AP connected to a wired network and a set of wireless stations it is referred to as a Basic Service Set BSS . In ad hoc mode also known as Independent Basic Service Set IBSS wireless devices communicate directly with each other without a central controller such as an AP. Additionally in ad hoc mode the wireless devices within the IBSS do not have access to other devices beyond the IBSS cell. Most corporate wireless LANs operate in infrastructure mode because they require access to the wired LAN in order to use services such as file servers or printers. In general an AP must have a wired connection to provide access to the Internet or other networked resources. The requirement of a wired connection for an AP limits the depth available for a BSS because the BSS cell size is determined by the range of the radio transmitter receiver pairs which therefore limits the capabilities of a single AP. What is needed are systems and methods to increase the depth available to WLANs.

Accordingly an architecture and method for extending the depth of a wireless local area network WLAN extends the range of the WLAN by providing a four level hierarchal access point structure including wireless access points coupled to a conventional wired access point. The wireless access points in the WLAN can be networked by scanning for a network collecting one or more packets that identify the network from one or more access points each of the one or more packets including an address identifying an ancestry of the access points to an ancestral wired access point and applying an access point selection algorithm to configure a parent access point from the one or more access points the chosen parent access point having an ancestry independent of the wireless access point.

The ancestry being independent of the wireless access point prevents a ring of access points. The scanning can include creating a list of candidate parent access points and selecting a best parent access point from the list according to the criteria such as signal strength traffic load position of the access point in a spinning tree or by a random selection.

On embodiment is directed to a method for operating an access point in a wireless local area network WLAN that has a hierarchical structure. The method includes receiving one or more data packets if the data packet is destined for a station in a local cell or a child access point CAP associated with the wired access point the access point forwards the data packet. If the data packet is destined for a CAP or station outside the local cell the access point determines the hierarchical location of the CAP or station within the LAN and alters the data packet according the location of the CAP or station in the hierarchical access point structure.

Another embodiment is directed to an architecture for a wireless access point in the hierarchical structure. The architecture includes a scanning object configured to issue a scan request to a network interface the scanning object enabling collection of access point data a selection object configured to filter and sort the collected access point data an authentication state machine configured to perform authentication and validate a match between a parent access point and a wireless repeater access point and an association state machine configured to compose a packet including hierarchical data indicative of access point ancestry to a conventional access point. The architecture further includes a plurality of application programming interfaces configured to operate the wireless access point.

The architecture can further include a router module configured to accept data packets with up to four access point addresses therein and to determine a next forward hop for data packets destined outside a local cell area of the wireless access point.

Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments which proceeds with reference to the accompanying figures.

Turning to the drawings wherein like reference numerals refer to like elements the invention is illustrated as being implemented in a suitable computing environment. Although not required the invention will be described in the general context of computer executable instructions such as program modules being executed by a personal computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices tablet devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in local and or remote computer storage media including memory storage devices.

The invention may be implemented in a system employing various types of machines including cell phones hand held devices wireless surveillance devices microprocessor based programmable consumer electronics and the like using instructions such as program modules that are executed by a processor. Generally program modules include routines objects components data structures and the like that perform particular tasks or implement particular abstract data types. The term program includes one or more program modules.

Device may also contain one or more communications connections that allow the device to communicate with other devices. The communications connections are an example of communication media. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. As discussed above the term computer readable media as used herein includes both storage media and communication media.

Device may also have one or more input devices such as keyboard mouse pen voice input device touch input device etc. One or more output devices such as a display speakers printer etc. may also be included. All these devices are well known in the art and need not be discussed at greater length here.

In keeping with the intended application of the invention device is configured as a wireless mobile device. To that end device is provided with a portable power source such as a battery pack a fuel cell or the like. The power source provides power for computations and wireless data transmissions by the device .

Referring now to an exemplary block diagram illustrates an embodiment directed to wireless system that provides access point to access point range. Wireless system is an IEEE 802.11 wireless infrastructure. As shown the system includes Internet with a wired connection to a conventional access point . Access point interacts wirelessly with station via an 802.11 frequency channel. According to an embodiment station behaves as a wireless station with access point as its parent and station also behaves as a wireless access point. Station acts as a parent to station . In an embodiment station is configured to communicate with station on a same frequency channel. Station is also configured to be an access point with respect to station .

Referring now to an architecture illustrating an embodiment showing how the system of can be extended according to an embodiment of the present invention. As shown includes conventional access point station which is also a repeater access point with MAC address B station which is also a repeater access point with MAC address C and station which is also a repeater access point with MAC address D.

Conventional access point can be wirelessly connected to other repeater access points station combinations . Likewise repeater access points and can be wirelessly connected to other access points and respective stations and . In an embodiment however repeater access point is not configured to be wirelessly connected to further access points. However repeater access point can be wirelessly connected to stations .

Conventional access point repeater access points and and their respective stations and are shown organized in four levels of depth with conventional access point at a first level repeater at a second level repeater at a third level and repeater at a fourth level.

To implement the system with repeater access points an embodiment directs that each access point transmit a beacon packet. The packet contains a Microsoft Information element packet as shown below in Table 1. The table identifies an identification byte MSFT IE ID a length byte an organizationally unique identifier OUI an OUI type and content.

In one embodiment the MSFT IE ID is 0xdd 221 OUI value is 0x0050f2 OUI Type value is 3 and the content field is up to 251 bytes. Within the content field an embodiment directs that the field include 0 or more Microsoft sub information elements. The Microsoft sub information elements are described below in Table 2.

Microsoft Sub IE can be implemented using a type length value triple tuple structure as is known in the art. The OUI subtype value can range from 1 to 255. In an embodiment the OUI subtype value is understood by a proprietary IEEE 802.11 implementation such as a Microsoft Native WiFi. The value 0 is reserved.

Length field can record the length of field of Sub Information Element content . The value range is from 0 to 248. Version field is a mandatory field and can be configured to follow the length field for versioning purpose. The Information Element content field can be configured to hold information specific to a particular OUI subtype.

One of the Sub information elements according to an embodiment is implemented as a Parent Address List sub IE PAL sub IE . The PAL sub IE can provide the media access control addresses for all parent AP s of a repeater AP from the conventional wired AP to a particular repeater AP s direct parent.

Access points can be configured to advertise the PAL sub IE in MSFT IE in the beacon or probe response to declare its position in the AP extension link. For example referring to AP which is shown with MAC address A can have a PAL Sub IE that does not include a MAC address because AP is a conventional wired AP 

AP with MAC address B identifies AP as a parent AP and would include the parent AP MAC address in the PAL Sub IE 

AP with MAC address C identifies AP as a parent AP and would include both parent AP MAC address and the grandparent AP MAC address as follows 

AP with MAC address D identifies AP as a parent AP and includes both the parent AP MAC address the grandparent AP MAC address and the great grandparent AP MAC address as follows 

In operation a non conventional AP i.e. repeater AP can associate with a conventional AP or other repeater AP. In an embodiment for a repeater AP to associate with either a conventional or other repeater AP as a potential parent AP the repeater AP first provides the potential parent AP with a Parent Address List PAL sub IE in a MSFT IE with all IEEE 802.11 authentication and association management packets. The PAL sub IE must match exactly with the PAL sub IE retrieved in the beacon probe response from the potential parent AP that it wants to associate and include the potential parent AP s address. Additionally a potential parent AP provides a PAL sub IE in an IEEE 802.11 authentication association management packet that must match the data in a beacon probe response.

In an embodiment a PAL Sub IE can provide up to three parent addresses based on the associated AP s position in the AP extension list. Thus following the format provided above in Table 7 the maximum size of a PAL sub IE can be 18 bytes.

A conventional wired AP configured to be the root of the AP extension list does not have any parent and will only have a Sub IE header with Sub IE length as 0.

For a repeater AP below the root a sub IE can provide the MAC addresses from the root conventional wired AP to a repeater s direct parent. Thus the maximum depth of an AP extension list according to an embodiment is four conventional AP as root two levels of repeater parents and the repeater AP itself . When a repeater AP receives beacon probe response packet from another AP that contains three parent addresses in a PAL the repeater AP is configured to avoid associating with that AP.

One of the purposes of PAL is to avoid having break potential ring when repeater APs try to choose a potential parent AP with which to associate. Also the PAL avoids having a higher level AP chase the tail of the AP list because of the previous disconnection from its PAP. When a repeater AP chooses a particular conventional or repeater AP as its PAP and associates with it the repeater AP records the PAP s PAL sub IE plus PAP s MAC address. If the repeater finds that its own MAC address is in the list there is a potential ring and the repeater can be configured to not choose that AP as its PAP.

Session ID sub IE will be provided in all AP s beacon probe response packets. The session ID sub IE can be implemented as a pseudo random number chosen by an AP at its starting time. The number uniquely identifies an AP up session and does not change during AP running time until the AP performs a reboot or reset.

All child APs and stations associated with a particular AP can be configured to record the session ID to determine whether an associated AP reboots or resets.

Referring now to an embodiment is directed to a method for networking a wireless access point. More particularly the method is directed to a repeater access point startup method. A potential wireless repeater would have an option to operate as an access point as a repeater. Block provides for the wireless access point to scan for a network in accordance with IEEE 802.11d multi regulatory domain support settings. The repeater scans to search for a predetermined service set identifier SSID that provides the name of a network that the repeater desires to connect with. 32 character unique identifier attached to the header of packets sent over a WLAN that acts as a network identifier when a mobile device tries to connect to the BSS. The SSID differentiates one WLAN from another so all access points and all devices attempting to connect to a specific WLAN must use the same SSID. A device will not be permitted to join the BSS unless it can provide the unique SSID. Because an SSID can be sniffed in plain text from a packet it does not supply any security to the network. The scan can be configured similarly to the type of scan a station would perform upon boot up to find an access point as is known. The scanning can include creating a list of candidate parent access points. For example the repeater can collect beacon packets from other APs both repeater APs or conventional APs which contain Microsoft Information Elements MSFT IE and advertise the same SSID as Repeater AP s desired SSID. A repeater AP can then form a table containing information concerning the APs in the network identified by the SSID.

Block provides for the wireless access point to collect one or more packets from one or more access points. The packets received that are capable of enabling the networking of the access point and include the MSFT IE as described above. Thus the packets identify the network and identify whether the one or more access points are wireless or wired. Further each of the one or more packets includes a MAC layer address identifying an ancestry of the access points to an ancestral wired access point.

Block provides that the repeater AP forms a table containing the information concerning the APs around the repeater AP.

Block provides for applying an access point selection algorithm to select a parent access point PAP from the one or more access points the parent access point having an ancestry independent of the wireless access point. The selection algorithm selects a best PAP via one or more or a combination of signal strength traffic load position of the access point in a spanning tree and a random selection.

Block provides for authenticating and associating with the potential parent access point the authenticating can include performing an open system or a shared key authentication according to the IEEE 802.11 specification authentication and association protocol.

Decision block provides for determining whether the authentication succeeded. If so block provides for performing an association. If not the method provides for returning to block . Further if an authentication is successful block provides for determining whether or not an IEEE 802.1x supplicant is operating as a client to the PAP. If so an IEEE 802.1x authentication must also be made in block . After associations are made the repeater AP performs an AP JOIN request which is a request by a repeater AP to attempt to synchronize with the selected PAP first before attempting to perform IEEE 802.11 authentication and association to insure that the repeater is on the same channel with the associated PAP. Only after IEEE 802.11 association is successfully completed would IEEE 802.1x authentication happen if required. In one embodiment the locating and authentication of a PAP is subject to a timeout and retry period which can be approximately 30 seconds or according to system requirements.

Block provides that for both the repeater AP and the PAP a port is created and opened according to the IEEE 802.11 specification. The repeater AP can then be designated as a Child AP CAP of the PAP.

As a CAP the repeater AP can start sending out beacon packets or probe response packets when probe request packets received. The beacon or probe response packets should contain MSFT IE which contains sub IE indicating that it is a Repeater AP and sub IE containing the Parent Address List PAL listing the PAP to which it is associated. The repeater AP if working normally will be able to accept authentication association requests from stations and transmit and receive data packets.

After setting up a repeater AP the system determines whether or not the established repeater AP keeps receiving beacon packets within a predetermined amount of time. If no beacon packets are received or the packets contain an incorrect SSID or the beacon packets sent from the PAP contain PAL that does not match its own record the repeater AP performs a reset. In other words if there is any change in the PAL sub IE such that the PAL sub IE mismatches with a recorded PAL list the repeater AP disconnects from its PAP breaks every association with any station or CAP and then resets internally and restarts the PAP search and association operation.

To disconnect the repeater AP performs a reset call to an underneath network interface card NIC and stops sending beacon packets and then performs a reset call to itself. The reset call causes a cleanup of association information any key table an AP information table packet filters and any other internal tables states or settings.

After the reset the repeater AP sleeps for a predetermined period of time. In one embodiment the time is approximately 30 seconds after which the method of is performed again.

Referring now to an architecture for a repeater AP module is shown. The module includes scan PAP information collection PAP selection logic an IEEE 802.11 authentication state machine an IEEE 802.11 association state machine and an AP reset routine .

Module performs IEEE 802.11 authentication and association with its Parent AP and coordinates with an IEEE 802.1x supplicant to authenticate itself if applicable.

In general when a repeater AP is initialized module enables the repeater AP to associate with one of any existing APs and IEEE 802.1x authentication if needed. After an association is established or the IEEE 802.1x port for PAP is opened a repeater AP can perform a start request send out beacon probe response and accept authentication and association requests from stations or child APs. If a repeater AP cannot set up an association with its parent AP successfully an embodiment directs that the repeater AP repeats the attempts periodically until association success or being shut down.

Scan PAP information collection includes scan logic configured to issue a scan request to an underlying NIC. The scan enables the repeater AP to collect AP information.

Referring to a flow diagram illustrates a method for scan PAP information collection . Block provides that an active or passive scan occurs for example according to a IEEE 802.11d multi regulatory domain support setting. Block provides that during and after the performing of a scan request the repeater AP gathers an existing AP s beacon packets in passive scan or probes a response packet in an active scan . Block provides for performing validation. Block provides for forming a list of candidate APs.

After the repeater AP is associated and started block provides that AP information gather logic instantiates a watchdog timer routine and a monitoring routine to monitor the parent AP s beacon packets. Decision block provides for determining whether a mismatched beacon was sent from a PAP or a PAP s beacon could not be heard for a predetermined period of time. If so block requires that the repeater AP performs a reset to prevent possible tail chasing or dead parent AP as discussed above with reference to .

Block provides that upon the completion of scan the completion routine triggers the association process.

Referring back to after the method of is performed PAP selection operates to filter and sort the collected AP information in an AP information table inside module . Only APs that advertise an MS IE with a PAL Sub IE can be chosen to be a parent AP candidate. All other APs are filtered out during the association process.

AP information sorting is used to give different priorities to different parent AP candidates such as criteria to minimize the number of hops to a CAP for example. More particularly first a repeater AP tries to associate with a determined best parent according an algorithm as discussed above.

IEEE 802.11 Authentication State Machine is configured to perform IEEE 802.11 open system or shared key authentication. State machine provides that a repeater AP performs as a station and the parent AP acts as an AP. The MSIE and PAL Sub IE are included in each authentication packet. Both repeater AP and parent AP validate the PAL Sub IE for confirming a match.

Authentication state machine exposes application programming interfaces APIs to configure initiate and drive state machine . In particular in one embodiment the APIs include a SoftAPPAMAuthentication API a SoftAPPAMCancelAuthentication API a SoftAPPAMReceiveAuth API and a SoftAPPAMAuthCompletion API.

The SoftAPPAMAuthentication API provides an entry point routine to initiates an authentication procedure. Upon initiating the authentication a selected authentication algorithm will be used and corresponding authentication packet will be sent out to parent AP.

The SoftAPPAMCancelAuthentication API operates to stop and cancel an ongoing authentication procedure. The API causes state machine to reset timers to stop and internal date structures to clear and cause temporarily allocated memory to be released.

The SoftAPPAMReceiveAuth API is triggered when a valid IEEE 802.11 authentication packet arrives. The SoftAPPAMReceiveAuth API calls corresponding routines to process the packet based on an authentication algorithm packet sequence number and state machine s state.

SoftAPPAMAuthCompletion API causes a repeater AP to perform a post authentication operation. The API triggers an association process.

IEEE 802.11 Association State Machine performs an IEEE 802.11 association procedure. During this procedure the repeater AP performs as a station and the parent AP acts as an AP. The association state machine provides that an MSIE and PAL Sub IE is included in every association packet. Both repeater AP and parent AP will validate the PAL Sub IE to ensure a match as expected.

Association state machine also exposes APIs to configure initiate and drive the state machine. One API SoftAPPAMAssocation API provides an entry point routine to initiate an association procedure. Upon initiating the authentication a selected authentication algorithm is used and a corresponding authentication packet is sent out to the parent AP. An association completion routine API is a caller provided completion routine triggered when an association operation is finished. By default a SoftAPPAMInternalAssocCompletion API is used which enables a repeater AP to perform post association operations such as triggering the IEEE 802.1x authentication if an IEEE 802.1x supplicant is running on top or start the repeater AP if no IEEE 802.1x supplicant exists.

A SoftAPPAMCancelAssociation API operates to stop and cancel an ongoing association procedure. The API causes state machine to be reset timers to be stopped and internal date structures to be cleared and temporarily allocated memory to be released.

Referring back to AP Reset Routine applies when a parent AP beacon is received with mismatched PAL IE when a parent AP beacon is received with a different session ID when a parent AP beacon could not be received for a certain period of time and when a repeater AP is disassociated from a parent AP due to lack of activity beyond a predetermined amount of time.

Reset routine stops any ongoing IEEE 802.11 authentication or association de initializes each individual module inside the repeater AP and issues a reset call to an underlying NIC.

After a repeater AP is operational and capable of being a PAP and of sending and receiving packets to and from connected stations according to an embodiment default cryptographic keys are maintained. The default keys can be configured to be the same keys for CAPs and connected stations. In an embodiment the keys are maintained by a normal key manager KeyMgr.

KeyMgr can be configured to maintain a Wireless Encryption Privacy WEP key mapping per station key for each CAP as well as any connected normal stations. In one embodiment the WEP key mappings are distinguished by the station s MAC addresses.

With regard to any keys maintained between the repeater AP and a parent AP an embodiment requires a different set of keys for communicating between a repeater AP and a PAP. Thus a repeater AP can be configured to maintain a separated parent default key table to communicate with a PAP by using for example difference multicast unicast default keys.

The default keys for communication with a PAP can be maintained by a different key manager. For example a repeater s key manager RKeyMgr. In addition RKeyMgr can be configured to keep an RKeyMgr default key identifier value. User mode services for the repeater AP can be configured to use separate repeater AP input output controller IOCTL routines to set query parent default keys and the parent default key ID though RKeyMgr. To avoid conflicts default keys for parent AP can be configured to never be offloaded. The encryption and decryption of packets between repeater AP and the parent AP can be performed in a Native WiFi driver.

KeyMgr maintains the WEP key mapping per station key for a PAP as well as stations connected to the repeater AP. The WEP key mappings can be distinguished by a station s MAC addresses.

According to an embodiment both a PAP and a repeater AP maintain a routing table maintained by an AP Router module. The AP router module can be configured to determine a next hop to forward a packet with a destination address outside of the AP s local cell.

Referring to a flow diagram illustrates a method for an AP Router module. Block provides that the module receives routing data. Block provides that the module update the routing data by learning a source address and a transmitting AP s address. The routing data can be in an incoming data packet with up to four addresses therein. Block provides for repeating the update for each address packet received requiring routing to a station outside of the AP s local cell which can include a four address packet.

The structure of the routing table addressed by the router module can be implemented to achieve high performance via a hash table with a link list following each hash entry. In one embodiment the number of hash entries is set as 64 with a maximum number of routing entry is 128. The routing table can be protected by a read write lock for synchronization purposes.

In one embodiment the hash function input is a MAC address. More particularly the MAC address could be the source address of an incoming four address data packet for updating or the destination address in an outgoing four address data packet for a next hop look up. The function can be implemented as follows Hash MAC MAC0 XOR MAC1 XOR MAC2 XOR MAC3 XOR MAC4 XOR MAC5 mod 64.

For each hash entry a link list can be provided to link all routing entries with a same hash result to resolve collisions.

The fields in a routing entry for the table can be implemented with a plurality of fields including a station address a forward AP address a last receive time address and a spin lock field. The station address provides a station s MAC address for indexing. The forward AP address provides the MAC address for a next hop AP. The last receive time field records the last time a valid data packet was received that from a station. The spin lock field is configured to provide synchronization.

The routing table allows operations to be performed including adding a routing entry finding a routing entry a cleaning operation and a refresh operation.

Referring now to a flow diagram illustrates the operation for adding a routing entry. In an embodiment adding a routing entry occurs when a packet is received that requires out of cell routing such as a four address data packet. Block provides for receiving a data packet requiring an out of cell routing. The input required for the operation includes a station MAC address and an AP MAC address such as StationMacAddress and APMacAddress.

Block provides for acquiring a read lock of the routing table. Block provides for performing a look up of a routing entry with a matched station address. Decision block provides for determining whether an entry has a matched station address was found. If yes block provides for acquiring a spin lock of the entry. Block provides for updating a forward AP address and a last receiving time. Block provides for then releasing the spin lock of the entry and returning.

If no entry is found block provides for upgrading the read lock to a write lock of the routing table. Block provides for performing a lookup for a routing entry in the table with the matched station address. Block provides for determining whether a next entry is found. If so block provides for releasing the previously set write lock of the routing table. Block provides for determining if the number of entries in the routing table is greater than a maximum number of entries. For example a query of ulNumOfEntries ulMaxNumOfEntries could take place. Block provides for inserting a new routing entry into the routing table and filling in fields. Block provides for interlocking an increment of the number of entries e.g. interlocking ulNumOfEntries and releasing the write lock of the routing table.

Another function of the routing module includes finding a routing entry. illustrates a flow diagram of a method for finding a routing entry in the routing table. According to an embodiment the function is called when sending a packet outside the cell area of an AP such as when sending a four address data packet. In an embodiment the input for the function is a station s MAC address and the output is an AP MAC address. Block provides for acquiring a read lock of the routing table. Block provides for performing a look up in the table for a routing entry with a matched station address. Decision block determines whether an entry is found. If found block provides for acquiring a spin lock of the entry. Block provides for copying the AP MAC address data. Block provides for releasing the spin lock of the entry. Block provides for releasing a read lock from the routing table.

Another function of the routing module is a housecleaning function of the table a table reaper. The function reaps out routing entries that are out of date. The housecleaning function can be configured to occur periodically as can be determined according to system requirements.

Referring to a flow diagram illustrates the reaper function. Block provides for acquiring a write lock of the routing table. Decision block provides that for every routing entry in the routing table if the entry is out of date to proceed to block which removes the entry from the table. Block provides for interlocking a decrement of the number of entries ulNumOfEntries. Block provides for releasing the write lock of the routing table. Block provides for resetting a reaper timer for a predetermined amount of time for a next housecleaning operation.

Another function of the routing module is to refresh the routing entries with a routing entry refresher. The refresher function can be configured to be called when an associated CAP disconnects from an AP. Referring to a flow diagram illustrates the method used by the refresher function.

Block provides for acquiring a write lock of the routing table. Block provides for locating each routing entry in the routing table. Decision block determines whether a routing entry s forward AP MAC address matches the CAP MAC address. If so block provides for removing the MAC address from the table. Block provides for interlock decrementing the number of entries ulNumOfEntries. Block provides for releasing the write lock of the routing table. Block provides for resetting the reaper timer.

Referring back to another embodiment is directed to methods for packet reception and transmission by a repeater AP such as repeater AP for example. As shown repeater AP could receive packets from three sources a PAP normal stations within the local cell and associated CAPs that associate with the repeater AP. The types of packets that could be received include management or control packets IEEE 802.1x data packets unicast data packets and broadcast multicast data packets.

Upon receiving a packet repeater AP can be configured to operate based on the packet type and packet address type.

When receiving packets from a PAP a repeater AP can be configured to respond by first determining what type of packet is sent. If the packet is an IEEE 802.11 management packet the packet can be received and processed by repeater AP s parent association manager PAM . If the packet is an IEEE 802.1x packet to be processed the packet is sent from a PAP s IEEE 802.1x authenticator. The packet is received and forwarded to the repeater AP s IEEE 802.1x supplicant.

If the packet is an IEEE 802.11 data packet it is one of two types either a unicast packet or a multicast broadcast packet. Referring to a flow diagram illustrates a method for transmitting IEEE 802.11 data packets. First block provides for determining if the packet is a unicast packet. If so block provides for determining if there are three addresses and the intended recipient is a repeater AP. If so block directs the packet to an upper layer stack. If the packet has four addresses in the packet header in block block determines whether the packet is intended for a CAP in the current cell area. If so block forwards the packet to its CAP reducing the header to indicate a three address data packet with a destination address of the CAP s address.

Block provides for determining whether the packet header is identified as intended for a station in the area cell. If so block directs that the repeater AP forward to the packet to that station reducing the header to indicate a three address data packet with a destination address of the station.

If the packet is intended for an unknown station block directs that the repeater AP construct a four address AP to AP data packet. Block provides for transmitting the data packet to every CAP in the local cell area.

Block provides for determining whether the packet is a multicast or broadcast packet. If so block provides for determining whether the data packet contains only three addresses in the header. If so block provides for the repeater AP to drop the packet. Block provides for determining whether the data packet contains four addresses. If so block provides that the repeater AP pass the packet to the upper layer stack. Next block provides for constructing and sending a three address multicast broadcast packet for all the stations in repeater AP s cell. Next block provides for constructing and sending a four address multicast broadcast packet for all the CAPs in repeater AP s cell.

Referring now to another method is directed to a repeater AP receiving packets from stations in its cell area instead of from a PAP

Block provides for determining if the packet is a control packet. If so block provides for filtering the packet by the repeater AP s packet filter because all control packets are processed by the NIC driver and will not be forwarded to Native Wireless Fidelity WiFi driver. Block provides for determining if the packet is an IEEE 802.11 management packet. If so block provides that the packet will be received and processed by repeater AP s station association manager SAM .

Block provides for determining if the packet is an IEEE 802.1x packet. If so block provides for determining whether the packet was sent from station s IEEE 802.1x supplicant and then forwarding the packet to repeater AP s IEEE 802.1x authenticator.

Block provides for determining if the packet is an IEEE 802.11 data packet. If so block provides for determining if the packet header is a unicast or multicast type packet. If it is a unicast and the packet identifies three addresses block provides for identifying the destination address. If the destination address is a repeater AP s block provides for transferring the packet up to the upper layer stack.

If the destination address is the Parent AP s address block provides for constructing a four address packet and sending it to the parent AP.

If the destination address is for a station or CAP in the same cell block provides for forwarding the packet to the station with a three address packet.

If the destination address is for stations outside the repeater s cell the method passes to block . Block provides for determining if the repeater AP knows the router to the destination station. If so block provides for constructing a four address packet and sending it to the appropriate AP which could be a CAP or a PAP. Block provides for determining whether the station is unknown to the repeater AP. If so block provides for constructing four address packets and sending to the associated PAP and all CAPs respectively.

If block provides that a packet is multicast broadcast block provides for determining whether the data packet contains three addresses. Next block the repeater AP transfers the packet to the upper layer stack in block constructs and sends a three address multicast broadcast packet for all the stations in repeater AP s cell. In block repeater AP constructs and sends address multicast broadcast packets for all the CAPs in repeater AP s cell respectively. In block repeater AP constructs and sends a four address multicast broadcast packet for its PAP.

Referring now to a flow diagram illustrates a method for a repeater AP receiving packets from its CAP.

Block provides for determining if the packet is an IEEE 802.11 control packet. If so block provides for filtering by repeater AP s packet filter because all control packet can be processed by the NIC driver and will not forwarded to Native WiFi driver.

Block provides for determining whether a packet is an IEEE 802.11 management packet. If so block provides for receiving and processing by repeater AP s child association manager CAM .

Block provides for determining if a packet is an IEEE 802.1x packet. If so the packet must have been sent from a CAP s IEEE 802.1x supplicant. Therefore block provides for receiving and forwarding the packet to the repeater AP s IEEE 802.1x authenticator.

Block provides for determining if a packet is an IEEE 802.11 data packet and the type of IEEE 802.11 data packet. If so block determines whether the data packet is unicast or multicast. If the packet is a unicast packet block provides for determining the number of addresses located in the packet header. If the packet has a three address packet header the packet is destined for the repeater AP and block provides for forwarding the packet to the upper layer stack. If the destination address is the PAP s address block provides for constructing a four address packet and sending the packet to the PAP. Block provides for determining whether the packet header includes four addresses and the packet is destined for a station or a CAP in the same cell. If so block provides for forwarding the packet to the station with a three address packet header. Block provides for determining whether the packet header includes four addresses and is destined for stations outside of the repeater AP s cell. If so block provides for determining whether the packet is for a known station. If destined for a known station block provides for constructing a four address packet header and sending the packet to the appropriate AP which could be a CAP or the associated PAP. If the packet is destined for an unknown station block provides for constructing a four address packet header and sending the packet to its PAP and all CAPs respectively except the CAP from which the data packet comes.

If in block a packet is determined to be a multicast or broadcast packet block provides that if the packet header contains three addresses the packet is dropped. Next if the packet header contains four addresses block provides for the repeater AP to transfer the packet to the upper layer stack. Next block provides for the repeater AP to send a three address multicast broadcast packet for all the stations in repeater AP s cell. Next block provides for constructing and sending address multicast broadcast packets for all the CAPs in repeater AP s cell respectively except the CAP that sent the data packet. Next block provides for constructing and sending a four address multicast broadcast packet for its PAP.

Referring now to a flow diagram illustrates a method for transmitting packets from a repeater AP. A repeater AP could be configured to generate packets locally and transmit to different destinations. Those packets include IEEE 802.11 management packets data packets and IEEE 802.1x packets from either a local supplicant or local authenticator. The packet could have a different destination address different address types unicast or multicast broadcast and different number of addresses in the packet header. illustrates a method for a repeater AP for transmitting such packets. Those transmit packet that are to be forwarded follow the methods described above.

One type of packet a repeater can transmit includes an IEEE 802.11 management packet. Block provides for determining if a packet is destined for a PAP. If so block provides for constructing a three address packet and transmitting the packet to the PAP directly. Block provides for determining if the packet is destined for a CAP. If so block provides for constructing a three address packet and sending to CAP directly. Block provides for determining if a packet is destined for a station in the repeater APs local cell. If so block provides for constructing a three address packet header and transmitting the packet to the station in the local cell.

Referring now to a flow diagram illustrates a method for transmitting an IEEE 802.1x packet. Block provides for determining whether a packet is destined for the associated PAP. If so block provides for constructing a three address packet header and transmitting the packet to the PAP directly. Block provides for determining whether the packet is destined for a CAP. If so block provides for constructing a three address packet header and transmitting the packet to the CAP directly. Block provides for determining if the packet is for a station in the local cell area. If so block provides for constructing a three address packet header and sending the packet to the station in the cell directly. If the packet is destined for a destination other than those identified in blocks or block provides for dropping the packet.

Referring now to a flow diagram illustrates method for transmitting an IEEE 802.11 unicast data packet. Block provides for determining whether the packet is for a station in the cell. If so block provides for constructing a three address header data packet and sending the packet to the station directly. Block provides for determining whether the packet is destined for the PAP. If so block provides for constructing a three address data packet header and sending the packet to the PAP directly.

Block provides that if the packet is for a CAP in the cell the repeater AP constructs a three address data packet header and transmits the packet to the CAP directly. Block provides for determining if the packet is destined for a station not in the repeater AP s direct cell area. Block provides for determining whether the packet is for a station not in its direct cell and determining whether the packet is for a known station belonging to a CAP or the associated PAP or to an unknown station.

If the packet is destined for a known station belongs to a CAP or PAP then block provides for constructing a four address data packet and sending the packet to the CAP or PAP. If the packet is destined for an unknown station block provides for constructing a four address data packet header and transmitting the packet to the associated PAP and all the CAPs.

Referring now to a flow diagram illustrates a method for transmitting an IEEE 802.11 multicast broadcast data packet. More particularly block provides for constructing a three address multicast broadcast address header and transmitting the packet within the cell. Block provides for constructing a four address multicast broadcast data packet header and transmitting the packet to the associated PAP. Block provides for constructing a four address multicast broadcast data packet and transmitting the packet to all the CAPs.

For a conventional AP to receive packets two sources are possible either normal stations in the cell and from CAPs that associate with the conventional AP. The types of packets possible include a plurality of types of packets including management or control packets IEEE 802.1x data packets and unicast data packets and broadcast multicast data packets.

Upon receiving a packet a repeater AP will take specific operations based on the packet type and packet address type.

Referring now to a flow diagram illustrates a method for receiving packets from a station in the convention AP s cell area. Block provides for determining if the packet is an IEEE 802.11 management packet. If so block provides for receiving the packet and processing the packet by the conventional AP s station association manager SAM . Block provides for determining if a packet is an IEEE 802.1x packet. If so the packet must have been sent from a station s IEEE 802.1x supplicant. Block provides for receiving the packet and forwarding the packet to the conventional AP s IEEE 802.1x authenticator.

Block provides for determining whether a packet is an IEEE 802.11 data packet. If so block provides for determining whether the packet is a unicast packet with a three address packet header. If so block provides for determining if the packet is for the conventional AP. If so block provides for sending the packet up to the upper layer stack. Block provides for determining if a packet is for a station or a CAP in its cell. If so block provides for forwarding the packet to the station with a three address packet header.

Block provides for determining whether a destination address is for stations not in repeater s cell. If so block provides for determining if the packet is for a known station. If so block provides for constructing a four address packet header and transmitting the packet to the appropriate CAP.

Block provides for determining if the packet is for an unknown station. If so block provides for constructing a four address packet header transmitting the packet to all CAPs and providing the packet to the upper layer stack.

Block provides for determining if a packet is a multicast or broadcast packet. If so block provides for ensuring that the data packet header contains three addresses. Next block provides for indicating the packet to the upper layer stack. Block provides for constructing and sending a three address multicast broadcast packet for all the stations in conventional AP s cell. Block provides for constructing and sending address multicast broadcast packets for all the CAPs in conventional AP s cell respectively.

Referring now to a flow diagram illustrates a method for a conventional AP to receive packets from a CAP. Block provides for determining whether the packet is an IEEE 802.11 management packet. If so block provides for receiving and processing the packet by a conventional AP s child association manager CAM .

Block provides for determining whether a packet is an IEEE 802.1x packet. If so the packet must have been sent from a CAP s IEEE 802.1x supplicant. Therefore block provides for receiving and forwarding the packet to conventional AP s IEEE 802.1x authenticator.

Block provides for determining whether the packet received from the CAP is an IEEE 802.11 data packet. If so block provides for determining if the packet is unicast or a multicast type packet. If a unicast packet block provides for determining if the packet has a three address in packet header and is for the conventional AP. If so block provides for providing the packet to the upper layer stack. Block provides for determining whether the unicast packet has a four address packet header and is destined for either a station or CAP in the same cell. If so block provides for the conventional AP to forward the packet to the station or CAP with a three address packet. Block provides for determining whether the packet has a four address packet header and is for stations not in conventional AP s cell. If so block provides for determining if the packet is for a known or unknown station. If for a known station block provides for the conventional AP to construct a four address packet and send the packet to the appropriate CAP. If the packet is destined for an unknown station block provides that the conventional AP provide the packet to the upper layer stack in block and then construct a four address packet and send the packet to all CAPs but the originating CAP in block .

If the conventional AP receives a multicast or broadcast packet block provides for determining the number of addresses in the packet header. Block provides for determining if the data packet has a three address packet header. If so block provides for the conventional AP to drop the packet. Block provides for determining if the data packet header contains four addresses. If so block provides for the conventional AP to provide the packet to the upper layer stack. Next block provides for the conventional AP to construct and send address multicast broadcast packets for all the CAPs in conventional AP s cell except the originating CAP. Next block provides for the conventional AP to construct a three address packet header for the multicast broadcast packet and send the packet to all the stations in conventional AP s cell.

Referring now to a flow diagram illustrates a method for a conventional AP to transmit packets according to an embodiment. A conventional AP could generate packets locally and transmit to different destinations. The type of packets includes IEEE 802.11 management packets data packets and IEEE 802.1x packets from either a local supplicant or local authenticator. The packet can have a destination address different address types unicast or multicast broadcast and a different number of addresses in the packet header. A conventional AP can also transmit packets for forwarding.

Block provides for determining if the packet to be transmitted is an 802.11 management packet an IEEE 802.1x packet an IEEE 802.11 unicast packet or an IEEE 802.11 multicast packet.

If the packet is an IEEE 802.11 management packet block provides for determining whether the packet is destined for a CAP. If so block provides for constructing a three address packet header and transmitting the packet to the CAP directly. Block provides for determining whether the packet is destined for a station in the conventional AP s cell. If so block provides for constructing a three address packet header and sending the packet to the cell directly.

Block provides for determining if the packet is an IEEE 802.1x packet. If so block provides for determining whether the packet is destined for a CAP. If so block provides for constructing a three address data packet and transmitting the packet to the CAP directly. If the packet is an IEEE 802.1x packet for a station in the conventional AP s cell block block provides for constructing a three address data packet header and transmitting the packet to the station in the cell directly.

If the packet to be transmitted by the conventional AP is an IEEE 802.11 unicast data packet block provides for determining whether the packet is destined for a station in the cell. If so block provides for constructing a three address data packet header and transmitting the packet to the station directly. Block provides for determining if the packet is for a CAP in the cell. If so block provides for constructing a three address data packet header and transmitting the packet to the CAP directly.

Block provides for determining if the packet is for a station not in its cell. If so block provides for determining of the packet is for a known or unknown station. If a known station block provides for the conventional AP to construct a four address data packet header and transmitting the packet to the CAP.

If it is for an unknown station block provides for the conventional AP to construct a four address packet header and transmit the packet to all CAPs.

If the packet is an IEEE 802.11 multicast broadcast data packet block provides for constructing a three address multicast broadcast address and transmitting the packet to stations within the cell. Next block provides for the conventional AP to construct a four address multicast broadcast data packet and transmit the packet to all the CAPs.

In view of the many possible embodiments to which the principles of this invention can be applied it will be recognized that the embodiment described herein with respect to the drawing figures is meant to be illustrative only and are not be taken as limiting the scope of invention. For example those of skill in the art will recognize that the elements of the illustrated embodiment shown in software can be implemented in hardware and vice versa or that the illustrated embodiment can be modified in arrangement and detail without departing from the spirit of the invention. Therefore the invention as described herein contemplates all such embodiments as can come within the scope of the following claims and equivalents thereof.

