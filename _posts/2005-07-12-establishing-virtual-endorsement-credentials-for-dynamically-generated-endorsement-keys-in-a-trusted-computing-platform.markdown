---

title: Establishing virtual endorsement credentials for dynamically generated endorsement keys in a trusted computing platform
abstract: A method and apparatus are disclosed in a data processing system for establishing virtual endorsement credentials. The data processing system includes a hardware trusted platform module (TPM). Logical partitions are generated in the system. A different virtual TPM is generated for each one of the logical partitions. For each one of the logical partitions, the virtual TPM that was generated for the logical partition then dynamically generates a virtual endorsement key, which is stored only within a corresponding virtual TPM. Using the virtual endorsement key, each virtual TPM also generates a virtual endorsement credential for use by the logical partition that includes the virtual TPM. The virtual endorsement credential is generated within the data processing system without the data processing system or its devices accessing a trusted third party that is external to the data processing system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08549592&OS=08549592&RS=08549592
owner: International Business Machines Corporation
number: 08549592
owner_city: Armonk
owner_country: US
publication_date: 20050712
---
The invention relates to the field of data processing systems and more specifically to a method apparatus and product for establishing virtual endorsement credentials for dynamically generated virtual endorsement keys that are generated for multiple logical partitions in a trusted computing platform.

Most data processing systems contain sensitive data and sensitive operations that need to be protected. For example the integrity of configuration information needs to be protected from illegitimate modification while other information such as a password file needs to be protected from illegitimate disclosure. As another example a data processing system needs to be able to reliably identify itself to other data processing systems.

An operator of a given data processing system may employ many different types of security mechanisms to protect the data processing system. For example the operating system on the data processing system may provide various software mechanisms to protect sensitive data such as various authentication and authorization schemes while certain hardware devices and software applications may rely upon hardware mechanisms to protect sensitive data such as hardware security tokens and biometric sensor devices.

The integrity of a data processing system s data and its operations however centers around the issue of trust. A data processing system s data and operations can be verified or accepted by another entity if that entity has some manner for establishing trust with the data processing system with respect to particular data items or particular operations.

Hence the ability to protect a data processing system is limited by the manner in which trust is created or rooted within the data processing system. To address the issues of protecting data processing systems a consortium of companies has formed the Trusted Computing Group TCG to develop and to promulgate open standards and specifications for trusted computing. According to the specifications of the Trusted Computing Group trust within a given data processing system or trust between a data processing system and another entity is based on the existence of a hardware component within the data processing system that has been termed the trusted platform module TPM .

A trusted platform enables an entity to determine the state of the software environment in that platform and to seal data to a particular software environment in that platform. The entity deduces whether the state of the computing environment in that platform is acceptable before performing a transaction with that platform.

Present day computing systems and in particular large scale server systems often include support for running multiple virtual machines. The system may be a large scale on demand server system that executes hundreds of server instances on a single hardware platform to support customers with varying computing requirements. In the most flexible of these systems multiple partitions which may differ in operating system and application mix are concurrently present in system memory and processes executing in each partition are run in an environment that supports their execution on a guest operating system. The virtual machine provides an environment similar enough to a real hardware platform that the operating system can run with little or no modification. A hypervisor sometimes referred to as a virtual machine monitor manages all of the virtual machines or partitions and abstracts system resources so that each partition provides a machine like environment to each operating system instance.

To implement the above architectural goals multiple processing modules and other devices are installed in a system and each device generally supports one or more of the above described partitions although it is possible to share tasking on a partition between multiple devices. Groups of devices or an individual device may be associated with a particular customer and it is desirable to secure access to a device or group by only that customer including securing the devices from the manufacturer of the devices and system.

In order to provide security in such a system devices must be bound to the system avoiding removal and data mining that can occur by either extracting data from a device or using a device to impersonate a system or portion thereof from which it was extracted. Binding can be physical e.g. the device is permanently attached to the system or binding can be accomplished cryptographically allowing for removable devices and networked systems.

The above mentioned removable and networked devices provide protection from data tampering or impersonation by refusing to initiate in a system unless the device is cryptographically bound to the system. The information associated with the binding is generally encrypted and is stored in non volatile storage within the device by the manufacturer. With the above described mechanism only a trusted system can access data associated with or stored within a particular device dramatically reducing the impact of misappropriation or misuse of removable devices. Further data associated with a device such as a stored context or state of one of the above mentioned virtual machines is secured by an encryption mechanism that requires a key that is stored within the associated device or devices. The two layer mechanism hardware binding and data encryption keyed to a particular device or devices provides a high level of security against data mining by misappropriation or misuse of removable devices.

A single Endorsement Key EK pair is typically stored in a hardware trusted platform module TPM . Each Endorsement Key pair is unique to the particular hardware TPM in which it is stored. The Endorsement Key pair includes a public Endorsement Key and its corresponding private Endorsement Key. If the public Endorsement Key is used to encrypt data only the private Endorsement Key that corresponds to that public key is capable of decrypting the encrypted data. If the private Endorsement Key is used to encrypt data only the public Endorsement Key that corresponds to that private key is capable of decrypting the encrypted data.

The Endorsement Key pair is stored within its TPM by the manufacturer of the TPM when the TPM is manufactured.

In addition to the Endorsement Key an Endorsement Credential is also stored within the TPM by the manufacturer of the TPM when the TPM is manufactured. The Endorsement Credential includes a copy of the TPM s public Endorsement Key.

The Endorsement Key and Endorsement Credential are used to identify a particular TPM to a trusted third party which is external to the system that includes the TPM in order to obtain an Attestation Identity Key AIK certificate from the trusted third party. An Attestation Identity Key is used by a system to indicate that the system includes a TPM and that the TPM is valid.

Most known systems use a single hardware TPM to provide trust services to the entire system. One hardware TPM is designed to provide support for a single non partitionable computer system. Thus existing systems utilize a single hardware TPM to provide trust for the entire single system.

High performance servers though support partitionable multithreaded environments that may need access to a trusted platform module on multiple threads simultaneously. This type of environment allocates or partitions physical resources to each of the supported multiple partitions. In addition each partition can be thought of as a separate logical computer system that can execute its own operating system and applications. The operating system executed by one partition may be different from the operating systems being executed by the other partitions.

For systems that include a single hardware TPM and multiple logical partitions a need exists for providing a unique Endorsement Key pair and Endorsement Credential for each logical partition. Thus for example if the system includes four logical partitions four separate and unique Endorsement Key pairs and associated Endorsement Credentials would be needed.

It is not practical however to generate and store multiple Endorsement Key pairs and Endorsement Credentials in a hardware TPM because the complex systems that include this TPM permit logical partitions to be created and destroyed as needed. Therefore the number of logical partitions and thus the number of needed Endorsement Key pairs and Endorsement Credentials is not known when the TPM is manufactured.

Therefore a need exists for a method apparatus and product for establishing virtual endorsement credentials for dynamically generated virtual endorsement key pairs that are generated for multiple logical partitions in a trusted computing platform.

A method apparatus and computer program product are disclosed in a data processing system for establishing virtual endorsement credentials. The data processing system includes a hardware trusted platform module TPM . Logical partitions are generated in the system. A different virtual TPM is generated for each one of the logical partitions. For each one of the logical partitions the virtual TPM that was generated for the logical partition then dynamically generates a virtual endorsement credential for use by the logical partition that includes the virtual TPM. The virtual endorsement credential is generated within the data processing system without the data processing system or its devices accessing a trusted third party that is external to the data processing system.

The above as well as additional objectives features and advantages of the present invention will become apparent in the following detailed written description.

A preferred embodiment of the present invention and its advantages are better understood by referring to the figures like numerals being used for like and corresponding parts of the accompanying figures.

The present invention is a method apparatus and computer program product in a data processing system for establishing virtual endorsement credentials. The data processing system includes a hardware trusted platform module TPM . A platform signing key pair and platform signing key credential are both stored in the hardware TPM by the manufacturer of the TPM when the TPM is manufactured. An endorsement key pair and endorsement credential are not needed or stored in this hardware TPM.

Logical partitions are generated in the system. A different virtual TPM is generated for each one of the logical partitions. For each one of the logical partitions the virtual TPM that was generated for the logical partition dynamically generates a virtual endorsement key pair for that logical partition. Thus each logical partition has its own virtual TPM and its own virtual endorsement key pair. Each virtual endorsement key EK pair includes an EK public key and its corresponding EK private key.

Each virtual TPM is then capable of dynamically generating a virtual endorsement credential for use by its logical partition. The virtual TPM generates a virtual endorsement credential for use by its logical partition by the virtual TPM signing the logical partition s virtual EK public key using the hardware TPM s platform signing key private key.

In this manner for each logical partition a virtual endorsement key pair exists that is unique to that logical partition s virtual TPM. The platform signing key is then used by a logical partition s virtual TPM to bind the logical partition s virtual endorsement key pair to the hardware TPM.

The present invention provides for creating within a data processing system a virtual Endorsement Credential for a logical partition without accessing a trusted third party that is external to the system.

In order for a virtual Endorsement Credential to be created by a third party that is external to the data processing system the logical partition would have to send a virtual endorsement key to the external trusted third party. The external trusted third party would then create the virtual Endorsement Credential and send it back to the system for use by the logical partition. This is not done and is not necessary according to the present invention.

In the depicted example distributed data processing system may include the Internet with network representing a worldwide collection of networks and gateways that use various protocols to communicate with one another such as Lightweight Directory Access Protocol LDAP Transport Control Protocol Internet Protocol TCP IP Hypertext Transport Protocol HTTP Wireless Application Protocol WAP etc. Of course distributed data processing system may also include a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . For example server directly supports client and network which incorporates wireless communication links. Network enabled phone connects to network through wireless link and PDA connects to network through wireless link . Phone and PDA can also directly transfer data between themselves across wireless link using an appropriate technology such as Bluetooth wireless technology to create so called personal area networks PAN or personal ad hoc networks. In a similar manner PDA can transfer data to PDA via wireless communication link .

Those of ordinary skill in the art will appreciate that the hardware in may vary depending on the system implementation. For example the system may have one or more processors such as an Intel Pentium based processor and a digital signal processor DSP and one or more types of volatile and non volatile memory. Other peripheral devices may be used in addition to or in place of the hardware depicted in . The depicted examples are not meant to imply architectural limitations with respect to the present invention.

The present invention could be implemented on a variety of hardware platforms and computational environments and are intended as examples of a heterogeneous computing environment and not as architectural limitations for the present invention.

In addition to being able to be implemented on a variety of hardware platforms and computational environments the present invention may be implemented in a variety of software environments. A typical operating system may be used to control program execution within each data processing system. For example one device may run a Unix operating system while another device contains a simple Javas runtime environment. A representative computer platform may include a browser which is a well known software application for accessing hypertext documents in a variety of formats such as graphic files word processing files Extensible Markup Language XML Hypertext Markup Language HTML Handheld Device Markup Language HDML Wireless Markup Language WML and various other formats and types of files.

The present invention may be implemented on a variety of hardware and software platforms as described above. More specifically though the present invention is directed to trusted computing platforms.

Partitioned hardware includes a plurality of processors a plurality of system memory units a plurality of input output I O adapters and a storage unit . Each of the processors memory units NVRAM storage and I O adapters may be assigned to one of multiple partitions .

Hypervisor is responsible for partitioning the primary platform . Partition management firmware hypervisor performs a number of functions and services for partitions to create and enforce the partitioning of logically partitioned primary platform . Hypervisor is a firmware implemented virtual machine identical to the underlying hardware. Firmware is software stored in a memory chip that holds its content without electrical power such as for example read only memory ROM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM and non volatile random access memory non volatile RAM . Thus hypervisor allows the simultaneous execution of independent OS images by virtualizing all the hardware resources of logically partitioned platform . Hypervisor may attach I O devices through I O adapters to single virtual machines in an exclusive mode for use by one of OS images .

Data processing system includes service processor . A service processor is a separate hardware partition within system that executes its own operating system.

A trusted building block which includes one or more hardware trusted platform modules may also be included within platform .

A TBB comprises the combination of the core root of trust for measurement CRTM component a trusted platform module TPM the connection of the CRTM to motherboard and the connection of the TPM to motherboard . For example TBB includes TPM and CRTM .

A TBB provides trust to one of the platforms of system . A TBB includes its own CRTM. A CRTM is an immutable portion of a platform s initialization code that executes upon a platform reset. This is the platform for which the TBB that includes the CRTM provides its services.

The platform s execution must begin at the CRTM upon any platform reset event. In this manner the trust in the platform is based on the CRTM and the behavior of the TPM and the trust in all measurements is based on the integrity of the CRTM.

For example the BIOS may be assumed to include a BIOS Boot Block and POST BIOS each of these are independent components that can be updated independent of each other wherein the manufacturer must control the update modification and maintenance of the BIOS Boot Block but a third party supplier may update modify or maintain the POST BIOS component. In the example that is shown in CRTM may be assumed to be the BIOS Boot Block and the POST BIOS is a measured component of the chain of trust. Alternatively the CRTM may comprise the entire BIOS.

The software components may be received through a network such as network that is shown in or they may be stored e.g. on hard disk . Platform receives electrical power from power supply for executing the software components on add on cards and motherboard which includes typical components for executing software such as CPU and memory although motherboard may include multiple CPUs. Interfaces connect motherboard to other hardware components within system and firmware contains POST BIOS power on self test basic input output system .

Trusted platform module comprises input output component which manages information flow over communications bus by performing appropriate protocol encoding decoding operations and routing of messages to appropriate components. Cryptographic co processor performs cryptographic operations within a trusted platform module. Key generator creates symmetric keys and RSA asymmetric cryptographic key pairs. HMAC engine performs HMAC Keyed Hashing for Message Authentication calculations whereby message authentication codes are computed using secret keys as integrity checks to validate information transmitted between two parties e.g. in accordance with Krawczyk et al. HMAC Keyed Hashing for Message Authentication Request for Comments RFC 2104 Internet Engineering Task Force IETF February 1997.

Random number generator acts as a source of randomness for the computation of various values such as nonces keys or other values. SHA 1 engine implements the SHA 1 hash algorithm. Power detector manages the power states of a trusted platform module in association with the power states of the platform. Opt in component maintains the state of persistent and volatile flags and enforces semantics associated with those flags such that the trusted platform module may be enabled and disabled. Execution engine runs program code to execute commands that the trust platform module receives through input output component . Non volatile memory stores persistent identity and state associated with the trusted platform module the non volatile memory may store static data items but is also available for storing dynamic data items by entities that are authorized by the trusted platform module owner whereas volatile memory stores dynamic data items.

Encryption keys are stored within TPM . Various encryption keys may be utilized by TPM in order to authenticate another device and or to communicate with another device. Although encryption keys are depicted separately from the other components of the TPM the various encryption keys will typically be stored in non volatile memory .

According to the present invention the encryption keys include a Platform Signing Key PSK and a platform signing key credential. Although other encryption keys may also be stored in keys according to the present invention an endorsement key pair and endorsement key credential are not stored in keys .

Each LPAR includes a virtual TPM which includes a TCG software stack TSS and a TPM device driver TPMDD . Each virtual TPM is generated for a logical partition by the hypervisor. For example LPAR includes TSS and TPMDD while LPAR includes TSS and TPMDD . The other LPARs also include a virtual TPM that includes its own TSS and TPMDD that are not depicted. TSS and TSS implement the specification of the host programming interfaces that an operating system an application or other software component utilizes to interface with a TPM. TSS comprises the TSS service provider to which an entity may interface via common application programming interfaces APIs the TSS core services which provides centralized management of key storage contexts and handles the direct interaction with the TPM on the host and the TPM device driver library and the TPMDD such as TPMDD or TPMDD . Generally all interfacing to the TPM occurs through TSS service provider interface TSPI or an API above the TSPI.

Hypervisor is firmware that is responsible for creating and enforcing the partitioning of platform among the various partitions. Hypervisor provides a set of firmware services to the operating system in each partition so that interference between operating system images is prevented. Each partition includes an operating system executing in that partition that may be the same as or different from the operating system that is executing in the other logical partitions. Hypervisor manages the logical partitions and allocates and manages the physical devices that are allocated to each partition.

Instead of permitting logical partitions to access a hardware TPM directly a virtual TPM is presented to each logical partition by the hypervisor. Each virtual TPM utilizes TPM services in this depiction LPAR and LPAR .

According to the present invention a virtual endorsement key pair and virtual endorsement credential that are unique to a logical partition are created and stored in each logical partition. For example a virtual endorsement key pair vEK 0 is created by virtual TPM for logical partition . A virtual endorsement credential is also created by virtual TPM for logical partition . Virtual endorsement credential includes a copy of the public virtual endorsement key

A virtual endorsement key pair vEK 1 is created by virtual TPM for logical partition . A virtual endorsement credential is also created by virtual TPM for logical partition . Virtual endorsement credential includes a copy of the public virtual endorsement key

Attestation Identity Keys are used in the process known as Attestation. Attestation is a process where the hardware TPM digitally signs information that is maintained within the device and presents it as proof to a third party that the information is protected by a TPM. The AIK is used here to provide anonymity the theory being that one can have thousands of AIKs and therefore usage cannot be tracked to a specific TPM or system. The AIK credential is evidence that the AIK comes from a TPM but does not communicate which specific TPM it is from.

Next block depicts a user telling its system s hardware TPM to generate an AIK key pair. Block then illustrates the user receiving an AIK public key from the hardware TPM. The process then passes to block which illustrates a user generating an AIK certificate request and including the AIK public key in the request. Thereafter block depicts the user obtaining the endorsement credential from the hardware TPM. The endorsement credential includes the endorsement key EK public key.

Next block illustrates the user sending the AIK certificate request and the endorsement credential to the trusted third party. Thereafter block depicts the user receiving an encrypted AIK certificate from the trusted third party. Block then illustrates the user requesting the system s hardware TPM to decrypt the encrypted AIK certificate.

The process then passes to block which depicts a determination of whether or not the user has received a decrypted AIK certificate. If a determination is made that the user has received a decrypted AIK certificate the process passes to block which illustrates the user using the AIK certificate. The process then terminates as illustrated by block . Referring again to block if a determination is made that the user has not received a decrypted AIK certificate the process terminates as illustrated by block .

Block then illustrates the TPM sending the AIK public key to the user. Thereafter block depicts the TPM receiving an encrypted AIK certificate to be decrypted by the hardware TPM. Next block illustrates the TPM attempting to decrypt the encrypted AIK certificate using the hardware TPM s endorsement key EK private key.

Block then depicts a determination of whether or not the hardware TPM was able to decrypt the AIK certificate using the EK private key. The EK private key is part of a key pair that includes this EK private key and a corresponding EK public key. If the AIK certificate has been encrypted using the corresponding EK public key the hardware TPM will be able to decrypt the encrypted AIK certificate using the EK private key. This ensures that this hardware TPM s EK key pair was used in the encryption of the AIK certificate. If the AIK certificate was encrypted using an EK public key that does not correspond to this EK private key the hardware TPM will not be able to decrypt the AIK certificate.

If a determination is made that the hardware TPM was not able to decrypt the encrypted AIK certificate using the hardware TPM s EK private key the process terminates as illustrated by block . Referring again to block if a determination is made that the hardware TPM was able to decrypt the encrypted AIK certificate using the hardware TPM s EK private key the process passes to block which depicts the hardware TPM comparing the AIK public key that is included in the decrypted certificate to the hardware TPM s AIK public key that the hardware TPM generated in block to determine whether the hardware TPM created this AIK public key.

Block then depicts a determination of whether or not the hardware TPM created this AIK public key. If a determination is made that the hardware TPM did not create this AIK public key the process terminates as illustrated by block . Referring again to block if a determination is made that the hardware TPM did create this AIK public key the process passes to block which depicts the hardware TPM providing the decrypted AIK certificate to the user. The process then terminates as illustrated by block .

The process then passes to block which depicts the trusted third party verifying the endorsement credential by verifying that the certificate was signed by another trusted third party. Block then illustrates a determination of whether or not the endorsement credential is valid.

Credential i.e. certificate verification is done via normal prior art public key infrastructure PKI processing.

Referring again to the present invention if a determination is made that the endorsement credential is not valid the process terminates as illustrated by block .

Referring again to block if a determination is made that the endorsement credential is valid the process passes to block which depicts the trusted third party creating an AIK certificate from the AIK certificate request. The AIK certificate will include the AIK public key. Next block illustrates the trusted third party encrypting the AIK certificate using the public key that was taken from the endorsement credential.

The process then passes to block which depicts the trusted third party sending the encrypted AIK certificate to the user. The process then terminates as illustrated by block .

According to the present invention an attestation occurs when a virtual TPM digitally signs the information that is maintained within the device. Thus an AIK certificate is evidence that the AIK included in the certificate came from a TPM in the case of the present invention that TPM is a virtual TPM.

Next block depicts a logical partition telling its virtual TPM to generate an AIK key pair. Block then illustrates the logical partition receiving an AIK public key from its virtual TPM.

The process then passes to block which illustrates a logical partition generating an AIK certificate request and including the AIK public key in the request. Thereafter block depicts the logical partition obtaining the virtual EK public key from its virtual TPM. Next block illustrates the logical partition requesting and receiving a virtual endorsement credential from its virtual TPM. A virtual endorsement credential is the virtual EK public key signed by the partition s virtual trusted platform module using the PSK private key. The process then passes to block which depicts the logical partition obtaining the PSK certificate by requesting the PSK certificate from its virtual TPM which then obtains the PSK certificate from the hardware TPM.

The PSK certificate is a credential from a second trusted third party that asserts that the PSK key pair is a key owned and protected by the hardware TPM that virtualizes the virtual TPM. The first trusted third party which is requested to provide an AIK certificate uses the PSK certificate to verify that the signed virtual EK public key that was provided to the first trusted third party is from a device that has the correct properties instead of being from just any entity. The second trusted third party that signed the PSK certificate asserts that the PSK key pair is valid for signing virtual endorsement keys. The first third party trusts the second third party and therefore accepts the PSK signature on the virtual EK that the first trusted third party received.

Thereafter block illustrates the logical partition sending the AIK certificate request the EK public key i.e. virtual endorsement credential the signed EK public key and the PSK certificate to the trusted third party. Block then depicts the logical partition receiving an encrypted AIK certificate from the trusted third party. Next block illustrates the logical partition requesting its virtual TPM to decrypt the encrypted AIK certificate.

The process then passes to block which depicts a determination of whether or not the logical partition has received a decrypted AIK certificate. If a determination is made that the logical partition has received a decrypted AIK certificate the process passes to block which illustrates the logical partition using the AIK certificate. The process then terminates as illustrated by block . Referring again to block if a determination is made that the user has not received a decrypted AIK certificate the process terminates as illustrated by block .

The process then passes to block which illustrates the virtual TPM sending its AIK public key to the logical partition. Block then illustrates the virtual TPM providing its virtual EK public key to the logical partition. Thereafter block depicts the virtual TPM creating a virtual endorsement credential by signing its virtual EK public key using the hardware TPM s PSK private key. The signed virtual EK public key is a virtual endorsement credential that is unique to the particular logical partition that includes this virtual TPM. The virtual TPM then sends the virtual endorsement credential i.e. the signed virtual EK public key to its logical partition.

Block then illustrates the virtual TPM sending the PSK certificate to the logical partition. Thereafter block depicts the virtual TPM receiving an encrypted AIK certificate to be decrypted. The process then passes to block which depicts the virtual TPM attempting to decrypt the encrypted AIK certificate using the virtual TPM s virtual EK private key.

Block then depicts a determination of whether or not the virtual TPM was able to decrypt the AIK certificate using the virtual TPM s virtual EK private key. If a determination is made that the virtual TPM was not able to decrypt the encrypted AIK certificate using the virtual TPM s virtual EK private key the process terminates as illustrated by block .

Referring again to block if a determination is made that the virtual TPM was able to decrypt the encrypted AIK certificate using the virtual TPM s virtual EK private key the process passes to block which depicts the virtual TPM comparing the AIK public key that is included in the decrypted certificate to the virtual TPM s AIK public key that the virtual TPM generated in block to determine whether the virtual TPM created this AIK public key.

Block then depicts a determination of whether or not the virtual TPM created this AIK public key. If a determination is made that the virtual TPM did not create this AIK public key the process terminates as illustrated by block . Referring again to block if a determination is made that the virtual TPM did create this AIK public key the process passes to block which depicts the virtual TPM providing the decrypted AIK certificate to the logical partition. The process then terminates as illustrated by block .

The process then passes to block which depicts the trusted third party verifying the PSK certificate by verifying that the certificate was signed by another trusted third party. Block then illustrates a determination of whether or not the PSK certificate is valid. If a determination is made that the PSK certificate is not valid the process terminates as illustrated by block .

Referring again to block if a determination is made that the PSK certificate is valid the process passes to block which depicts verifying the signed virtual EK public key by determining whether the signed virtual EK public key was signed by the PSK private key. If a determination is made that the virtual EK public key was not signed by the PSK private key the process terminates as illustrated by block . Referring again to block if a determination is made that the virtual EK public key was signed by the PSK private key and thus the signed virtual EK public key is verified the process passes to block which depicts the trusted third party creating an AIK certificate from the AIK certificate request. The AIK certificate will include the AIK public key.

Next block illustrates the trusted third party encrypting the AIK certificate using the virtual EK public key. The process then passes to block which depicts the trusted third party sending the encrypted AIK certificate to the logical partition. The process then terminates as illustrated by block .

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

It is important to note that while the present invention has been described in the context of a fully functioning data processing system those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable type media such as a floppy disk a hard disk drive a RAM CD ROMs DVD ROMs and transmission type media such as digital and analog communications links wired or wireless communications links using transmission forms such as for example radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system.

The description of the present invention has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

