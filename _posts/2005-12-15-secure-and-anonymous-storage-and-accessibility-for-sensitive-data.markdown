---

title: Secure and anonymous storage and accessibility for sensitive data
abstract: The subject disclosure pertains to secure and anonymous data storage and access. More particularly, encryption methods and mechanisms are provided in conjunction with one or more blobs, identities, and guards to implement one or more layers of indirect encryption. Generation of these components can be accomplished without including or pointing to any personally identifiable information about a user. Accordingly, a user can store sensitive data securely and anonymously on a server or like storage system. Such data can also be roamed, recovered, and synchronized securely from a plurality of computers at least because the data is centrally located.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07593548&OS=07593548&RS=07593548
owner: Microsoft Corporation
number: 07593548
owner_city: Redmond
owner_country: US
publication_date: 20051215
---
With the growing use of the Internet and secure web sites that require user login password to be able to access sensitive data such as bank accounts confidential email credit card information merchant accounts etc. users are required to remember a lot of sensitive data such as the user account name and password for these sites. Given the myriad of rules that apply to login and password fields at sites it is almost impossible for a user to remember all the details. By way of example user login can be a social security number at some sites an email address at others and an oblique character string e.g. baskd2485 at yet other sites. Similarly passwords follow different rules with respect to mix of letter case symbols and numbers and length. To deal with this quagmire many users just store this type of information in a normal document such as a text file or a word processing document. However this is especially insecure as the data is stored in plain text and is available to anyone with access to the files to see in plain sight.

Form fill applications such as those offered in browser toolbars have been created in recent years to fill this gap. They offer some level of security in that the data is encrypted with a master password and the user needs to remember just the master password. While this is better than plain files all known current form fill applications are inadequate for several reasons. First the data could be lost if there is a hard disk corruption computer failure. Second the data is not available for access on any computer other than the one where it is stored and finally keeping the data synchronized across multiple computers is cumbersome because it can be done only manually.

One solution to portability and synchronization issues is to allow the storage of the data on portable storage devices such as USB key chain storage devices. While this helps in some ways there is still the risk of the storage device being lost or damaged resulting in total loss of data. It also means that the device has to be carried around and there is no access unless you have the device at hand.

Many of these problems would disappear if the data could be stored on a server side. Indeed many systems store data including credit card numbers on such sites. However this is not without its demerits either including but not limited to lack of privacy at least because the server stores such information in plain text or the key used in encryption is co located in a data center. Such storage techniques may allow any hacker who gains sufficient privileges to the computers at the data center including any malicious employees of the company running the center to retrieve sensitive data often with relative ease. Moreover companies running these data centers run serious risks with respect to liability goodwill from any accidental exposure of which there have been numerous instances in the past.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the claimed subject matter. This summary is not an extensive overview. It is not intended to identify key critical elements or to delineate the scope of the claimed subject matter. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

Briefly described the subject innovation pertains to systems and methods for secure and anonymous storage and accessibility for sensitive data. In accordance with an aspect of the subject innovation data can be stored and accessed utilizing one or more blobs identities and guards. For example a data blob can correspond to user data encrypted by a data key stored on a server or like system. The data key itself can correspond to a blob encrypted by another key and housed on a client machine. Hence the encrypted data and the key are stored on completely different machines making deciphering encrypted data more difficult.

In accordance with another aspect of the innovation anonymous identities are associated with blobs and facilitate identification of blobs without including or pointing to any personally identifiable information of a user. Guards are also associated with blobs and are generated based at least in part upon a key associated with related blob. Accordingly in addition to identifying a blob for retrieval a user must provide a matching guard before the blob is transmitted to indicate that the requesting entity knows the key. Among other things this prevents malicious individuals from retrieving the blob and launching an extended offline attack on the blob to learn the information included therein. However even if the blob where to be decrypted damage would be mitigated at least because the data is not traceable to a particular individual.

The blob anonymous identity guard techniques for securely storing data can be applied in various contexts and combinations to provide particular desired functionality. For example in accordance with an aspect of the subject innovation both premeditated and random roaming can be securely implemented utilizing variations on these techniques. Further yet recovery of data from a crashed or otherwise in accessible machine and master password reset are also provided in accordance with an aspect of the subject innovation.

In accordance with yet another aspect of the subject innovation human interactive proofs or challenges can be employed in conjunction with other encryption mechanisms and methodologies provided herein to ensure that a human being is utilizing a client system and thereby thwart attacks by automatons.

In accordance with yet another aspect of the subject innovation synchronization of data across multiple machines is easily and securely accomplished due at least in part to the central storage of data and several layers of indirect encryption.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the claimed subject matter are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways in which the subject matter may be practiced all of which are intended to be within the scope of the claimed subject matter. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.

The various aspects of the subject innovation are now described with reference to the annexed drawings wherein like numerals refer to like or corresponding elements throughout. It should be understood however that the drawings and detailed description relating thereto are not intended to limit the claimed subject matter to the particular form disclosed. Rather the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the claimed subject matter.

As used in this application the terms component and system and the like are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an instance an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computer and the computer can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

The word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs.

Furthermore all or portions of the subject innovation may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed innovation. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick key drive . . . . Additionally it should be appreciated that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN . Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Turning initially to a data access system is depicted in accordance with an aspect of the subject innovation. System includes a transmission component a server and a receiver component . The transmission component can receive retrieve or otherwise acquire an identity and a guard which can be components as defined herein . The identity anonymously identifies a blob. The guard provides information that indicates that a requesting entity knows the key required to decrypt the blob. This prevents a hacker from obtaining the blob by mere identification and subsequently launching a concerted attach over an extended period of time on an offline system for example to decrypt the blob and access data provided thereby.

Turning briefly to a blob and associated mechanisms are illustrated. Generally speaking a blob is an arbitrary collection of opaque data. A storing system does not know nor does it need to know anything about the content format or the like associated with the mass of data known as a blob. Still further yet a blob as used herein refers to encrypted data. As illustrated blob includes data encrypted with a key. Blob is also associated with an identity component and a guard component that identify and control access to the blob . As will be described in further detail infra the identity and guard information do not reveal any information that can be traced back to a particular user.

Turning back to the identity and guard are transmitted to a server component or other type of centrally managed storage system. The server can locate a requested blob based on the identity. Subsequently the server can compare a guard associated with the identified blob and the provided guard. If there is a match it is verified that the requesting entity knows the key and the server provides or transmits the blob back to the requesting entity. The receiver component receives retrieves or otherwise obtains or acquires the blob from the server component . The blob can then be decrypted and employed for example to automatically fill in user names and or passwords.

Continuing with a data access system is illustrated. System includes identity and guard generation components and respectively. Identity generation component can generate an identity from a variety of sources for instance in the form of a hash e.g. SHA . Accordingly to one aspect of the innovation identity can be derived from a machine and user GUID Globally Unique Identifier . The machine GUID is generated and associated with a particular physical machine. Similarly a user GUID is generated associated with a user and their data on a particular machine. The guard component can generate a guard from a data key and one or more pieces of data from a variety of sources. For example the guard can be generated utilizing a hash created from the machine GUID user GUID and data key. Further yet the guard as well as the identity may be associated with salt. Salt is a system wide well known number and is utilized to make any possible dictionary attacks on multiple hashes more difficult. Additionally all hashing can involve some large number of iterations. The number of iterations would be a system wide constant for each type of hash. Iterations make it even more difficult to launch an offline attach on a database of hashes. The data key employed by guard generation component can be generated and provided by machine key generation component . Key generation component can generate a key for instance by employing a cryptographically safe random number generator.

The identity and guard generation components and are communicatively coupled to the transmission component . Accordingly transmission component can receive or retrieve a generated identity and guard from respective components and . The transmission component is communicatively coupled to the server component and can thus transmit the identity and guard thereto. The server component can analyze the guard and identity and return a data blob to receiver component if the data blob identity and guard match the provided corresponding values.

Receiver component is communicatively coupled to both the server component and the data blob decryption component . Upon receipt or retrieval of the data blob receiver component can provide the data blob to the data blob decryption component . The decryption component is communicatively coupled to the machine blob decryption component which is coupled to machine key generation component . The machine key generation component provides the generated machine key to the machine blob decryption component that employs the key to decrypt the machine blob and reveal a data key. This data key is then provided to data blob decryption component and utilized to decrypt the data blob to reveal user data.

Data blob decryption component can also be communicatively coupled to an application component that can utilize the user data. By way of example and not limitation the application component can correspond to an automatic user name and password completion component that as the name suggests automatically provides such values from the user data.

Data key generation component is communicatively coupled to the guard generation component and provides a data key to component to enable generation of a guard thereby. The data key can be generated in any number of a manners including but not limited to generation of a cryptographically safe random number. The data key generation component is also communicatively coupled to data blob generation component and provides a copy of the data key thereto. The data blob generation component generates a data blob by encrypting data with the provided data key.

Data key generation component is also communicatively coupled to the machine blob generation component which is coupled to the machine key generation component . Machine key generation component generates a key from one or more values including but not limited to the machine GUID user GUID and a user password. Data key generation component and machine key generation component both provide keys to the machine blob generation component . The machine blob generation component generates a machine blob by encrypting the data key with the machine key.

A portion of the generated components can be transmitted and stored to a central storage system such as a server. In particular the data blob and associated machine identification and guard can be stored to a server. The machine blob and associated machine key can be stored on a client system. Additionally or alternatively the machine blob could be stored to the server. In this instance the machine blob could require generation and saving of an associated identity and guard or be linked at least in part to the identity and guard associated with the data blob forming part of an account.

Secure storage component functionality has been previously described. In brief data can be encrypted as a blob and stored on the central storage component along with an identifier and a guard. Upon generation of a matching identifier and guard the blob can be downloaded and decrypted with a machine key to produce an unencrypted version of the data.

Premeditated roaming component enables data to be roamed to another machine when you know ahead of time that you want the data to roam. For example a user may want to roam data from an office computer to a home computer. This type of roaming is conventionally accomplished by storing data on a removable storage medium or sending the data to one self via web enabled email.

Recovery component provides a mechanism to recover data and or a reset a password. For example recovery component can enable recovery of a machine and user GUIDs associated with an inoperable or crashed machine. Furthermore a user can reset a master password they forgot.

Random roaming component provides a mechanism for roaming data without planning ahead. An example of a scenario would be trying to get to data in the conventional case where the removable storage device or email was lost or forgotten.

Prior to employing the functionality provided by any of the client sub components the system can be set up to enable such functionality. Accordingly what follows are systems for setting up and utilizing the provided functionality for the premeditated component recovery component and free roaming component . Similar systems for the secure storage component were previously described with respect to .

Turning to a premeditated roaming system is illustrated for roaming data. Seed extraction component receives or retrieves token and extracts the seed value stored thereby. The seed extraction component is communicatively coupled to premeditated guard calculation component premeditated identity calculation component and premeditated key calculation component . Premeditated key calculation component receives or retrieves the seed and calculates a key based at least in part thereon. Password component requests and receives or retrieves a user password that is provided to premeditated guard calculation component and premeditated identity calculation component . Based on the seed and password a premeditated guard and identity can be calculated by respective components and . The premeditated blob download component receives or retrieves the calculated guard and identity and based thereon downloads or receives the premeditated blob from a server or like component. The premeditated blob and the premeditated key are provided to or retrieved by premeditated blob decryption component that applies the key to reveal the data key. The data key can be transmitted to the machine entry download component which can retrieve or receive the machine entry from a server based on the data key. Data blob download component can utilize the machine entry data such as machine and user GUIDs to generate a machine identity and guard to enable the data blob to be downloaded. The downloaded data blob is then provided to the data blob decryption component that decrypts the blob based on the data key provided by the premeditated blob decryption component to reveal the user data.

The recovery key component can receive or retrieve answers from the Q A component . Based on the answers and the machine GUID and user GUID a recovery key can be created by the component . The recovery key can subsequently be transmitted to recovery guard generation which can generate a recovery guard based on the key among other things. The recovery key is also provided to the Q A blob generation component . The component generates a Q A blob by encrypting the Q A structure with the recovery key.

Q A component can also provide answers to answer hash component that generates a hash of the answers. This hash can then be provided to the answer guard generation component to facilitate generation of an answer guard and to answer key generation component to facilitate generation of an answer key for instance derived from the hash and system salt. The answer key generation component can then provide the answer key to answer blob component . Component encrypts the data key for user data with the answer key to generate an answer blob.

The Q A component can also provide answers to answer hash component that generates an answer hash from the answers. The answer hash can then be provided to the answer key generation component that generates an answer key based on at least the answer hash. The answer key can then be provided to the answer guard generation component that generates answer guard based thereon. The answer key can also be provided to the answer blob generation component that generates an answer blob by encrypting the data key with the answer key. Furthermore the roaming guard can be computed by the roaming guard generation component based on answers to questions provided by Q A component . Finally the identities guards and blobs can be uploaded or saved to a server or like storage location.

Q A component is similar to that of . The Q A component queries a user with questions and receives answers. Furthermore the questions can be presented in a user friendly format to aid the user in entering the appropriate information. For example Enter your credit card number ending in 5506. The answers to the questions are provided in some form to answer hash component from the Q A component . A hash can subsequently be generated from the answers. The answer key calculation component can receive or retrieve the hash from answer hash component and generate an answer key based at least upon the hash. The answer key can then be provided to or retrieved by answer guard calculation component . The answer guard calculation component can then generate an answer guard based at least upon the answer key. The answer guard and answer key can be provided to or retrieved by the answer blob download component . Employing this information the answer blob can be downloaded and decrypted to produce the data key. The roaming guard calculation component can subsequently retrieve or receive the data key from the answer blob download component and compute the roaming guard.

At this point all that needs to be known is known and data can be downloaded decrypted and used on a temporary basis. The data and keys can also be re encrypted and uploaded as necessary to create a new machine account if desired by utilizing a premeditated new machine set up system.

Premeditated tokens can be obtained only if a new machine is to be setup. However a new machine may be temporarily set up and removed if the user so desires because to use roaming on a given machine one needs to answer all questions each time. A user could be warned and encouraged to setup a premeditated token for future access if they do not want to set the current machine as a new machine. Further if a new machine is set up recovery can be enabled on the new machine if the user desires using the systems proved above on premeditated new machine recovery set up. Note that where a given machine has crashed and is being built from scratch random roaming can be used to recover and re establish the machine for the account.

Turning to a data distribution system is illustrated in accordance with an aspect of the subject innovation. System includes interface component access component and data store as previously described with respect to and system . In addition the access system can include a data structure monitor component that interacts with the data store . In particular the data structure monitor component can maintain last modified times on the various data structures e.g. blobs machine entries . . . housed in data store . Further yet component can respond to if modified queries provided from access component . Such requests can be automatically generated or periodically initiated by users via interface component to facilitate synchronization. System also includes a stale data removal component . The component can interact with data structure monitor component to identify data structures that are stale or have not be access within a predetermined period of time. Upon identification of such structures stale data removal component can remove those structures from data store .

The aforementioned systems have been described with respect to interaction between several components. It should be appreciated that such systems and components can include those components or sub components specified therein some of the specified components or sub components and or additional components. Sub components could also be implemented as components communicatively coupled to other components rather than included within parent components. Further yet one or more components and or sub components may be combined into a single component providing aggregate functionality. The components may also interact with one or more other components not specifically described herein for the sake of brevity but known by those of skill in the art.

Furthermore as will be appreciated various portions of the disclosed systems above and methods below may include or consist of artificial intelligence machine learning or knowledge or rule based components sub components processes means methodologies or mechanisms e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines classifiers . . . . Such components inter alia can automate certain mechanisms or processes performed thereby to make portions of the systems and methods more adaptive as well as efficient and intelligent.

In view of the exemplary systems described supra methodologies that may be implemented in accordance with the disclosed subject matter will be better appreciated with reference to the flow charts of . While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks it is to be understood and appreciated that the claimed subject matter is not limited by the order of the blocks as some blocks may occur in different orders and or concurrently with other blocks from what is depicted and described herein. Moreover not all illustrated blocks may be required to implement the methodologies described hereinafter.

Additionally it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media.

Turning to a method of storing data is provided in accordance with an aspect of the subject innovation. At reference numeral an anonymous identity is generated. For example this can be accomplished utilizing a hash of one or more sources of information such as machine and user GUIDs. At a data key is generated. The data key can derived from one or more pieces of information or it can be a cryptographically safe random number. At reference a data blob is generated. The data blob includes client or user data encrypted utilizing the data key. At numeral a machine key is generated. The machine key can be a generated from a combination of sources including but not limited to machine GUID user GUI and user password. At numeral a machine blob is generated by encrypting the data key with the machine key. At a guard is generated for from at least the data key. At reference numeral the identity guard and data blob are transmitted to a server or like system.

Turning to a method of premeditated roaming is illustrated. At reference numeral a token is received and the seed extracted. A user password is then received at . At reference a premeditated identity and guard are generated and provided to a server. A premeditated blob is received at . At numeral the data key is recovered from the premeditated blob by decrypting the blob utilizing a premeditated key for instance. At the machine entry is received and decrypted with the data key. The identity and guard are generated and transmitted to a server at numeral . A data blob is received from the server at . At numeral the data blob is decrypted utilizing the data key. At the roaming machine can be added to the account for instance linking the machine and user GUIDs to the present account identity. The token can be destroyed if specified for one time use otherwise the token can be employed until it expires.

In order to provide a context for the various aspects of the disclosed subject matter as well as the following discussion are intended to provide a brief general description of a suitable environment in which the various aspects of the disclosed subject matter may be implemented. While the subject matter has been described above in the general context of computer executable instructions of a computer program that runs on a computer and or computers those skilled in the art will recognize that the subject innovation also may be implemented in combination with other program modules. Generally program modules include routines programs components data structures etc. that perform particular tasks and or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations including single processor or multiprocessor computer systems mini computing devices mainframe computers as well as personal computers hand held computing devices e.g. personal digital assistant PDA phone watch . . . microprocessor based or programmable consumer or industrial electronics and the like. The illustrated aspects may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. However some if not all aspects of the claimed innovation can be practiced on stand alone computers. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to an exemplary environment for implementing various aspects disclosed herein includes a computer e.g. desktop laptop server hand held programmable consumer or industrial electronics . . . . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available microprocessors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 11 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that the present invention can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like displays e.g. flat panel and CRT speakers and printers among other output devices that require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems power modems and DSL modems ISDN adapters and Ethernet cards or components.

The system includes a communication framework that can be employed to facilitate communications between the client s and the server s . The client s are operatively connected to one or more client data store s that can be employed to store information local to the client s . Similarly the server s are operatively connected to one or more server data store s that can be employed to store information local to the servers .

What has been described above includes examples of aspects of the claimed subject matter. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the claimed subject matter but one of ordinary skill in the art may recognize that many further combinations and permutations of the disclosed subject matter are possible. Accordingly the disclosed subject matter is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the terms includes has or having or variations in form thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

