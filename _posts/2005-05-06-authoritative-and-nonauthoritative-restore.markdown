---

title: Authoritative and non-authoritative restore
abstract: The subject invention relates to systems and/or methods that perform an authoritative and/or a non-authoritative restore of items in a data store. Backups are provided that include data associated with items and metadata related to the items that can include a history of operations and previous synchronizations to enable replications to converge after restoration. The operations that can be performed on the items include, for example, create, delete, update, move, etc. The items in the backups can be restored along with the metadata, which can be utilized to enable synchronization partners to converge based on a desired type of restoration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07620668&OS=07620668&RS=07620668
owner: Microsoft Corporation
number: 07620668
owner_city: Redmond
owner_country: US
publication_date: 20050506
---
The subject invention generally relates to databases and more particularly to systems and methods that facilitate performing authoritative and or non authoritative restoration of data in connection with a data storage system.

Advances in computer technology e.g. microprocessor speed memory capacity data transfer bandwidth software functionality and the like have generally contributed to increased computer application in various industries. Ever more powerful server systems which are often configured as an array of servers are commonly provided to service requests originating from external sources such as the World Wide Web for example.

As the amount of available electronic data grows it becomes more important to store such data in a manageable manner that enables user friendly and quick data searches and retrievals. Today a common approach is to store electronic data in one or more databases. In general a typical database can be referred to as an organized collection of information with data structured such that a computer program can quickly search and select desired pieces of data for example. Commonly data within a database is organized via one or more tables. Such tables are arranged as an array of rows and columns.

Also the tables can comprise a set of records wherein a record includes a set of fields. Records are commonly indexed as rows within a table and the record fields are typically indexed as columns such that a row column pair of indices can reference particular datum within a table. For example a row can store a complete data record relating to a sales transaction a person or a project. Likewise columns of the table can define discrete portions of the rows that have the same general data format wherein the columns can define fields of the records.

Each individual piece of data standing alone is generally not very informative. Database applications make data more useful because they help users organize and process the data. Database applications allow the user to compare sort order merge separate and interconnect the data so that useful information can be generated from the data. Capacity and versatility of databases have grown incredibly to allow virtually endless storage capacity utilizing databases.

As greater amounts of information are being stored electronically a more pressing need to protect this electronic information is yielded. To safeguard electronic information data is oftentimes copied to create a second version or backup of an original source. The data typically copied during a backup can be stored program code data associated with a program or a combination thereof. The backup can be stored on a hard disk large capacity magnetic tape storage optical disk media e.g. CD R DVD R . . . or any type of storage media.

The backup can be utilized to restore data for example in the case of damage or loss of a hard disk corruption of data etc. Oftentimes however a backup does not include all changes e.g. updating creating deleting moving . . . that have been made to the data prior to media failure and after the backup was taken thus the restored data differs from the pre failure version of the data. Returning the data to the pre failure version by repeating the changes made subsequent to the backup can be costly in terms of a user s time and effort system resources etc. and or may not feasibly be accomplished e.g. not possible to recreate a digital photograph of a prior event if the data was not backed up . According to another example a backup can be restored to revert back to a previous version of data associated with the original source from a current version of the data that has been corrupted undesirably altered etc. According to this example conventional techniques can inappropriately return the data to the pre restore version if the data is synchronized with a disparate replica of the data. Thus a number of problems and difficulties are associated with currently employed techniques to restore data via utilizing a backup.

The following presents a simplified summary of the invention in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is intended to neither identify key or critical elements of the invention nor delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.

The subject invention relates to systems and or methods that perform an authoritative and or a non authoritative restore of items in a data store. Backups are provided that include data associated with items and metadata related to the items that can include a history of operations and previous synchronizations to enable replications to converge after restoration. The operations that can be performed on the items include for example create delete update move etc. The items in the backups can be restored along with the metadata which can be utilized to enable synchronization partners to converge based on a desired type of restoration.

The subject invention can restore one or more items in a target store and synchronize the restored items with any number of synchronization partners e.g. replicas . For example the items can be restored utilizing an authoritative restore and or a non authoritative restore. By way of illustration the authoritative restore can be employed to return to a backup version of the items. The authoritative restore can be utilized to synchronize the replicas with the restored items by updating the replicas and thus causing the replicas to converge to the value of the restored items. According to another example the non authoritative restore can be utilized to return the restored items to previous versions of the items. The non authoritative restore can be performed for instance when a current version of the items and or store s comprising the items is lost e.g. due to hard disk failure . . . . Thus the backup of the items is restored and if the replica has been changed more recently than the restored items then the restored items are brought up to date with the replica. Additionally or alternatively if the restored items are more current than the replica then the replica can be appropriately updated.

According to an aspect of the subject invention a system is provided that facilitates restoring an item in a target store. The system can include a restoration component that restores a backup of an item and synchronization metadata associated with the item in a target store. Additionally the system can comprise a synchronization component that utilizes the synchronization metadata associated with the item to synchronize the restored item with a replica of the item.

The following description and the annexed drawings set forth in detail certain illustrative aspects of the invention. These aspects are indicative however of but a few of the various ways in which the principles of the invention may be employed and the subject invention is intended to include all such aspects and their equivalents. Other advantages and novel features of the invention will become apparent from the following detailed description of the invention when considered in conjunction with the drawings.

As utilized in this application terms component system and the like are intended to refer to a computer related entity either hardware software e.g. in execution and or firmware. For example a component can be a process running on a processor a processor an object an executable a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and a component can be localized on one computer and or distributed between two or more computers.

The subject invention is described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the subject invention. It may be evident however that the subject invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate describing the subject invention.

Turning now to illustrated is a system that facilitates performing restoration s of data in accordance with an aspect of the subject invention. The system includes a restoration component that restores data and a synchronization component that synchronizes the data e.g. pre restore data restored data . . . with replica s of the data. The restoration component can initiate restoring data upon receiving a user input e.g. via any user input device such as a mouse keyboard touchpad touch screen trackball joystick stylus microphone proximity sensor motion sensor temperature sensor biometric input . . . a signal from a hardware device e.g. an indication from a CD drive notifying the restoration component that a CD including backup data has been inserted . . . an application e.g. an application that facilitates determining data to restore from a backup . . . a combination thereof etc. For example the restoration component can automatically begin restoration upon receipt of backup data.

Backup data is provided to the restoration component to restore all or a portion of the backup. The backup data can be obtained by the restoration component from any type of storage media e.g. hard disk large capacity magnetic tape storage optical disk media such as CD R s and DVD R s . . . . The backup data can include a copy of one or more items from a data storage system. Also the backup data can include corresponding synchronization metadata associated with the item or collection of items. The backup data can be generated from an item level backup a store level backup and or a backup of any granularity. Additionally the backup data can be associated with a full backup an incremental backup etc. The restoration component restores the backup of the item s and or the store s . For example the restoration component can perform authoritative and or non authoritative restoring of the item s and or store s .

The synchronization component enables establishing a synchronization relationship between one or more items and replica s of the one or more items. The item s and the replica s of the item s can be associated with similar data stores on disparate devices. By way of example item s can be stored on a desktop computer and a replica of the item s can be stored on a laptop computer. Pursuant to this example the synchronization component can automatically update the replica on the laptop to incorporate any changes e.g. operations such as create delete update move . . . that are made to the item s on the desktop and vice versa when synchronization is performed. The subject invention contemplates that the item s and the replica can be stored on any device and is not limited to the aforementioned example. Additionally any number of replicas of items can be synchronized utilizing the synchronization component in connection with the subject invention. Further the item s and the replica s of the items can be stored on the same device e.g. disparate folders on the same data store .

The synchronization component additionally synchronizes the restored item s and or store s hereinafter referred to as restored item with the corresponding replica s . The synchronization component can obtain an indication from the restoration component as to the desired type of restoration e.g. authoritative non authoritative . . . . Additionally or alternatively the synchronization component can determine the appropriate restoration type based on the restored item and or metadata associated with the restored item. Based on the type of restoration the synchronization component can update the restored item and or the corresponding replica s . For example if the restoration component initiates a non authoritative restore the synchronization component can identify later versions of the restored item that are associated with the replica s and appropriately update the restored item. By way of another illustration the restoration component can execute an authoritative restore such that the synchronization component can endeavor to change all other replicas to the same restored value of the restored item achieving an effect similar to restoring every other replica with the restoration component from the same backup data. The synchronization component for instance can perform the synchronization without utilizing a master.

The data storage system utilized in connection with the subject invention can be a database based file storage system that utilizes at least one database structure wherein an item a sub item a property and a relationship are defined to allow representation of information within the data storage system as instances of complex types. The data storage system can employ a set of basic building blocks for creating and managing rich persisted objects and links between objects. An item can be defined as the smallest unit of consistency within the data storage system which can be independently secured serialized synchronized copied backed up restored etc. The item is an instance of a type wherein all items in the data storage system can be stored in a single global extent of items. The data storage system can be based upon at least one item and or a container structure. For example an item within the data storage system can have various properties wherein a data change e.g. a name update a value update a deletion of a property . . . to a property can be invoked. Rather than replacing the entire item to update a single property change a granular and or proportional change to the item can be performed wherein the property is updated with the data change.

As used in this application an item comprises a core item for example a document or a contact which can include property ies e.g. title display name . An item can be simple or compound e.g. includes other item s embedded in it . For instance a document can include an embedded spreadsheet that comprises data. Items can comprise additional information associated with the core item such as backing file s link s from the core item extension s link id s of incoming link s security descriptor of the item s etc. Additionally a replica refers to another copy of the item and or a set of items with which synchronization happens. A replica item is an entity and or an item that maintains information like synchronization history about a particular copy of the item and or set of items.

With reference to illustrated is a system that restores a backup upon a target in accordance with an aspect of the subject invention. The system includes a restoration component that restores a backup or a portion thereof and a synchronization component that synchronizes an item with a sync partner e.g. replica of the item . The system further comprises a source and a target .

The source can provide data to the restoration component . For example the data provided by the source can be a backup of item s and or store s . By way of further illustration the source can provide information associated with a history of operations such as create delete update move etc. as metadata associated with the item s . The source can be any storage medium. For example the source can be a hard disk a large capacity magnetic tape storage an optical disk media such as CD R s and DVD R s etc. The data provided by the source is utilized to restore item s and or synchronize the item s with corresponding replica s in a desired manner. The data can be obtained from the source by the restoration component and or the synchronization component via any type of connection e.g. wireless wired bus interface . . . .

The item s are restored and or synchronized with other replicas upon the target by employing the restoration component and or the synchronization component . The target can be any type of storage medium e.g. a hard disk a large capacity magnetic tape storage optical disk media such as CD R s and DVD R s . . . . Additionally or alternatively the target can be associated with any type of device that utilizes such storage media. For example the target can be related to a desktop computer a laptop computer a tablet a handheld computer a PDA and or a cellular phone however the subject invention is not limited to such examples. The target can be coupled to the restoration component and or the synchronization component via any type of connection e.g. wireless wired bus interface . . . . The restored item s can have a corresponding replica that is also stored upon the target . Additionally or alternatively a replica of the restored item s can be existent upon any disparate storage medium. By way of illustration the restored item s and or metadata associated with the restored item s can be utilized by the synchronization component to update the replica s . According to another example the synchronization component can determine values associated with the replica s and or metadata associated with the replicas and employ these values and or metadata to alter the restored item s .

The source and or the target can be for example either volatile memory or nonvolatile memory or can include both volatile and nonvolatile memory. By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory can include random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM . The subject invention contemplates that the source and or the target can additionally or alternatively be a hard disk a large capacity magnetic tape storage optical disk media e.g. CD R DVD R . . . or any type of storage media. The source and or the target of the subject systems and methods are intended to comprise without being limited to these and any other suitable types of memory.

Turning to illustrated is a system that facilitates executing authoritative and or non authoritative restores of items in accordance with an aspect of the subject invention. The system includes a restoration component that performs single item restores that can interact properly with synchronization partners and a synchronization component that synchronizes restored item s and or store s hereinafter referred to as restored item and replica s . The restoration component further comprises an authoritative restore component and a non authoritative restore component .

The restoration component receives backup data which can include items and metadata associated with the items. Additionally metadata can be associated with the replica s of the items. The metadata associated with the backed up items and replicas is stored and can be utilized to synchronize changes to items across replicas. The metadata can include for example timestamps on entities change tracking at the change unit level sync metadata for global id mapping tombstones for tracking deletes a move log for tracking item moves conflict items for keeping track of unresolved conflicts replica items for replica and partner information and or mapping items.

An item that is in a synchronization relationship can become corrupt and or undesirably altered. For example in a situation where a user has a laptop computer and a desktop computer a folder stored upon memory of both computers that includes music files can be synchronized such that when an item in one folder is altered the change is propagated to the other folder. If one of the music files is undesirably edited on the laptop computer the change will be propagated to the corresponding item on the desktop when the computers are synchronized. The authoritative restore component enables a backup of the item to be restored on the laptop for example. The authoritative restore component can provide a signal to the synchronization component indicating that an authoritative restore is to be effectuated. Additionally or alternatively the authoritative restore component can restore the item s in a manner that enables the synchronization component to evaluate the restored item s and determine that an authoritative restore is to be performed. For example changes can be made to the metadata associated with the restored item s . The synchronization component can then change the replica on the desktop to the same restored value.

The non authoritative restore component can be employed for example when a current version of an item and or database is lost e.g. due to media failure . The non authoritative restore component enables the synchronization component to reapply changes that were made to items since a time of the backup. The backup data is utilized by the non authoritative restore component to restore the item s . However if any of the replicas have a more recent version of the changes than the restored item then the restored item is updated by the synchronization component to receive these variations. Additionally or alternatively if another replica does not have the changes that are present in the restored item from the backup data then the restored item provides these changes to the other replicas via the synchronization component .

In the case of an authoritative restore utilizing the authoritative restore component synchronization information for the restored item s is already present in a target store when the backup data is copied. The authoritative restore component seeks to perform a change that emulates an update. By way of illustration an authoritative item level restore can be treated as a local change so as to propagate the restored item s to all replicas. Such a change can be achieved by not manipulating any of the change tracking information in the target store and enabling a base layer to maintain such information and not restoring an entity such as a replica item in which a synchronization infrastructure maintains its metadata.

The metadata associated with each item can include a timestamp related to when the item was last updated. The timestamp for example can be an increasing integer. Whenever a change is made to an item the timestamp increases. Thus the timestamp can be employed to identify a most current version of the item to which other replica s should be converged towards e.g. via synchronization component . Accordingly to facilitate performing an authoritative restoration the timestamp updating component can update the timestamp of a restored item in the target store such that it becomes the most current timestamp. Since the restored item s has the most recent timestamp the other replica s are updated to the value of the restored item s . By way of example if the restored item has a timestamp of 50 and the current timestamp is 100 then the timestamp updating component can change the timestamp of the restored item to 100. Thus if an item in the replica has a timestamp of 75 then the replica is updated to the value of the restored item as opposed to the restored item being updated to the value of the replica as could otherwise occur .

The system can support creating deleting updating moving etc. of items. For example the backup can include a tombstone of an item. When an item and or an entity is deleted a tombstone corresponding to that item and or entity is stored that indicates the deletion. The tombstone can be utilized to synchronize delete operations to other replica s . If a backup includes a tombstone of an item then the item can be deleted from the target store . This deletion ends up creating a new tombstone and the tombstone from the backup is not restored. According to another illustration if an item in the backup has been deleted since the backup was taken then the item is resurrected in the target store . Pursuant to another example metadata associated with items and or replicas of items can comprise a move log that contains the history of move operations for an item. The move log information in the backup can be ignored by the authoritative restore component and or the timestamp updating component and or the API because if the location of the item in the backup is different from the location in the target store then the item can be moved to the old location and the new move log entries can be generated by a base API.

According to an example the API can be two disparate APIs that are utilized to perform an item level restore e.g. one API can create an item another API can replace an item . . . . According to an illustration if the item to be restored does not exist in the target store the authoritative restore component can call a CreateItem or Entity API e.g. API . Pursuant to this illustration the CreateItem API is not passed in any of sync metadata that was backed up. Additionally the CreateItem API can resurrect a tombstone of a deleted item or entity if the tombstone already exists. Alternatively if the tombstone does not already exist and has been cleaned up then a new item can be created via the API . The new item can have the same itemId and a disparate globalId. Replica s of the item not shown will consider this to be a newly created item as opposed to an old item resurrected.

Upon creating a new item if there is a synchronization to another replica that had yet to be synchronized with the replica comprising the deletion of the old item the other replica can have both the old version of the item and the restored version of the item. This occurs when a tombstone is cleaned up in one replica before other replica s have been synchronized to the replica with the deletion. The synchronization component e.g. synchronization component can identify such a situation and utilize a slow sync to converge the two replicas.

Pursuant to another example the authoritative restore component can determine whether an item to be restored already exists in the target store and accordingly call a replace version of the API . The replace version of the API is utilized to overwrite an item such that the extensions and or links for this item can be deleted from the target store and recreated from the backup version.

Additionally certain synchronization specific item types that contain metadata regarding synchronization history and past conflicts such as Replica Mapping and Conflict items may not be affected by the authoritative restore component . Accordingly the API can skip these items in connection with an authoritative restore. Alternatively these items can be employed with a non authoritative restore.

With reference to depicted is a system that facilitates performing a non authoritative restore of backed up item s according to an aspect of the subject invention. The system includes a non authoritative restore component that obtains backup data. The non authoritative restore component further comprises a renaming component that renames a replica and an API . The non authoritative restore component restores the backed up data to a target store e.g. target of . The system additionally includes a synchronization component that is coupled to the non authoritative restore component the target store and or a replica store . It is to be appreciated that the target store and the replica store can be the same storage medium. Additionally any number of replica stores can be utilized in connection with the subject invention. Furthermore the subject invention is not limited to the non authoritative restore component comprising the renaming component and the API as either both or a portion thereof can be separate. Also the non authoritative restore component can be included as part of a restoration component e.g. restoration component of of of and or in connection with an authoritative restore component e.g. authoritative restore component of of .

According to an example the non authoritative restore component can be employed to restore a backup in case of a disaster such as for example a hard disk failure and or corruption of an entire storage medium. The non authoritative restore component can restore the backup data to the target store . Additionally if the synchronization component determines that another replica e.g. stored on the replica store has more recent changes than the restored replica on the target store then the synchronization component updates the restored version with the appropriate changes. The synchronization component can also identify whether another replica on the replica store lacks the changes that the restored replica has and in such a case provide those changes to the replica on the replica store .

The restored replica on the target store for example can act as a replica that was synchronized with the replica on the replica store at the time of the backup and has not since been synchronized with any replica. Such a result can be accomplished by restoring the backup data to the target store with the non authoritative restore component and providing the restored replica with a new ReplicaId via employing the renaming component .

The following example illustrates the use of the renaming component . By way of example assume that there are two replicas R and R . A timestamp of R is 100 and a backup was taken when the timestamp of R was 50. Additionally R s timestamp is 200. If R is being restored with the non authoritative restore component e.g. R was destroyed . . . and the ReplicaId is not changed then R would not send the changes to R that occurred subsequent to the backup of R since R sent them to R initially. Alternatively if the ReplicaId of R is changed to R by the renaming component when the backup data is restored then R would indicate to R that is has been synchronized up to timestamp 50 with R. Additionally R could then send the changes that it received from R with a timestamp between 50 and 100.

The non authoritative restore component can be employed to perform a logical item level backup for example. Pursuant to this example the API employed can be an item level restore API that can populate the contents of the target store . The non authoritative restore component can create a new database and then restore all items from the backup data individually including Replica Mapping and Conflict Items. Additionally the non authoritative restore component can specify a RESTORE SYNC METADATA option to the API e.g. DeSerializeItem API which facilitates restoring metadata associated with change tracking at a change unit level sync metadata for global id mapping metadata associated with conflict items related to unresolved conflicts metadata pertaining to replica items for replica and partner information and or metadata associated with mapping items. Pursuant to an example the non authoritative restore component can restore items from all incremental backups although the subject invention is not so limited. The API can additionally restore tombstones and item sync information in side tables for items in a replica. By way of further illustration the non authoritative restore component can restore data from a physical backup. A restore of backup data from a physical store backup can enable restoring data including the side tables that comprise the move log as well as additional information.

The system further comprises a machine learning component which can be employed by the restoration component the synchronization component and or the authoritative restore component of the non authoritative restore component of the timestamp updating component of the API of the renaming component of the API of . . . in connection with restoring item s e.g. via an authoritative restore a non authoritative restore . . . and or synchronizing the item s with replica s of the item s . Machine learning refers to an area of artificial intelligence concerned with development of techniques that allow computers and or programs to learn. More particularly machine learning can relate to methods for creating and or modifying computer programs based at least in part upon an analysis of data set s . Thus the restoration component and or the synchronization component can operate more efficiently over time as more contextual data user history application history and the like is collected.

Furthermore the machine learning component can make inferences relating to determining an appropriate type of restoration to employ via the restoration component . As used herein the terms to infer or inference refer generally to the process of reasoning about or inferring states of a system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources. Thus the restoration component the synchronization component and or the authoritative restore component the non authoritative restore component the timestamp updating component the API the renaming component the API . . . given particular contextual data can make inferences relating to restoring and or synchronizing items. According to an example the restoration component can employ the machine learning component to infer when to restore backup data. By way of example the machine learning component can identify disk failure and thereafter initiate restoration of the backup data via the restoration component . Additionally the machine learning component can be employed to identify an appropriate restoration type e.g. authoritative restore non authoritative restore . . . .

Turning to illustrated is a methodology that facilitates authoritatively restoring an item in a target store according to an aspect of the subject invention. At backup data is received. A backup of the item is restored e.g. authoritative restore in the target store at . At synchronization metadata associated with the item is updated. For example the metadata can include a timestamp which can be updated to a current time. By way of illustration the timestamp can be updated by creating new items and or replacing items in the target store. At a replica of an item and the restored item are synchronized by updating the replica to a value of the restored item. Thus the replica is updated to the value of the backup version of the item.

In order to provide additional context for implementing various aspects of the subject invention and the following discussion is intended to provide a brief general description of a suitable computing environment in which the various aspects of the subject invention may be implemented. While the invention has been described above in the general context of computer executable instructions of a computer program that runs on a local computer and or remote computer those skilled in the art will recognize that the invention also may be implemented in combination with other program modules. Generally program modules include routines programs components data structures etc. that perform particular tasks and or implement particular abstract data types.

Moreover those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations including single processor or multi processor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based and or programmable consumer electronics and the like each of which may operatively communicate with one or more associated devices. The illustrated aspects of the invention may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. However some if not all aspects of the invention may be practiced on stand alone computers. In a distributed computing environment program modules may be located in local and or remote memory storage devices.

One possible communication between a client and a server can be in the form of a data packet adapted to be transmitted between two or more computer processes. The system includes a communication framework that can be employed to facilitate communications between the client s and the server s . The client s are operably connected to one or more client data store s that can be employed to store information local to the client s . Similarly the server s are operably connected to one or more server data store s that can be employed to store information local to the servers .

With reference to an exemplary environment for implementing various aspects of the invention includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Card Bus Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA Firewire IEEE 1394 and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example a disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 110 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in the suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that the subject invention can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like monitors speakers and printers among other output devices which require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses wire and or wireless communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet Token Ring and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above includes examples of the subject invention. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the subject invention but one of ordinary skill in the art may recognize that many further combinations and permutations of the subject invention are possible. Accordingly the subject invention is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims.

In particular and in regard to the various functions performed by the above described components devices circuits systems and the like the terms including a reference to a means used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. a functional equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary aspects of the invention. In this regard it will also be recognized that the invention includes a system as well as a computer readable medium having computer executable instructions for performing the acts and or events of the various methods of the invention.

In addition while a particular feature of the invention may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes and including and variants thereof are used in either the detailed description or the claims these terms are intended to be inclusive in a manner similar to the term comprising. 

