---

title: Power/ground wire routing correction and optimization
abstract: A PG wire routing optimization tool for more efficiently routing PG wires in a layout design of an integrated circuit. The PG wire routing optimization tool analyzes a routing of the wires of a power and ground network for unacceptable IR-drops or electromigration problems. If one or more problems are discovered, the PG wire routing optimization tool determines design constraints for the wires that will correct the identified problems. It then initiates a floor planning tool to implement these corrective design constraints in the floor plan design. The PG wire routing optimization tool may alternately or additionally determine design constraints that will minimize the area of the wiring but will avoid creating new IR-drop or electromigration problems. It will then initiate a floor planning tool to implement these optimizing design constraints in the floor plan design.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07603641&OS=07603641&RS=07603641
owner: Mentor Graphics Corporation
number: 07603641
owner_city: Wilsonville
owner_country: US
publication_date: 20050926
---
This application is a continuation in part application of U.S. patent application Ser. No. 10 979 868 entitled Elastic Assembly Floor Plan Design Tool filed on Nov. 1 2004 and naming Chih Liang Cheng et al. as inventors which in turn is a continuation in part application of U.S. Provisional Patent Application No. 60 517 358 entitled Elastic Assembly Tool filed on Nov. 2 2003 and naming Chih Liang Cheng et al. as inventors both of which applications are incorporated entirely herein by reference. This application also is a continuation in part application of U.S. Provisional Patent Application No. 60 612 877 entitled Chip Level Power Ground Network Optimization Methodology filed on Sep. 24 2004 and naming Ta Cheng Lin et al. as inventors which application also is incorporated entirely herein by reference.

The present invention relates to the design of microdevices. Various aspects of the present invention are particularly applicable to the routing of power and ground PG network wires during a placement process.

Microdevices such as microcircuits formed on a substrate continue to become more and more complex. A conventional integrated circuit may contain several million transistors making these devices very difficult to design and fabricate. Moreover the layout of elements in a microcircuit design typically is not a linear process. Instead the complexity of laying out the elements of a microcircuit more closely correlates to the formula n log n where n is the number of elements in the design.

In order to address this complexity microcircuit designers often will combine several smaller designs in a hierarchical arrangement to form a larger microcircuit design. Typically each smaller design sometimes referred to as a cell or block describes a group of circuit elements that have been configured to form one or more functional components. In some situations this block may be new. Frequently however a block simply will be copied from a library of existing circuit designs. For example rather than creating a new design for a memory device a circuit designer may simply obtain a previously created design of a memory device from a library of circuit components. By using a design for a group of circuit elements as a single block a designer can more easily create a larger microcircuit design.

Even if a designer employs blocks of circuit elements to create a larger microcircuit design however the designer must still physically arrange those blocks relative to each other for placement on a substrate. More particularly the designer must create a floor plan for the microcircuit design. The floor plan will include the perimeter for the microcircuit design. This perimeter defines the size and shape of the microcircuit that will be fabricated from the design. The floor plan also will include the position of the various contact pads required by the microcircuit. These pads arranged along the periphery of the floor plan perimeter specify the connection points for the power ground and input output pins that will connect the microcircuit to a power supply an electrical ground and other devices. The blocks of circuit elements then are arranged in the core area inside of the contact pads. With some blocks the size and shape of the block are predefined. For other blocks the block design may simply require a minimum area for the block. The particular shape of the block then may be specified by the designer.

The floor plan also may include one or more of the conductive lines or wires that will be included in the microcircuit design. In particular the floor plan usually will include those wire structures that will take up a large amount of space in the circuit design. As will be appreciated by those of ordinary skill in the art the power supply and ground wires that handle large currents typically are wider than signal wires that carry lower current clock signals data signals and control signals. These power and ground wires thus may be included in a floor plan design. In addition the designer must be able to easily connect the power and ground inputs of every component to a power or ground wire such that each component receives the same amount of power in a consistent manner. Accordingly primary power and ground lines sometimes referred to as a power ground network wires typically must be routed throughout the entire area floor plan design. If the designer is uncertain as to the placement of the power and ground connections for a block then the power ground network wires may even need to be arranged to encircle the block. This power ground network structure is sometimes referred to as a power ground network ring. 

In addition to the layout of the component blocks the packaging for a microcircuit will also affect the routing of data signal control signal power and ground wires between the blocks. A microcircuit s package will have a fixed number of pins for external connections to the microcircuit so the clock signal wires data signal wires control signal wires power wires and ground wires for the blocks must be routed to the contact pads for these pins without congestion and without lengthening the wires beyond a maximum distance.

There are two types of routing for electrical connection wires global routing and detailed or local routing. Global routing defines the overall directions in which the wires are laid out to avoid large structures. Detailed routing then specifies the local detours for the wires that are taken along those general directions to avoid other wires or smaller structures. Because of the complexity of the detailed routing process this process is typically very time consuming so it usually is preferable to avoid congestion as much as possible during global routing to simplify the detailed routing process.

Conventionally the process of creating a floor plan design includes several steps. First a designer will lay out a proposed floor plan for the component blocks. Next the designer will assign pin placements for the microcircuit package by for example defining the locations of the contact pads for each pin. The designer will then globally route each group of large wiring structures among the blocks such as power and ground PG wires guard bands and signal wires grouped into a bus. Once the layout has been completed the designer must analyze the layout to determine if it meets various constraints. For example once the power and ground PG wiring has been routed the layout design is analyzed to determine if the routing creates an unacceptable voltage drop conventionally referred to an IR drop . The layout also is analyzed to determine if the power and ground PG wiring creates an electromigration issue. This occurs e.g. where a wire is too thin to allow the electrons to follow the direction of the wire. Instead the electrons will tend to break through the wire.

If the PG wiring in the layout does not meet the required constraints then the designer must delete the PG wire routing and repeat the PG wire routing portion of the placement and routing design process. To avoid having to repeat this process many designers will overdesign the PG wire routing. For example the designer may specify PG wires for the layout design that are much wider than necessary to avoid any potential IR drop or electromigration problems. The area that is unnecessarily used by overdesigning the PG wiring thus either increased the overall size of the circuit or reduces the amount of area available to place or expand the blocks which in turn may lead to timing problems for the circuit. Some conventional placement and routing tools attempt to address this problem by providing automatic suggestions to a designer during the PG wire network routing design process. These abstract suggestions however do not take into account the specific floor plan and PG wire routing of a particular integrated circuit design.

Various examples of the invention provide a tool that a designer may employ to more efficiently route PG wires in a layout design of an integrated circuit. More particularly various examples of the invention provide a PG wire routing optimization tool that analyzes a routing of PG wires for unacceptable IR drops or electromigration problems. If one or more problems are discovered the PG wire routing optimization tool determines design constraints for the wires that will correct the identified problems. It may then initiate a floor planning tool to implement these corrective design constraints in the floor plan design. With some examples of the invention the PG wire routing optimization tool may alternately or additionally determine design constraints that will minimize the area of the PG wiring but will avoid creating new IR drop or electromigration problems. It may then again initiate a floor planning tool to implement these optimizing design constraints in the floor plan design.

As will be discussed in more detail below various implementations of the invention relate to a PG wire routing optimization tool that a designer may employ to more efficiently route PG wires in a layout design of an integrated circuit. With some examples of the invention the PG wire routing optimization tool analyzes the routing of PG wires in an integrated circuit layout design for unacceptable IR drops or electromigration problems. If one or more specified problems are discovered the PG wire routing optimization tool determines new design constraints for the wires that will correct the identified problems. The PG wire routing optimization tool will then invoke the operation of a placement and routing tool to implement these corrective design constraints in the floor plan design. With still other examples of the invention the PG wire routing optimization tool will alternately or additionally determine new design constraints for the wiring that will minimize the total area of the wiring without creating IR drop or electromigration problems. Once the PG wire routing optimization tool has determined new design constraints for the wiring the tool will then invoke a floor planning tool to implement these optimizing design constraints in the floor plan design.

Accordingly an example a floor planning tool that may be employed with various implementations of the invention will be discussed. In particular the floor planning tool allows a designer to easily position components of a microcircuit in a floor plan design while maintaining desired attributes for the design. As used herein the term block refers to the representation in a floor plan design of any group of circuit elements in a microcircuit design that may be repositioned added deleted or otherwise manipulated as a group. By using a pointing device such as a keyboard mouse stylus touchpad joystick or the like a circuit designer can select and move the placement of one or more of the blocks making up the floor plan design. As the designer moves a selected target block the user interface graphically displays the various changes in the circuit characteristics and design that will result from the movement of the target block.

For example the user interface may indicate when the movement of the target block will cause the electrical connections near the block to become more or less congested. With some examples of the floor planning tool it may even reroute electrical connections near the block based upon the block s movement. The tool s user interface may then display the new routing to the designer. If the designer is satisfied with the revised floor plan design and routing changes the designer can choose to make the changes permanent to the floor plan design. If however the designer is dissatisfied with the new floor plan or its associated connection routing the designer may then decline the changes displayed in the user interface thereby maintaining the original floor plan design. In this manner a design may experiment with different floor plan designs without modifying an original floor plan design.

With still other examples of the floor planning tool the floor planning tool may also change one or more features of the circuit design in response to movement of a block in order to maintain one or more desired attributes. For example a designer may specify that all blocks within a floor plan design maintain a minimum separation distance from each other. If the designer moves a target block too close to an adjacent block i.e. a block adjacent to the target block then the floor planning tool may move the adjacent block to maintain the minimum specified distance between the blocks of the circuit design. Some implementations may also move one or more blocks that are adjacent to the first adjacent block in order to maintain the minimum specified distance between the blocks. Thus when a designer moves a target block to assemble a floor plan design the user interface may elastically move one or more adjacent blocks in response.

With various examples of the floor planning tool a designer may select which features of the circuit design are displayed in the user interface. For example a designer may wish only to view the impact that moving a block will have on the routing of the power ground network wires in the circuit. In other circumstances however the designer may wish to view the changes to one or more signal wires that would result from moving a block or to both the power ground network and signal wires.

Various examples of a PG routing wire optimization tool according to the invention may be implemented through the execution of software instructions by a computing device such as a programmable computer. Similarly a floor planning tool employed by a PG wire routing optimization tool according to various examples of the invention also may be implemented through the execution of software instructions by a computing device such as a programmable computer. An illustrative example of such a computing device therefore is illustrated in . As seen in this figure the computing device has a computing unit . The computing unit typically includes a processing unit and a system memory . The processing unit may be any type of processing device for executing software instructions but will conventionally be a microprocessor device. The system memory may include both a read only memory ROM and a random access memory RAM . As will be appreciated by those of ordinary skill in the art both the read only memory ROM and the random access memory RAM may store software instructions for execution by the processing unit .

The processing unit and the system memory are connected either directly or indirectly through a bus or alternate communication structure to one or more peripheral devices. For example the processing unit or the system memory may be directly or indirectly connected to one or more additional memory storage devices such as a hard disk drive a removable magnetic disk drive an optical disk drive or a flash memory card . The processing unit and the system memory also may be directly or indirectly connected to one or more input devices and one or more output devices . The input devices may include for example a keyboard a pointing device such as a mouse touchpad stylus trackball or joystick a scanner a camera and a microphone. The output devices may include for example a monitor display a printer and speakers.

With some implementations the computing unit may be directly or indirectly connected to one or more network interfaces for communicating with a network. The network interface translates data and control signals from the computing unit into network messages according to one or more communication protocols such as the transmission control protocol TCP and the Internet protocol IP . These protocols are well known in the art and thus will not be discussed here in more detail. An interface may employ any suitable connection agent or combination of agents for connecting to a network including for example a wireless transceiver a modem or an Ethernet connection.

It should be appreciated that one or more of these peripheral devices may be housed with the computing unit and bus . Alternately or additionally one or more of these peripheral devices may be housed separately from the computing unit and bus and then connected either directly or indirectly to the bus . Also it should be appreciated that both computers and computing appliances may include any of the components illustrated in may include only a subset of the components illustrated in or may include an alternate combination of components including some components that are not shown in .

The floor plan design storage module stores one or more floor plan designs for a microcircuit. These floor plan designs may include one or more existing circuit design layouts that already contain blocks representing one or more components of the microcircuit. Alternately these floor plan designs may include a blank template to which a designer can add blocks during a design process. In addition to the layout of the blocks a floor plan design may also include the layout of various other features of the microcircuit such as the routing of various connection wires associated with the blocks. For example a floor plan design typically will include features of power and ground PG wires such as power ground network wires that will provide electrical power to the components of the circuit.

A floor plan design may alternately or additionally include features for one or more signal wires that will transmit clocking control and or data signals to and from the microcircuit components. For example as previously noted a bus of related signal wires will take up more space than an individual signal wire so a designer may wish to view the routing of bus signal wires in a floor plan design. Alternately or additionally a designer may wish to include one or more individual signal wires carrying critical signals in a floor plan design to ensure that these signal wires are optimally routed. Of course any desired feature of a circuit design may be included in a floor plan design.

The floor plan design data may be created or stored in any conventional data format that will represent the desired floor plan design structures. For example various examples of the floor plan design tool can maintain and manipulate the floor plan design in convenient design data formats such as the Library Exchange Format Design Exchange Format LEF DEF the Open Access database format or the Milkyway data format each of which are well known in the art and thus will not be discussed here in further detail. Still other examples of the invention may alternately or additionally employ more complex formats i.e. formats that provide additional information unnecessary for maintaining and manipulating a floor plan design such as the GDS II data format or the OASIS data format. With these examples the floor plan design tool may maintain and manipulate the floor plan design directly in the more complex data format or convert the more complex data format into a simpler more convenient design data format such as those listed above. Still other examples of the floor plan design tool may additionally convert the finished floor plan design from a simpler more convenient design data format into a more complex data format for manufacturing or final verification of the microcircuit design.

When the floor plan design tool is initiated the floor plan design storage module provides a floor plan design referenced by the PG wire routing optimization tool to the user interface generation module . The selected floor plan design will then be displayed by the user interface generation module in a user interface. Of course any other desired techniques may be used to retrieve and display a floor plan design specified by the PG wire routing optimization tool from the floor plan design storage module. In the illustrated example of the floor plan design tool the floor plan design storage module provides the specified floor plan design to the user interface generation module . With alternate examples of the floor plan design tool however the floor plan design storage module may provide the specified floor plan design to the user interface generation module through the circuit layout determination module .

In order to properly render the user interface with the initial floor plan design the user interface generation module may include various application programming interfaces or other components necessary to create graphic images corresponding to the initial floor plan design. Also while the user interface generation module is illustrated as being a part of the floor plan design tool with alternate examples of the invention one or more functions of the user interface generation module may be performed by external software applications such as the operating system for the computing device . The display A may be any desired type of display including for example a cathode ray tube display a plasma screen display or a liquid crystal display LCD .

In response to the design constraints input from the wire routing optimization tool the user interface generation module will change the displayed position of one or more blocks in the user interface. In addition the circuit layout determination module determines a new layout for the relevant features of the floor plan design based upon the new position of the target block. This new floor plan design may then be displayed to the user. For example as will be discussed in more detail below the circuit layout determination module may determine a new position of a block based upon new constraints provided by the PG wire routing optimization tool for power and ground network wires.

The circuit layout generation module can further have the user interface generation module display one or more of the changes to the specified floor plan design features in the user interface. If the user is satisfied with the revised floor plan design then the user can choose to make the changes permanent by saving the modified floor plan design in the floor plan design storage module . With some examples of the invention however if the user is dissatisfied with the new floor plan the user may then decline the changes displayed in the user interface and thereby maintain the initial floor plan design. In this manner a user may view and consider different floor plan design changes without modifying the initial floor plan design.

Various examples of the floor plan design tool may include the circuit attributes storage module . As will be explained in more detail below the circuit attributes storage module stores desired attributes for various features of the floor plan design. Thus the circuit attributes storage module may specify a maximum or minimum distance between various blocks in a floor plan design. Similarly the circuit attributes storage module may specify a maximum or minimum distance between various wires within the design e.g. a minimum distance between power wires and ground wires a maximum or minimum distance between various wires and blocks within the design e.g. a minimum distance between a block and a power wire and a minimum width of a wire.

The circuit layout determination module will then revise the floor plan design so that it complies with the requirements specified in the circuit attributes storage module . For example if a designer attempts to move a target block closer than a minimum distance specified in the circuit attributes storage module the circuit layout determination module will not make this change to the floor plan design. Further the circuit layout determination module may have the user interface generation module prevent the user interface from showing the prohibited movement. With various examples of the invention the attributes included in the circuit attributes storage module may be provided before the tool is employed specified by the designer during the floor plan design process or a combination of both.

In the illustrated example the blocks and and are rectangular while blocks and have irregular shapes that may be formed by overlapping rectangular shapes. Different examples of the invention may alternately or additionally provide for blocks of any desired shape. It should be appreciated however that the use of rectilinear blocks having only right angles may allow for easier determination of the features of the microcircuit when a block is moved as will be explained in more detail below.

As previously noted wire design constraints input from the PG wire routing optimization tool may cause the floor plan design tool to move the position of one or more blocks. For example illustrates an alternate placement of the blocks . In this example block has been moved from its original position shown in . As will be appreciated by those of ordinary skill in the art various examples of the floor plan design tool may employ a coordinate system such as an X Y Cartesian coordinate system to identify the placement movement and orientation of the blocks relative to the floor plan design.

Between the view of the user interface shown in and the view of the user interface shown in block has moved down and to the left. It should be noted that the use of relative directions throughout is made only to more conveniently explain various features and operations of the invention and should not be considered limiting. In addition to moving block in response to input from the PG wire routing optimization tool some examples of the invention may also move blocks proximal to the a moved block. For example in block has been moved into the area originally occupied by the adjacent blocks and in . In response the circuit layout determination module has repositioned the placement of the adjacent blocks and . The new positions for these blocks and are then displayed in the user interface as shown in .

More particularly as shown in the circuit layout determination module has moved the block located to the left of the block in the left direction. The circuit layout determination module has similarly moved the block located below the block in the downward direction. Still further the circuit layout determination module has moved the block adjacent to the moved block located below the block in a downward direction as well. Thus one or more of the blocks in a floor plan design may be elastically moved to accommodate the movement of a target block. It should be noted that while only two adjacent blocks are moved in the illustrated example i.e. blocks and and blocks and any number of blocks may be recursively moved in response to the user s movement of a target block.

As also noted above the elastic assembly tool may be configured to maintain or enforce one or more circuit attributes defined in the circuit attributes storage module . For example with the illustrated example the circuit attributes storage module may specify a minimum distance to be maintained between each of the blocks . The circuit layout determination module will then identify when the block has moved to within this minimum distance from the adjacent block . If the input wire constraints require the block to move further towards the adjacent block the circuit layout determination module will move the adjacent block away from the block to maintain the specified minimum distance. Further the movement of the adjacent block may be displayed for the user in the user interface as illustrated in .

Similarly the circuit layout determination module will identify when the block is moved to within a minimum specified distance from the adjacent block . If the input wire constraints require the block to continue to move towards the adjacent block then the circuit layout determination module moves the adjacent block away from the block to maintain this specified minimum distance. Further as the adjacent block reaches its minimum specified distance from its adjacent block the circuit layout determination module moves the block away from the block to preserve the minimum distance separation between the two blocks. The movement of the adjacent blocks and also may be displayed for the user in the user interface as also illustrated in .

Different examples of the floor plan design tool may allow the circuit attributes storage module to specify any desired attributes for a floor plan design. For example some implementations of the floor plan design tool may allow the circuit attributes storage module to designate different minimum or maximum distances between different blocks and even to designate different minimum or maximum distances to be maintained on each side of a block. The circuit attributes storage module may also specify a minimum or maximum distance to be maintained between two or more blocks. This type of attribute may be employed for example when blocks are related and should be positioned relatively close to each other.

The circuit attributes storage module may alternately or additionally specify attributes relating to other features of the floor plan design such as wire or guard band placement. For example the circuit attributes storage module may specify minimum or maximum wire widths or lengths a maximum level of congestion permitted for wire routing or a minimum or maximum distance between different types of wiring lines. Further with some examples of the floor plan design tool the circuit attributes storage module may even specify that some wiring lines such as a main power or ground network wires are maintained a first minimum distance from a first type of block and a second minimum distance from another type of block. This allows for example a power or ground network wire to be kept at a greater minimum distance from a block that is particularly sensitive to noise from that wire.

The user interface may be configured to display only the positions of the blocks as illustrated in . If however a user wishes to view one or more other features of the floor plan design then the user may activate a command provided by the user interface to display the desired features. Such features may include power ground or signal wire routing guard band placement and a congestion map showing congestion for one or more types of wire connections. For example as shown in the user interface generation module may be instructed to have the user interface display the routing of the power and ground network wires for the floor plan design. That is a designer may choose to have the user interface display the portion of the floor plan design that includes the routing path of the power and ground network wires for the current placement of the blocks .

As will be appreciated by those of ordinary skill in art changing one or more features in a floor plan design may impact other features of the design including design features that may be displayed by the user interface . For example widening a power or ground wire may in turn require moving a block proximal to the widened power or ground wire. Accordingly with various examples of the invention the circuit layout determination module may determine what impact the widening or narrowing of a wire may have on other features of floor plan design and display these changes in the user interface .

For example by displaying the power and ground network wires as shown in the designer can view how movement of the block and the corresponding movement of the blocks and changes the routing of the power and ground network wires in the floor plan design. More particularly the designer can determine that moving the block will change the routing of the power and ground network wires between the blocks and between the blocks and between the blocks and between the blocks and between the blocks and and between the blocks and .

Thus when block is moved the user can immediately view the effect of this movement on other features of the floor plan design. With some examples of the invention the user interface may additionally display features of the floor plan design that will change in response to rerouting of wiring connections. The user interface may thus be configured to display the amount of congestion associated with a particular wire routing. For example if the user interface displays the routing for the main power and ground network wires the user interface may additionally indicate the level of congestion associated with these wires . If a portion of the main power and ground connection wires are not congested then the user interface may display this portion e.g. in a first color such as green. If a portion of the power and ground network wires are mildly congested then the user interface may display this portion in a second color such as yellow. If a portion of the power and ground network wires is heavily congested then the user interface may display this portion in still another color such a red. A similar congestion indication scheme may then be used to indicate congestion for signal wires. Of course any desired indication scheme such as hatching or shading alternately may be used to indicate relative congestion of power ground and signal wires.

It also should be appreciated that different examples of the floor plan design tool may evaluate the congestion of various wiring connections using any desired criteria such as the number of different wires per area placement of the wires within a threshold distance of each other etc. Further various examples of the invention may identify more or less than the three different levels of congestion as described above.

While wire congestion has been discussed as one example it should be noted that various examples of the floor plan design tool may display any desired characteristics of floor plan design features in the user interface . For example as will be discussed in more detail below the PG wire routing optimization tool may employ the user interface to alternately or additionally show where wires in the floor plan design will suffer an undesired voltage or IR drop or electromigration problem. With these examples of the invention the user interface may e.g. identify such drops with an X marking or other recognizable identifier.

With some examples of the floor plan design tool the circuit layout determination module may update one or more features of a floor plan design upon a movement of the blocks regardless of whether those features contemporaneously are displayed by the user interface . With still other examples of the floor plan design tool however the circuit layout determination module may determine the current status of features of the floor plan design only when those features are to be displayed by the user interface .

Also with various examples of the floor plan design tool other features of a floor plan design are determined only after a the placement of the blocks has been fixed. With still other examples of the floor plan design tool however these other features of the floor plan design may be determined and displayed to the user in real time i.e. as wire is widened or a block is moved . This type of immediate feedback allows a user to more quickly and naturally understand the changing placement for the blocks in a floor plan design and to readily ascertain when movement of a block may reduce the performance or yield of a circuit.

In order to provide faster feedback to a user various examples of the floor plan design tool may employ one or more techniques to reduce processing overhead. For example some examples of the floor plan design tool may provide faster global routing for e.g. signal wires by simplifying the number of material layers represented in the routing determination. Thus while a conventional microcircuit may actually use six to eight different layers of material for routing signal wires a fast global routing process according to various examples of the floor plan design tool may only assume that two layers exist for routing signal wires e.g. one layer for carrying wires in a first direction and another for carrying wires in a second direction orthogonal to the first direction . This provides a user with an indication of routing and congestion problems associated with block movements without requiring a detailed determination of routing in all of the available connection layers.

Still further the circuit layout determination module may only determine global routing for wires without determining local routing. In addition to reducing processing overhead omitting local routing of wires may provide a user with a more accurate indication of the congestion associated with the wires. Still further the process for determining the characteristics of a circuit may only be performed until new or further movement of a block is detected e.g. until new data from the pointing device indicating movement of a block is detected . If the circuit layout determination module detects that a block is being moved then the circuit layout determination module can postpone determining the design changes until the movement of each block is paused or completed.

Many features of a floor plan design such as the routing of power ground signal and guard band wires will depend upon relationships between the various blocks in the design. Accordingly various examples of the invention may employ visibility graphs to describe geometric relationships between the blocks of a floor plan design. A visibility graph represents the relative locations of objects within a domain of interest such as blocks within a floor plan design. More particularly visibility graphs provide an efficient tool to quickly identify which block in a floor plan design is directly and indirectly visible to another block as will be explained in detail below. Accordingly a visibility graph can be used to determine when a designer moves one block in a floor plan design which of the other blocks will need to be moved as well and which blocks cannot be moved due to various restrictions . A visibility graph also can be used to help quickly determine global routing for the main power ground signal and guard band wires.

With various examples of the invention a complete visibility graph is made up of two directional visibility graphs with each directional visibility graph being oriented according to a direction orthogonal to the direction of the other directional visibility graph. Thus a complete visibility graph may be comprised of a vertical visibility graph describing the visibility of the blocks to each other only in a vertical direction and a horizontal visibility graph describing the visibility of the blocks to each other only in a vertical direction .

An edge in the visibility graph corresponds to an empty rectangular space in the graph s direction between two blocks . An edge can be a primary edge or a secondary edge however. An edge between two nodes X and Y is a secondary edge if and only if there exists another path from node X to node Y that contains at least one other node Z. That is a secondary edge is an edge between two nodes where there exists a longer path in terms of the total number of edges and nodes between the same node pair. All other edges then are primary edges. Thus the rectangular spaces in the floor plan design are represented by the primary edges while the rectangular spaces are represented by the secondary edges . Depending upon the arrangement of the blocks in a floor plan design there may be two or more edges between the same pair of nodes. For instance in the floor plan design there are two empty rectangles of space between the blocks A and F so there are two edges between the node A and the node F. Such pairs of edges will not typically be merged.

A vertical directional visibility graph can then similarly be constructed for the floor plan design . The two directional visibility graphs will not be independent from each other however. When one graph is modified due to the movement of a block the configuration of the other visibility graph will need to be updated as well. Therefore when a block in the floor plan design is moved the two visibility graphs will be updated in an alternating fashion. With this alternating update sequence corner to corner overlap of the visibility graphs can be avoided during incremental update and change. The determination of which directional visibility graph will be updated first may vary however depending upon the floor plan design. For example a floor plan design may have more blocks or more wire routing in a horizontal direction so it may be more efficient to update the vertical visibility graph for that floor plan design before updating the horizontal floor plan design.

As previously noted various examples of the floor plan design tool may be implemented with a programmable computing device executing software instructions. With these examples the visibility graphs for a floor plan design may in turn be implemented using a data structure that is accessible to the programmable computing device. Because both the horizontal visibility graph and the vertical visibility graph for a floor plan design share a common set of nodes the two directional visibility graphs can be merged into a single complete visibility graph in such a data structure. With such a complete visibility graph the edges may be grouped into vertical and horizontal edges. The complete visibility graph however will still distinguish between primary and secondary edges.

More particularly a data structure implementing a complete visibility graph for a floor plan design may store four pointers to four nodes representing the four sides of the floor plan design. Other relevant information also may be stored in this anchor structure such as a pointer to a duplicated or temporary visibility graph. A node in the data structure for the complete visibility graph will either represent a side of the floor plan design or a block within the floor plan design. Because a block may be rectangular or rectilinear the node corresponding to a block will store a list of rectangles forming the block s boundary. Alternately if the block has a polygonal shape a node corresponding to that block may store a polygon as the block s boundary but as will be appreciated by those of ordinary skill in art this node information requires additional processing steps to be useful.

As previously noted a path between two blocks in the floor plan design is defined as an edge in the data structure describing the complete visibility graph. An edge connects exactly two nodes and a primary edge in the data structure for a complete visibility graph represents the empty space between the two blocks corresponding to those nodes. As will be discussed in more detail below this empty space serves as a channel area or channel box through which connection wires such as power ground network wires can be routed. An edge in the data structure therefore will store the boundary of the rectangular area that it represents. Further a primary edge will include some information identifying it as a primary edge as opposed to a secondary edge. Edges corresponding to spaces on each side of a block may be sorted from bottom to top and left to right.

With different examples of the floor plan design tool a variety of functions or client operations may conveniently employ the information contained within the complete visibility graph for a floor plan design. For example as noted above and as will be discussed in greater detail below some examples of the floor plan design tool will determine and display global routing for the power and ground network wires. Still other examples of the floor plan design tool may enable client operations that determine and display global routing for the signal wires such as critical or bus signal wires pin assignments for the blocks or the entire design or any other desired feature of a microcircuit design. With various examples of the floor plan design tool these client operations may be implemented both within and external to the elastic assembly floor plan design tool .

Accordingly each node or edge in the data structure may contain a pointer to a linked list of client pointer holders. A client pointer holder consists of a pointer to the next client pointer holder a client pointer and a signature of the pointer. When a client accesses its own client pointer various examples of the invention may require the client to identify itself through a signature to use the completed visibility graph. This configuration allows each of the client operations to store and retrieve the values associated with the edges of the data structure for the complete visibility graph thereby permitting the complete visibility graph to be shared among different client operations.

As discussed above the floor plan design tool is used by the PG wire routing optimization tool to determine and display various features of a floor plan design including power ground signal and guard band wire routing. Accordingly an example of the determination of power and ground network wires will now be described for illustration. The term power and ground network or PG network as used herein refers to the primary power and ground wires that include the combination of core rings i.e. one or more main power and ground wires that ring the core area and block rings i.e. one or more main power and ground wires that ring at least a portion of a block used to supply a power and ground voltage to various blocks in the floor plan design.

As previously noted the elastic assembly tool may include a circuit attributes storage module defining various attributes for the floor plan design. Thus the circuit attributes storage module may include attributes relating to the routing of the wires making up the power and ground networks. These attributes may for example dictate the width of the main power and ground wires as will be explained in more detail below.

The circuit attributes the circuit attributes storage module may include both global attributes and local attributes. Global attributes are universally imposed while local attributes are imposed only for specific features of the design or within a specific region of the design. For example global attributes for power and ground network wires will apply to all power and ground network wires in a floor plan design. A local attribute however will only be imposed on power and ground network wires that are proximal to a specific block or that are located within a specific region of the floor plan design.

With various examples of the floor plan design tool the circuit layout determination module may combine both the global and local attributes. For example the circuit layout determination module may first apply the global attributes which typically are rule driven for all blocks. These rules could be placed in a text file and loaded into the circuit attributes storage module as a group entered on an individual basis through a user interface to the tool or a combination of both. The circuit layout determination module can then apply the local attributes so as to override the global attributes in the area of the appropriate blocks. Like the global attributes the local attributes rules may be placed in a text file and loaded into the circuit attributes storage module as a group entered on an individual basis through a user interface to the tool or a combination of both.

For wire routing such as power and ground network wire routing global attributes may be derived based upon any number of desired considerations such as power consumption or block size. The attribute values for all blocks in a design can be entered into the circuit attributes storage module as a group or entered on an individual basis through a user interface. Once the specific attributes are defined the circuit layout determination module can repetitively reconstruct a main power and ground wire network very quickly after every major or minor adjustment of block placement using the visibility graph for the floor plan design.

For example some implementation of the floor plan design tool will employ specific power consumption values for a block. These attributes values may then be employed with a designated watt per micron width value which defines how much power a given width of a wire can provide or dissipate while staying within a desired temperature range. With various examples of the floor plan design tool the watt per micron width value may be designated in advance or alternately provided by a user of the tool either through an attribute file or through a user interface for the tool . Using these attributes the circuit layout determination module can easily determine the minimum required width of the power and ground network wires around each block. Further by assuming that the first preferred metal layer for each orthogonal wire direction is the default layer as discussed above the circuit layout determination module also can calculate the desired wire widths and layer placement for the power and ground network wires relative to all sides of all blocks that have power and ground input pins.

It should be noted that when using a power consumption attribute value for an entire block the calculated width for the power and ground network wires would be divided by number of sides of the block that contain pins of specific number of power and ground circuits. Accordingly various examples of the floor plan design tool may designate the attributes in the circuit attributes storage module as 

If only a subset of blocks in a design have associated power consumption data the circuit layout determination module may interpolate or extrapolate power consumption based on the dimension of the blocks when compared with the power consumption data and the dimensions of the blocks having associated power consumption data. Using this interpolated or extrapolated power consumption data the circuit layout determination module can easily determine a wire width for power ground network wires proximal to blocks that do not have associated power consumption data.

If power consumption attribute values associated with blocks are not readily available for use various examples of the invention may alternately or additionally allow for the use of dimension based attributes. For example some implementations of the floor plan design tool may provide a command allowing a user to submit a number reflecting the power and ground network wire width per area unit for an associated block such as 

With this type of designation the field may be in a unit. Using this attribute the circuit layout determination module can calculate the required main power and ground network wire widths for all sides of a block based upon the total area of the block.

Some examples of the floor plan design tool may even allow for mixed use of both power consumption attribute values and dimension based attribute values as global attributes. When in conflict for example some examples of the floor plan design tool could designate that a power consumption based attribute would take precedence over a dimension based attribute.

Because power and ground network wires forming core rings are very common and typically cannot be derived from power consumption data or even dimension data for blocks various examples of the floor plan design tool may additionally allow the widths and layer assignments of power and ground network wires to be specified. For example some examples of the floor plan design tool may allow a user to specify the direction layer and width of a core ring wire using a command such as

With this type of command a wildcard character such as the character could be used to represent all applicable matches in the and fields thereby allowing the command to be used to simultaneously designate the attributes of multiple core ring power ground network wires. The could either specify a power or ground network. If a power ground network serving as a core ring does not have a specified associated core ring attribute then the circuit layout determination module may simply exclude the automatic determination of the routing for that power ground network. With various examples of the floor plan design tool an attribute for a power ground network serving as a core ring may override any other attributes imposed on the same area of the floor plan design such as an attribute corresponding to a block when the block is located adjacent to the core ring.

As previously noted local attributes typically will override global attributes. Local attributes normally will be associated with a set of one or more specific blocks and in some uses with directional attributes that can be used to designate one or more specific sides of a block. Thus a block based attribute may be employed to direct construction of wiring routes next to a specific side of the block. The direction side specification may be relative to the associated block s normal orientation or transformation making the attribute rotation independent. Various examples of the floor plan design tool may thus provide commands such as

These attributes may include for example such parameters as a reserve value to reserve extra space in microns a noLessThan value to specify that the wire be offset from the corresponding block by no less than a designated space in total an equal value designating that the wire be a distance from the corresponding block by a space exactly equal to a specified value a width value designating the width of all of the power ground network wires for the associated side of a block a layer value specifying the metal layers in which the power ground network wires will be routed and a pinReserve value specifying that at least the designated space be left between the power ground network wire route and a boundary to protect pin accessibility. With the pinReserve attribute the default value may be some minimal spacing distance plus some adjustment if space in the design allows. As will be appreciated by those of ordinary skill in the art a wildcard character e.g. an can be used to designate all possible selections.

In some situations two local attributes may conflict. For example if a block A is located to the left of block B by a distance of 100 microns and a power ground network wire running between the blocks has a width of 12 microns the following two local attribute attribute commands with values given in microns will present a conflict 

When two attributes conflict any desired technique may be used to resolve the conflict. For example with a wire width attribute conflict various examples of the invention may employ an average of the two attribute values in order to minimize a maximum violation of the attributes. For a space attribute conflict various examples of the invention may employ an average of the two attribute values in order to minimize a maximum violation of the attributes. With a conflict of layer attributes various examples of the invention may simply designate the lowest specified layer.

Some examples of the floor plan design tool may allow local attributes to be designated for a group of two or more blocks. This feature may be useful for example where the attributes are used to route wires around a group of blocks so as to form a guard band. This feature may also be used to create power ground network rings around a group of blocks. For example various examples of the floor plan design tool may provide commands such as

With some examples of the floor plan design tool a local group attribute may be imposed on a block in or near the group that has a conflicting attribute. Alternately or additionally some examples of the floor plan design tool may resolve a conflict between a local group attribute and a local attribute associated with a block in or near the group. For example if a local group attribute is being applied to a wire network serving as a power wire network i.e. a VDD or direct current voltage at drain wire network and a block positioned near the group specifies a conflicting attribute for a wire network serving as a power wire network for that block then the two power wire networks may be merged into a single power wire network large enough to comply with both attributes.

Under some circumstances various levels of attributes may conflict. For example a group based attribute may conflict with a local attribute for a single block which in turn may conflict with a global attribute. Various examples of the floor plan design tool may resolve these conflicts according to any desired technique. For example some examples of the floor plan design tool may resolve attribute conflicts in favor of the highest precedence according to the following descending precedence hierarchy 

It should be appreciated that with various examples of the floor plan design tool the attributes defined in the circuit attributes storage module may only be employed for automatic construction of a main power and ground wire network. With some examples a user may choose to manually edit a power ground wire network or other wire routing. With these examples the user interface may offer a conventional set of commands core ring block ring stripe to modify the wire routing in the floor plan design.

With various examples of the floor plan design tool the circuit layout determination module may employ a multi step algorithm to automatically determine the routing of a wire network such as a power ground wire network. This algorithm may include for example 1 the construction of a visibility graph corresponding to the current arrangement of the floor plan design 2 wire segment insertion into the design 3 initial construction of the wire routing and 4 refinement of the wire routing. This algorithm will be discussed in more detail below and is illustrated in .

Given a block placement without any overlap among blocks using the desired global and local attributes for the block placement the circuit layout determination module first constructs a visibility graph in step as described in detail above. Because the visibility graph construction process can be implemented very quickly there typically is no need for an incremental update of the graph for changes to the floor plan design. Instead the visibility graph may be reconstructed even after minor placement changes in the floor plan design which serves to increase the stability of tool . It should be noted that in some situations an incremental update of an existing visibility graph may be more complex and time consuming than a total construction of a new graph. Some examples of the invention however may still incrementally update an existing visibility graph for changes in a floor plan design.

Once a visibility graph is constructed the circuit layout determination module will employ the specified attributes to adjust the block placement and thus the visibility graph in step . This process may include for example adjusting the size of the channel boxes i.e. the box formed by the channels of empty area between the blocks as previously noted to ensure enough space has been reserved for introduction of the power and ground network wires into channel boxes. These adjustments may be made based upon the network routing attributes provided in the circuit attributes storage module . For example the attributes for a network may require a wire width of 10 microns a distance between the wire and a block A of 40 microns and a distance between the wire and a block B of at least 50 microns. With these attributes the circuit layout determination module may move the blocks A and B to ensure that they are separated by at least 100 microns i.e. to ensure that the channel box has a width of 100 microns so as to comply with the specified attributes .

After a visibility graph has been successfully constructed and the channel boxes have been modified to ensure that there is enough space for wire segments in step the wire segments are inserted into each channel box. More particularly if a channel box corresponds to a horizontal primary edge in the visibility graph then a vertical wire segment is inserted into the channel box. Similarly a horizontal wire segment for each needed power and ground network is inserted into each channel box corresponding to a vertical primary edge in the visibility graph. As discussed in detail above the width of the inserted wire segment is calculated based upon the applicable attributes for that channel box and the wire is assigned to a wire layer corresponding to the power or ground network to which the wire will belong. It should be noted that when desired a designer may impose local attributes to partially or completely rid a channel box of a wire segment.

When this process is completed the channel boxes corresponding to the primary edges of the complete visibility graph contain inserted wire segments. The length of each wire segment typically will equal the height or width of the channel box depending upon whether the wire segment is horizontal or vertical. Also the center of each wire segment typically will be located at the center of its corresponding channel box. In some floor plans a channel box will border a block belonging to a group associated with one or more group based attributes such as the type that may be used to create guard band wires . The circuit layout determination module tests the channel box at each side of every block in such a group to ensure that the channel boxes surrounding these blocks comply with the attributes for the group.

After the insertion of wire segments into all of the channel boxes except for those excluded from receiving a wire segment by one or more attributes has been completed the floor plan design contains interweaved wire segments. For example as shown in the floor plan design includes blocks with box channels between various blocks. For example a horizontal box channel A is located between block and while another horizontal box channel D is located between block and block . Still another horizontal box channel E is located between block and block . Vertical box channel B is then located between block and block and vertical box channel C is located between block and block . As shown in this figure a wire is inserted into each channel box .

The intersection of channel boxes forms switch channel boxes i.e. areas where the direction of the wires switch or switch boxes. For example the intersection of channel box A channel box B and channel box C form the switch box F shown enlarged at the right hand side of . Similarly the intersection of channel box B channel box D and channel box E form the switch box G shown enlarged at the left hand side of . Thus the wire segments in the channel boxes form pins on the boundaries of the switch boxes. The area of the switch boxes may be further defined to be the minimal area containing pins i.e. connections to wires in the channel boxes . In step connection wires are formed within each switch box to connect each of the wires forming a pin on the boundary of that switch box. It should be noted that while does not illustrate each the wires in the switch boxes F and G as being fully aligned with its corresponding pin in actuality each wire segment within a switch box would be accurately aligned with its corresponding pin. The routing of these connections wires within a switch channel box may be made according to any desired conventional technique. For example various implementations of the floor plan design tool may employ automatic area based routing techniques point to point routing techniques and pattern based routing techniques to route the wires within the channel boxes. These routing techniques are well known in the art and thus will not be discussed in detail here.

When the components of a floor plan design are actually physically constructed wires running in a vertical direction are usually formed in one or more different metal layers from wires running in a horizontal direction. Accordingly some examples of the floor plan design tool may replace joints between differently directed wires with a contact array i.e. array of contacts or vias during the wire routing process. Wires associated with group based attributes such as wires forming a guard band also can be connected in this way.

The routing process described above and illustrated in would be complete if all of the blocks within a floor plan design are rectangular and the channel boxes do not overlap. However there are two special cases in which one or both of these conditions do not occur. An example of the first case is shown in . As seen in this figure the floor plan design includes blocks but the shape of rectilinear block is represented by a set of differently sized rectangles A D. During the construction of a corresponding visibility graph as described above the graph would have no edges among the rectangles A D of the same block . In other words internal edges having the same node on both ends of the edge i.e. edges between the same block would typically not be permitted in the visibility graph. Thus the visibility graph for a floor plan design with a rectilinear block as shown in would include parallel edges adjacent to one another. The floor plan design represented by such a visibility graph would correspondingly have parallel channel boxes adjacent to one another i.e. not separated by a channel box running in a different direction so as to form a switch channel box such as the adjacent channel boxes B and D and adjacent channel boxes C and E.

As seen in after the initial construction of the wire segments in the channel boxes B F the wire segments in adjacent channel boxes B D appear fractured at the boundaries of the channel boxes B D. Various examples of the floor plan design tool may address this discrepancy by shifting the wire segment in one channel box to connect to the wire segment in an adjacent channel box in step . For example with the floor plan design illustrated in the wire segment in channel box B is shifted to align with the wire segment in channel box D. Similarly the wire segment in channel box C is shifted to align with the wire segment in channel box E. After the shifting process is complete a switch box A is formed and connecting wire segments can be routed in the switch box A as previously described in detail.

In some floor plan design configurations the channel boxes could actually overlap one another. For example as shown in a floor plan design includes blocks with a channel box formed between each pair of adjacent blocks. Additionally a vertical channel box A is formed between block and block while a horizontal channel box B is formed between block and block . As a result the vertical channel boxes A and B intersect in rectangle C.

To avoid inadvertently creating shorts between wire segments in overlapping channel boxes in step various examples of the floor plan design tool may route wire segments in those portions of overlapping channel boxes outside of the overlapped region. For example in the rectangular overlapping region C effectively segments the vertical channel box A into a channel box portion Aand a separate channel box portion A. Similarly the rectangular overlapping region C divides the horizontal channel box B into a channel box portion Band a separate channel box portion B. Thus various examples of the floor plan design tool will insert two wire segments into both channel boxes A and B instead of one. More particularly the circuit layout determination module will insert a wire segment into the channel box portion Aand another wire segment into the channel box portion A. Similarly the circuit layout determination module will insert a wire segment into the channel box portion Band another wire segment into the channel box portion B. The routing within each resultant switch box i.e. the switch channel boxes formed by the segmented channel box portions can then be performed as previously described.

In some instances this type of wire routing technique may produce redundant wire segments. With various examples of the floor plan design tool any redundant wire segments can be prohibited or removed by designating appropriate local attributes. For example with the floor plan design shown in a user may determine that the wire segment routed through the channel box portion Bis redundant in view of the wire segment routed through the channel box portion B. The user can thus address this redundancy by setting the local attributes to prohibit or remove the wire segment routed through the channel box portion B.

Initially in step the PG wiring analysis module receives a floor plan design for analysis. In the illustrated example the PG wiring analysis module receives the floor plan design from the floor plan design storage module of the floor plan design tool . With other examples of the invention however the PG wiring analysis module may alternately or additionally receive a floor plan design from another source such as a database specified by a user or input received directly from a user. Also with various examples of the invention the PG wiring analysis module may display the received floor plan design to the user as shown by the floor plan design in .

Next in step the PG wiring analysis module analyzes the wire routing for the received floor plan design to determine if the PG wiring in the design includes one or more types of problems. For example with various implementations of the invention the PG wiring analysis module examines the PG wire routing in the received floor plan design to identify IR drop problems or electromigration problems as will be discussed in more detail below. Of course still other implementations of the PG wire routing optimization tool may analyze the wire routing in the received floor plan design for any desired types of problems. In step the PG wiring analysis module determines if any such problems are present in the wire routing for the received floor plan design .

If wiring problems are identified for the wire routing in the received floor plan design then in step the PG wiring analysis module may optionally display the location of the problems in the received floor plan design . For example as shown in the PG wiring analysis module has identified the location of an IR drop problem and a location of an electromigration problem. With various implementations of the invention PG the wiring analysis module may identify the location of different problems using different indicators. For example in the location of the IR drop problem is marked with a single crossbar X shape. Of course other examples of the invention may employ any desired indicators to identify the location of different wiring problems. Further various implementations of the invention may omit displaying the identified wiring problems to the user altogether.

Next in step the attribute generation module generates corrective attributes for the wiring in the received floor plan design that will correct the identified problems. For example if the PG wiring analysis module has determined that a wire in the wire routing is too thin to maintain a specified IR level then the attribute generation module determines a minimum width attribute for that wire that will provide the specified IR level. With various examples of the invention the attribute generation module may identify the wires in the received floor plan design for which corrective attributes have been generated as illustrated in .

With various examples of the invention steps may each be performed once to identify and correct all desired PG wiring problems. With still other examples of the invention however steps may be repeated for each type of PG wiring problem to be corrected by the PG wire routing optimization tool . Thus in the illustrated example steps are performed to first identify and correct electromigration problems in the wires. Steps then are repeated to identify and correct IR drop problems in the PG wires.

The separate processes of identifying and correcting IR drop and electromigration problems that may be employed by various implementations of the invention will be discussed in more detail with respect to . As seen in in step the PG wiring analysis module scans through all of the relevant wires and vias i.e. all of the relevant wires and vias in a power ground network . In step the PG wiring analysis module determines the current density values of each wire and via. The PG wiring analysis module then compares the determined current density for each wire and via with the maximum current density allowable for the wire or via in step . This maximum current density value allowable for each wire and via may be specified for example by the foundry that will be manufacturing integrated circuits from the design.

If a wire s or via s determined current density value exceeds its specified maximum allowable current density value then the PG wiring analysis module increases the width of the wire or via to correct this electromigration problem in step . More particularly the PG wiring analysis module determines an electromigration width size up factor. With various examples of the invention the electromigration width size up factor may be determined as factor determined current density value maximum allowable current density value 

The PG wiring analysis module then determines a new width of the wire or via based upon the electromigration width size up factor. For example with various implementations of the invention the PG wiring analysis module will determine the new width of the wire or via to be new width current width electromigration width size up factor.

Steps are repeated as often as necessary using the new wire and via widths until the PG wiring analysis module determines that none of the wires or vias in the design exceeds its maximum allowable current density value. It should be noted that with various examples of the invention the PG wiring analysis module may provide the new wire and via sizes to the attribute generation module for each iteration of steps so that the attribute generation module can have the floor plan design tool update the floor plan design tool for each change in width. With still other examples of the invention however the PG wiring analysis module may provide the new wire and via sizes to the attribute generation module only after the wiring analysis module has determined that none of the wires or vias in the design exceeds its maximum allowable current density value.

When the PG wiring analysis module does determine in step that none of the wires or vias in the design exceeds its maximum allowable current density value then the PG wire routing optimization tool processes the PG wire network to correct IR drop problems. Thus as shown in in step the PG wire routing optimization tool analyzes the circuit design to determine if any of the wires in the PG network has an IR drop problem. More particularly the PG wiring analysis module analyzes the wire network to determine if the IR drop at one or more of the pins is larger than the IR drop threshold voltage value defined by the circuit designer for that pin. If the PG wire network has one or more IR drop problems then in step the PG wiring analysis module identifies the pin in the PG wiring network that has the worst IR drop value e.g. the pin having the largest difference between the IR drop threshold voltage value defined by the circuit designer for the pin and the actual IR drop at the pin . Next in step PG wiring analysis module determines the shortest wire path through the PG wiring network that connects the pin with the worst IR drop to a corresponding voltage source. In step the PG wiring analysis module then records all of the wires in that shortest path.

Once the wires in the path have been recorded the PG wiring analysis module sizes up those wires in the shortest path in step . More particularly with the illustrated example of the invention the PG wiring analysis module determines an IR drop width size up factor for each recorded wire. The PG wiring analysis module may use for example the following formula to determine the IR drop width size up factor factor IR drop threshold voltage value voltage on pin with the worst IR drop value 

The PG wiring analysis module determines a new width of each recorded wire based upon the IR drop width size up factor for that wire. For example with various implementations of the invention the PG wiring analysis module will determine the new width of the wire to be new width current width IR drop width size up factor.

Steps are then repeated as necessary using the new wire widths. Again with various examples of the invention the PG wiring analysis module may provide the new wire sizes to the attribute generation module for each iteration of steps so that the attribute generation module can have the floor plan design tool update the floor plan design tool for each change in width. With still other examples of the invention however the PG wiring analysis module may provide the new wire sizes to the attribute generation module only after the PG wiring analysis module has determined that none of the pins has an IR drop larger than the IR drop threshold voltage value defined by the circuit designer for that pin.

In step the attribute generation module provides the generated corrective attributes to the floor plan design tool and invokes the operation of the floor plan design tool . For example in the illustrated implementation of the invention the generated corrective attributes are stored in the circuit attribute store module of the floor plan design tool . With still other implementations of the invention the attribute generation module may provide the corrective attributes directly to the circuit layout determination module of the floor plan design tool . Once the floor plan design tool has received the corrective attributes it can then use the corrective attributes to revise the entire floor plan design based upon the corrective attributes as discussed in detail above. With some examples of the invention the floor plan design tool will display a corrected floor plan design with the corrected wiring as shown in .

Once the identified wiring problems in the received floor plan design have been corrected or if the PG wiring analysis module determines that there are no wiring problems in the received floor plan design then the floor plan design is provided to the area minimization module . In step the area minimization module employs an area minimization technique to determine a minimum area for the PG wiring in the received floor plan design that does not create new wiring problems such as IR drop or electromigration problems. For example with some examples of the invention the area minimization module formulates the determination of the area of the PG wires as a linear programming program problem and then employs the well known Simplex algorithm to determine the minimum suitable dimensions for each wire segment in the wiring of the received floor plan design .

In step the attribute generation module generates minimization attributes corresponding to the minimum determined dimensions for each wire segment in the PG wiring of the received floor plan design . Then in step the attribute generation module provides the minimization attributes to the floor plan design tool and invokes the operation of the floor plan design tool . As previously noted in the illustrated implementation of the invention the generated minimization attributes are stored in the circuit attribute store module of the floor plan design tool . With still other implementations of the invention however the attribute generation module may provide the minimization attributes directly to the circuit layout determination module of the floor plan design tool . Once the floor plan design tool has received the minimization attributes it can then use the minimization attributes to revise the entire floor plan design based upon the minimization attributes as discussed in detail above. With some examples of the invention the floor plan design tool will display a corrected floor plan design with the minimized PG wiring.

In the illustrated example of the invention the PG wire routing optimization tool performs both a wiring analysis to identify and correct PG wiring problems and an area minimization process to minimize the total area of the PG wiring in the received floor plan design . With alternate embodiments of the invention however the PG wire routing optimization tool may perform only the PG wiring analysis process or only the PG wiring minimization process. Thus alternate implementations of the invention may omit the area minimization module or the PG wiring analysis module . Also in the illustrated example the PG wiring analysis module conveniently displays the received floor plan design using the user interface generation module of the floor plan design tool . With still other implementations of the invention however the PG wire routing optimization tool may have its own user interface generation module for displaying information such as the received floor plan design the location of identified PG wiring problems PG wiring segments to be corrected and corrected or minimized PG wiring in the floor plan design.

Accordingly various embodiments of the invention provide a tool for optimizing the PG wires in a floor plan design while correcting or avoiding various wiring problems such as IR drop problems and electromigration problems. While the invention has been described with respect to specific examples including presently preferred modes of carrying out the invention those skilled in the art will appreciate that there are numerous variations and permutations of the above described systems and techniques that fall within the spirit and scope of the invention.

