---

title: Desktop security
abstract: In aspects, interactions between processes of a desktop are allowed or denied based on security data. The security data may comprise a first bitmap that indicates whether a requesting process is allowed to cause an action to occur, a second bitmap that indicates whether a process is protected from having an action occur, and a third bitmap that indicates whether the requesting process may override protection, if any, in causing the action to occur.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07600264&OS=07600264&RS=07600264
owner: Microsoft Corporation
number: 07600264
owner_city: Redmond
owner_country: US
publication_date: 20050730
---
In the past relatively few computers were connected to the Internet. For computers that were not connected to the Internet computer security involved controlling who was allowed to access the computers and restricting the programs installed on the computers. As more computers have become connected to the Internet however computer security has become more of an issue as attempts to access a computer may come from any of millions of computers connected to the Internet.

Briefly aspects of the subject matter described herein relate to computer security. In aspects interactions between processes of a desktop are allowed or denied based on security data. The security data may comprise a first bitmap that indicates whether a requesting process is allowed to cause an action to occur a second bitmap that indicates whether a process is protected from having an action occur and a third bitmap that indicates whether the requesting process may override protection if any in causing the action to occur.

This Summary is provided to briefly identify some aspects of the subject matter that is further described below in the Detailed Description. This Summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The phrase subject matter described herein refers to subject matter described in the Detailed Description unless the context clearly indicates otherwise. The term aspects should be read as one or more aspects . Identifying aspects of the subject matter described in the Detailed Description is not intended to identify key or essential features of the claimed subject matter.

Other aspects will become apparent from the following Detailed Description when taken in conjunction with the drawings in which 

Aspects of the subject matter described herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the subject matter described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microcontroller based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Aspects of the subject matter described herein may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures and so forth which perform particular tasks or implement particular abstract data types. Aspects of the subject matter described herein may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing aspects of the subject matter described herein includes a general purpose computing device in the form of a computer . Components of the computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and nonvolatile media and removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers herein to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner a touch sensitive screen of a handheld PC or other writing tablet or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

The process A and the process B may both read from and or write to a desktop. Reading from and or writing to the desktop are sometimes referred to as accessing the desktop. Conceptually the desktop may include any interface arranged to interact with a user. For example a desktop interface may provide graphical and or textual information to a user. As another example a desktop interface may provide input from a keyboard mouse or other input device.

The desktop may also include any interface arranged to interact with objects that are displayed. For example the desktop may include an interface that allows a program to access an image displayed on a display.

The processes A and B may interact with each other via a plurality of mechanisms depending on those supported by the operating system . For example the process A may send data to the process B through an input injection application programming interface API . An input injection API may allow one process to provide input to another process. The operating system may be configured so that the process into which input is injected is unable to distinguish between data received from the input injection API and data received in response to user actions e.g. through a keyboard or mouse .

As another example the process A may hook an input stream e.g. generated by a keyboard mouse or the like of the process B . Each time input is received from the hooked stream the process A may be called and given the input. The process A may then perform various actions based on the input. The input may also be passed to the process B . Again the operating system may be configured so that the process B may not be aware that the process A has hooked one or more of the process B s input streams.

As another example the process A may send a message to the process B by for example calling an operating system API to post an event to the process B . Periodically the process B may read events that have been posted to it and may perform actions based thereon. For example the process A may post a close event to the process B . In response the process B or a window thereof may close.

As another example information from the process B may be copied into a clipboard. This information may then be obtained by the process A .

The operating system may be configured such that processes are unaware of which process sent messages to hooked input streams accessed clipboards or otherwise interacted with them. For example in the case of a message relayed as an event a process may not be able to determine whether the message came in response to a user selecting a close button or in response to another process which posted a close event to the process.

As will be readily appreciated this mechanism for interacting between desktop processes has security issues. For example if a browser is taken over by a malicious process the malicious process may cause a drive to be formatted by opening a standard format utility and injecting the appropriate input into the format utility. A malicious process that hooks the input of another process may be able to capture user names and passwords and then forward this information to a remote computer. As another example a malicious process may close a security warning window of another process before a user has time to see or read the warning.

To address these security problems one or more access control list ACL may be created for each process. Each ACL may be implemented by a bitmap for example wherein each bit represents whether the process may engage in a specified activity. For example a bit in the bitmap may indicate that a process cannot inject input into other processes. This may prevent the process from formatting a hard drive through injecting input into a format utility for example.

As another example another bit in the bitmap may indicate that a process cannot hook a keyboard input stream. This may prevent the process from obtaining user names and passwords for example.

In general the bitmap may be configured such that any security related activity that a process may attempt may be allowed or denied based on the bits in the bitmap. Exemplary activities may include 

The bitmap described above may be used to deny or allow a process to engage in certain activities. In one sense this may be thought of as a protecting others bitmap that protects other processes from activities of the process. Each of the protecting others bitmaps may be stored by the operating system and associated with a process.

Another bitmap may be associated with a process to protect it from other processes. This bitmap may indicate what activities other processes may perform as it relates to the process. For example the bitmap may indicate that no other process may inject into or hook an input stream of the process. In general the bitmap may include one bit for each activity for which protection is desired. This additional bitmap sometimes referred to as a protection from others bitmap may be useful for example to prevent access to sensitive processes by other processes that have somehow gained more rights than they should have. For example without a protection bitmap if a process with many rights is hijacked by a malicious process the malicious process may gain access to sensitive processes.

Some processes may need to have the ability to override protection bits of the protection from others bitmap. These processes may include for example user accessibility programs where it is critical to have access to a process in order for a disabled person to communicate with the process. For example a disabled person may require a sip and puff input device to interact with a computer. The sip and puff input device may interact with a process that translates the disabled person s instructions into commands applicable to programs.

For example referring to which is a block diagram that generally represents another exemplary environment in accordance with aspects of the subject matter described herein an accessibility process may need to provide input to the process B . The accessibility process may communicate these commands to other processes including the process B via an injection input mechanism. If the accessibility process wishes to communicate to a process that is associated with a protection bitmap that denies injection input this protection may need to be overridden. To accomplish this an override bitmap may be associated with each process. The override bitmap may indicate which protected activities the process may override.

The operating system may store and maintain the bitmaps and in protected memory so that they cannot be accessed by user mode processes. When a process attempts to interact with another process the operating system may determine whether the interaction is permitted based on bitmaps associated with the processes as described in more detail in conjunction with .

In operation whenever the process wishes to access a file the process may ask a system component to perform various actions. The process may ask the system component to perform an action via an API provided by one of the DLLs . The DLL may then call a system component e.g. NTOSKRNL.SYS and ask the system component to perform an action. Requests received by a system component e.g. NTOSKRNL.SYS may be queued and dispatched to other system components e.g. HDD.SYS as needed.

Certain DLLs e.g. USER32.DLL and GDI32.DLL may be involved in interacting with a desktop. These DLLs may for example be used to create a window display the window draw or paint inside a window and perform various other user interface types of actions. These DLLs may manage the windows of the desktop input to the windows interaction with a clipboard messages between objects displayed on the desktop and the like. To perform these actions the DLLs may call system components e.g. WIN32K.SYS that have control over system resources e.g. the video card and input devices .

System data relating to the desktop may be stored by a system component e.g. WIN32K.SYS . This data may include for example a windows tree that indicates which windows are displayed on the desktop clipboard data keyboard mouse or other input and the like.

The accessibility process may be installed as a system component such as a hardware driver or as a user mode process which injects input via a system component. In the latter configuration the system component may attempt to make the injection appear to other processes to come from a hardware device.

A system component e.g. NTOSKRNL.SYS may manage ACL security identifiers SIDs e.g. ACL SID . Bitmaps related to desktop security may be stored in another system component e.g. WIN32K.SYS . There may be one ACL SID associated with each process. The ACL SID may be used to lookup entries in the bitmaps to determine whether a process has rights to engage in a requested activity.

At block a process requests an action related to the desktop. For example the process may request to inject input hook an input stream access a clipboard request that a message be sent to another process and the like.

At block bitmaps related to desktop security are accessed to determine whether the process should be allowed to cause the action to occur.

At block a determination if made as to whether the protecting others bitmap allows the action for the process. If so the actions continue at block otherwise the actions continue at block . For example if the process has requested to hook the input stream of another process the process will be denied if the protecting others bitmap associated with the process does not allow hooking input streams.

At block a determination is made as to whether the protecting from others bitmap allows the action. If so the actions continue at block otherwise the actions continue at block . For example even if the process has rights to hook an input stream of another process if the other process has indicated that its input stream may not be hooked the process may not be able to hook the input stream unless it has override capabilities.

At block a determination is made as to whether the override bitmap indicates that the process may override a protecting from others bitmap to cause the action to occur. If so the actions continue at block otherwise the actions continue at block .

At block the action is allowed whereas at block the action is denied based on the bitmaps. At block the actions stop. The actions above may be repeated each time a process desires to perform an action related to the desktop.

As can be seen from the foregoing detailed description aspects have been described for user interface security. While aspects of the subject matter described herein are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit aspects of the claimed subject matter to the specific forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of various aspects of the subject matter described herein.

