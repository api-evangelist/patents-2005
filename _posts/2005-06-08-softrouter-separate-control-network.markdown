---

title: Softrouter separate control network
abstract: An embodiment of the exemplary SoftRouter architecture includes two physically separate networks, a control plane network and a data plane network. The data plane network is one physical network for the data traffic, while the control plane network is another physical network for the control traffic. The topology of the data plane network is made up of interconnected forwarding elements (FEs). The topology of the control plane network is made up interconnected control elements (CEs). This physical independence of the control plane network from the data plane network provides for a secure mechanism to communicate among the CEs in the control plane network. In addition, this physical independence provides improved reliability and improved scalability, when compared to the traditional router architecture, where control plane message are in-band with the data plane.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09014181&OS=09014181&RS=09014181
owner: Alcatel Lucent
number: 09014181
owner_city: Boulogne Billancourt
owner_country: FR
publication_date: 20050608
---
The present application claims the benefit of provisional application No. 60 623 885 entitled SoftRouter Router Disaggregation filed Nov. 1 2004. In addition the present application is related to copending application Ser. No. 11 147 642 entitled SoftRouter Ser. No. 11 147 472 entitled SoftRouter Protocol Disaggregation Ser. No. 11 147 665 entitled SoftRouter Protocol Failovers Ser. No. 11 147 768 entitled SoftRouter Feature Server Ser. No. 11 147 491 entitled SoftRouter Dynamic Binding Protocol which were filed on the same date as the present application Jun. 8 2005. The provisional and related applications are incorporated herein by reference in their entireties.

The present invention relates generally to the field of networking and in particular relates to separate control and data networks.

Traditional router architectures are becoming increasingly complex today as more and more features are being added to the Internet control plane. Many operational tasks such as routing policy enforcement or traffic engineering require network wide control that is difficult and cumbersome to achieve in a network of autonomous and complex routers. Moreover current routers have the route controllers tightly coupled with the forwarding engine and this static binding often results in shared failures.

Despite the end to end architecture design principle that aims at a simple core network traditional router architectures have gotten increasingly complex today. As new features are being defined in internet engineering task force IETF requests for comments RFCs more and more control plane complexity is being added at the routers. These features include routing e.g. BGP based MPLS VPNs traffic engineering e.g. OSPF TE security and the like. In fact the code complexity of an IP router now rivals that of a telephony switch. In contrast the forwarding path implementation has progressively become easier with rapid advances in large scale hardware integration e.g. ASIC and ready availability of off the shelf chips.

Traditional IP networks are constructed using routers that operate relatively autonomously. The high complexity is present at many points all over the network. This has many undesirable consequences. First the multiple points of control significantly increase operational complexity e.g. misconfiguration . Second in certain circumstances uncoordinated actions of these autonomous routers can lead to sub optimal performance e.g. poor recovery time at best and network instability in the worst case. Finally the introduction of new features may require upgrades to a large number of routers which is both complex and error prone.

Traditional router architectures have integrated control and forwarding. The control processors implementing control plane functions are co located with the line cards that implement forwarding functions and often share the same router backplane. The control processors provide control functions only to the co located line cards and vice versa leading to a scenario where the line cards cannot be managed when there is a failure of the co located controller s .

Various deficiencies of the prior art are addressed by the present invention of an exemplary SoftRouter architecture with a separate control network which has many embodiments.

One embodiment is a network architecture including a data plane a control plane and an interface. The data plane is a network for carrying data traffic. The data plane includes interconnected forwarding elements FEs . The control plane is another network for control traffic that is physically remote from the data plane. The control plane includes interconnected control elements CEs . Each CE controls at least two of the FEs. Each CE is dynamically bound to its controlled FEs. The interface between the data plane and control plane uses a standard protocol. Communication between the CEs is private.

To facilitate understanding identical reference numerals have been used where possible to designate identical elements that are common to the figures.

The invention will be primarily described within the general context of an embodiment of an exemplary SoftRouter architecture however those skilled in the art and informed by the teachings herein will realize that the disaggregation concept may be used to generate various other embodiments of network architectures and that the invention is applicable to local area networks LANs metropolitan area networks MANs wide area networks WANs and other networks such as those using open systems interconnection OSI layers bridging protocols many other protocols traffic management optical edge core routing wireless cable data centers fault management configuration management accounting management performance management security management other network management enterprise government military applications and many other different kinds of networking characteristics and applications.

Internet protocol IP provides end to end datagram delivery service to higher layer protocols and applications and can use any link layer technology that delivers packets. illustrates the problem of emerging applications adding more functions to the IP network layer expanding the middle of the hour glass. These emerging applications and protocols include email www phone simple mail transfer protocol SMTP hypertext transfer protocol HTTP real time protocol RTP transmission control protocol TCP user datagram protocol UDP and other protocols which involve quality of service QoS multicast mobility virtual private network VPN and other features. IP datagrams are transported using Ethernet point to point protocol PPP carrier sense multiple access CSMA asynchronous transfer mode ATM synchronous optical network SONET and other lower layer protocols over copper fiber radio and other physical transport means. Traditional router architectures try to incorporate all of the new IP functions into routers resulting in duplication of complex functions in multiple routers of a network. This also increases capital and operational expenses. In general there is a need to reduce the complexity and expense of operating a network of routers.

Many new features are being added to routers e.g. border gateway protocol BGP extensions for VPNs multiprotocol label switching MPLS based VPNs and traffic engineering TE . Traditional router architectures have five to ten million lines of code and complexity is spread throughout the network. Achieving an operator s network wide objectives such as traffic engineering requires complex translation of global objectives to configuration information in numerous individual routers. Misconfiguration or uncoordinated configuration can result in poor performance or network instability.

The enormous success of the Internet has led to constant development and deployment of new features and services that have increasingly placed its technical foundations under stress. This has given credence to the notion that re architecting the current distribution of functions in an IP network would lead to significant benefits in network stability simplification of network operations and flexibility in introduction of new network protocols and services.

Many advanced network management tasks such as routing policy enforcement and traffic engineering would benefit significantly from the availability of a network wide view. For instance several common BGP induced network stability and operations problems would be solved by moving BGP from individual routers to a single entity with autonomous system AS wide scope. Similarly many management functions require a network wide view without which a network can exhibit oscillation and poor stability. However network wide control is difficult and cumbersome to achieve in today s network of autonomous and complex routers.

In the traditional router architectures the implementation deeply intertwines control and forwarding functions. There is a need to deconstruct routers to keep most of the network entities as dumb as possible by reducing their function to support only a few canonical packet forwarding functions and migrate all control protocols and non forwarding related state and control processing to a few smart network based control entities with the primary function of network wide control. Furthermore there is a need to separate control and data planes to provide secure communication in the control plane.

Disaggregation of router hardware from router software using open standards based protocols for internetworking has many benefits. The disaggregation concept decouples suppliers for each component which lowers barriers to entry for hardware vendors and encourages independent software vendors ISVs to invest in developing carrier class routing software to supply new hardware market entrants. This disaggregation concept allows each component to focus on its own innovation curve. Hardware manufacturers can focus on the highest speeds per density at the lowest costs decreasing capital expenditures and software manufacturers can focus on new applications and manageability increasing revenue while decreasing operating expenses.

An embodiment of an exemplary SoftRouter architecture deconstructs routers by separating the implementation of control plane functions from packet forwarding functions. Other embodiments of network architectures that achieve this deconstruction are also within the scope of this invention. The present invention encompasses the concept of this deconstruction and its implications for network architecture. In the exemplary SoftRouter architecture all control plane functions are implemented on separate control entities that are not required to be co located with the forwarding engines. By migrating all non forwarding related state and control processing to a few network based control entities simpler implementation of network wide objectives are possible because coordinated configuration changes are required at only a few smart network elements instead of all the network elements in an AS. In addition the association between controllers and the forwarding engines is dynamic allowing flexible control of a forwarding engine by any control entity that is capable of doing so.

The exemplary SoftRouter architecture includes a dynamic binding protocol for establishing and maintaining dynamic bindings between forwarding entities and the control entities in the network. Intra domain and inter domain routing is adapted in the exemplary SoftRouter architecture with improved performance including improved performance for the intra domain protocol OSPF.

An exemplary embodiment of an exemplary SoftRouter architecture is an approach to disaggregating the complex IP functions demanded by emerging applications. SoftRouter centralizes and allows sharing of complexity. SoftRouter enables scalable introduction of new functions without unduly encumbering IP forwarding functions.

By contrast shows an exemplary SoftRouter architecture that disaggregates the control and transport planes in separate hardware that communicate using standard protocols. The SoftRouter architecture has a control element and features server component and a packet forwarding element component that communicate using a standards based protocol .

Deconstructing routers in the exemplary SoftRouter architecture separates the control and forwarding functions. This separation is more than logical e.g. the use of a well defined interface with a modular application programming interface API in fact the control is physically separated i.e. executed in a distinct network element and possibly multiple hops from where the forwarding is performed.

A FE is a network element that performs the actual forwarding and switching of traffic. In construction a FE is similar to a traditional router in that it may have multiple line cards each in turn terminating multiple ports and a switch fabric for shuttling data traffic from one line card to another. However a FE is different from a traditional router because there is an absence of any sophisticated control logic e.g. a routing process like OSPF or BGP running locally. Instead the control logic is hosted remotely.

A CE is a general purpose computing element such as a server. It connects to the network like an end host except that it is typically multi homed to the network via multiple FEs so that it is not disconnected from the network when a single link fails. A CE runs the control logic on behalf of FEs and hence controls them. Any control logic typically found on a traditional router can be migrated to the CEs including routing protocols like OSPF and BGP as well as protocols such as resource reservation protocol RSVP label distribution protocol LDP Mobile IP and the like.

An FE functions to forward data traffic between its links. This function may take various forms such as packet forwarding label switching and optical switching among others. Packet forwarding includes both layer medium access control MAC based switching and layer longest prefix match forwarding. Label switching includes for example MPLS forwarding. The data path forwarding functions can include label swapping pushing and popping. In optical switching the traffic can be time switched wavelength switched or space switched among the links. In each of these cases the switching function is driven by a simple local table that is computed and installed by a CE in the network. Thus the ability of a FE to do its work based only on a local data structure means the FE is designed to be dumb and fast while the more complex logic is relegated to a remote yet smart CE .

Both FEs and CEs are understood as logical entities in addition to physical network elements. Specifically a FE is logically defined as a collection of ports where traffic can be switched among one another. For example a FE may include all ports on a single line card in which case the whole physical packet switch is made up of multiple logical FEs . An FE can also span more than one physical switch however a CE can control multiple FEs. Similarly a CE can be understood as a logical process instantiated for providing control on behalf of FEs and can be distinguished from the server machine that actually executes it. In particular a physical CE server machine PCE can host multiple CE processes each serving a different collection of FEs . Vice versa it is also possible for multiple CE processes each instantiated for a different control purpose such as interior gateway protocol IGP and exterior gateway protocol EGP serving the same FE to be hosted on distinct PCEs. The physical and logical definitions of FEs and CEs are used interchangeably.

Without additional restrictions the above definition of NE allows flexibility. For example this definition allows two FEs in disjoint parts of a network to belong to the same NE . It also allows for a traditional router model where the FE includes exactly all the ports in the physical element and the controlling CE s are collocated on the same element.

In clustered routing the FEs making up a NE are part of a contiguous cloud. In other words all ports of the NE are reachable from each other via links internal to the NE . Physically this represents the clustering of neighboring physical FEs into a single NE . A typical scenario is that of several routers being connected back to back in a central office. From a routing perspective this clustering based definition of the NE can provide significant simplification. The reduced number of NEs in the routing view reduces the inter NE routing complexity and a different possibly less complex routing protocol can be employed for intra NE routing.

The control relationship between an FE and a CE is formally called a binding. More precisely a binding between a FE and a CE means that the CE is performing particular control functions on behalf of the FE . Because multiple protocols e.g. IGP and EGP or even multiple instances of a protocol may be required for the operation of a FE a FE may have multiple CE bindings.

The exemplary SoftRouter architecture includes various protocols. A number of different protocols are used for the operation of a network designed according to the exemplary SoftRouter architecture including dynamic binding protocol and FE CE transport protocol. The binding between a FE and a CE is established via a protocol that discovers CEs and FEs and also maintains these bindings in the face of network disruptions. In the most general case of the dynamic binding protocol an FE can bind to any available CE and a CE can perform control functions for any FE thus yielding maximal resiliency and minimal configuration overhead. This dynamic binding ability is a feature of the concept of deconstructed routers that have separate control and forwarding functions. The FE CE transport protocol has two parts namely data and control. For the data part the FE CE transport protocol supports tunneling of routing protocol packets between FEs and CEs so that a routing protocol packet received by an FE can be sent to a CE for processing. For the control part once a binding is established the FEs and the CEs use the FE CE transport protocol to communicate state information and perform control. On the uplink FE to CE direction this control part provides link and forwarding state information e.g. link up down signal to the CE . On the downlink direction the FE CE transport protocol carries configuration and control information e.g. enable disable a link forwarding information base FIB . Known protocols such as forwarding and control element separation ForCES may be used for the FE CE transport protocol.

The exemplary SoftRouter architecture includes two features dynamic binding and the degree of distributed control. In the exemplary SoftRouter architecture a FE can dynamically bind to any CE on the network at any time and vice versa. This provides an increased degree of freedom in the design and deployment of the control plane that in turn leads to improvement in resiliency operational complexity scalability management and security. In contrast the static bindings in the traditional model make it less reliable and less flexible with respect to redesigning the Internet control plane. Distributed control provides benefits such as resiliency but can also lead to certain network instabilities. For example the use of route reflectors in BGP can have oscillation problems and flooding based link state protocols such as OSPF can cause update storms due to multiple failures. The exemplary SoftRouter architecture allows a varying degree of distributed control. Specifically embodiments of the exemplary SoftRouter architecture implement different degrees of distributed control by varying how FEs are clustered and how control is aggregated on the CEs . Fewer control points mean higher vulnerability to failure conditions such as network partitioning but potentially better network stability. Both traditional fully distributed routing and completely centralized routing are merely two extreme implementations of many possible embodiments of the exemplary SoftRouter architecture.

The dynamic binding feature of the exemplary SoftRouter architecture allows for a FE to be separated by multiple hops from a CE . This flexibility comes at the expense of increased complexity in the initial configuration of the forwarding elements. In the SoftRouter model upon bootup the FE obtains its configuration information including the IP addresses of its interfaces from a remote CE that resides on a server. This poses a potential paradox in order to discover a CE and send packets to it the FE requires routing information however the routing information is supposed to come from the CE . This paradox is resolved using a discovery protocol that is part of the exemplary SoftRouter architecture. This discovery protocol lets FEs and CEs discover each other and maintain a routable path between these entities. The dynamic binding process also supports enhanced features such as CE load balancing constrained clustering algorithms that improve CE FE binding resiliency and failover increasing the availability for the network. These features also enable better network planning and better network wide control.

Embodiments of the dynamic binding protocol provide binding service for FEs and routing services for FE CE messages. The dynamic binding protocol runs continuously on all the elements FEs and CEs for the lifetime of the network as a separate protocol independent of other protocols that operate in the network. At the minimum each FE and CE has a pre configured octet string FEID CEID that acts as a unique identifier. In a bridged network of FEs and CEs for example connected over Ethernet a rapid spanning tree protocol provides the connectivity for FE CE communication. Because such networks are not the only one possible given the heterogeneous FE possibilities the dynamic binding protocol includes a separate component for supporting routing services between the CEs and the FEs . However if a spanning tree protocol is available the dynamic binding protocol can make use of it for routing services. The dynamic binding protocol has four components discovery association failure detection with repair and transport tunnels.

The discovery component of the dynamic binding protocol enables a FE to discover a CE that can manage it. This CE is called the managing CE for that FE . In order for the discovery component to provide rapid convergence for the configuration process CE information is distributed all over the network enabling FEs to dynamically bind to the best CE using bindings that are either pre configured by the network administrator or obtained using distributed clustering algorithms.

A source routed routing layer helps in the discovery process. At the time of bootup each FE uses a randomly chosen temporary IP address along with the FEID to perform pre discovery routing. This address is chosen from a controlled address space for example a private subnet address. The CEs are pre configured and hence have a valid IP address. All messages are broadcast on all interfaces of the FE and the CE .

FEs and CEs discover each other by advertising their presence to their immediate neighbors by periodic broadcasts. Each node FE CE thus maintains a list of neighbors in a local table. FEs also periodically solicit CE information from all neighbors in order to collect up to date information on the CEs in the network. In response neighboring FEs CEs respond with a list of CEs that are known to them. Each CE in the list is also associated with a known source route to the CE from the neighboring FE CE. By associating each entry with a time to live parameter it is ensured that CE information is periodically refreshed with the best path to reach the CE . Each node uses the source route with the shortest hop count to contact a CE . The discovery process runs all the time in a network designed according to the exemplary SoftRouter architecture.

Each FE is assigned one primary CE and at least one backup CE by the network administrator during planning. This information is configured in the CEs and optionally in the FEs . Typically this assignment is made a priori by taking into account factors such as the load on the CE the distance between the CE and the FE and the reliability of the links between them. Thus when a CE is contacted by a FE the CE lets the FE know the identity of its primary CE and backup CE if this information is available or accepts the FE if it can manage it. If not accepted the FE then proceeds to contact its primary CE or backup CE.

The exemplary SoftRouter architecture includes the following three aspects decoupling servers and standard interfaces. Decoupling refers to the separation of the complex control plane that includes processing functions e.g. routing protocol processing from the packet forwarding plane. Servers refer to the implementation of control plane processing functions on dedicated external control plane servers. Standard interfaces refer to the definition of a standard protocol for the interface between the control plane and the packet forwarding plane.

The control plane in a NE is involved in executing various routing signaling and other control operations such as applying policies filters and the like in addition to configuring the forwarding plane of the device. Therefore the proper functioning of a network implemented according to the exemplary SoftRouter architecture is directly related to the proper functioning of the control plane. Thus to function properly the network needs control plane security control plane scalability and control plane availability. Control plane security includes protection from attacks snooping and other threats. Control plane scalability is needed to keep the network operating correctly as the network size increases. A highly available control plane implies a highly reliable network which is needed for real time services such as Internet telephony video and other applications.

An exemplary network that is based on the exemplary SoftRouter architecture satisfies the above needs. Although some current generation routers switches do decouple the control plane processing functionality from the forwarding plane functionality it is still quite tightly coupled to the device as a whole. Further all control plane traffic from one controller to another controller continues to traverse the data paths known as in band control .

One advantage of the exemplary SoftRouter architecture is the ability to completely decouple the control plane from the data plane including the path traversed by the control plane traffic. In other words it is possible to have a separate control plane network controller network that has controllers that communicate with each other CE CE communication over a physically separate network known as out of band control with no control packets traversing the data path.

In control messages are passed among CEs on the control plane network and data packets are passed among FEs on the data plane network . There is secure communications between CEs . In some embodiments the control plane network includes one or more feature servers FSs not shown in addition to CEs . Control messages are routed based on the topology database information associated with the control plane network . Data packets are routed based on the topology database information associated with the data plane network . In addition there is a standard interface between the control plane network and the data plane network .

This embodiment of the exemplary SoftRouter architecture also includes some routing protocol enhancements. Because there are two independent networks the routing protocols need to keep track of two independent network topologies one for the data plane network and another for the control plane network . The topologies of the data plane network and the control plane network need not be the same. Routing protocol adjacencies are established between any two control elements appropriately based on the underlying topology of the data plane network properly capturing the topology view of the data plane network . Any changes or failures of the topology of the data plane network are communicated back to the CEs in a timely manner because they affect routing.

As an example an interior gateway protocol IGP such as open shortest path first OSPF uses hello messages to determine the states of the links and any changes to the link i.e. interface state causes updates to be generated and flooded throughout the network to other OSPF peers. In this embodiment of the exemplary SoftRouter architecture OSPF may continue to send hello messages over data path links to determine their states. However any changes to the link states link state update packets communicated by a FE to a CE may directly be flooded to other OSPF peers i.e. other CEs over the separate control plane network without having to go though the data plane network . This can even lead to faster convergence of the link state database because the flooding is taking place only over the separate control plane network which is preferably smaller than the underlying data plane network . The link states of the control plane network itself are monitored by either the same or a different instance of the IGP protocol and any failures in links will lead to rerouting of the packets through alternate routes.

This embodiment of the exemplary SoftRouter architecture has independent topologies for the control plane network and data plane network . The control plane network is only between the set of CEs. The independent control plane network is preferably smaller than the underlying topology of the data plane network . Each CE in the control plane network has a full view of the topology of the data plane network . All protocols of the control plane network e.g. OSPF intermediate system to intermediate system IS IS routing information protocol RIP border gateway protocol BGP MPLS that require controller to controller i.e. CE to CE communication directly use the separate control plane network to send control packets. There is improved security due to out of band control communication and improved reliability because failures in data links nodes do not affect communication between CEs . There is improved scalability because the convergence of protocols can be faster. Link state protocols such as OSPF and IS IS can converge faster because the control plane network over which the flooding takes place is smaller than the underlying data plane network .

In this embodiment of the exemplary SoftRouter architecture CE to CE communication is through a private network i.e. the control plane network . By contrast in other embodiments of the exemplary SoftRouter architecture CE to CE communication of control messages may use data paths in the data plane network . For example in other embodiments a control message may take a path from a CE to a FE to another CE . By contrast in this embodiment all control messages between CEs take paths within the control plane network . There are private links from one CE to another CE so that control messages do not need to go through any FEs . This improves security and reliability over other embodiments because control traffic is privatized and not available to the external world. However the CEs can communicate with FEs through the standard interface . For example a CE can configure and provide routing information to a FE through the standard interface . The standard interface may be physical or virtual links i.e. not necessarily physical links . A virtual link is a tunnel through physical links.

Some examples of applications of this exemplary embodiment include voice over IP VOIP military applications and any other applications where a private network for control messages is advantageous.

The processor cooperates with conventional support circuitry such as power supplies clock circuits cache memory and the like as well as circuits that assist in executing the software routines stored in the memory . As such it is contemplated that some of the steps discussed herein as software methods may be implemented within hardware for example as circuitry that cooperates with the processor to perform various method steps. The computer also contains input output I O circuitry that forms an interface between the various functional elements communicating with the computer .

Although the computer is depicted as a general purpose computer that is programmed to perform various functions in accordance with the present invention the invention can be implemented in hardware as for example an application specific integrated circuit ASIC or field programmable gate array FPGA . As such the process steps described herein are intended to be broadly interpreted as being equivalently performed by software hardware or a combination thereof.

The present invention may be implemented as a computer program product wherein computer instructions when processed by a computer adapt the operation of the computer such that the methods and or techniques of the present invention are invoked or otherwise provided. Instructions for invoking the inventive methods may be stored in fixed or removable media transmitted via a data stream in a broadcast media or other signal bearing medium and or stored within a working memory within a computing device operating according to the instructions.

While the foregoing is directed to various embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof. As such the appropriate scope of the invention is to be determined according to the claims which follow.

