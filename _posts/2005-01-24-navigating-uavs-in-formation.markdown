---

title: Navigating UAVs in formation
abstract: Navigating UAVs in formation, including assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern; identifying a waypoint for each UAV in dependence upon the UAV's pattern position; piloting the UAVs in the pattern toward their waypoints in dependence upon a navigation algorithm, where the navigation algorithm includes repeatedly comparing the UAV's intended position and the UAV's actual position and calculating a corrective flight vector when the distance between the UAV's actual and intended positions exceeds an error threshold. The actual position of the UAV may be taken from a GPS receiver on board the UAV.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07469183&OS=07469183&RS=07469183
owner: International Business Machines Corporation
number: 07469183
owner_city: Armonk
owner_country: US
publication_date: 20050124
---
The field of the invention is data processing or more specifically methods systems and products for navigating UAVs in formation.

Many forms is of UAV are available in prior art both domestically and internationally. Their payload weight carrying capability their accommodations volume environment their mission profiles altitude range duration and their command control and data acquisition capabilities vary significantly. Routine civil access to these various UAV assets is in an embryonic state.

Conventional UAVs are typically manually controlled by an operator who may view aspects of a UAV s flight using cameras installed on the UAV with images provided through downlink telemetry. Navigating such UAVs from a starting position to one or more waypoints requires an operator to have specific knowledge of the UAV s flight including such aspects as starting location the UAV s current location waypoint locations and so on. Operators of prior art UAVs usually are required generally to manually control the UAV from a starting position to a waypoint with little aid from automation. There is therefore an ongoing need for improvement in the area of UAV navigations.

Navigating UAVs in formation including assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern identifying a waypoint for each UAV in dependence upon the UAV s pattern position piloting the UAVs in the pattern toward their waypoints in dependence upon a navigation algorithm the navigation algorithm including repeatedly comparing the UAV s intended position and the UAV s actual position the actual position taken from a GPS receiver and calculating a corrective flight vector when the distance between the UAV s actual and intended positions exceeds an error threshold.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

The present invention is described to a large extent in this specification in terms of methods for navigating UAVs in formation. Persons skilled in the art however will recognize that any computer system that includes suitable programming means for operating in accordance with the disclosed methods also falls well within the scope of the present invention. Suitable programming means include any means for directing a computer system to execute the steps of the method of the invention including for example systems included of processing units and arithmetic logic circuits coupled to computer memory which systems have the capability of storing in computer memory which computer memory includes electronic circuits configured to store data and program instructions programmed steps of the method of the invention for execution by a processing unit.

The invention also may be embodied in a computer program product such as a diskette or other recording medium for use with any suitable data processing system. Embodiments of a computer program product may be implemented by use of any recording medium for machine readable information including magnetic media optical media or other suitable media. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although most of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

A cross track is a fixed course from a starting point directly to a waypoint. A cross track has a direction a cross track direction that is the direction straight from a starting point to a waypoint. That is a cross track direction is the heading that a UAV would fly directly from a starting point to a waypoint in the absence of wind.

 Heading means the compass heading of the UAV. Course means the direction of travel of the UAV over the ground. In the absence of wind or in the presence of a straight tailwind or straight headwind the course and the heading are the same direction. In the presence of crosswind the course and the heading are different directions.

 Position refers to a location in the air or over the ground. Position is typically specified as Earth coordinates latitude and longitude. A specification of position may also include altitude.

A waypoint is a position chosen as a destination for navigation of a route. A route has one or more waypoints. That is a route is composed of waypoints including at least one final waypoint and one or more intermediate waypoints.

 TDMA stands for Time Division Multiple Access a technology for delivering digital wireless service using time division multiplexing. TDMA works by dividing a radio frequency into time slots and then allocating slots to multiple calls. In this way a single frequency can support multiple simultaneous data channels. TDMA is used by GSM.

 GSM stands for Global System for Mobile Communications a digital cellular standard. GSM at this time is the de facto standard for wireless digital communications in Europe and Asia.

 CDPD stands for Cellular Digital Packet Data a data transmission technology developed for use on cellular phone frequencies. CDPD uses unused cellular channels to transmit data in packets. CDPD supports data transfer rates of up to 19.2 Kbps.

 GPRS stands for General Packet Radio Service a standard for wireless data communications which runs at speeds up to 150 Kbps compared with current GSM systems which cannot support more than about 9.6 Kbps. GPRS which supports a wide range of speeds is an efficient use of limited bandwidth and is particularly suited for sending and receiving small bursts of data such as e mail and Web browsing as well as large volumes of data.

 EDGE stands for Enhanced Data Rates for GSM Evolution a standard for wireless data communications supporting data transfer rates of more than 300 Kbps. GPRS and EDGE are considered interim steps on the road to UMTS.

 UMTS stands for Universal Mobile Telecommunication System a standard for wireless data communications supporting data transfer rates of up to 2 Mpbs. UMTS is also referred to W CDMA for Wideband Code Division Multiple Access.

Methods systems and products for navigating a UAV are explained with reference to the accompanying drawings beginning with . sets forth a system diagram illustrating relations among components of an exemplary system for navigating a UAV. The system of includes UAV and UAV flying in formation each of which includes a GPS Global Positioning System receiver not shown that receives a steady stream of GPS data from satellites . For convenience of explanation only two GPS satellites are shown in although the GPS satellite network in fact includes 24 GPS satellites. For convenience of explanation in the example of only two UAVs are shown but in fact any number of UAVs may be navigated together in formation according to embodiments of the present invention.

The system of operates to navigate a UAV by receiving in a remote control device a user s selection of a GUI map pixel that represents a waypoint for UAV navigation. Each such pixel has a location on a GUI map typically specified as a row and column position. Examples of remote control devices in include mobile telephone workstation laptop computer and PDA Personal Digital Assistant . Each such remote control device is capable of supporting a GUI display of a map of the surface of the Earth in which each pixel on the GUI map represents a position on the Earth.

Each remote control device also supports at least one user input device through which a user may enter the user s selection of a pixel. Examples of user input devices in the system of include telephone keypad workstation keyboard workstation joystick laptop keyboard and PDA touch screen .

The system of typically is capable of operating a remote control device to map the pixel s location on the GUI to Earth coordinates of a waypoint. The remote control device is often capable of receiving downlink telemetry including starting position from a GPS receiver on the UAV through the socket. In fact the remote control device is often receiving downlink telemetry that includes a steady stream of GPS positions of the UAV. Receiving a starting position therefore is typically carried out by taking the current position of the UAV when the user selects the pixel as the starting position. In the example of the remote control device generally receives the starting position from the UAV through wireless network . The remote control device is often capable of transmitting uplink telemetry including the coordinates of the waypoint flight control instructions or UAV instructions through a socket on the remote control devices.

Wireless network is implemented using any wireless data transmission technology as will occur to those of skill in the art including for example TDMA GSM CDPD GPRS EDGE and UMTS. In a one embodiment a data communications link layer is implemented using one of these technologies a data communications network layer is implemented with the Internet Protocol IP and a data communications transmission layer is implemented using the Transmission Control Protocol TCP . In such systems telemetry between the UAV and remote control devices including starting positions UAV instructions and flight control instructions are transmitted using an application level protocol such as for example the HyperText Transmission Protocol HTTP the Wireless Application Protocol WAP the Handheld Device Transmission Protocol HDTP or any other data communications protocol as will occur to those of skill in the art.

The system of typically is capable of calculating a heading in dependence upon the starting position the coordinates of the waypoint and a navigation algorithm identifying flight control instructions for flying the UAV on the heading and transmitting the flight control instructions from the remote control device to the UAV.

UAVs according to embodiments of the present invention typically include not only an aircraft but also automated computing machinery capable of receiving GPS data operating telemetry between the UAV and one or more remote control devices and navigating a UAV among waypoints. is a block diagram of an exemplary UAV showing relations among components that includes automated computing machinery. In UAV includes a processor also typically referred to as a central processing unit or CPU. The processor may be a microprocessor a programmable control unit or any other form of processor useful according to the form factor of a particular UAV as will occur to those of skill in the art. Other components of UAV are coupled for data transfer to processor through system bus .

UAV includes random access memory or RAM . Stored in RAM is an application program that implements inventive methods according to embodiments of the present invention. Among other things application program includes computer program instructions capable of navigating UAVs in formation according to embodiments of the present invention including computer program steps that execute generally by assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern identifying a waypoint for each UAV in dependence upon the UAV s pattern position piloting the UAVs in the pattern toward their waypoints in dependence upon a navigation algorithm where the navigation algorithm includes repeatedly comparing the UAV s intended position and the UAV s actual position the actual position taken from a GPS receiver and calculating a corrective flight vector when the distance between the UAV s actual and intended positions exceeds an error threshold. This capability of navigating UAVs in formation is described in more detail below in this specification.

In some embodiments the application programming runs on an OSGi service framework . OSGi Stands for Open Services Gateway Initiative. The OSGi specification is a Java based application layer framework that provides vendor neutral application layer APIs and functions. An OSGi service framework is written in Java and therefore typically runs on a Java Virtual Machine JVM which in turn runs on an operating system . Examples of operating systems useful in UAVs according to the present invention include Unix AIX and Microsoft Windows .

In OSGi the framework is a hosting platform for running services . Services are the main building blocks for creating applications according to the OSGi. A service is a group of Java classes and interfaces that implement a certain feature. The OSGi specification provides a number of standard services. For example OSGi provides a standard HTTP service that can respond to requests from HTTP clients such as for example remote control devices according to embodiments of the present invention. That is such remote control devices are enabled to communicate with a UAV having an HTTP service by use of data communications messages in the HTTP protocol.

Services in OSGi are packaged in bundles with other files images and resources that the services need for execution. A bundle is a Java archive or JAR file including one or more service implementations an activator class and a manifest file. An activator class is a Java class that the service framework uses to start and stop a bundle. A manifest file is a standard text file that describes the contents of the bundle.

The service framework in OSGi also includes a service registry. The service registry includes a service registration including the service s name and an instance of a class that implements the service for each bundle installed on the framework and registered with the service registry. A bundle may request services that are not included in the bundle but are registered on the framework service registry. To find a service a bundle performs a query on the framework s service registry.

In the UAV of software programs and other useful information may be stored in RAM or in non volatile memory . Non volatile memory may be implemented as a magnetic disk drive such as a micro drive an optical disk drive static read only memory ROM electrically erasable programmable read only memory space EEPROM or flash memory or otherwise as will occur to those of skill in the art.

UAV includes communications adapter implementing data communications connections to other computers which may be wireless networks satellites remote control devices servers or others as will occur to those of skill in the art. Communications adapter advantageously facilitates receiving flight control instructions from a remote control device. Communications adapters implement the hardware level of data communications connections through which UAVs transmit wireless data communications. Examples of communications adapters include wireless modems for dial up connections through wireless telephone networks.

UAV includes servos . Servos are proportional control servos that convert digital control signals from system bus into actual proportional displacement of flight control surfaces ailerons elevators and the rudder. The displacement of flight control surfaces is proportional to values of digital control signals as opposed to the all or nothing motion produced by some servos. In this way ailerons for example may be set to thirty degrees sixty degrees or any other supported angle rather than always being only neutral or fully rotated. Several proportional control servos useful in various UAVs according to embodiments of the present invention are available from Futaba .

UAV includes a servo control adapter . A servo control adapter is multi function input output servo motion controller capable of controlling several servos. An example of such a servo control adapter is the IOSERVO model from National Control Devices of Osceola Mo. The IOSERVO is described on National Control Devices website at www.controlanything.com.

UAV includes a flight stabilizer system . A flight stabilizer system is a control module that operates servos to automatically return a UAV to straight and level flight thereby simplifying the work that must be done by navigation algorithms. An example of a flight stabilizer system useful in various embodiments of UAVs according to the present invention is model Co Pilot from FMA Inc. of Frederick Md. The Co Pilot flight stabilizer system identifies a horizon with heat sensors identifies changes in aircraft attitude relative to the horizon and sends corrective signals to the servos to keep the UAV flying straight and level.

UAV includes an AVCS gyro . An AVCS gryo is an angular vector control system gyroscope that provides control signal to the servos to counter undesired changes in attitude such as those caused by sudden gusts of wind. An example of an AVCS gyro useful in various UAVs according to the present invention is model GYA350 from Futaba .

Remote control devices according to embodiments of the present invention typically include automated computing machinery capable of receiving user selections of pixel on GUI maps mapping the pixel to a waypoint location receiving downlink telemetry including for example a starting position from a GPS receiver on the UAV calculating a heading in dependence upon the starting position the coordinates of the waypoint and a navigation algorithm identifying flight control instructions for flying the UAV on the heading and transmitting the flight control instructions as uplink telemetry from the remote control device to the UAV. is a block diagram of an exemplary remote control device showing relations among components that includes automated computing machinery. In remote control device includes a processor also typically referred to as a central processing unit or CPU. The processor may be a microprocessor a programmable control unit or any other form of processor useful according to the form factor of a particular remote control device as will occur to those of skill in the art. Other components of remote control device are coupled for data transfer to processor through system bus .

Remote control device includes random access memory or RAM . Stored in RAM an application program that implements inventive methods of the present invention. Among other things application program includes computer program instructions capable of navigating UAVs in formation according to embodiments of the present invention including computer program steps that execute generally by assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern identifying a waypoint for each UAV in dependence upon the UAV s pattern position piloting the UAVs in the pattern toward their waypoints in dependence upon a navigation algorithm where the navigation algorithm includes repeatedly comparing the UAV s intended position and the UAV s actual position the actual position taken from a GPS receiver and calculating a corrective flight vector when the distance between the UAV s actual and intended positions exceeds an error threshold. This capability of navigating UAVs in formation is described in more detail below in this specification.

In some embodiments the application program is OSGi compliant an therefore runs on an OSGi service framework installed not shown on a JVM not shown . In addition software programs and further information for use in implementing methods of navigating a UAV according to embodiments of the present invention may be stored in RAM or in non volatile memory . Non volatile memory may be implemented as a magnetic disk drive such as a micro drive an optical disk drive static read only memory ROM electrically erasable programmable read only memory space EEPROM or flash memory or otherwise as will occur to those of skill in the art.

Remote control device includes communications adapter implementing data communications connections to other computers including particularly computers on UAVs. Communications adapters implement the hardware level of data communications connections through which remote control devices communicate with UAVs directly or through networks. Examples of communications adapters include modems for wired dial up connections Ethernet IEEE 802.3 adapters for wired LAN connections 802.11b adapters for wireless LAN connections and Bluetooth adapters for wireless microLAN connections.

The example remote control device of includes one or more input output interface adapters . Input output interface adapters in computers implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keypads joysticks keyboards and touch screens.

The method of includes mapping the pixel s location on the GUI to Earth coordinates of the waypoint. As discussed in more detail below with reference to mapping the pixel s location on the GUI to Earth coordinates of the waypoint typically includes mapping pixel boundaries of the GUI map to corresponding Earth coordinates and identifying a range of latitude and a range of longitude represented by each pixel. Mapping the pixel s location on the GUI to Earth coordinates of the waypoint also typically includes locating a region on the surface of the Earth in dependence upon the boundaries the ranges and the location of the pixel on the GUI map.

The method of also includes receiving downlink telemetry including a starting position from a GPS receiver on the UAV from the UAV through a socket on the remote control device. In fact the remote control device is receiving downlink telemetry that includes a steady stream of GPS positions of the UAV. Receiving a starting position therefore is typically carried out by taking the current position of the UAV when the user selects the pixel as the starting position.

A socket is one end point of a two way communication link between two application programs running on a network. In Java socket classes are used to represent a connection between a client program and a server program. The java.net package provides two Java classes Socket and ServerSocket that implement the client side of the connection and the server side of the connection respectively. In some embodiments of the present invention a Java web server is included in an OSGi framework on a remote control device. Often then a socket on the remote control device would be considered a server side socket and a socket on the UAV would be considered a client socket. In other embodiments of the present invention a Java web server is included in an OSGi framework on the UAV. In such embodiments a socket on the UAV would be considered a server side socket and a socket on a remote control device would be considered a client socket.

Use of a socket requires creating a socket and creating data streams for writing to and reading from the socket. One way of creating a socket and two data streams for use with the socket is shown in the following exemplary pseudocode segment 

The first statement in this segment creates a new socket object and names it uavSocket. The socket constructor used here requires a fully qualified IP address of the machine the socket is to connect to in this case the Java server on a remote control device or a UAV and the port number to connect to. In this example computerAddress is taken as a domain name that resolves to a fully qualified dotted decimal IP address. Alternatively a dotted decimal IP address may be employed directly as for example 195.123.001.001. The second argument in the call to the socket constructor is the port number. Port number is the port on which the server listens in this example whether the server is on a remote control device or on a UAV.

The second statement in this segment gets the socket s output stream and opens a Java PrintWriter object on it. Similarly the third statement gets the socket s input stream and opens a Java BufferedReader object on it. To send data through the socket an application writes to the PrintWriter as for example 

To receive data through the socket an application reads from the BufferedReader as show here for example 

The method of also includes calculating a heading in dependence upon the starting position the coordinates of the waypoint and a navigation algorithm. Methods of calculating a heading are discussed in detail below in this specification.

The method of includes identifying flight control instructions for flying the UAV on the heading. Flight control instructions are specific commands that affect the flight control surfaces of the UAV. That is instructions to move the flight control surfaces to affect the UAV s flight causing the UAV to turn climb descend and so on. As an aid to further explanation an exemplary method of identifying flight control instructions for flying on a calculated heading is provided 

The method of includes transmitting uplink telemetry including the flight instructions through the socket to the UAV. Transmitting the flight control instructions from the remote control device to the UAV may be carried out by use of any data communications protocol including for example transmitting the flight control instructions as form data URI encoded data in an HTTP message a WAP message an HDML message or any other data communications protocol message as will occur to those of skill in the art.

This segment opens a socket object named uavSocket with an input stream named in Stream. Listening for downlink data on the socket is accomplished with a blocking call to in StreamreadLine which returns a String object name downLinkData. 

The method of includes storing downlink data in computer memory and exposing the stored downlink data through an API to a navigation application . Downlink data typically is exposed through an API Application Programming Interface by providing in a Java interface class public accessor functions for reading from member data elements in which the downlink data is stored. A navigation application wishing to access downlink data then may access the data by calling a public accessor methods as for example String someDownLinkData APIimp1.getDownLinkData .

In the method of the downlink telemetry further comprises flight control instructions. It is counterintuitive that downlink telemetry contains flight control instruction when the expected data communications direction for flight control instructions ordinarily is in uplink from a remote control device to a UAV. It is useful to note however that flight control instructions can be uplinked from a multiplicity of remote control devices not just one. A flight line technician with a handheld PDA can issue flight control instructions to a UAV that is also linked for flight control to a computer in a ground station. It is sometimes advantageous therefore for downlink telemetry to include flight control instructions so that one remote control device can be advised of the fact that some other remote control device issued flight control instructions to the same UAV.

This segment opens a socket object named uavSocket with an output stream named outStream. Sending uplink data through the socket is accomplished with a call to outStream.println which takes as a call parameter a String object named someUplinkData. 

Although the flow chart of illustrates navigating a UAV to a single waypoint as a practical matter embodiments of the present invention typically support navigating a UAV along a route having many waypoints including a final waypoint and one or more intermediate waypoints. That is methods of the kind illustrated in may also include receiving user selections of a multiplicity of GUI map pixels representing waypoints where each pixel has a location on the GUI and mapping each pixel location to Earth coordinates of a waypoint.

Such methods for navigating a UAV can also include assigning one or more UAV instructions to each waypoint and storing the coordinates of the waypoints and the UAV instructions in computer memory on the remote control device. A UAV instruction typically includes one or more instructions for a UAV to perform a task in connection with a waypoint. Exemplary tasks include turning on or off a camera installed on the UAV turning on or off a light installed on the UAV orbiting a waypoint or any other task that will occur to those of skill in the art.

UAV instructions to perform tasks in connection with a waypoint may be encoded in for example XML the eXtensible Markup Language as shown in the following exemplary XML segment 

This XML example has a root element named UAV instructions. The example contains several subelements named macro. One macro subelement contains a waypoint location representing an instruction to fly to 33 44 10 N 30 15 50 W. That macro subelement also contains several instructions for tasks to be performed when the UAV arrives at the waypoint coordinates including orbiting around the waypoint coordinates turning on an on board video camera continuing to orbit for thirty minutes with the camera on turning off the video camera and continuing to a next waypoint. Only one macro set of UAV instructions is shown in this example but that is not a limitation of the invention. In fact such sets of UAV instructions may be of any useful size as will occur to those of skill in the art.

Exemplary methods of navigating a UAV also include flying the UAV to each waypoint in accordance with one or more navigation algorithms and operating the UAV at each waypoint in accordance with the UAV instructions for each waypoint. Operating the UAV at the waypoint in accordance with the UAV instructions for each waypoint typically includes identifying flight control instructions in dependence upon the UAV instructions for each waypoint and transmitting the flight control instructions as uplink telemetry through a socket. Flight control instructions identified in dependence upon the UAV instructions for each waypoint typically include specific flight controls to move the flight control surfaces of the UAV causing the UAV to fly in accordance with the UAV instructions. For example in the case of a simple orbit a flight control instruction to move the ailerons and hold them at a certain position causing the UAV to bank at an angle can effect an orbit around a waypoint.

Operating the UAV at the waypoint in accordance with the UAV instructions for each waypoint typically includes transmitting the flight control instructions as uplink data from the remote control device to the UAV. Transmitting the flight control instructions as uplink data from the remote control device to the UAV may be carried out by use of any data communications protocol including for example transmitting the flight control instructions as form data URI encoded data in an HTTP message a WAP message an HDML message or any other data communications protocol message as will occur to those of skill in the art.

For further explanation of the process of mapping pixels locations to Earth coordinates sets forth a block diagram that includes a GUI displaying a map not shown and a corresponding area of the surface of the Earth . The GUI map has pixel boundaries identified as Row Col Row Col Row Col and Row Col. In this example the GUI map is assumed to include 100 rows of pixels and 100 columns of pixels. This example of 100 rows and columns is presented for convenience of explanation it is not a limitation of the invention. GUI maps according to embodiments of the present invention may include any number of pixels as will occur to those of skill in the art.

The illustrated area of the surface of the Earth has corresponding boundary points identified as Lat Lon Lat Lon Lat Lon and Lat Lon. This example assumes that the distance along one side of surface area is 100 nautical miles so that the distance expressed in terms of latitude or longitude between boundary points of surface area is 100 minutes or 1 40 .

In typical embodiments mapping a pixel s location on the GUI to Earth coordinates of a waypoint Includes mapping pixel boundaries of the GUI map to Earth coordinates. In this example the GUI map boundary at Row Colmaps to the surface boundary point at Lat Lon the GUI map boundary at Row Colmaps to the surface boundary point at Lat Lon the GUI map boundary at Row Colmaps to the surface boundary point at Lat Lon the GUI map boundary at Row Colmaps to the surface boundary point at Lat Lon.

Mapping a pixel s location on the GUI to Earth coordinates of a waypoint typically also includes identifying a range of latitude and a range of longitude represented by each pixel. The range of latitude represented by each pixel may be described as Lat Lat N where Lat Lat is the length in degrees of the vertical side of the corresponding surface and Nis the number of rows of pixels. In this example Lat Lat is 1 40 or 100 nautical miles and Nis 100 rows of pixels. The range of latitude represented by each pixel in this example therefore is one minute of arc or one nautical mile.

Similarly the range of longitude represented by each pixel may be described as Lon Lon N where Lon Lon is the length in degrees of the horizontal side of the corresponding surface and Nis the number of columns of pixels. In this example Lon Lon is 1 40 or 100 nautical miles and Nis 100 columns of pixels. The range of longitude represented by each pixel in this example therefore is one minute of arc or one nautical mile.

Mapping a pixel s location on the GUI to Earth coordinates of a waypoint typically also includes locating a region on the surface of the Earth in dependence upon the boundaries the ranges and the location of the pixel on the GUI map. The region is the portion of the surface corresponding to the pixel itself. That region is located generally by multiplying in both dimensions latitude and longitude the range of latitude and longitude by column or row numbers of the pixel location on the GUI map. That is a latitude for the surface region of interest is given by Expression 1. Lat P Lat Lat N Exp. 1 

Similarly a longitude for the surface region of interest is given by Expression 2. Lon P Lon Lon N Exp. 2 

Referring to for further explanation Expressions 1 and 2 taken together identify a region of surface area that corresponds to the location of pixel mapping the pixel location to the bottom left corner of the region . Advantageously however many embodiments of the present invention further map the pixel to the center of the region by adding one half of the length of the region s sides to the location of the bottom left corner .

More particularly locating a region on the surface of the Earth in dependence upon the boundaries the ranges and the location of the pixel on the GUI map as illustrated by Expression 3 may include multiplying the range of longitude represented by each pixel by a column number of the selected pixel yielding a first multiplicand and multiplying the range of longitude represented by each pixel by 0.5 yielding a second multiplicand adding the first and second multiplicands to an origin longitude of the GUI map. Lon P Lon Lon N 0.5 Lon Lon N Exp. 3 

In Expression 3 the range of longitude represented by each pixel is given by Lon Lon N and the first multiplicand is P Lon Lon N . The second multiplicand is given by 0.5 Lon Lon N .

Similarly locating a region on the surface of the Earth in dependence upon the boundaries the ranges and the location of the pixel on the GUI map as illustrated by Expression 4 typically also includes multiplying the range of latitude represented by each pixel by a row number of the selected pixel yielding a third multiplicand multiplying the range of latitude represented by each pixel by 0.5 yielding a fourth multiplicand and adding the third and fourth multiplicands to an origin latitude of the GUI map. Lat P Lat Lat N 0.5 Lat Lat N Exp. 4 

In Expression 4 the range of latitude represented by each pixel is given by Lat Lat N and the third multiplicand is P Lat Lat N . The fourth multiplicand is given by 0.5 Lat Lat N . Expressions 3 and 4 taken together map the location of pixel to the center of the located region .

An exemplary method of navigating in accordance with a navigation algorithm is explained with reference to . sets forth a flow chart illustrating an exemplary method of navigating a UAV in accordance with a navigation algorithm and sets forth a line drawing illustrating a flight path produced by application of the method of .

The method of includes periodically repeating the steps of receiving in the remote control device from the GPS receiver a current position of the UAV and calculating a new heading from the current position to the waypoint. The method of also includes identifying flight control instructions for flying the UAV on the new heading and transmitting from the remote control device to the UAV the flight control instructions for flying the UAV on the new heading. In this method if Lon Latis taken as the current position and Lon Latis taken as the waypoint position then the new heading may be calculated generally as the inverse tangent of Lat Lat Lon Lon .

A further exemplary method of navigating in accordance with a navigation algorithm explained with reference to . sets forth a flow chart illustrating an exemplary method of navigating a UAV in accordance with a navigation algorithm and sets forth a line drawing illustrating a flight path produced by application of the method of . The method of includes identifying a cross track between the starting point and the waypoint. A cross track is a fixed course from a starting point directly to a waypoint. If Lon Latis taken as the position of a starting point and Lon Latis taken as the waypoint position then a cross track is identified by Lon Latand Lon Lat. A cross track has a direction a cross track direction that is the direction straight from a starting point to a waypoint and it is often useful to characterize a cross track by its cross track direction. The cross track direction for a cross track identified by starting point Lon Latand waypoint position Lon Latmay be calculated generally as the inverse tangent of Lat Lat Lon Lon .

The method of includes periodically repeating the steps of receiving in the remote control device from the GPS receiver a current position of the UAV and calculating a shortest distance between the current position and the cross track. If the shortest distance between the current position and the cross track is greater than a threshold distance the method of includes transmitting flight control instructions that pilot the UAV toward the cross track and when the UAV arrives at the cross track transmitting flight control instructions that pilot the UAV in a cross track direction toward the waypoint.

In this example calculating a shortest distance between the current position and a cross track also includes calculating the angle between a direction from the current position to the waypoint and a cross track direction. In the example of the direction from the current position to the waypoint is represented as the direction of line . In the example of the cross track direction is the direction of cross track . The angle between a direction from the current position to the waypoint and a cross track direction is the difference between those directions.

In the current example calculating a shortest distance between the current position and a cross track also includes calculating the tangent of the angle between a direction from the current position to the waypoint and a cross track direction and multiplying the tangent of the angle by the distance from the current position to the waypoint.

A further exemplary method of navigating in accordance with a navigation algorithm is explained with reference to . sets forth a flow chart illustrating an exemplary method of navigating a UAV in accordance with a navigation algorithm and sets forth a line drawing illustrating a flight path produced by application of the method of .

In the method of piloting in accordance with a navigation algorithm includes identifying a cross track having a cross track direction between the starting point and the waypoint. As described above a cross track is identified by a position of a starting point and a waypoint position. For a starting point position of Lon Latand a waypoint position of Lon Lat a cross track is identified by Lon Latand Lon Lat. In addition it is often also useful to characterize a cross track by its cross track direction. The cross track direction for a cross track identified by starting point Lon Latand waypoint position Lon Latmay be calculated generally as the inverse tangent of Lat Lat Lon Lon .

In the method of navigating a UAV in accordance with a navigation algorithm includes periodically repeating the steps of receiving in the remote control device from the GPS receiver a current position and a current heading of the UAV and calculating an angle between the direction from the current position to the waypoint and a cross track direction. If the angle is greater than a threshold angle the method of includes transmitting flight control instructions that pilot the UAV toward the cross track and upon arriving at the cross track transmitting flight control instructions that pilot the UAV in the cross track direction toward the waypoint.

Transmitting flight control instructions that pilot the UAV toward the cross track is carried out by transmitting flight control instructions to turn to a heading no more than ninety degrees from the cross track direction turning to the left if the current position is right of the cross track and to the right if the current position is left of the cross track. Transmitting flight control instructions that pilot the UAV in the cross track direction toward the waypoint transmitting flight control instructions to turn the UAV to the cross track direction and then flying straight and level on the cross track direction.

In many embodiments of the method of the threshold angle is a variable whose value varies in dependence upon a distance between the UAV and the waypoint. In typical embodiments that vary the threshold angle the threshold angle is increased as the UAV flies closer to the waypoint. It is useful to increase the threshold angle as the UAV flies closer to the waypoint to reduce the risk of excessive hunting. That is because the heading is the cross track direction straight to the WP rather than cross wind if the angle remains the same the distance that the UAV needs to be blown off course to trigger transmitting flight control signals instructing the UAV to return to the cross track gets smaller and smaller until the UAV is flying to the cross track turning to the cross track direction getting blown immediately across the threshold flying back the cross track turning to the cross track direction getting blown immediately across the threshold and so on and so on in rapid repetition. Increasing the threshold angle as the UAV flies closer to the waypoint increases the lateral distance available for wind error before triggering the transmission of flight instructions to return to the cross track thereby reducing this risk of excessive hunting.

The method of includes mapping the pixel s location on the GUI to Earth coordinates of the waypoint . As discussed in more detail above with reference to mapping the pixel s location on the GUI to Earth coordinates of the waypoint typically includes mapping pixel boundaries of the GUI map to corresponding Earth coordinates and identifying a range of latitude and a range of longitude represented by each pixel. Mapping the pixel s location on the GUI to Earth coordinates of the waypoint also typically includes locating a region on the surface of the Earth in dependence upon the boundaries the ranges and the location of the pixel on the GUI map.

The method of also includes transmitting uplink telemetry including the coordinates of the waypoint to the UAV through a socket on the remote control device. Transmitting uplink telemetry including the coordinates of the waypoint to the UAV through a socket on the remote control device may be carried out by use of any data communications protocol including for example transmitting the coordinates as form data URI encoded data in an HTTP message a WAP message an HDML message or any other data communications protocol message as will occur to those of skill in the art. Transmitting uplink telemetry through a socket may be implemented by opening a socket creating an output stream for the socket and writing uplink telemetry data to the output stream as illustrated for example in the following segment of pseudocode 

This segment opens a socket object named uavSocket with an output stream named outStream. Transmitting uplink telemetry through the socket is accomplished with a call to outStream.println which takes as a call parameter a String object named someUplinkData. 

The method of also includes receiving downlink telemetry including a starting position from a GPS receiver from the UAV through the socket and piloting the UAV under control of a navigation computer on the UAV from the starting position to the waypoint in accordance with a navigation algorithm. Methods of piloting a UAV according to a navigation algorithm are discussed in detail below in this specification.

Receiving downlink telemetry through a socket may be implemented by opening a socket creating an input stream for the socket and reading data from the input stream as illustrated for example in the following segment of pseudocode 

This segment opens a socket object named uavSocket with an input stream named in Stream. Receiving downlink telemetry through the socket is accomplished with a blocking call to in Stream.readLine which returns a String object name downLinkTelemetry. 

In the method of downlink telemetry may include Earth coordinates of waypoints as well as one or more UAV instructions. It is counterintuitive that downlink telemetry contains waypoint coordinates and UAV instructions when the expected data communications direction for waypoint coordinates and UAV instructions ordinarily is in uplink from a remote control device to a UAV. It is useful to note however that waypoint coordinates and UAV instructions can be uplinked from a multiplicity of remote control devices not just one. A flight line technician with a handheld PDA can issue waypoint coordinates and UAV instructions to a UAV that is also linked for flight control to a computer in a ground station. It is sometimes advantageous therefore for downlink telemetry to include waypoint coordinates or UAV instructions so that one remote control device can be advised of the fact that some other remote control device issued waypoint coordinates or UAV instructions to the same UAV.

As mentioned above embodiments of the present invention often support navigating a UAV along a route having many waypoints including a final waypoint and one or more intermediate waypoints. That is methods of the kind illustrated in may also include receiving user selections of a multiplicity of GUI map pixels representing waypoints where each pixel has a location on the GUI and mapping each pixel location to Earth coordinates of a waypoint.

Such methods of navigating a UAV can also include assigning one or more UAV instructions to each waypoint and transmitting the coordinates of the waypoints and the UAV instructions in the uplink telemetry through the socket to the UAV. A UAV instruction typically includes one or more instructions for a UAV to perform a task in connection with a waypoint. Exemplary tasks include turning on or off a camera installed on the UAV turning on or off a light installed on the UAV orbiting a waypoint or any other task that will occur to those of skill in the art. Such exemplary methods of navigating a UAV also include storing the coordinates of the waypoints and the UAV instructions in computer memory on the UAV piloting the UAV to each waypoint in accordance with one or more navigation algorithms and operating the UAV at each waypoint in accordance with the UAV instructions for each waypoint.

A further exemplary method of navigating in accordance with a navigation algorithm is explained with reference to and . sets forth a flow chart illustrating an exemplary method of piloting in accordance with a navigation algorithm. sets forth a line drawing illustrating a method of calculating a heading with a cross wind to achieve a particular ground course. And sets forth a line drawing illustrating a flight path produced by application of the method of .

In the method of piloting in accordance with a navigation algorithm comprises periodically repeating the steps of reading from the GPS receiver a current position of the UAV calculating a direction to the waypoint from the current position calculating a heading in dependence upon wind speed wind direction airspeed and the direction to the waypoint turning the UAV to the heading and flying the UAV on the heading.

In angle A represents the difference between the wind direction E and the direction to the waypoint D. In the wind velocity vector is presented twice once to show the wind direction as angle E and again to illustrate angle A as the difference between angles E and D. Drawing wind velocity to form angle A with the resultant velocity also helps explain how to calculate wind correction angle B using the law of sines. Knowing two sides of a triangle and the angle opposite one of them the angle opposite the other may be calculated in this example by B sin b sin A a . The two known sides are airspeed a and wind speed b. The known angle is A the angle opposite side a representing the difference between wind direction E and direction to the waypoint D. Calculating a heading angle F on is then carried out by subtracting the wind correction angle B from the direction to the waypoint D.

A further exemplary method of navigating in accordance with a navigation algorithm is explained with reference to . sets forth a flow chart illustrating an exemplary method of piloting in accordance with a navigation algorithm and sets forth a line drawing illustrating a flight path produced by application of the method of .

The method of includes identifying a cross track and calculating a cross track direction from the starting position to the waypoint. In the method of piloting in accordance with a navigation algorithm is carried out by periodically repeating the steps of reading from the GPS receiver a current position of the UAV calculating a shortest distance between the cross track and the current position and if the shortest distance between the cross track and the current position is greater than a threshold distance piloting the UAV to the cross track. Upon arriving at the cross track the method includes reading from the GPS receiver a new current position of the UAV calculating in dependence upon wind speed wind direction airspeed and the cross track direction a new heading turning the UAV to the new heading and and flying the UAV on the new heading.

It is also advantageous to have an ability to navigate UAVs together in a flight formation or pattern. Exemplary methods systems and products for navigating UAVs together in a flight formation or pattern are described with reference to the accompanying drawings beginning with A and B. sets forth a flow chart illustrating an exemplary method for navigating UAVs in formation. are line drawings illustrating exemplary relations among UAVs flying in formation.

The method of includes assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern. The examples of includes two exemplary flight patterns for UAVs. illustrates a pattern having two pattern positions occupied by UAV and UAV . illustrates a pattern having four pattern positions occupied by UAVs and . Assigning pattern positions to each of a multiplicity of UAVs flying together in a pattern may be carried out by designating an anchor position for the pattern and assigning pattern positions to the other UAVs relative to the anchor position. In the pattern of for example the pattern position occupied by UAV may be designated an anchor position and UAV may be assigned to a pattern position one mile to the right of the position of UAV . Similarly in the pattern of the position of the pattern position occupied by UAV may be designated an anchor position and 

The method of also includes identifying a waypoint for each UAV in dependence upon the UAV s pattern position. Identifying a waypoint for each UAV in dependence upon its pattern position may be carried out by designating a waypoint for the anchor position and calculating each UAV s waypoint in dependence upon the waypoint for the anchor and in dependence upon the UAV s position in the pattern. In the pattern of for example the pattern position occupied by UAV may be designated an anchor position and assigned the waypoint . If UAV is assigned to a pattern position one mile to the right of the position of UAV a waypoint is calculated for UAV as one mile to the right of the waypoint assigned to the anchor position.

The method of also includes piloting the UAV s in the pattern toward their waypoints in dependence upon a navigation algorithm . The method of also includes an exemplary navigation algorithm that is implemented to repeatedly compare the UAV s intended position and the UAV s actual position. In this example the actual position is taken from a GPS receiver on board the UAV.

Each UAV s intended position may be specified by the UAV s position in the pattern a cross track to the UAV s waypoint and a flight schedule. The intended position is a conceptual position an ideal used to navigate UAVs in formation. The intended position is the position on the cross track where the UAV would be if it flew precisely on schedule directly along the cross track.

A flight schedule is a time limitation upon travel from a starting point to a waypoint. A flight schedule may be established by assigning an arrival time at the waypoints of the pattern from which a groundspeed may be inferred. Or a flight schedule may be established by assigning a groundspeed for the formation from which an arrival time can be inferred. Either way the schedule established an intended position for the formation for every moment of the flight. If the groundspeed is taken as the governing parameter then the arrival time is the groundspeed multiplied by the distance between the starting point and the waypoint. If the arrival time is taken as the governing parameter then the groundspeed is the distance between the starting point and the waypoint divided by the difference between the arrival time and the start time. Either way the groundspeed is known and the intended position of the pattern at any point in time is the groundspeed multiplied by the time elapsed after the start time. Similarly for each UAV in a pattern the UtAV s intended position at any point of time elapsed after the start time is a position on a cross track where the UAV would be if the UAV s course were directly over the cross track at that point in time.

The exemplary UAVs of are shown flying directly over their cross tracks. As a practical matter actual flight courses are rarely directly over cross tracks. Nevertheless for flying in formation a course for each UAV that approximates a cross track is adequate if a UAV s actual position in its actual course does not vary too much from its intended position. What is too much is defined by an error threshold. The navigation algorithm of includes calculating a corrective flight vector when the distance between the UAV s actual and intended positions exceeds an error threshold. Calculating a corrective flight vector is explained in more detail below.

Piloting UAVs in dependence upon a navigation algorithm together in a flight formation or pattern usefully includes startup and continuation of normal flight to UAV waypoints that is flight when a UAV is within its error threshold. An exemplary algorithm for such flight is described with reference to . sets forth a flow chart illustrating an exemplary method of piloting the UAVs in dependence upon a navigation algorithm. sets forth a line drawing illustrating an exemplary method of calculating airspeed and heading according to the method of .

The method of includes calculating an airspeed for flying from the starting point to the waypoint on schedule. The airspeed may be calculated from the wind speed the groundspeed and the angle between the wind direction and the ground course direction by use of the law of cosines according to the formula square root over 2cos where 

The wind direction is indicated on as the angle E and the ground course direction along the cross track is indicated on as the angle D.

The method of includes calculating a heading in dependence upon wind speed wind direction airspeed and the cross track direction. The heading may be so calculated by use of the law of sines according to the formula sin sin where 

Having the wind correction angle B calculating the heading angle F on is then carried out by subtracting the wind correction angle B from the direction to the waypoint D.

The method of includes flying the UAV on the heading at the airspeed. That is starting from a starting point on the cross track and flying a heading and airspeed so calculated results in a ground course that approximates the cross track direction.

Calculating a corrective flight vector is further explained with reference to and . sets forth a flow chart illustrating an exemplary method of calculating a corrective flight vector. is a line drawing illustrating application of the method of showing relations among an intended position an error threshold an actual position a corrective flight vector and a cross track to a waypoint. sets forth a line drawing illustrating an exemplary method of calculating corrective airspeed and corrective heading according to the method of .

As mentioned above an actual flight course is rarely directly over a cross track. For flying in formation a course for each UAV that approximates a cross track is adequate if a UAV s actual position in its actual course does not vary too much from its intended position. What is too much is defined by an error threshold. The navigation algorithm of includes calculating a corrective flight vector when the distance between the UAV s actual and intended positions exceeds an error threshold. shows a UAV whose actual position is outside an error threshold around the UAV s intended position . That is for this exemplary UAV the distance between the UAV s actual and intended positions exceeds an error threshold .

The method of includes selecting a corrective waypoint on on a cross track between a UAV s intended position and its waypoint . Selecting a corrective waypoint on a cross track between a UAV s intended position and its waypoint may be carried out by selecting a corrective waypoint at a predetermined portion of the distance between a UAV s intended position and its waypoint. In the example of a corrective waypoint on a cross track between a UAV s intended position and its waypoint is selected as a corrective waypoint at the predetermined portion of one half of the distance between the UAV s intended position and its waypoint.

The method of also includes calculating a corrective airspeed for arriving at the corrective waypoint on schedule. Calculating a corrective airspeed for arriving at the corrective waypoint on schedule may include calculating a groundspeed needed to bring the UAV to the remedial waypoint on schedule. Calculating a groundspeed needed to bring the UAV to the remedial waypoint on schedule may be carried out by dividing the distance from the actual position to the corrective waypoint by the difference between the current time and the schedule time for the corrective waypoint. The schedule time for the corrective waypoint is the time when the UAV would reach the corrective waypoint if the UAV s ground course were over the cross track. With the groundspeed to the remedial waypoint known calculating a corrective airspeed for arriving at the corrective waypoint on schedule may be calculated from the wind speed the groundspeed to the remedial waypoint and the angle between the wind direction and the ground course to the corrective waypoint by use of the law of cosines according to the formula square root over 2cos where 

The wind direction is indicated on as the angle E and the ground course direction to the corrective waypoint is indicated on as the angle D.

The method of includes also calculating a corrective heading in dependence upon the calculated airspeed. The corrective heading may be so calculated by use of the law of sines according to the formula sin sin where 

Having the wind correction angle B calculating the corrective heading angle F on is then carried out by subtracting the wind correction angle B from the direction to the corrective waypoint D. Upon arriving at the corrective waypoint the UAV may be piloted by the method of for example on a heading and with an airspeed calculated to fly a course along a cross track on and arrive at its waypoint on schedule.

All the navigational calculations for navigating UAVs in formation according to embodiments of the present invention may be carried in computers located either in the UAVs or in one or more ground stations. In systems that carry out navigational calculations in a UAV uplink telemetry may provide starting points waypoints and other flight parameters to the UAV and downlink telemetry may provide GPS locations for the UAV to the ground station. In systems that carry out navigational calculations in ground stations downlink telemetry may provide GPS locations and uplink telemetry may provide flight control instructions.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

