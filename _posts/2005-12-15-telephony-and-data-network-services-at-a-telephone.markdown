---

title: Telephony and data network services at a telephone
abstract: A packetised data network includes IP telephones (ITs) and a network intelligence (NI). All of the keys of each IT are “soft” keys (i.e., they have no fixed function). The NI associates a configuration data structure with the IT which correlates the keys with functions, and, based on this, may control the display of the IT to indicate the current function of certain of the soft keys. Some of the functions are requests for data services at the telephone (e.g., video or programmed audio over the internet). When a user requests such a service with a key press, the NI sets up the service between the data source and the telephone. This may require associating a new configuration data structure with the keys of the IT. The IT user may activate multiple data services through the NI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07660295&OS=07660295&RS=07660295
owner: Nortel Networks Limited
number: 07660295
owner_city: St. Laurent, Quebec
owner_country: CA
publication_date: 20051215
---
This application is a continuation of prior application Ser. No. 09 564 561 filed on May 4 2000 now abandoned which is a continuation in part of application Ser. No. 09 307 356 filed May 7 1999 now U.S. Pat. No. 7 068 641 and entitled TELEPHONY AND DATA NETWORK SERVICES AT A TELEPHONE and which is incorporated herein by reference.

This invention relates to the provision of telephony and corporate and public data network services at a telephone. The system has application to internet protocol IP based telephony.

Traditionally a private branch exchange PBX has been used to provide telephone services to a network of local telephones. The PBX may exist in parallel with a local area network LAN which provides data services to a network of local computers. It has been contemplated to provision a LAN not only with computers but also with special telephones so that the network can provide telephony services in addition to data services thereby avoiding the need for parallel networks. In a known system IP telephones connect to the LAN backbone as does a call manager which is a server configured with call management software and a gateway to the public switched telephone network PSTN . The IP telephones include a vocoder so that audio signals may be converted between analog and IP packets. The call manager has a configuration file for each telephone on the LAN assigning call functions to certain of the buttons on the phone which call functions will be handled by the call manager. Other call functions e.g. mute are handled by the telephone itself. When the call manager receives keypad digits from a calling phone on the LAN indicative of a called station it sets up a call by instructing the calling phone to set up a Real Time Protocol RTP audio stream to either the called telephone if the called telephone is on the LAN or to the gateway if the called telephone is on the PSTN. Once the call is set up the call manager is out of the loop unless the call manager receives a key press indication indicative of a call control function handled by the call manager such as a call transfer call hold call forward call park multiple line appearance or disconnect.

According to one aspect the present invention provides an IP telephone IT where preferably all of the keys are soft keys i.e. they have no fixed function . The network intelligence NI associates a configuration data structure with the IT which correlates the keys with functions and based on this may control the display of the IT to indicate the current function of certain of the soft keys. Some of the functions may be requests for data services at the telephone e.g. video or programmed audio over the internet . When a user requests such a service with a key press the NI sets up the service between the data source and the telephone. This may require associating a new configuration data structure with the keys of the IT. The IT user may activate multiple data services through the NI. If none of the keys of the IT has a fixed function the NI can more easily arrange for the provision of the services without conflicting with any telephony calls at the telephone.

According to the present invention there is provided a network intelligence for a data network comprising a call service provider for when connected to a plurality of data network telephones facilitating provision of telephony services for said plurality of telephones and at least one service proxy for when connected to at least one data source setting up at least one data service between said at least one data source and said plurality of telephones.

According to another aspect of the invention there is provided a telephony system comprising a plurality of telephones connected to a data network a network intelligence connected to said network for facilitating provision of telephony services to said plurality of telephones and where said network is also connected to a data source for providing a data service between said plurality of telephones and said data source.

According to a further aspect of the invention there is provided a method of remotely managing a telephone over a data network comprising receiving indications from said telephone over said data network based on said indications activating a plurality of data services on said data network determining an active one of said plurality of data services and sending control messages to said telephone over said data network so that said telephone can provide said active data services and based on further indications received from said telephone over said data network sending control messages to said telephone to establish a voice call.

According to yet a further aspect of the invention there is provided a method of coordinating a telephone and personal computer PC at a workstation which are both connected to a data network comprising setting up a data service at said PC from a data source and setting up a co ordinated data service between said telephone and said data source over said data network.

According to another aspect of the invention there is provided a method of managing a telephone connected to a data network comprising based on user input messages from said telephone establishing a voice call before or after establishment of said voice call establishing at least one non telephony data service between said telephone and at least one data source such that said at least one non telephone data service remains established during pendency of said voice call at least where said at least one data service does not conflict with said voice call.

Referring to a telephony system comprises a private IP network connected to an NI ITs a data service a telephone service a public switched telephone network PSTN gateway and a public IP network . PSTN gateway connects to a PSTN . The public IP network may include an IT a data service and a telephony service and an internet protocol telephone connected to the public IP network through a gateway . The NI may also connect to a non IP network through a gateway . The private UP network could be in the nature of a local area network LAN such as an ethernet or a wide area network WAN . The public IP network could be an internet. The non IP network could be an integrated services digital network ISDN a wireless network or a proprietary network.

The NI is software which executes on a processing entity comprising a central processing unit memory and a network interface. The processing entity may be a personal computer PC network server or other general computer resource which may or may not be dedicated to running the NI. The processing entity may be loaded with the NI from any computer readable medium such as disk a tape or a memory chip. Also the NI may be down loaded from a remote source on the private or public UP network. Optionally the processing entity may be a dedicated processor memory and network interface into which the NI is embedded.

The IT reacts to events generated by a user e.g. key presses hook switch transitions and reports these to the NI by sending IP messages over the private UP network in accordance with an elemental control protocol described hereinafter. The UP messages are transported using the IP protocol suite specifically messages are transported over a reliable user datagram protocol UDP layer . The NI which implements the functional model of the IT reacts to these events and controls the function of the terminal user interface visual audio feedback audio hardware control etc. by sending elemental control messages to the IT. Using this approach the IT software design can be static but the functional model of the IT may change as new features and services become available by simply changing the functional IT emulator software in the NI. This removes design complexity in the IT. Because the IT does not execute industry evolving functional protocol stacks locally e.g. H.323 the IT does not become obsolete as new versions of the protocols evolve. All evolving protocol dependant software is maintained in the NI where software updates are handled easily. In this model the NI acts as a proxy agent for the IT by converting messages received from the IT to appropriate standard protocol.

All of the keys of the IT are soft keys that is the keys can be assigned a function within the NI. This facilitates the provision of along with telephony services services not usually associated with a telephony device such as access to live or archival audio programming available over the IP network e.g. REAL AUDIO stock quotation updates and web browsing.

The architecture for each IT is illustrated in . Turning to the hardware of an IT comprises a digital signal processor DSP a text display a set of keys and a hookswitch and an ethernet controller which includes a port to the private IP network . These devices interface with a processor which maintains for each of the devices a software driver and respectively. An event originating at any of these devices passes to a software event interface and for the respective devices. The processor may also establish a connection between the ethernet controller and any of the other devices through an IP protocol stack . An event queue receives inputs from the event interfaces and from a window manager and outputs to an event dispatcher . The event dispatcher outputs to functional element managers and any associated stream handlers created by the functional element managers. The stream handlers of the functional element managers are interconnected with the IP protocol stack and they through their functional element managers output to the device drivers. The functional element managers also output to the window manager . Communication with the device drivers is through a real time operating system RTOS . The RTOS maintains the IP protocol stack as well as software sockets in the stack.

The DSP is connected to speaker and microphone of handset through a codec which is an analog to digital A D and digital to analog D A converter and to handsfree speaker and handsfree microphone through codec .

Each functional element manager is designed to control a particular hardware device group of hardware devices or a specific set of book keeping tasks. These managers interact directly with the NI via elemental control messages to provide a control entry point to the IT. The managers provide two major capabilities 

The specific functional element managers are as follows a broadcast manager network manager basic manager key indicator manager audio manager and display manager. The broadcast manager is used to broadcast commands to all of the hardware devices of the IT. The network manager provides terminal initialisation network maintenance and encryption. The basic manager provides an interface to query the status and operating parameters of the IT e.g. the NI may query a hardware identifier . The key indicator manager is responsible for managing all of the keys indicators and associated commands within the IT. Key press events hook switch events key indicator status icon states and LED cadencing are all governed by this manager. The audio manager is responsible for all aspects of the audio including path setup audio stream setup and path maintenance. The display manager controls the display of the IT.

The elemental control messages sent by the NI to the functional element managers and from the functional element managers to the NI follow IP and are therefore packetised messages. The protocol for the messages contemplated for each of the functional element managers is set out in Appendix A.

The managers sit on top of the RTOS which provides the hardware abstraction layer. In particular the RTOS provides priority based scheduling of system tasks consistent application programming interfaces APIs for low level driver abstraction inter task communications primitives and data memory management control and a tightly integrated transport control protocol internet protocol TCP IP stack through which the ethernet driver is controlled. While not preferred optionally the RTOS may be replaced by a simple task manager. In such case the functional element managers would require greater sophistication in order to handle the different APIs of the various device drivers.

Below the RTOS sits the physical hardware drivers. If a piece of hardware changes only the driver for that hardware and the respective event interface will need to change. Hardware can therefore be added or removed without impacting the rest of the software. The drivers are generally designed to be aware of two types of data signalling events and media streams and provide a separate API for each.

While all drivers except the ethernet driver are controlled by the functional element managers the ethernet driver is controlled by the RTOS through the IP protocol stack . All functional element manager communication with the ethernet driver is therefore done indirectly by opening a socket at one of the IP protocol layers e.g. a simple IP socket or a datagram based UDP socket . Data from the functional element managers thus passes through an opened socket down the IP protocol stack to the ethernet driver conversely the ethernet driver passes received data to the IP stack up to the socket API layer such that the element manager that had opened the socket will receive the data.

There is only one event queue and all internal and external events elemental control messages are placed in that event queue. This ensures that all events acted upon by the IT will be processed based on order of arrival. Media streams on the other hand bypass the event queue as described hereinafter.

The window manager intercepts all incoming elemental control messages. The purpose of the window manager is to allow the IT to be responsive to commands from more than one NI and as described hereinafter in some instances to facilitate start up . However at any point in time only one NI s commands are directed to the hardware resources. While a particular NI is controlling the IT resources it has complete control of the IT no resource sharing with other NIs . To gain access to a different NI the user must activate that NI via the window manager. This forces the IT to switch the hardware resources to the newly activated NI providing a window to the IT.

As the user switches from NI A to NI B NI A no longer has control of the IT resources and must be informed of this condition. The IT uses the suspend Connection with Server command from the elemental control message protocol for this purpose. Similarly the IT uses Resume Connection with Server message to start or resume the session with NI B . NI B uses this message as a signal to refresh the display and other IT hardware components as required.

As stated above only one NI has access to the IT resources at a given time. There may be situations however when it is necessary for one of the suspended NIs to inform the IT of a special event. An example would be the reception of an incoming call on a suspended server. To allow the disconnected NI to inform the IT and hence the user of an important event thereby allowing the user to decide how to handle the event the elemental control message protocol provides the Server Alarm message. The Server Alarm message allows a disconnected NI to signal an event and a text string to the IT. The IT decodes the event and informs the user of the pending event. The user may then decide to accept or reject the event. Upon reception of the event the IT would suspend the current NI and switch to the new NI via Suspend Connection with Server and Resume Connection with Server messages as described above. If the user elects to reject the event then the terminal sends a Resume Connection with Server message to the current NI to inform it that it needs to refresh the display.

One final capability of the elemental control message protocol related to the handling of multiple NIs is the ability to reserve a block of UDP port numbers. In the IP domain the media streams associated with voice and or video are typically transported using UDP. The setup of the media streaming with the far end device is performed by the NI on the IT s behalf. However the IP stack is operated locally by the IT. As different NIs are added to the IT s list of supported NIs there is no guarantee that a given UDP port number is available for a call setup session. To allow a given NI to guarantee that the negotiated UDP port is available on the IT the NI must have previously reserved the UDP port via the Reserve UDP Port Block message. The IT responds with the Reserve UDP Port Block Report message. Once a successful message exchange has taken place the IT will guarantee that the reserved port numbers are not given out to other NIs.

The architecture for the NI is illustrated in . Turning to NI comprises an elemental control message event router which receives inputs from ITs over the private IP network and outputs to terminal emulators . A terminal boot server and an associated operations administration and maintenance OA M manager are connected for two way communication with the private IP network and with a terminal emulator manager . The terminal emulator manager manages the terminal emulators. The terminal emulators are connected for two way communication with the private IP network on lines and also output to the network through elemental control message formatter . The NI also includes configuration data structures . Each configuration data structure correlates key codes with functions and optionally with text or graphics which explain the functions. Each configuration data structure also includes information sufficient to allow the launching of a service proxy for each of the functions.

A terminal emulator is detailed in . Turning to emulator comprises a number of service proxies . Each service proxy comprises a service plug in which is connected for two way communication with the private IP network on a line . The service proxies output to a context manager . The context manager is connected with an elemental control message driver . Elemental control message driver receives inputs from the elemental control message router and outputs to the elemental control message formatter .

The context manager includes a state memory which stores current state data for the IT emulated by the terminal emulator. The state of the IT is the current status of elements of an IT for example on hook off hook call on handset call muted on handset handsfree speaker connected . The context manager also has a memory for a current configuration data structure.

When an emulator is first launched it will have no service proxies. However as further explained hereinafter service proxies are launched as required based on information in the current configuration data structure in memory . The service proxies may be proxies for providing telephony or data services available at processing entity over the private IP network such as services and or over the public IP network such as services and . For example service proxies may provide basic telephony call services a call messaging service a directory number locating service such as an LDAP light weight Directory Access Protocol service which is described in ETF publications 1777 1778 and 1823 a direction finding service such as MAPQUEST a stock market quotation service an audio program service and a personalized service.

Referencing when an IT is first plugged into the private IP network the network manager of the IT which is one of the functional element managers using the dynamic host configuration protocol DHCP tries to find an NI. An appropriate message is therefore sent by IT to the NI. The terminal boot server of the NI recognises this message and prompts the terminal emulator manager to launch a terminal emulator for IT . When terminal emulator is launched it looks to the configuration data structures for an initial configuration data structure to associate with IT . The configuration data structure is copied to memory of the context manager for the terminal emulator and will correlate each of the keys of IT with a function and may also correlate keys with text or a graphic describing one of the functions. The NI then constructs elemental control reply messages to the IT which include commands to control elements of the IT. For example the display of the IT. could be written with text or graphics from the configuration data structure for the function of keys of the IT.

If the DHCP is not available then when an IT is first plugged in it defaults to a temporary user input state where the window manager is responsive to input from the keypad . Thus a user may via keypad input an IP address for the IT and an IP address for an NI as will be appreciated by those skilled in the art the user may also be required to input an IP address of a gateway and a sub net mask . Once this has been keyed in the IT sends a new IT message to the NI IP address which was keyed in. This prompts the addressed NI to launch a terminal emulator retrieve an initial configuration data structure for the new IT and construct a reply message. When the IT receives the reply message the window manager switches out of its temporary user input state.

All hardware devices generate events. In operation if say a key is pressed on the key pad of IT this key event is sensed by key pad driver . The keypad driver recognising this as a signalling event signals the key event interface . Only one event interface is supported per driver and the output of all of these processes is sent to the centralised event queue . Once the key event propagates through the event queue to the event dispatcher the event dispatcher dispatches it to the key indicator functional element manager . This functional element manager then formulates an elemental control message opens a socket on the IP protocol stack and passes the elemental control message to the socket where it is passed down to the ethernet controller for transmission to the NI.

Similarly if an elemental control message is received from the NI by the ethernet controller it is passed up to the event queue where it propagates through to the event dispatcher . The event dispatcher then dispatches the elemental control message to the appropriate functional element manager for action.

To ensure that the audio media streams incur the minimal amount of delay while propagating through the system the driver APIs are designed to allow the media to bypass the event queue and event dispatcher and instead communicate directly with a stream handler registered with the driver. The handling of a media stream begins with the NI sending appropriate elemental control messages to request processing of a new media stream. The audio functional element manager would then start a new process a stream handler to perform the stream processing task. If for example the elemental control message from the NI requested processing of an audio stream from a voice call the functional element manager for the DSP would open two stream handlers one for receive stream processing and one for transmit stream processing. The receive stream handler would open a socket for the incoming stream of audio packets and the transmit stream handler would open a socket for an outgoing stream of audio packets. Both stream handlers would register the process identifier with the DSP driver. The audio stream arriving at the socket opened by the receive stream handler would pass directly to the receive stream handler where it would be sent on to the DSP driver with the appropriate stream identifier. The driver would pass the audio stream to the DSP which decompresses it the stream is then converted to analog audio at codec or and passed to a speaker or of the IT. The DSP also compresses audio received from a microphone or of the phone after the audio is digitised by codec . or . The DSP driver upon reception of this audio data corresponding to a given stream identifier signals the registered transmit stream handler matching the stream identifier the transmit stream handler then reads the data from the DSP driver. Thus more than one stream handler per driver can register for media streams.

When a media stream is originated from the IT to the outside world the stream handler responsible for managing the media stream opens maintains and closes the required socket and hence writes the media packets directly to the socket.

Referencing assume on power up of IT in response to the DHCP message from the IT the NI launched a terminal emulator for IT that retrieved an initial configuration data structure for the IT which amongst other designations designates i one key of IT as a mute key to mute a transmit path as is standard in telephony for a mute button ii another key to request specialised call services iii a further key to request telephone directory information iv another key to request street directions v another key to request stock market quotations vi a key to request a specific audio program such as a radio station vii a key as a quit key for use in quitting a service and viii keys to designate digits. The mute button and digit keys are typically permanently so identified on IT . The quit key may also be permanently marked. For the other noted soft keys the configuration data structure includes data which the NI uses to control the text display of the IT to indicate the function of these keys.

Now referencing along with if a user of IT wished to place a call to IT c she may first lift the handset of the IT . This results in the key indicator manager of IT sending an Off hook elemental control message to the NI S . The elemental control message event router of the NI receives this message then passes a request to the appropriate terminal emulator here emulator . The request passes up through elemental control message driver and context manager of emulator to a service proxy say for handling basic call service the proxy being launched if necessary . The service proxy sends commands back down through the context manager and elemental control message driver so that the elemental control message formatter is driven to generate a Stream Based Tone On message with appropriate parameters S to cause the audio manager of the IT to turn on a dial tone. At this point the NI considers the IT to be in an off hook state.

Next the user may press a digit key on the key pad. This results in a key event message to the NI which includes the key code for the key which was pressed S . The NI collects the digit echoes the digit back to the IT for display in a Display Data Write message S and sends a Stream Based Tone Off message to turn off the dial tone S . Next the user may dial a series of digits resulting in a like series of Key Event messages to the NI S S and a like series of Display Data Write messages from the NI S S to cause the IT to display these digits. Once the basic call service proxy of the NI has collected a series of digits representing a called station on the private IP network it obtains the IP address of the called station here IT . The service proxy of the NI then queries the state memory of emulator for IT to determine the state of IT . If IT is in an on hook state the NI may then initiate the call with IT by sending a Transducer Based Tone On message to IT S with appropriate parameters to cause the audio manager of IT to generate a ring cadence. The NI also sends such a message to IT S causing IT to generate a ring back tone. If the user of IT takes the phone off hook then IT sends an Off Hook message to the NI S causing the NI to send a Stream Based Tone Off message to IT S so that the ringing tone at IT ceases and also sends a Stream Based Tone Off message to IT S so that the ringing cadence at IT ceases. The NI then sends i a Connect Transducer message S and ii an Open Audio Stream message to each of IT and IT S S so that i either the handset or the handsfree speaker and microphone are connected at each IT and ii a voice session is set up between the phones. Thereafter each IT will send an Open Audio Stream Report message to the NI S and IP media stream packets will flow directly between the two phones S .

Say during the course of the call the conversation turned to stock prices. The user of IT could press the key designated to provide stock market quotations. This would result in a key event message being sent to the NI S which is routed by router to terminal emulator . Emulator refers to the current configuration data structure in memory to access a service proxy application corresponding with the key code in the received key event message in the current example this is a stock quote service proxy application. The emulator then launches this service proxy as say service proxy . Proxy then negotiates a connection with the server i.e. the data source providing this stock quote service which server may be located on public data network . The remote server then addresses packets of characters to the NI . Emulator of the NI then sends a Display Data Write message to IT S to pass the characters to the IT for display. Thus while continuing the voice call with IT c the user of IT may receive stock quotation information which may occupy a portion of the display of the phone .

When the user of IT requests connection to a stock quotation source this could prompt the context manager of emulator to look up a new configuration data structure for IT which would assign a different function to certain of the keys of the IT. For example the star and pound keys on either side of the 0 key could be re assigned to a scroll up and scroll down function respectively. The NI could then send a Display Data Write message to the IT so that the phone display indicates this new function of these keys. Then when the user pressed either of these keys the NI on receiving a key event message would send an appropriate IP message to the remote server to request the next or previous page of information. In response the remote server would send new packets of characters causing the NI to re write the display of the IT with the new characters using a Display Data Write message.

To end the voice call IT may be placed on hook. This results in an On Hook message being sent to the NI S . This prompts the NI to send a Close Audio Stream message to each of IT and S S . Thereafter an On Hook message may be received from IT S . To end the stock market quotation service the user may press the quit key resulting in a Key Event message to the NI S . The NI responds with a Clear Field message to IT S to cause the portion of the display used for the stock quotation information to be cleared. Internally emulator of the NI would either suspend or terminate the stock market quotation proxy

Turning to along with with IT idle the user of IT may now decide she wishes to listen to the radio station indicated on the display as associated with a soft key. The user therefore presses this key resulting in a Key Event message being sent to the NI S . In response the emulator of NI launches an audio program service proxy say which negotiates a connection between a remote server which is the source for the appropriate audio program and IT . Meanwhile the emulator sends a Connect Transducer message to IT S indicating the new media stream should be directed to the handsfree speaker and an Open Audio Stream message S to launch a receive stream handler which opens a socket for the incoming audio program packets from the remote server and directs them to the DSP driver. Additionally the pressing of the audio program key causes the emulator to retrieve a new configuration data structure for IT which re assigns the function of the mute button on the IT so that its function is to mute the receive path of the handsfree audio transducers rather than the transmit path. Thus if someone enters the office of the user of IT the user may press the mute button to send a Key Event message to the NI S the NI responds with a Mute Unmute message with a parameter causing the IT to mute the receive path S . The user of the IT may then conduct a conversation with the visitor and thereafter again press the mute key so that the NI send a Mute Unmute message with appropriate parameters such that the receive path for the audio program is again unmuted S S .

When the user wishes to stop listening to the audio program she may end the service by pressing the quit key on the IT resulting in an Key Event message to the NI S . The NI responds with a Connect Transducer message which disconnects the handsfree speaker of the phone S and a Close Audio Path message to shut down the stream handler and associated socket for the audio program S . Thereafter the NI retrieves the previous configuration data structure for IT so that the function of the mute button is internally re assigned whereby it can be used to change the state of the IT to mute the transmit path.

If while the user is listening to an audio program a call for IT reached the NI the NI would send one or more Display Data Write messages to the IT to emulate a pop up window announcing the call preferably with caller information and asking the user to press a certain key to indicate that she wishes to take the call. This may be accompanied with a message which would result in a brief alerting tone at the IT. The NI retrieves a new configuration data structure for the IT which includes an assignment of one of the keys to an indication that the call is to be taken. If the user did not press this key once the caller hung up the NI would clear the pop up window and restore the previous display contents. If the user did press the key then the NI may suspend or terminate the audio program session and connect through the call as afore described. Optionally a second key could indicate that the call was to be taken and the audio program continued. If the user pressed this key the NI sets up the voice call on the handset keeping the audio program on the handsfree speaker . By deciding upon whether to interrupt the user the NI may provide for a prioritisation of services.

If while the IT was busy with a voice call on say the handset the user pressed the telephone key which is associated with a display message indicating an audio program e.g. radio station a Key Event message would be sent to the NI. Recognising the current state of the phone as busy with a voice call the NI would recognise providing the new audio stream would potentially conflict with the voice call. Consequently the NI sends a notification to the user. For example the NI could highlight the usage conflict in a Display Data Write message. Also the NI retrieves a new configuration data structure for the IT which re assigns one key of the phone as a warning override key. The user could override the warning with the appropriate key press in which case the audio stream for the audio program is set up over the handsfree speaker as described in conjunction with the example of . However in this instance the NI may assign a special key for the function of muting the handsfree speaker leaving a mute key to mute the voice call in the standard fashion.

From the foregoing it will be apparent that the IT may simultaneously deal with audio streams from different sources. Indeed the user could even take two separate voice calls at the IT one on the handset and one on the handsfree speaker and microphone. In such instance should a key be pressed requesting an audio program the NI could either ignore the key event message as there is no way to provide this service without conflicting with the existing voice calls or could display options to the user for dealing with the conflict.

As previously mentioned another exemplary proxy which may be run on the terminal emulator is a directory number locator proxy which may be used to find telephone numbers over the public IP network. If a user of IT requested a search for a directory number by pressing the appropriate key the NI would launch a directory number locator proxy in terminal emulator . Possibly this would also cause the NI to retrieve a new configuration data structure for the IT and send a Display Data Write message to the IT to display new functions for certain of the keys of the phone which would facilitate a user s use of the directory finding service. For example the digit keys could be reassigned to represent letters so that the user could key in a name. If the user entered a last name the NI could respond with a list of hits through Display Data Write messages and retrieve another configuration data structure for the IT which assigns new functions to certain keys to allow handling of the list. One of these new functions could be a copy function which may be used to copy information from one data service to another. Thus in this instance a user could copy a name from the list of hits to say a personal address book in a call messaging service. Each configuration data structure tailored to a particular service will normally still provide keys by way of which the user could request other services. If the user pressed a key to request stock market quotations this would cause the NI to launch a stock market quotation proxy in emulator and possibly retrieve another new configuration data structure for the phone and overwrite portions of the display to indicate new key functions according to this new configuration data structure. In this way the last function key which is pressed sets the current configuration data structure for the phone and a user could toggle amongst services. Thus a number of proxies may run on the terminal service emulator simultaneously but only the proxy most recently requested by a key press is the active proxy the other proxies are in the background. From this it will be apparent that the NI provides an aggregation of services for the ITs including many services not normally associated with a telephone.

The described text based services were assumed to provide packets of characters to the NI. Some services such as web pages on the world wide web forward a file written in hypertext mark up language HTML which file typically prompts down loading of further files to allow construction of a web page. To accommodate such services the IT may be provisioned with a graphics display along with an associated graphics driver and graphics event interface. Additionally the ITs are provisioned with a graphics manager and the elemental message protocol is enhanced by the provision of graphics manager elemental control messages. This manager and the new messages will be very similar to the display manager and the display manager elemental control messages. Thus the protocol will include a Graphics Data Write message similar to the Display Data Write message.

When a user requests a graphical service which uses the hypertext transfer protocol HTTP the NI will receive the HTML file and download necessary additional files to construct the web page. The NI will then encapsulate web page information in Graphics Display Write messages to cause the web page to be written to the graphical display of the IT. In so doing the NI may also retrieve a new configuration data structure for the IT which will assign keys different functions such as functions to navigate through the web page or request a hyperlink. If for example the NI receives Key Event messages indicating a hyperlink has been requested the NI down loads information from the appropriate source s and updates the graphical display of the IT with new information received.

With a graphics capable display if the IT also included a new functional element manager for the display namely a video manager then the NI could control the display in the same manner as it controls the audio transducers provided the elemental control protocol were enhanced with suitable additional commands. More particularly the configuration data structure for an IT could assign one key to a request for a video program such as a close captioned news program . Were this key on IT pressed the NI would launch an appropriate proxy in emulator which would negotiate a connection between a remote server providing this video service and IT . The NI would also send an appropriate elemental control message to IT which results in the video manager of IT opening a receive stream handler registering it with the display driver and opening a socket on the IP stack . Thereafter when the video stream reaches the ethernet controller and is passed up to the socket it is received by the receive video stream handler and passed down to the display driver. It will therefore be apparent that the user of IT could while continuing with a voice call view for example a close captioned news service.

The various proxies which may be launched in the terminal service emulator are written so as to be compatible with the protocol of the service provided on the remote server. These different protocols are therefore transparent to the ITs. A few exemplary data services which may be provided at an IT by the NI have been mentioned hereinbefore such as a directory number locating service e.g. using LDAP a map navigation service e.g. MAPQUEST a stock quotation service e.g. QUOTE.COM and an audio streaming service e.g. REAL AUDIO MPEG3 . Additional exemplary services include a weather information service e.g. EARTHWATCH and a Short Messaging service e.g. AIRTOUCH .

Another exemplary data service which may be provided at an IT by the NI is an event notification service. With this type of service a user of a data terminal inputs certain criteria to the service when these criteria are met the service typically sends an e mail to the data terminal. For instance a user may ask to be notified if the price of certain merchandise falls below a specified price level or if merchandise is re stocked. If an IT requests this service the NI emulates a data terminal to the event notification service such that the service presents its user interface UI to the NI. The NI then sends appropriate messages to the IT to reflect the UI at the IT. Based on keypad input from a user of the IT in reply the NI sends appropriate messages to the service in order to specify criteria desired by the user. When the criteria are met the NI is notified from the service typically by e mail and or through the UI of the service and the NI may in response control the IT to provide a notification. This notification at the IT is not restricted to a text based display but could for example constitute a distinctive ringing signal and or a graphical display.

User interfaces for data services on an IP network are typically based on hypertext mark up language HTML . Thus NI need only be provisioned with HTML capability in order to interface with such services.

Data services typically require text based queries. However the NI may allow a user of an IT to request voice input for a given service by an appropriate Key Event message . On receiving such a request the NI launches a service proxy for a speech recognition service e.g. OPENSPEECH and then establishes a media channel between the IT and itself. Speech received by the NI over this media channel is then passed to the speech recognition service which returns text based equivalents to the NI. The NI may then pass the text based equivalents to the given service.

Alternatively the telephony system may be configured so that when an IT is first plugged in its NI launches a service proxy for a speech server and opens a microphone of the IT and a media channel from the IT to the speech server. With such a configuration voice input for a data service may be requested by way of a distinctive utterance by the IT user.

A high security service might require voice recognition before the service is unlocked. In such instance through a service proxy the NI may direct establishment of a media channel between the IT and the high security service.

An NI may also readily provide an e mail service to an IT. E mail sent over the public network addressed to an IT will be received and stored by an e mail server and accessible by the NI as enabled by an e mail client service proxy. As e mail is received by the e mail server the NI resident e mail client data is updated. The NI may then send a Display Data Write message to the appropriate IT which indicates the new mail item. Notification of new e mail may alternatively or additionally take the form of a distinctive ringing signal and or a graphical display preferably when e mail with a specific originator and or specific subject heading and or specific body text is received. To implement this requires that the e mail client in the NI compare portions of incoming e mail with stored search targets. The NI will choose a configuration data structure for the IT such that a key of the IT may be used to request e mail messages. If a Key Event message is received by the NI indicating a request for e mail messages the NI will cause the IT display to display summaries of e mail messages and will load a new configuration data structure for the IT such that keys of the IT may be used to handle the e mail messages. Thus for example with an appropriate subsequent key press the NI will cause the IT display to display the text of a selected e mail message.

As aforementioned call services are handled in the same fashion as data services the NI launches a service proxy to access a server which provides the desired service. For example it is possible to deliver voice mail in an identical fashion to that described for e mail with speech being the payload rather than text CALL PILOT is an exemplary voice mail service which operates in this fashion .

Since all of the keys of the IT are soft keys the IT may display text in association with each of its keys which includes function information provided by the NI. Alternatively certain keys found on the IT such as hold mute handsfree volume control screen navigation and headset on off keys may be permanently labelled as such. Notwithstanding these permanently labelled keys are soft keys since their function is assigned at the NI. Thus their function may be re assigned where necessary such as described in conjunction with the foregoing example in respect of the mute key . The ability to control all of the keys on the telephone ensures that the NI may provision the ITs with a variety of services without conflicts amongst the services and without conflicting with voice calls.

While it is preferred that all of the keys of each IT are soft keys the system of this invention could function even if some keys of an IT were hard wired . For example the mute key of an IT could be hard wired to mute the transmit path of the phone. In such instance were a user to request an audio program service the NI could still allow muting of the receive path through assigning this function to a soft key on the phone.

While the user input elements of the telephone have been described as keys and the hook switch it will be appreciated that the telephone could equally have other user input elements such as a touch screen i.e. a screen where x and y co ordinates are obtained from a touch sensitive matrix and proximity or motion detectors. If so appropriate protocol messages would log signalling events from these devices. Also while the functions have been described as associated with single keys it could be that the NI requires a series of key presses on the part of a user to request a function.

The DSP in each IT provides data compression. If the bandwidth of the network is sufficiently great or if compression is accomplished in some other manner such as with a network transcoder the DSPs may be omitted.

The configuration data structures may be different for each IT. Thus the configuration data structures may be based on user profiles. In this way different phones on the private IP network may request services from a different set of services.

The NI may also provide the functional emulation for IT on public IP network . Also the NI could be directly connected to the public IP network instead of to a private IP network and may provide the functional emulation for any ITs connected directly or indirectly to the public IP network. The NI acts as a proxy agent for the IT by converting messages received from the IT to appropriate standard or proprietary protocol. Thus for example referencing an Internet Protocol IP telephone on the public IP network may utilize H.323 protocol in the establishment of telephone calls. As will be understood by those skilled in the art the H.323 protocol has been established by Study Group 16 of the International Telecommunications Union ITU and is detailed in overview in http www.webproforum.com trillium index.html the contents of which are incorporated herein by reference. If a user of one of the ITs controlled by NI say IT dialled a number for such an IP telephone the NI would receive Key Event messages from IT . The user may also send Key Event messages to specify the protocol to use. Based on these received messages the NI would send appropriate H.323 protocol messages to the IP telephone and its gatekeeper to establish the call. To do so the NI would need to be provisioned with software for implementing the H.323 protocol. This software would typically be configured as a Service Proxy say in through system administration and may be dynamically loaded when a connection is requested to an IP telephone utilizing the H.323 protocol. A user of IT could directly specify a call protocol or after dialling a number or specifying a name using IT a directory reference by the NI using LDAP protocol for example would return a field specifying the call service s and associated tariffs through which a Directory Number DN could be reached and hence the appropriate protocol s e.g. H.323 .

An IP telephone on public network could also use a different protocol for the establishment of a voice call such as Session Internet Protocol SIP which has been established by the Internet Engineering Task Force IETF and is detailed in IETF RFC 2543 dated March 1999 available at http www.sunsite.auc.dk RFC rfc rfc2543.html the contents of which are incorporated herein by reference. The NI could allow establishment of calls between such IP telephones and ITs which it controls provided the NI is provisioned with software to implement the SIP protocol through a service proxy.

Of course as these standards based call initiation protocols evolve the software in the NI may be updated to reflect the latest version of the standard.

While the multi service telephony system has been described in the context of an IP data network the system could be adapted to function in the context of data networks following other data protocols. For example rather than sending packetised data the data network could employ a synchronous transfer mode for data.

The NI could also allow an IT to communicate with a telephone on a non IP network such as an integrated services digital network ISDN . To do so the NI would need to have a connection to the ISDN through a gateway and be provisioned with software allowing it to emulate an ISDN terminal. The gateway converts between ISDN signalling and media streams on the one hand and packet data on the other. If an ISDN signalling stream arrives at the NI from the gateway the NI launches a service proxy to handle the ISDN messaging with the ISDN terminal in order to establish a call with a desired IT. Thereafter the ISDN media stream is directed to the IT through the gateway while the NI continues to receive any messaging via a signalling stream.

In a similar fashion if the NI through an appropriate gateway had a connection to a wireless network operating under any standard wireless protocol such as GSM TDMA CDMA or G3 and was properly provisioned to emulate a wireless telephone terminal operating under the wireless protocol the NI could permit the establishment of a voice call between a telephone on the wireless network and any of the ITs.

The NI could also permit an IT to establish a call over a proprietary network if the NI had a connection to such network and the NI were provisioned with the proprietary protocol for establishing a call over the proprietary network. Thus for example the NI if properly provisioned and connected could allow calls between an IT and a telephone on a MERIDIAN network or a NORSTAR network MERIDIAN and NORSTAR are trademarks of Nortel Networks Corporation .

If properly provisioned the NI may emulate any type of terminal supported on a network. Thus for example the NI may emulate a pager on a wireless network if provisioned with proper interface software e.g. Wireless Application Protocol WAP Wireless Markup Language Handheld Device Markup Language WML HDML which is utilised by a service proxy. In providing pager emulation the NI could receive a pager message destined for one of the ITs and construct appropriate Display Data Write elemental control messages to cause display of the text of the pager message at the appropriate IT.

The NI may also emulate proprietary services if enabled by an appropriate Service proxy. For example text messages may be dispatched to an IT from a COMPANION server via an appropriately configured NI. COMPANION is a trademark of Nortel Networks Corporation .

There are situations where it is desired to have a server control telephones and also a personal computer PC adjacent each telephone. For such situations a computer telephony interface CTI protocol is needed. Microsoft s TAPI provides a common application programming interface API for service providers and those writing telephony applications for servers or PCS running the WINDOWS operating system. In known call centers for example the telephone at each workstation is connected to a private branch exchange PBX and a server is connected to the PBX and to the client PC at each workstation. Software resident on the server co ordinates phone activity with information displayed on the client PC s screen. Many systems use Novel ATT TSAPI to enable control of a PBX by a server.

Telephone and PC control may be achieved with the teachings of the subject invention without the need for a line between the telephones and a telephone switch e.g. PBX . Turning to a system comprises an IP network connected to a telephony service an NI ITs and PCS of workstations a PSTN gateway and a co ordination server . The PSTN gateway is connected to a PSTN .

The co ordination server controls the PCS directly over the IP network . The co ordination server controls the ITs through the NI which launches a suitable service proxy for each telephone. For example if the co ordination server used the TAPI protocol the NI would proxy a TAPI client on behalf of each IT. It would also be possible to architect system such that the co ordination server generates elemental control messages. These would then flow to the NI where they would be aggregated and prioritised with respect to other services.

When the NI launches a service proxy in respect of an IT for the co ordination server the NI may upload a new configuration data structure for the IT which associates an expand operation with one of the keys of the IT. A suitable Display Data Write message to the IT will result in this key being suitably identified at the IT. In response to a Key Event message from this expand key the NI sends a message to the co ordination server such that server controls the PC at the same workstation to display information viewed in short form on the smaller IT display in an appropriate expanded format on the PC.

With the architecture of system it is also possible for PC at workstation to run an application which communicates with the IT at the workstation through the NI. The application may communicate with the IT via the NI either in a CTI protocol such as TAPI or utilising the elemental control protocol. Thus for example the PC could run a scheduling program with a scheduling summary appearing on the IT display. This could be useful where the PC was running a parallel application that occupied the screen of the PC. In this situation an expand key on the IT could be used to pop the background scheduler application on the PC to the foreground. Note that the PC control of the IT occurs without any direct connection between the PC and IT. Although typically a PC would control on the IT adjacent to it at a workstation the system could allow a PC to control remote ITs as well.

Conveniently the service proxies may be implemented in the JAVA programming language as this facilitates their portability across NIs implemented in different software languages hardware platforms and operating system environments.

In the described systems the intelligence for the operation of the IT is located in the NI. The functional model for the IT resides in the NI and the user interface is projected onto the IT using the elemental control protocol. This model results in a slight delay at the IT whenever a key is pressed as a key event message must pass up to the NI and a response message must return from the NI to the IT before the IT takes action consequent on the key press. In most instances this slight delay is entirely acceptable. In the case of receive volume adjustments this delay is not preferred. Consequently the elemental control message protocol allows the NI server to configure the terminal for local receive volume control. This is accomplished using several messages.

A two mode operation scheme allows the NI to specify whether the terminal has direct control over active path volume adjustment or if the NI will assume control over the adjustments. The two modes are defined as follows 

The NI can instruct the terminal to operate in either mode by setting the Adjust Volume and Automatic Adjustable Rx Volume Report options of the Audio Manager Options elemental control message. If the Adjustable Rx Volume Report option of the Audio Manager Options message is enabled the terminal will send an Adjustable Rx Volume Report message each time after a volume key is pressed by the user. This report informs the NI that the volume has been adjusted and indicates whether one of the rails min. max. volume has been reached. This provides a clean interface for NI visual feedback of user volume adjustments when the IT handles the volume control locally.

The NI uses the Change Adjustable Rx Volume message to adjust an active path receive volume when local volume control handling has been disabled. The NI uses the Adjust Default Rx Volume message to change the default receive volume levels when a user is adjusting default volume levels from for example an options list. As will be noted from the protocol the NI may set audio parameters for the handset or handsfree transducers headset where extant in an audio parameter bank APB download message. The Select Adjustable Rx Volume message can be used by the NI to set or change the active APB volume register. This is useful when multi path calls are configured and the user wishes to adjust the volume of a specific register i.e. receive volume register associated with a specific APB .

There is also a situation where maintaining the functional model for the IT solely in the NI would be unnecessarily burdensome namely in implementing timers. There are many user interface features that require a time out function to expire if no user activity is detected for a certain period of time. An example of such a feature is the viewing of a caller s list. When the user enters the list as each new item is viewed a timer is started. If the timer expires before the next list item is viewed or the list is exited signalled by a Quit key press the system will automatically exit the list and revert back to the Idle display screen. The concept of a time out if no key press feature is very simple. This along with the undesirability of maintaining possibly thousands of timers in the NI one per each terminal lead to a elegant solution Perform the timer feature in the terminal and send back time out notifications to the NI to ensure that the NI is in sync and in control of the user interface.

The User Activity Timer message is used to turn on or to turn off a timer which reloads when any key is pressed. If the timer expires meaning no keys were pressed then the terminal sends the User Activity Timer Expired message. The User Activity Timer Download command allows the NI to specify the time out value.

Another timer which may be present in the IT is a local call duration timer. Also an IT may have a local time and date display set by the NI and will locally manage the current NI to which it responds through the window manager . There are text strings displayed in conjunction with each of these functions. In order to maintain language independence with this local functionality the NI downloads text strings in the appropriate language as follows.

The Call Duration Timer uses the time date fields to display its information. The date field is used for displaying the Call Duration Timer label i.e. a text string that can be defined by the NI using the Call Timer Label Download command. By allowing the NI to download a separate label for this feature the locally implemented feature remains language independent as the downloaded label may be implemented in any language.

The IT is configured to track the month field digitally i.e. 1 January 2 February etc. However to allow a text label to be used while at the same time ensuring language independence the terminal allows two month labels to be downloaded via the NI. These labels are applied to this month and next month. The terminal tracks the number of days per month and automatically switches to the next month at the appropriate time. The NI downloads the month labels via the Month Labels Download message.

The elemental control message protocol provides a message which allows the NI to download a text string or optionally an icon bit map etc. as graphical display capabilities are deployed to be used as the server identification tag in the local user interface. The NI uses the Server Identification Tag message for this purpose.

An advantage of the elemental control message protocol is the control it provides the NI over the characteristics of audio at an IT. As discussed previously the NI may control an IT to connect audio streams to a selected transducer pair e.g. handset headset or handsfree microphones and speakers . In addition the NI may control parameters of an audio stream by assigning an Audio Parameter Bank APB . The APB is a grouping of parameters that describes the characteristics of the audio stream. The IT provides several APBs. Each APB can be configured by the NI. When setting up an audio stream the NI controls where the audio stream terminates i.e. which transducer pair to use and which APB to associate with the audio stream. An APB contains the following parameters 

 APB Download Set APB s Rx Volume Levels Adjust APB s Tx and or STMR Volume Level Frequency Response Specification Voice Switching Parameter Download Change Adjustable Rx Volume and Adjust Default Rx Volume. 

The elemental control message protocol allows the IT to implement handset detection algorithms and report the findings back to the NI via the Handset Connected and Handset Disconnected messages. This flexibility allows the terminal to detect specially designed handsets for example extended frequency response handsets and report this to the NI. The NI upon receiving this message could activate enhanced audio capabilities within the terminal to exploit the capabilities of the special handset. These enhanced audio capabilities could be used as a product differentiater in the market.

The elemental control message protocol allows the IT to be configured to switch to a new control protocol. Upon receipt of the Protocol Switch message from the NI the terminal could be directed to start communicating using the newly specified protocol instead of the elemental control message protocol of Appendix A. This would allow one terminal to be built that could be compatible with several distinct control protocols.

The elemental control message protocol allows the NI to query the IT for a copyright identification string. The NI queries the IT using the Copyright option of the Query Network Manager command. The IT responds with the Copyright Report message.

The amount of information to be presented to a user may exceed the visible area of the display for the IT. This may typically occur when viewing e mail directories or incoming callers logs. To accommodate such situations the elemental control message protocol provides for page scrolling. The NI may send a page of information via a Page Download message. The IT saves this page of information locally and presents the first portion of the page on the display. If a user uses a page scrolling key such as a key on a navigation cluster or another key assigned to this purpose by the NI on receiving the resulting Key Event message the NI responds with a Page Scroll message causing the IT to scroll to another portion of the page .

The elemental control message protocol allows the NI the disable specific portions of the display via the Disable Display Field message. Once disabled all writes to this portion of the display are saved in an off screen buffer but are not visible on the screen. To enable the field the NI sends a second the Disable Display Field message with the associated field bit enabled. Once enabled the previously hidden information is displayed on the screen.

The Logical Icon Update command is used for updating the state of a logical icon. The IT keeps a map of the association between logical and physical icons. When the state or cadence of a logical icon changes the NI sends this command to update the corresponding physical icon with the new state and cadence.

The Time and Date Download command is used to set the IT s time and date. This new time and date will overwrite the current time and date data stored in the IT. The command contains the year month day hours minutes and seconds. All numbers are expressed in hexadecimal.

This command downloads the default character table configuration that the display manager uses. It specifies the mapping of the character tables to graphics tables and it also specifies which one of the graphics table is to be lock shifted code A0 to FF hex .

The Network Manager is responsible for configuring and maintaining the network connections between the NI and the IT.

The Soft Reset command is sent by the NI to reset the IT as well as the accessory ports. This command is intended to reset the IT data structures to their default states.

The Hard Reset command is sent when the NI wants to fully re initialize the IT to its power up default state.

The NI uses this command to force the IT to reserve a continuous block UDP ports. Once the ports are successfully reserved the NI can make use of them without fear of interfering with other servers controlling the IT. The command contains the number of ports to reserve and a starting port number. The IT will reply to this command with the Reserved UDP Ports Report stating how many ports were successfully reserved and the starting port number. The NI could use those reserved port numbers to open audio streams for example.

This command is used by the NI to download a character string oriented tag which identifies the server. The IT could place this information on the display to identify the active server for the user.

This command is used by the NI to configure the different source description items that are part of the SDES report of the RTCP protocol.

The NI sends this command to an IT that supports multiple protocols to force it to change control protocols. The other protocols that the IT supports could have a similar command to enable a switch back to UNIStim.

This command is used by the NI to download network related information regarding backup servers into the IT. Note this command supports the download of info for several backup servers.

The NI sends this command to force the IT to stop accepting UNIStim commands from the current server and start listening to the server specified in the command. This command assumes that the IT has been made aware of the new server s network address in the configuration process or through the Download Backup Server Information.

The Soft Reset Ack command is sent to the NI after the IT has been reset via the reception of the Soft Reset command. The command will be transmitted only after a successful reset has been performed.

The Sanity OK command is used in response to a Query Sanity command. It indicates that the IT can still receive and transmit from to the NI.

This command is used in response to the Query Network Manager Attributes command generated from the NI. The IT replies by sending the Network Manager Attributes.

The Diagnostic Info command is sent after it has been requested by the Query Network Manager Diagnostic command or when an error occurs and the Diagnostic Command transmission has been enabled via the Network Manager Options command.

This command is sent from the IT after reception of the Query Network Manager managers command from the NI. The IT replies with a list of all managers contained in the IT with the exception of the Network Manager and the Broadcast Manager. A flag for each manager indicates if the manager is active or inactive. The format of the command is as follows.

This command is sent after reception of the Query Network Manager Options command. It sends the setup of the options to the NI.

This command is used to respond to the Query Network Manager Copyright request from the NI. It provides the copyright information as an ASCII string.

The IT sends this unsolicited command to inform the NI that it is ready to accept commands from NI. The transmission of this command can either be triggered by a power up or by a user choosing to connect to a new NI after power up.

The IT sends this unsolicited command to inform the NI that it will disconnect itself from the NI. The transmission of this command is normally triggered by a user choosing to connect to a different NI. Typically this is the last command that the NI will receive from the IT until the user chooses to switch back to the NI.

This command is sent to inform the NI of the UDP ports that have been reserved as a result of the Reserve UDP Port Block command. The command payload reports the number of UDP ports reserved as well as the number of the first UDP port of the reserved block.

The start selftest command is used for running a selftest in the IT. The self tests are device specific. This message requires that the secure code of the IT be set using the Basic Managers Options Secure Code command.

The Query command is sent by the NI. It is used to request the status or information from the Basic manager.

This command allows direct read or write access to the devices EEProm microprocessor etc . . . of the IT. For the write operation the SECURE CODE flag must be set through the Basic Manager Options Secure Code command. For a read operation the data bytes must not be present in the command.

This command allows specific EEprom data byte locations to be written by the NI. In order for this command to succeed the secure code must be set through the Basic Manager Options Secure Code command. This command allows access to EEprom data bytes without having to know the exact location of the data in the EEprom.

This command enables the NI to use UNIStim to encapsulate commands that belong to UNIStim or other protocols. For example the NI could force the IT to send out a Key Event command by encapsulating it in the Encapsulate Command. This command could also be used to directly access resources such as a DSP VGA screen etc in the IT without using a UNIStim command.

This command is used in response of the Basic Manager Query Attributes command to inform the NI of both the EEPROM static and dynamic checksums. Both values are read directly from the EEPROM.

This command is sent after reception of the Basic Manager Query Options command. It sends the basic manager s options configuration to the NI.

This command is used in response to the Basic Manager Query F W version command. The F W version command contains the F W version code of the IT s code.

The IT Type command is sent in response to the Basic Manager Query IT Type command from the NI. It is used to inform the NI on the type of IT.

The result of each test performed during a selftest is given by this command. This command is send after reception of the Basic Manager Query Selftest command from the NI.

This command is used in response to the General Read Write command when a read operation is performed.

This command is sent in response to the Basic Manager Query H W ID command. It provides the unique number that identifies the IT.

This command is sent in response to the Query Basic Manager PEC command from the NI. It provides the Product Engineering Code of the IT.

The Key Indicator Manager is the manager responsible for managing parameters associated with keys and the indicators on the IT.

The Query Hookswitch command is used to query the state of hookswitch on the IT. The IT must send back the Hookswitch State command in reply.

The User Activity Timer can be turned on and off using this command. The time out value of the timer is defined using the User Activity Timer Download command. When the User Activity timer starts if no key event happens depression repeat or release in the IT before the timer times out the IT will send the User Activity Timer Expired command back to the NI. If at least one key event happens then the timer will reset and start the count down again until the User Activity timer is stopped.

The Downloadable Free Form Icon Access command is used to enable or disable the download Icon RAM bit map. This command allows overloading the existing Free Form Icon ROM bit maps.

The Query Key Indicator manager command is used to request information about various states or information handled by the Key Indicator manager.

The Logical Icon Mapping command is used to define the relationship between physical and logical icons in the IT.

The Key repeat Timer Download is used by the NI to specify the time first timer before sending the key repeat command when the key remains depressed and also for specifying the time second timer to wait before sending all subsequent key repeat commands if the same key remains depressed.

The Indicator Cadence Download command is used to specify a new custom cadence that can be used to flash the icons and LEDs when using the downloadable cadence option in the LED Update and IT Icon Update commands.

The User Activity User Download command is used to download the time out value used by the User Activity timer. This time out value will be used when the user Activity is started by the User Activity Timer command. Upon receipt of the command the IT will restart the timer with the new time out value.

This command is used to download a free form icon representation that is not already hard coded in the IT ROM. The command contains the ID of the downloadable icon and the bitmap that represents the free form icon.

This command is used to change the current state and cadence of an IT icon. The IT icon will be updated with the new state and cadence only if the physical icon IS NOT mapped to a logical icon.

This command is used to report an event related to the keys. The event can be a key depression key repeat or a key released.

This command is sent to the NI in response to the Query LED State. It informs the NI on the state and cadence of LEDs.

This command is sent to the NI when the User Activity timer times out. The actual time out value for the User Activity Timer is specified by the User Activity Timer Download command.

This command is sent to the NI in response to the Query Key Indicator Manager Attributes command and informs it of the attributes of the Key Indicator manager. The format of the command is as follows.

This command is sent to the NI in response to a Query Key Indicator Manager Options command. It sends the Key Indicator Manager s options configuration to the NI.

This command is used in response of the Query Key Indicator Manager Icon State command. It informs the NI of the state of icons.

The Audio manager is the entity that manages every aspect of the audio configuration of the IT. The main tasks of the manager are to configure the loss plan and tones setup voice paths and establish end to end voice connections.

The Query Audio Manager command is used to request various status or information from the Audio manager.

This command is used to turn on one of the transducer based tone alerter paging or special tone . The association between a transducer based tone and a transducer is done using the Alerter Tone Setup Paging Tone Setup and Special Tone Setup commands of the audio manager. Some of these tones may be mutually exclusive.

This command is used to configure the various parameters that are associated with the Alerting tone. Through this command the alerter tone s volume range warbler effect cadence and transducer routing can be configured.

This command is used to configure the various parameters that are associated with the special tone. Through this command the special tone s volume range cadence and transducer routing can be configured.

This command is used to configure the various parameters that are associated with the paging tone. Through this command the paging tone s volume range cadence and transducer routing can be configured.

The Alerting Cadence Download command is used by the NI to download an alerting cadence in the IT. This new Alerting Tone cadence will be used the next time the IT receives the Tone On Alerting Tone command if this tone is set to use the downloadable cadence see Tone Cadence Select command .

The Special Tone Cadence Download command is used to download a Special Tone cadence in the IT. This new Special Tone cadence will be used the next time the IT receives the Tone On Special Tone command if this tone is set to use the downloadable cadence see Tone Cadence Select command .

The Paging Tone Cadence Download command is used to download the configuration for the paging tone. The command is used to specify the tone frequency and On Off duration of all the tones that make up the paging tone. This new Paging Tone cadence will be used the next time the IT receives the Tone On Paging Tone command if this tone is set to use the downloadable cadence see Tone Cadence Select command .

The Transducer Based Tone Volume Level command is used to specify the volume level for different transducer based tones. The volume is defined in steps from the lowest level of the volume range. If the volume level specified in the command is outside the volume range the upper boundary of the range will be used as the new volume level.

The Alerting Tone Test command is used to start the alerting tone on the IT without changing the current selection of alerting. This command is usually used when the user selects the type of alerting. Only the warbler can be selected.

This command is used to configure the IT with respect to providing visual tones feedback when it receives the Transducer Based Tone On command.

This command is used to inject a stream based tone into an audio stream. The actual parameters that define the stream based tone specified in the command can be set using the Stream Based Tone Configuration command which is used to bind a cadence and a frequency component list with the tone.

This command is used to bind one of the 32 stream based tone cadences and one of the 32 frequency component lists with a stream based tone. The next time the stream based tone referred to in the command is turned on through the Stream Based Tone On command it will use the cadence and frequency component list specified in this command. The actual cadences and frequency component lists can be modified through the Stream Based Tone Cadence Download and the Stream Based Tone Frequency Component List Download.

This command is used to reconfigure one of the 32 frequency component lists available for stream based tones.

This command is used to reconfigure one of the 32 cadences available for stream based tones. The command specifies up to four On Off duration pairs.

This command is used to select the Rx volume that will be affected by the Change Adjustable Rx Volume command.

The Set APB s Rx Volume Level command is used to specify the new Current Rx Volume for the specified APB. The command can also force the Default Rx Volume to be changed to the specified Current Rx Volume by setting the Default flag. The volume level is specified as an offset in number of steps from the system RLR for the path specified APB. This command will override volume control adjustments done by the user. This command is intended to be used by the system to convey volume control adjustments made by the user in list based option controls.

This command is used to increase or the decrease the receive volume selected through the Select Adjustable Rx Volume command by one step within the limits of its loss plan. This command is used when the volume adjustments are performed by the NI instead of locally in the IT.

This command is used to increase or decrease the Default Rx Volume value of the specified Audio Parameters Bank APB or transducer based tone by one step within the limits of its loss plan. This command should be used when the user increases or decreases the default Rx volume from an option list. Also notice that this command will only change the default Rx volume and not the system default value which is the RLR downloaded via the Receive Loudness Rating command so the loss plan will not be changed with this command.

The Adjust APB s Tx and or STMR command is sent by the NI to allow Tx and STMR volume adjustments for different transducer types. It is used to adjust the APB s Tx or STMR volume level either increasing or decreasing it by one step. The adjustment enable bits allow the NI to adjust both Tx and STMR volumes with a single command. Alternatively either the STMR or Tx volumes can be adjusted individually. This command is intended to be used for multi vendor headset configuration.

The Query APB s Tx and or STMR command is sent by the NI to query the current STMR and or Tx volume level settings. This command is intended to be used for multi vendor headset configuration.

This command is used to download all the audio parameters such as loss plan associated with a specific audio parameter bank. The new parameters will be used the next time a voice call involving the ABP is set up. This command uses flags to indicate the presence or absence of each audio parameter.

This command is used to set up full or half duplex end to end RTP voice sessions between the IT and an IP connected far end. This command is also used to specify RTCP ports and DTMF support for the specified voice session.

This command is used to kill audio voice sessions associated with the stream Ids specified in the payload of the command.

This command is used to cross connect the transducers specified in the command with a quantity of streams in an uni directional or bi directional fashion. The actual streams referred to in this command are created through the Open Audio Stream command. This command can also be used to assign an Audio Parameters Bank APB to the transducer pair designated in the command.

The Frequency Response Specification command specifies the filter building blocks to be used to implement the desired frequency response for a given transducer. The command is used by the IT to fill in a frequency response specification table specifying which filters need to be set up for a given transducer. The Frequency Response Specification command contains a list of filter numbers which correspond to predefined filter building blocks in the IT. Each filter ID will program a predefined number of biquadratic sections biquads . The biquad ID field specifies the first biquad to be used for implementing the filter. The Filter Gain Compensation is sent as part of the Frequency Response Specification. The Filter Gain Compensation specifies a gain adjustment to compensate for any deviation from the Loudness Rating LR caused by the filter shape specified by the frequency response specification. Both the Rx and Tx FGC values must be provided each and every time this command is sent.

The Biquad Download command is used to adjust the IT frequency response by downloading new set of coefficients for a specific biquad. The next time the IT will program the biquads it will use the new set of coefficients. The downloaded biquad can be selected using the Frequency Response Specification command. Each biquad takes five coefficients B0 B1 B2 A1 and A2.

This command is used to download the voice switching parameters associated with a specific transducer. These parameters will be used the next time the voice switching is enabled.

Note that unlike the Connect Transducer command there is no need for the Transducer Direction bit since the command specifies frequency responses for both the receive and transmit transducers. For each receive transducer specified in the Tranducer ID field the command will also be used to configure its transmit side counterpart.

This command is used by the NI to request RTCP data gathered in the media session associated with the stream ID specified.

This command is used to configure parameters that are associated with the vocoder specified in the command. The command contains a field that identifies the vocoder to modify followed by a list of new parameter settings. Note that not all vocoders support the entire list configurable parameters.

This command is used to configure parameters that are associated with the jitter buffer of the specified stream.

The Handset Connected command is sent to the NI when a handset is detected in the handset port of the IT.

The Handset Disconnected command is sent to the NI when the handset is disconnected from the handset port of the IT.

The Headset Connected command is sent to the NI when a headset is detected in the headset port of a so equipped IT

The Headset Disconnected command is sent to the NI when the headset is disconnected from the headset port.

The Supervisor Headset Connected command is sent to the NI when the supervisor headset is detected on the supervisor headset port of a so equipped IT.

The Supervisor Headset Disconnected command is sent to the NI when the supervisor headset is disconnected from the supervisor headset port.

The Headset Rfeature Key Pressed command is sent to the NI in response to the IT receiving the predefined headset based feature key event on the headset port. The transmission of this message is enabled by the Audio Manager Options Headset Rfeature Key Message command.

This command is used in response of the Query Attributes command to inform the NI of all the attributes that the Audio manager has.

This command is sent after reception of the Audio Manager Query Options command. It informs the NI of the Audio manager s option setup.

This command is sent to the NI after a volume key has been depressed and the Volume Adjustment Reports option has been enabled via the Audio Manager Options command. The command shows which volume key has been depressed and if it caused the rx volume reach its floor or ceiling . The NI could use this information to display a visual representation of the volume adjustment to the user.

This command is used to inform the NI of the active Rx volume register in the IT. It contains the APB or transducer based tone number its current Rx volume setting and volume range as well as the floor ceiling indications. This command is sent generally after reception of the Query Audio Manager Adjustable Rx Volume command

The Audio Parameters Bank Default Rx Volume Value command is used in response to the Query Audio Manager APB Default Rx Volume command. It gives the default Rx volume level of the specified APB. It contains the APB number the default volume setting of the APB the floor ceiling indicators.

This command is used in response to the Query Audio Manager Alerting command. The alerting information as well as the warble rate selection are sent as part of this command. The format of the command as follows.

The Query APB s Tx and or STMR response is sent by the IT in response to the corresponding query command. The response sent by the IT indicates the current STMR and or Tx volume level setting for the specified APB number.

The IT automatically sends this command to the NI after it receives an Open Audio Stream command. The command reports on the status of the stream created by the Open Audio Stream command.

The main task of the display manager is to present the information sent by the NI on the LCD. The NI does not have to know the physical location of where the information is presented. Another big task of the display manager is to maintain the configuration tables for the multi language character tables.

This command is used to scroll up or down one page of display. This command assumes that the information of the page to scroll to is already downloaded in the IT.

This command is used to restore the character table configuration of the display to the one downloaded through the Set Default Character Table Configuration command. The G1 G2 and G3 tables will contain the character sets specified by the default configuration and one of the G table will be lock shifted code A0 to FF hex .

This command is used to turn on and off the display backlight. This could be used in power saving mode when back lighting is supported by the IT.

This command is used to query the state of a specific icon in the status bar. The IT will reply with the Status Bar Icon State command specifying the state of the queried icon.

This command is used to turn on or off the highlight on the display. When the highlight is turned on the field that is specified by the Highlighted Field Definition command will be highlighted.

This command is used to revert the effect of the Clear Time and Date and Caller Log Download commands by restoring the time and date in the time date fields of the IT. The time and date or the call duration information whichever was the last one active prior to receipt of a Clear Time and Date command or the Caller Log Download command will be shown in the time and date field.

This command clears the time and date fields and inhibits the update of the fields with the time and date information. The time and date information is still kept in the IT in case it is restored with a Restore Time Date command.

This command is used to configure the call duration timer. Through this command the call duration timer can be started or stopped reset shown or hidden with or without a delay.

The Query Display Manager command is sent by the NI to request various status information from the Display manager. The format of the command is as follows.

The Download Call Duration Timer Delay command is used to specify the delay to be used by the Call Duration Timer command when the Delay option is selected in the Call Duration Timer command.

The Disable Display Field command is used to enable and disable fields of the LCD. When a field is disabled it becomes blank until it is re enabled. However if the NI writes data to a disabled field the data will be stored in the IT and will become visible on the LCD once it is re enabled. All fields that have their corresponding bit set will be disabled and all others with their bit cleared will be enabled.

This command is used to erase fields of the LCD. Many portion of the display can be cleared at the same time. Once a field is cleared the data it contained is lost and cannot be re displayed on the field unless re downloaded by the IT.

This command downloads portions of next up or next down page in the IT. A portion can be any field that characterizes the display i.e. line softkey etc.

This command is used to download a new line of text and to scroll the others up or down. This command only affects the line fields of the display. This command cannot download more than one new line of text at the time.

This command is used to download the label for the current and next months. These labels are used in the date field and enable the date to roll over to next month.

This command is used to download the call duration timer label which will be displayed on the IT s display when the call duration timer is activated.

This command is used to specify the format that the Display manager will use to present the time and the date information to the user.

This command is used as a generic command for writing to the display. It is composed of four parts the address the control the tag and the data. Three of these parts the address the control and the tag are optional. The display data part is mandatory. The address byte is used to specify where the text to write starts. If no address is specified the data will start at the current cursor position. The tag field is used to give a meaning to the attached text directory CLID etc. . The control field is used to control characteristics of the display. If the control field is not present the default control setup will be used.

This command is used to specify the format of the Context Info bar field. The supported formats are the ones specified in the functional description of the IT in question.

This command downloads the default character map configuration that the display manager must use. It specifies the mapping of the character table to the graphics tables and it also specifies which one of the graphics table is to be lock shifted code A0 to FF hex .

This command downloads the current character map configuration that the display manager must use. It specifies the mapping of the character table to the graphics tables and it also specifies which one of the graphics table is to be lock shifted code A0 to FF hex .

This command is used to download special characters that are not specified in the character ROM tables of the IT. In the command the special character address is specified as well as bitmap.

This command is used to update the time and date fields with a downloaded time and text label instead of the usual time and date information.

This command is used in response to the Query Display Manager Contrast command. It gives the current display contrast level. The level is set by the NI with the Contrast command.

This command is used in response to the Query Display Manager Cursor command. It gives the position of the cursor on the display.

This command is used in response to the Query Display Manager Highlight command when the highlight feature is on. The command defines the display area that is currently highlighted.

The Current Character Table Configuration Status command is used in response to the Query Display Manager Current Config command. It informs the NI about the current character table configuration of the display manager.

The Default Character Table Configuration Status command is used in response to the Query Display Manager Default Config command. It informs the NI about the default character table configuration of the display manager.

The Time and Date Format command is used in response to the Query Display Manager TAD command. It reports on the format that the IT uses to present the time and date information to the user.

This command is used in response to the Query Display Manager Icon command. It gives the current state and cadence of the selected status bar icon.

This command is used in response to the Query Display Manager Backlight command. It gives the current state of the backlight. The backlight is controlled by the NI with the Display Backlight Control command.

This command is used to respond to the Query Display Manager Highlight command when the status of the highlight is off.

