---

title: Multi-participant online activities
abstract: Multi-participant online activities are described. In one or more implementations, a protocol is described which ties an online activity (e.g., an online game) to an instant messaging infrastructure. For example, an online game may leverage the instant messaging infrastructure to form rosters of participants for participation in the online game, Once the roster is formed, the instant messaging infrastructure may further manage the presence of the participants in the online activity, such as which users join and cease participation in the online activity and notify other users of these changes. Further, the state of participation in the online activity may be stored such that the users may continue between sessions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07664816&OS=07664816&RS=07664816
owner: Microsoft Corporation
number: 07664816
owner_city: Redmond
owner_country: US
publication_date: 20050610
---
A user has access to a variety of online activities that are accessible over a network. For example the user may play an online game in which the user interacts with a number of other users over a network. For instance a plurality of users may each access an online poker game to play cards against each other participate in an online sports game in which each of a plurality of users are members of the same team and so on. Because the online activity is accessible via a network the users may access the online activity from a wide variety of geographical locations such as within a city across a country and even around the world.

Typical online activities that involve instant messaging however utilize static rosters such that participation in the activity is limited to those who were initially a part of the group that initiated the activity. Therefore each participant was required to manually join the online activity before participation in the online activity was permitted for each of the users. Additionally current online activities are typically performed by a single user or a group that is created on an ad hoc basis. Therefore to participate in the online activity each user is required to perform multiple steps a result of which may be that no other users are even available to participate in the online activity. This may result in user frustration even to the point that the users choose to forgo participation in the online activity. Thus the online activity may be underutilized which also results in lost business opportunities to a provider of the online activity.

Multi participant online activities are described. In one or more implementations a protocol is described which ties an online activity e.g. an online game to an instant messaging infrastructure. For example an online game may leverage the instant messaging infrastructure to form rosters of participants for participation in the online game. Once the roster is formed the instant messaging infrastructure may further manage the presence of the participants in the online activity such as which users join and cease participation in the online activity and notify other users of these changes. Further the state of participation in the online activity may be stored such that the users may continue interaction with the online activity between sessions.

The same reference numbers are utilized in instances in the discussion to reference like structures and components.

Traditional online activities that involve instant messaging such as online games are typically limited to static rosters. For example traditional multi participant game models that are utilized in conjunction with instant messaging require a first user to send an invitation to play a game to another user and await a response. However the game when launched may be static in terms of not adapting to users when coming online or going offline . This may lead to user frustration and even discourage users from participating in the game.

Techniques are described in which a protocol for a messaging system e.g. an instant messaging system is utilized such that an online activity may leverage the messaging system. For example a user may launch a multi player game and then during the launch process specify groups of people that should receive a message. Those recipients are then joined in a conversation with the initiating user and are also given an opportunity to participate in the game. As new users come online of go offline the game may automatically reflect the changes in presence of the users. For example as a user comes online that user may see a roster of people conversing using instant messages and a roster of people playing the game. The user may then choose to join the online activities such as to participate in the instant messaging session and or play the game. Additionally the protocol enables users of different software and or hardware to participate in the activity by leveraging the messaging infrastructure. Further when users stop playing the game the state of the game may be saved such that when the members of the game come online again the previous state may be retrieved and offered to the users to continue where they left off.

In the following discussion an exemplary environment is first described which is operable to employ the multi participant techniques for online activities. Exemplary procedures and user interfaces are then described which may be employed in the exemplary environment as well as in other environments.

Although the network is illustrated as the Internet the network may assume a wide variety of configurations. For example the network may include a wide area network WAN a local area network LAN a wireless network a peer to peer network a public telephone network an intranet and so on. Further although a single network is shown the network may be configured to include multiple networks. For instance the online activity provider and the persistent object system may be communicatively coupled via a corporate Intranet to communicate one to another. Additionally both the online activity provider and the persistent object system may be communicatively coupled to the clients N over the Internet. A wide variety of other instances are also contemplated.

The online activity provider is illustrated as including an online activity manager module which is executable to manage online activities of the plurality of clients N over the network . The online activities managed by the online activity manager module may be configured in a wide variety of ways. For example the online activities may be configured as a game e.g. online poker interactive role playing games bridge chess and so on a presentation e.g. a slideshow presentation shown to the plurality of clients N and so on instant messaging and other online activities such as online meetings.

Each of the plurality of clients N is illustrated as including a respective one of a plurality of communication modules N . Each of the communication modules N is executable to participate in the online activity over the network . For example each of the communication modules N is illustrated as including a respective one of a plurality of online activity modules N which are representative of functionality for participating in an online activity. For instance the online activity modules N when executed by the respective clients N may be utilized to participate in online activities managed by the online activity provider over the network. In another instance the online activity modules N may provide an online activity without utilizing the online activity provider over a peer to peer network.

Each of the clients N for instance may execute a respective one of the online activity modules N to access the online activity provider to play online poker. Therefore each of the online activity modules N may communicate with the online activity provider which hosts the online activity. In another instance the online activity modules N are executable to provide an online activity themselves without the use of the online activity providers . One or more of the online activity modules for example may be utilized to host an online activity that is accessible by the client as well as other clients N through execution of their respective online activity modules N such as through a peer to peer network. A variety of other examples are also contemplated.

Each of the plurality of communication modules N is also illustrated as including a respective one of a plurality of messaging modules N . The messaging modules N when executed may be utilized to communicate messages over the network for receipt by the clients N . The messages may be configured in a variety of ways. For example the messages communicated by the messaging modules N may be configured as instant messages.

Instant messaging is a communication tool that enables two or more clients e.g. clients N to exchange messages via a network. For instance when the clients N are available at the same time over a network e.g. a peer to peer network instant messages may be exchanged in real time between the two users. In this way the instant messages may be utilized to support a text conversation between the clients in a manner that mimics how the clients N would participate in a typical spoken conversation.

Each of the messaging modules N is executable such that a respective one of the clients N may participate in an instant messaging session. For example the messaging modules N may be executed by the respective clients N to send text messages and graphics e.g. emoticons to each other. The instant messages are typically communicated in real time although delayed delivery may also be utilized such as by logging the text messages when one of the clients N is unavailable e.g. offline. Thus instant messaging may be though of as a combination of email and Internet chat in that instant messaging supports message exchange and may be utilized for synchronous communication e.g. is designed for two way live chats. For instance like a voice telephone call an instant messaging session may be performed in real time such that each client may respond to each other client as the instant messages are received.

In an implementation the messaging modules N communicate with each other through use of the online activity provider . The online activity manager module for instance may be executable to route instant messages between the messaging modules N . For instance the client may execute the messaging module to form an instant message for communication to client . The messaging module when executed communicates the instant message to the online activity provider which then executes the online activity manager module to route the instant message to the client over the network . The client receives the instant message and executes the messaging module to display the instant message.

In another instance when one or more of the clients N are communicatively coupled directly one to another e.g. via a peer to peer network the instant messages are communicated without utilizing the online activity provider . Thus as previously stated the messaging modules N are executable to provide an instant messaging session either in indirect communication through use of the online activity provider over the network and or directly over a peer to peer network.

The communication modules N are illustrated as including respective online activity modules N and respective messaging modules M to indicate an interrelationship between the modules. For example the online activity modules N may communicate with respective messaging modules M to leverage functionality provided by the messaging modules such as to send and receive messages form ad hoc and persistent groups and so on. The online activity modules N for instance may leverage the messaging modules N to create persistent groupings of the clients N to participate in online activities through interaction with the persistent object system .

The persistent object system is represented as having storage for a plurality of persistent objects where p can be any integer from one to P . Each of the plurality of persistent objects is persistent such that it continues to exist beyond termination of execution of a module that created the persistent object and or continues to exist past a session during which the persistent object was created. For example the communication module may be executed on the client to form and store the persistent object . Therefore even if execution of the communication module is terminated the persistent object may be called the next time the client or any other client logs on to the environment .

The persistent object includes a plurality of client references where h can be any integer from one to H . Each client reference corresponds to one of the plurality of clients N that the client desires to include for participation in the online activity. Additionally the plurality of client references may include a client reference to the creator of the persistent object e.g. client . Therefore the persistent object may be called by one of the other clients to include the original creator of the persistent object.

The persistent object after creation may be stored in storage such that even after termination of the execution of the communication module the persistent object and more particularly data included in the persistent object may be utilized to initiate group participation in the online activity by the clients N referenced by the client references . The persistent object may also include other data such as another persistent object for another grouping one or more actions performed by each client N referenced by the client references during participation in the online activity and so on.

The persistent object may be utilized to provide a variety of functionality. For example by providing for persistence of client references in the persistent object the persistent object may be reused to invite the clients N to participate in the online activity without having to perform a plurality of manual steps such as to select which of clients N are to participate in the online activity sending notifications that participation in the online activity is desired and so on. Additionally the persistent object may be configured to be callable by any one of the referenced clients. For instance client may leverage the persistent object which was created by client . Further each client that is referenced by the persistent object may be permitted to include a reference of another client thereby increasing membership of a group described by the persistent object. A variety of other functionality may also be provided through examination of the persistent object further discussion of which may be found in relation to . Although persistent groupings have been described other groupings may also be utilized which do not persist past expiration of an instant messaging session.

Although the persistent object system is illustrated as separate from the plurality of clients N and the online activity provider the functionality of the persistent object system may be incorporated into the environment in a variety of ways. For example the plurality of clients N may incorporate the functionality of the persistent object system such that communication over the network with the online activity provider is not required. In another example the persistent object system may be incorporated by the online activity provider an example of which is shown in relation to .

The online activity modules N may also leverage the functionality of the messaging module N to utilize the authentication system to verify that the clients N are who they say they are . For example the authentication system may include storage for a plurality of client accounts where i can be any integer from one to I . Each of the client accounts may include information for verifying the identity of a corresponding one of a plurality of clients N . Therefore the identity of the clients N may be established before permitting the clients N to participate in the online activity which protects against uninvited clients from participating in the online activity. Further discussion of the interaction of the online activity modules N with respective messaging modules N may be found in relation to .

Generally any of the functions described herein can be implemented using software firmware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module functionality and logic as used herein generally represent software firmware or a combination of software and firmware. In the case of a software implementation the module functionality or logic represents program code that performs specified tasks when executed on a processor e.g. CPU or CPUs . The program code can be stored in one or more computer readable memory devices further description of which may be found in relation to . The features of the techniques described below are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

Processors are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions. Alternatively the mechanisms of or for processors and thus of or for a computing device may include but are not limited to quantum computing optical computing mechanical computing e.g. using nanotechnology and so forth. Additionally although a single memory N is shown respectively for the servers and the clients N a wide variety of types and combinations of memory may be employed such as random access memory RAM hard disk memory removable medium memory and so forth.

In the system of the online activity provider is illustrated as incorporating the functionality of the persistent object system by including storage in the memory for the plurality of persistent objects . Each persistent object includes a plurality of client references and a description of a client act performed by the referenced client. For example the client act may describe the most recent text message sent by the client referenced by the client reference a move made by the client during an online game and so on.

The persistent objects may be configured to provide a variety of different functionality. The persistent object for instance may be examined by the online activity manager module hereinafter manager module in response to a request from the client to initiate a group to perform an online activity which is this instance is an instant messaging session in conjunction with an online game. The manager module is illustrated as including a connection module which represents functionality for managing a communicative connection between the clients N and the online activity provider and thus may act as a switchboard between the clients N themselves as well as the clients N with the servers .

Once the client has successfully obtained a connection with the servers for instance the client may request initiation of a group online activity of clients referenced by the persistent object . Therefore the manager module may be executed to query the persistent object to determine which other clients are to participate in the online activity. Based on this determination the manager module may select one or more of a plurality of messages configured as notifications where b can be any integer from one to B for communication to the referenced clients.

The manager module for example may select a notification from storage in the memory for communication over the network to client N . The notification may then be output through execution of the messaging module N on the client N . The client N may then decide whether to participate in the instant messaging session or an online game in conjunction with the instant messaging session based on the notification. In this example the persistent object is utilized to form the notification which includes an identification of each of the clients which are to participate in the online activity i.e. which clients were invited to participate in the online activity. If the client N is not currently available the notification may be stored for later output by the client N . For example the notification may be sent via email for output by the communication module N of the next time the client N accesses the network . A variety of other techniques may also be employed.

The manager module is also illustrated as including a presence module . The presence module represents functionality for determining which of the clients N are currently participating in the online activity. For example the presence module may be executed to monitor which of the clients log on and log off the servers to participate in the instant messaging session. In another example the presence module may also be executed to determine which acts are being and or were performed by participants in the instant messaging session. For instance the presence module may determine that the client is participating in the instant messaging session and is also playing an online game with another client N during the instant messaging session. In another instance the presence module may track instant messages sent by each of the clients.

The presence module may store data for later retrieval. For example the presence module may store this data as a part of the persistent object as illustrated may store this data separately from the persistent object and so on. For instance the manager module and more particularly the presence module may be configured such that the client act data is not persisted in the persistent object but rather is stored separately from the persistent object . Therefore the client act data may be erased when the instant messaging session is terminated without affecting the persistent object . A variety of other instances are also contemplated.

The client act data may also be utilized to provide a variety of other functionality. Continuing with the previous example in which client N was invited to participate in an instant messaging session with client when the client N logs on to the server to participate in the instant messaging session the presence module may communicate client act data in another one of the plurality of notifications to client N . Therefore this other notification may describe acts being performed and or were performed by other clients e.g. client which are already participating in the online activity. In this way the client N may be brought up to date as to the current status of the online activity. Further discussion of communication of the other notification to the client when joining the online activity may be found in relation to .

Each of the clients N is illustrated as executing a respective online activity module N and a respective messaging module N on a respective processor N which are also storable in memory N . Each of the messaging modules N is also illustrated as having a messaging application programming interface API N which is representative of functionality exposed for accessing the respective messaging modules N by external modules e.g. applications. The messaging APIs N may support a wide variety of functionality.

The messaging API for instance may support a property referred to as remote client such that a sender of data may be identified for N way applications such as an online game accessed by the plurality of clients N . For example an object model may be employed by the messaging module in which a channel object is utilized to configure a channel between the clients N for communication. The remote client property may be added to the channel object. In an implementation the remote client property is a read only property that returns a user object that contains a value when any of the following events are fired 

The following discussion describes multi participant online activity techniques that may be implemented utilizing the previously described systems and devices. Aspects of each of the procedures may be implemented in hardware firmware software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion reference will be made to the environment of and the system of .

The online activity module communicates with a messaging module through a messaging API to form a plurality of messages to a plurality of other clients block . For instance the online activity module may provide references to a group of other clients which are permitted to participate in the online activity via the messaging API . The messaging module upon receipt of these references e.g. client alias network address and so on forms communications which are broadcast over the network to the referenced clients N block . It should be noted that in this example the messages e.g. instant messages are sent to a plurality of other clients instead of to a single other client such that three or more clients may participate in the online activity.

The other clients upon receipt of the respective message outputs the message in a user interface such that the client is informed that participation in the online activity is available block . For example if each of the other clients is already executing a respective messaging module the message may be displayed during the conversation experience that gives each user in the conversation a way to join the multi participant online activity. In another example receipt of the message may be utilized to automatically invoke a method that starts an instant messaging conversation with the selected group of clients specified by the initiating client. If one or more of the clients have a version of the messaging module which does not support the online activity the message may include directions on where to obtain the updated version and or automatically install the updated version once accepted by the client. A variety of other examples are also contemplated.

The message when output may also describe which other clients are to participate in the online activity. For instance the message may indicate which client initiated the online activity and which other clients are invited to participate in the online activity. In this way each of the clients is informed as to the contemplated roster of clients for participation in the online activity.

The message when output may also be configured to receive an input which causes the respective other client to join the online activity block . For example the message may include a display of a button which when selected causes communication of another message to a source of the online activity which specifies that the client wishes to participate in the online activity. In this way each of the plurality of other clients may join the initiating client in participating in the online activity.

A state of the online activity may also be stored such that participation in the online activity may continue even as the presence of participants in the online activity changes. For example one or more of the participants may cease interaction with the online activity block . In response to the change in presence of the one or more participants a state of the online activity is stored block such as a current situation and history of an online game. Therefore the stored state may be retrieved when the one or more participants rejoin the online activity block such that the participants may continue where they left off . Further this state may be persisted between sessions such that the users may play a game even if the users are not online at the same time e.g. by alternating turns. A variety of other examples are also contemplated.

The client then specifies a group for participation in the online activity block . For example the client may specify the names of participants to form an ad hoc group which does not survive past the current session utilized to form the group e.g. a current instant messaging session. In another example a persistent object may be utilized further discussion of which may be found in relation to .

Before launching the online activity a conversation is created which includes clients specified in the group block . For example an instant messaging session may be initiated between the specified clients which references each of the clients that are authorized to participate in the online activity. If an instant messaging session has already been created e.g. the client is launching the online activity from an existing conversation window the existing session may be leveraged such that the clients may accept participation in the online activity before launching the online activity.

The online activity is launched for the initiating client block . For instance the online activity may be launched such that the initiating client is the first participant with each of the specified clients to follow as subsequent participants in the online activity.

A message is then output in a user interface which indicates that the online activity is available to each of the specified clients block . For example another instant message may be communicated that the online activity has been launched and the clients may now join the activity. As clients join the online activity is launched for each joining client block . For example each client may launch a respective online activity module to participate in the online activity.

As clients join and leave the online activity presence of the clients may also be updated block . For example messages may be communicated each time a client joins or ceases participation in the online activity that indicates the change and described which clients are still participating in the online activity. In this way the participating clients are kept updated as to the current state of participation in the online activity.

The client may specify a name of the group and provide a reference e.g. a network address to the one or more other clients which are to participate in the group block . For example the client may name the group such that the other clients can readily determine a purpose of the online activity e.g. poker meeting to discuss and so on and provide a network address e.g. an email address for locating each of the other clients. In another example the reference is a machine readable name such as a globally unique identifier.

A persistent object is then created and stored which includes references to each of the clients and which includes the name of the group block . For example the messaging module may be executed to provide a user interface from which the client may receive the name of the group and the network addresses. In another example the specifying and the creation of the persistent object may be performed automatically. For instance the client may be actively participating in the online activity with the other clients. The client may then receive an input which selects a create group function. By selecting the create group function the client may automatically create a persistent object which includes a reference to each client that is currently participating in the online activity and a name of the online activity. In another instance the persistent object includes a reference to each client that has participated in the online activity during a session of the online activity. Thus in these instances the client does not manually provide the references e.g. network addresses of the client and the other client. A variety of other techniques may also be utilized to create the persistent object.

After creation of the persistent object references to the one or more other clients are set as pending block . A notification is also configured for each of the other clients i.e. the pending clients to invite the other clients to participate in the online activity block . For example the other data in the persistent object may describe whether a client referenced by the persistent object has accepted the invitation to participate in the online activity has rejected the invitation has not yet responded to the invitation and so on. This information may describe the presence of the group in relation to the online activity and may be communicated to the clients to apprise the clients as to a state of participation in the online activity. Further discussion of presence of the group may be found in relation to the following figure.

Based on the output one or more of the clients elect to join the group and send a response which references the respective client and the group block . For example the client may reply to the notification. The reply may reference the client and indicate whether the client wishes to participate in the online activity. In an implementation the reply may be automatically formed from the notification. For example the notification may include buttons for accepting or declining participation in the online activity the selection of which causes the reply to be configured and communicated back to the server .

The clients are then verified for participation in the online activity and if so the status of the respective client is changed to active block . For example the server may communicate with the authentication system to determine whether the identity of the clients N is valid such as by comparing a user login ID and password. The server may also compare the identity to the client reference to determine whether the clients are permitted to join the group. If the clients are permitted and are valid the server may set the client s status to active indicating that the client is now able to participate in the online activity.

Each added client is then notified as to an act that was performed by other clients that joined the group block . For example the notification may be formed for communication to the added client which describes acts that were performed by other clients in conjunction with the online activity before the added client joined the group such as a most recent instant message change in status e.g. the other client just joined the group and so on.

The other clients are also notified of the change in presence of the group block . For example notifications may be sent to each client that is currently participating in the group that the added client just joined the group. Thus each client that participates in the group may be kept informed as to the presence e.g. membership of the group with respect to the online activity.

A first client initiates a preexisting group block . For example is an illustration of an exemplary implementation in which the client executes the messaging module to output a user interface for initiating participation in on online role playing game in conjunction with an instant messaging session. The user interface includes a launch menu item which when selected causes display of a drop down menu which includes a plurality of items for selection by the client . One such item is illustrated as role playing which when selected causes the messaging module to initiate an instant messaging session between a plurality of clients referenced by the persistent object . Thus in this instance a conversation window already exists and therefore provides a context for the online activity.

The first client then communicates with an online activity provider to create a session for the online activity block . For example the messaging module may communicate with the manager module over the network to ask for creation of a named session for the online activity. The client may provide a name e.g. a GUID for the session. The instance of the messaging module that created the session is then connected to the named session which may persist for the duration of the online activity and provide roster management for the participants in the online activity.

A notification is sent to each other client referenced by the persistent object which indicates that participation in the group is available block . For example is an illustration of an exemplary implementation in which client of is communicatively coupled to another client over the network . The other client in this instance is referenced by the persistent object of and likewise includes a user interface for output. Client is illustrated as being utilized by Adam and client is illustrated as being utilized by Bob .

Client sends the notification over the network to client for output. The notification may be configured in a variety of ways. For instance an extensible markup language data structure may be utilized an example of which is as follows 

The notification may then be output on each available client which is configured for selection by the client to participate in the group block . for instance is an illustration of an exemplary implementation in which the user interface of the other client of is shown as outputting the notification received from the client. The notification in this instance indicates an originator of the invitation e.g. Adam and also indicates another client which has been invited to participate in the online activity. The notification is also illustrated as including an accept button and a decline button. Selection of the decline button causes a response to be communicated to the client e.g. Adam that the other client e.g. Bob does not wish to participate in the discussion group at this time. However the other client may wish to participate at a later time and may then join the activity then. Thus in this example the roster of the online activity is dynamic such that changes may be made to the roster during performance of the online activity. The client may also interact with the notification e.g. select the accept button to cause a response to be communicated to the first client indicating acceptance of the invitation block .

The online activity is launched for the first client block e.g. the role playing game. For instance the online activity module may provide functionality for interacting through the messaging module with the online activity provider . It should be noted that this may be performed at least in part during before or after the sending outputting and interaction with the notifications by the other client blocks .

The manager module of the online activity provider in this example may then manage connections to the online activity for the other clients block . For example the manager module may manage the roster of the online activity and output notifications regarding a change in presence of the online activity block . for example is an illustration of an exemplary implementation in which the user interface of the initiating client and the user interface of the other client output notifications which relate to the change in presence of the discussion group.

The notification output by the first client in the user interface describes that Bob has joined the role playing game as character Y but another client referenced by the persistent object illustrated as Charlene is not yet available. Thus Adam is informed as to the current membership of the online activity e.g. the role playing game and acts performed by the clients.

The notification output by the other client also describes the current membership of the online activity. Likewise the notification may also describes acts which were performed by one or more participants of the online activity which is illustrated in that Adam is character X . Thus the joining client i.e. Bob is informed as to who is participating in the online activity and acts being performed in conjunction with the online activity.

Another client referenced by the persistent object then becomes available to participate in the group block . for example is an illustration of an exemplary implementation in which client N when available to participate in the instant messaging session outputs a notification received from the initiating client . In this implementation this client N was not available when the notifications that participation in the group were initially sent block . Instead the notification was stored in a queue for output by the client N through execution of the messaging module N when the client N became available. The notification is similar to the notification of and includes an accept button and a decline button. As before selection of either button causes a response to be sent to the online activity provider which indicates whether the client N has accepted or declined the invitation.

For example upon receipt of a response which accepts participation in the group the online activity provider communicates a notification to the other clients e.g. the third client which describes each client that is participating in the group and a corresponding action performed by the client block . Thus each of the other clients may output a notification regarding the change in presence of the group block . for instance is an illustration of an exemplary embodiment in which user interfaces and are shown for the respective clients N which relate to the change in presence of the group.

The user interface of client e.g. Adam outputs a notification which indicates that client N e.g. Charlene has joined the role playing game as character Z . Likewise the user interface of client e.g. Bob also outputs a notification which indicates that Charlene has joined the discussion group. A notification output in the user interface of client N e.g. Charlene indicates that Adam is character X and Bob is character Y . At this point each of the clients i.e. Adam Bob and Charlene participates in the instant messaging session block .

Although the procedure and implementations of were described in relation to an instant messaging session performed using an online activity provider similar functionality may be employed in a peer to peer network without departing from the spirit and scope thereof.

Although the invention has been described in language specific to structural features and or methodological acts it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts and acts are disclosed as exemplary forms of implementing the claimed invention.

