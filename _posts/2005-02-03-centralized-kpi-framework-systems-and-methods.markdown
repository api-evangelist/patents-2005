---

title: Centralized KPI framework systems and methods
abstract: The subject invention pertains to a centralized key performance indicator (KPI) framework and systems and methods of utilization. In particular, KPIs can be defined and centrally stored as data or metadata in a data store. Systems and methods are provided to enable, among other things, KPI definition, storage, identification of defined or available KPIs, and interaction with the KPIs. For instance, an interface is provided to allow KPI data to be requested and retrieved from a source such as a database. A generic application program or users thereof can then interact with and display KPI data without knowing anything a priori about the stored data or the structure thereof.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07716253&OS=07716253&RS=07716253
owner: Microsoft Corporation
number: 07716253
owner_city: Redmond
owner_country: US
publication_date: 20050203
---
This application claims the benefit of U.S. Provisional Application Ser. No. 60 586 541 filed Jul. 9 2004 entitled Systems and Methods to Analyze Database Data the entirety of which is incorporated herein by reference.

The subject invention relates generally to computers and more particularly toward databases and key performance indicators KPIs .

Computers and other related technology pervade modern business enterprises as well as other organizations. Businesses utilize computers to improve the productivity of their employees and manage operations. Today businesses rely on a plurality of performance data derived from enterprise resource planning ERP software customer relationship management CRM software as well as spreadsheets and other data files. Unfortunately each system defines and presents data in a different manner. Moreover each system provides information on different aspects of a business operation. Hence business professionals must expend a large amount of time and energy to consolidate and digest great quantities of data to determine what is important to its business and its future goals. Key performance indicators can facilitate providing a business decision maker with a consolidated understanding of company performance. This allows executives and decision makers to keep track of the pulse of business and act quickly to take advantage of opportunities to propel business forward toward established goals and objectives

Key performance indicators KPIs are customizable business metrics utilized to present the status and trends in an organization in an easily cognizable manner. Once a business or other organization defines its mission or objectives KPIs can be employed to measure progress toward those objectives. In general each KPI can have a target value and an actual value. The target value represents a quantitative goal or object that is considered key or critical to the success of a business or organization. Thus target values can be quite different for distinct businesses as their goals and focus is often dissimilar. For example business can have KPIs concerning sales net profit and debt ratio while a school may define a KPI related to graduation rate. Of course the target value can change over time but is for the most part a stable value. The actual value is the value that fluctuates often based on the actions and performance of a business. Actual values can be compared to target values to determine a business health or progress toward the target value. Thus KPIs are advantageous in that they provide a clear description of organizational goals and distill vast quantities of data down to a single value that can be utilized to continuously monitor business performance and its progress toward organization benchmarks.

KPIs and scorecards i.e. groups of KPIs are not a novel business concept. Business decision makers have been utilizing KPI applications for some time now to measure the health of their business. KPI applications conventionally contain logic expressions for calculating the value of the KPI. These applications can then retrieve specific data specified by the expression and execute the logic to determine the KPI value. Subsequently such calculated data can be displayed in a convenient manner such as presenting the KPI value the threshold and some graphical indication of performance based on the value and the threshold. For example if the value is above the threshold then a graphical representation of thumbs up can be displayed. Alternatively if the value is below the threshold then a graphical representation of thumbs downs can be displayed.

Development of a KPI application includes several steps. First a user or organization is queried to determine which KPIs they would like to be implemented in accordance with their mission and goals. Next the functions or expressions that produce the KPIs are determined based on knowledge of the relevant database schema and specified in a specific API application. This enables the application to interact directly with a database based on its knowledge of the database schema to retrieve data necessary to calculate KPI values.

The following presents a simplified summary of the invention in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.

Briefly described the subject invention pertains to a centralized KPI system or framework as well as various systems and methods of use and interaction therewith. Unlike conventional stand alone KPI applications the subject invention provides an automated way for generic applications that do not know anything about a particular business application to be able to interact with and display KPI data on any business data structure e.g. cubes tables . . . without a priori knowledge of the actual data schema or logic. Furthermore generic applications do not have to designate any processing time to calculate KPI values. The values can be determined and stored centrally for example by a server. This allows generic applications and tools to display KPIs even those created after the generic application.

According to one aspect of the invention a system is provided for specifying and storing KPI components to a data source. KPI components can include definitions for one or more KPIs. Pluralities of systems are disclosed to facilitate definition of KPI components via specification of KPI metadata such as properties attribute or elements some of which are specified as values and others as expressions. Once a KPI component is defined it can then be stored centrally to a data source such as a database e.g. multidimensional database cube table . . . . According to a specific aspect of the invention such centralized storage can provide for tight coupling between KPIs and warehouse data. Furthermore centralized storage of KPI ensures consistency of KPI data amongst a myriad of users.

According to an aspect of the invention an expression engine can be associated with the central data source. The expression engine can execute functions or expressions specified in a KPI component to generate values. This can be accomplished by retrieving specified data from the data source and calculating the value specified by the expression. According to a specific aspect of the invention the expression engine can be proactive and automatically evaluate expressions and cache results to facilitate real time interaction with KPIs. Furthermore the expression engine can automatically create expressions or calculations and perform KPI metadata adjustments in order to support specified KPIs.

According to another aspect of the invention several interfaces are provided to enable interaction with centrally stored KPI components. For instance an application interface is provided to allow a generic application component to discover available KPIs for use. More specifically an application can send a request for available KPIs via an interface. This request can then be processed and data regarding the stored and available KPIs e.g. a list of KPIs transmitted back to the application via the interface. The transmitted metadata can include among other things the KPI name. Thereafter the application can interact with and display KPI data including but not limited to value goal status trend and weight by transmitting queries to the data source for execution such as but not limited to KPIValue KPIGoal KPIStatus KPITrend and KPIWeight .

According to yet another aspect of the invention a system and method are provided for KPI component extensibility. KPIs and KPI components are defined by a set of properties or attributes. For purposes of efficiency and optimized performance a system can be designed with a fixed number default properties or attributes. However later if particular attributes are desired that are not presently provided an extension component can be defined specifying those desired or custom attributes and linked to one or more KPI components.

According to another aspect of the invention the central data store can be part of a database management system or server remote or proximate to applications that interact therewith. Hence data defining KPI component can take advantage of the efficient storage management and security associated with such systems.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the invention are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways in which the invention may be practiced all of which are intended to be covered by the present invention. Other advantages and novel features of the invention may become apparent from the following detailed description of the invention when considered in conjunction with the drawings.

The present invention is now described with reference to the annexed drawings wherein like numerals refer to like or corresponding elements throughout. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed. Rather the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention.

As used in this application the terms component and system and the like are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an instance an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computer and the computer can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

The word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs.

Furthermore the present invention may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed invention. The term article of manufacture or alternatively computer program product as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick . Additionally it should be appreciated that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN . Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the subject invention.

Artificial intelligence based systems e.g. explicitly and or implicitly trained classifiers can be employed in connection with performing inference and or probabilistic determinations and or statistical based determinations as in accordance with one or more aspects of the subject invention as described hereinafter. As used herein the term inference refers generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources. Various classification schemes and or systems e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines . . . can be employed in connection with performing automatic and or inferred action in connection with the subject invention

Turning initially to a key performance indicator system is illustrated in accordance with an aspect of the subject invention. The system provides a framework for development implementation and execution of KPIs. System can include an application component and a data source including data and KPI component . Application component can be a generic computer program or computer program product as defined herein including a plurality or executable instructions for performing one or more functions. One of those functions can include presentation of key performance indicators. Data source is a computer accessible component that provides and or stores data . Accordingly data source can be a computer database residing on a computer readable medium or part of a database management system or server. Data in data source is stored in an organized fashion to facilitated search and retrieved of particular data. There are an infinite number of ways to organized data in source . According to one aspect of the invention data source is organized as a multidimensional database wherein data storage structures include cubes comprising dimensions hierarchies and measures to name a few. However it should be appreciated that other types of databases and storage structures are contemplated by and considered within the scope of the present invention. KPI component includes KPI definitions or metadata specifying a particular key performance indicator.

Key performance indicators can be defined as a collection of properties attributes and or elements including but not limited to name id description display folder annotation value goal trend weight status graphic trend graphic current time member and associated measure group id. The name attribute can simply provide a name or label for the KPI for example quarterly revenue or customer satisfaction. To help further distinguish one KPI from another the id attribute can be used as an identifier of the KPI. Description can state or describe the KPI to facilitate understanding thereof. The translation attribute can provide a set of language translations for the KPI to facilitate use in multilingual systems and environments. The display folder attribute identifies or associates a KPI with a display folder. This can be employed by an application to determine presentation of KPIs to a user. For example the KPI named Sales can be associated with a folder named Profitability. The display folder attribute can also facilitated hierarchical representation of KPIs. For instance the folder named Profitability including the Sales KPI can also be associated or a child or with a folder named Financial Scorecard. The annotation attribute can be utilized to identify and facilitate linking to a KPI schema extension component as described in further detail infra. The value attribute can provide an expression that returns the actual value of the KPI. For example the function can specify relationships between stored data to generate a value such as the total amount of sales or revenue e.g. 8 000 000.00 or a rate e.g. 8 0.08 . . . . The goal element can be an expression that returns the goal of the KPI for instance 100 customer satisfaction rating or a number representative thereof. The trend attribute can be an expression that returns the trend of the KPI over time. Often times the trend is normalized to an expression returning values between 1 and 1 indicating a downward trend an upward trend or something in between. The weight attribute can be an expression that returns the weight of the KPI. For example where the KPI has a parent KPI this attribute might define the weight of the contribution of the subject KPI to its parent. The status and trend graphic attributes can be employed to identify a particular graphical representation for the status and trend respectively to facilitate fast and easy understanding of the KPI. For instance a stop light or a gauge can be utilized to represent the status whereas an arrow can represent the trend. The current time member element can be an expression that defined the current time member that is relevant for the KPI. This allows different KPIs to have different time members possibly different from the default member of the time dimension in a multidimensional context. Finally the associated measure group id attribute can represent the associated measure group for the KPI. This can be utilized to specify the dimensionality of the KPI. It should be appreciated that the aforementioned KPI attributes or elements have be presented merely as an example set. Additional attributes may be included and or some of the above elements can be excluded. Furthermore some of the attributes may be optional while others may be mandatory.

In accordance with an aspect of the invention the KPI component definitions can be part of the metadata that describes data . As mentioned data can be organized in a manner conducive to search and retrieval of data. However it would be almost impossible to find and retrieve data if an entity were not aware of the manner in which the data is stored. Metadata provides such information and can be located within the data store thereby constituting part of the data. In a multidimensional database environment the metadata can include information pertaining the cubes in the data store the dimensions available in a particular cube hierarchies available in particular dimensions levels available in dimensions as well as information about the measures available in the data source properties members and functions. Similarly in a relational database environment metadata can pertain to tables rows columns and relations amongst structures. KPI definitions can be provided as part of the data store metadata and accessed in a similar manner. Furthermore it should be appreciated that KPI component definitions can be woven within the metadata such that KPIs are associated with relevant data and metadata. This technique is unique in that as an entity navigates around data in a cube for instance the definition of the KPI the status trend and graphics will change as they are associated with particular data.

Central storage of KPI components with other data has additional advantages besides tight coupling between KPI components and data or metadata. According to an aspect of the invention data source or store can be part of a database management system or server. Hence KPI components can take advantage of the efficiencies in storage management and security among other things inherent with such systems. Furthermore such a system provides for a single consistent view of KPIs and associated metrics. This remedies known problems with conventional KPIs applications. In particular different decision makers at different levels have been known to identify different key performance indicators. Thus there has been inconsistency in the definition of organizational goals and objectives and hence key performance indicators. Additionally even when decision makers agree upon a particular KPI each decision maker could and often would calculate the KPI differently. Centralized KPI storage ensures that everyone will be viewing the same data.

The system thereby provides a generic or standard framework for defining and interacting with KPIs. In this system the application does not need to be aware of desired KPIs rather it can simply utilize and interact with KPIs specified in the data source even those specified later than the application. Thus rather than determining the desired KPIs and binding the implementation thereof to a specific KPI application the system enables any client application to utilize and display KPIs as they are defined as part of the data not a specific application. In particular a client application can interrogate the data source to determine what KPI components are provided thereby and how they are defined. For example an entity could determine what the status graphic is for a particular KPI and when it should show green yellow and red.

Furthermore it should be appreciated that expression engine can engage in proactive or anticipatory caching to further aid in producing results in real time. In accordance with an aspect of the invention inference component can be employed in conjunction with expression engine to among other things facilitate determining when expressions should be evaluated and cached in memory. Inference component infers or generates inferences as that term is defined herein concerning whether particular KPI component expressions will be needed or requested. Based on the retrieval or requests for other data inference component can generate an inference value representing the probability that a KPI component expression or group of expressions will be requested and thus need to be evaluated. Once the inference value is greater than or equal to a threshold value the expression engine can proactively begin evaluating and caching expression results. For example if data is being requested concerning a particular data cube or other structure then the likelihood that KPI components associated with that cube or structure will be high. Accordingly the expression engine can initiate evaluation and caching of KPI component expressions.

It should also be appreciated that inference component and or other intelligent components can be employed by the expression engine to automatically and intelligently generate expressions or calculations and or perform metadata adjustments in order to support specified KPIs. For example KPI definitions can be specified in somewhat of an abstract manner and the expression engine can generate specific or optimized calculations for particular data or data sets. Likewise expression engine can produce new or adjust old KPI component definitions to support specified KPIs.

Design component can include an intelligent assist component and a debug component among other components. Intelligent assist component enables programmatic assistance to be provided to a user. In particular intelligent assist component can interact with a code editor or graphic user interface GUI to facilitate specification of one or more KPIs wherein the code editor or GUI provide a code specification and editing mechanism. For example a programmer can manually specify code and or cut and paste code blocks utilizing a graphical interface within the editor. Intelligent assist component can provide real time assistance to the code editor based on the source code language s operated thereon by the editor. The intelligent assistance can be predictions suggestions or inferences based on code context. For example statements functions classes etc. can be automatically completed based on specification of a portion thereof. Debug component can analyze the specified code and generate error messages and or suggestive corrective actions in response to syntactic and or semantic errors in the specified code.

Turning briefly to an exemplary graphical user interface is illustrated. Graphical user interface can be employed to facilitate specification of KPIs. At a text box can display a list of KPIs. Upon specification of a KPI its name can be displayed at . Selection of one of the KPI names in the text box can then result in display of particular attributes in other locations to enable editing. Selection of tab results in display of selectable metadata in text box . Alternatively selection of tab can result in the display of selectable functions in text box . Text box provides a space for specifying the name of a KPI. This box can be populated by typing a name therein or alternatively selecting a KPI from list . A drop down menu is provided to enable selection of an associated measure group. Text box is provided for specification or display of the function defining the KPI value here Measures . Gross Profit Margin . Text box can be populated by simply tying in the function and or in selection of metadata and or functions from text box . Drop down menu provides a mechanism for selecting and displaying a status graphic. Here a cylinder has been selected. Similarly drop down menu provides a mechanism for selection and display of a trend graphic. As shown a standard arrow is displayed. Text boxes and are provided to enable specification of expressions defining KPI attributes status and trend. This code can be specified manually by typing in the expressions and or by employing via selection metadata and functions provided displayed in text box .

Returning to upon specification of KPI definitions employing design component such data can be passed or retrieved by generation component . Generation component can then produce or materialize a KPI component in a standard format. For example generation component can receive one or more DDL statements specifying one or more KPI components. The generation component can employ or compile such statements to generate an XML eXtensible Markup Language file or structure that can be stored to the data store . Upon storage the KPI components can be utilized as described throughout. Furthermore it should be noted that according to an aspect of the invention a database administrator could utilize system to perform the function of defining and storing KPI to a central storage location.

Turning to a KPI interaction system is depicted in accordance with an aspect of the invention. KPI interaction system provides a means and mechanism for interacting with KPI components. Interaction system can include a receiver component and a retriever component . Receiver component receives a requested from an entity for data concerning a KPI. This requested is passed on to retriever component . Thereafter retriever component retrieves the requested KPI data from a data store and returns it. According to one aspect of the invention interaction system can correspond to a query system and language including but not limited to MDX Multi Dimensional eXpressions . MDX is a system for retrieving manipulating or otherwise interacting with multidimensional data or objects. For example MDX provides commands or functions for creating and deleting cubes dimensions measures and other objects. Such a system can be extended by adding new MDX functions to retrieve members or data corresponding to a given KPI. In accordance with an aspect of the invention functions can be added including but not limited to KPI value KPI goal KPI status KPI trend KPI weight and KPI current time member. Each of these new functions can receive a KPI name or identifier and return a value specific to its particular function. For instance the value function can return a KPI value the trend function can return the value for the trend e.g. between 1 and 1 and so forth. With respect to the system the receiver component receives a KPI query e.g. KPIValue KPIValue KPITrend . . . and passes it to retriever component which executes or schedules execution e.g. on another component such as execution engine of the function or query on the data source. Upon receipt of the value retriever component can pass or communicated the value to the receiver component which can subsequently pass or communicate the result to a requesting entity such as a generic application.

KPI interaction system can also be employed to retrieve information about or discover KPIs as well as executing queries on KPIs and returning results. Conventionally stand alone KPI applications contain the definitions and executable code for generating KPIs. However in accordance with an aspect of the subject inventions client applications that wish to use or support KPIs need a mechanism to determine what KPIs are available for their use. System provides such a mechanism. In particular receiver component can receive a request for information regarding KPIs such as a list thereof. For example the request can be in the form of query or command such as DiscoverKPIs . The retriever component upon receipt of this request can query a data source and retrieve information regarding all available KPIs i.e. defined KPIs . This information can include such things as the name of the KPI the id a description of the KPI display folder and or other KPI attribute or element data. According to one aspect of the invention the KPI component definitions can be store in a marked up format such as XML hence results can be returned in the same format. For example 

Extension system includes KPI component extension component and linking component . As previously discussed a KPI component defines a KPI via a collection of attributes or elements. Extension component can provide one or more additional attributes or elements. Linking component can link or tie the extension component to the KPI component . This linking extends the original attributes or elements provided by the KPI component with the new attributes or elements provided by the extension component. In accordance with one aspect of the invention such a mechanism can correspond to placing a link or pointer into a designated attribute of the KPI component such as the annotation attribute. If the KPIs are defined in a markup language such as XML then the extension component can be defined similarly. System therefore enables dramatic extension of KPI information.

Turning to an exemplary application interface component is depicted in accordance with an aspect of the invention. Interface component can facilitate interaction of an application with a data source or store. As disclosed in previous sections an application utilizing KPIs will necessarily need to query for KPI data. Interface component can provide a connection between an application and a data source. Interface component can include an application adapter component and a data provider adapter component . Application adapter component can receive data or queries from an application and return results to the application. Data provider adapter receives a request from the application adapter and processes such a requested on a data source. Upon receipt of results the data provider adapter can communicate the results to the application adapter which can then provide such results to the requesting application perhaps for further processing. For example assume an application is to display a KPI value and thus needs to retrieve such value. Utilizing interface an application will request such a value from a data source for instance in the form a function or command KPIValue. Application adapter can receive this command and pass it to data provider adapter . Data provider adapter can then execute or schedule the execution of the command function or some version thereof on the data source and retrieve or receive the result e.g. 80 000.00 . Data provider adapter can then provide the result to the application adapter which can then communicate the result to the application.

Such an interface component can employ extended versions of conventional technologies including but in not limited to XMLA OLE DB OLAP ADOMD.net and JDBC. XMLA XML for Analysis is a simply object access protocol SOAP based XML application program interface API . It standardizes data access to a data provider over a network such as the Internet. It requires no client application software and provides to access methods Discover and Execute. Discover is a command that can be utilized to obtain metadata such as available data sources and their properties. Execute can be employed to execute multidimensional expressions MDX or commands to query and retrieve data from a data source. In conjunction with aspects of the subject invention XMLA can be employed to discover KPI components and execute MDX commands to retrieve specific KPI data elements or values. The other mentioned technologies are more proprietary or implementation specific. OLE DB OLAP is a low level API for accessing data from a data source. ADOBD.net is a data access interface the facilitates retrieval of multidimensional data and data object such as CubeDef dimension level member for the Visual Basic programming language. Similarly JDBC Java DataBase Connectivity provides a programming interface for connecting to databases from programs written in Java. The subject invention contemplates modifications to the aforementioned and other interfaces or components thereof to support discovery of stored KPI components and retrieval of KPI data such as attributes and values from a data source.

In view of the exemplary systems described supra methodologies that may be implemented in accordance with the present invention will be better appreciated with reference to the flow charts of . While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks it is to be understood and appreciated that the present invention is not limited by the order of the blocks as some blocks may in accordance with the present invention occur in different orders and or concurrently with other blocks from what is depicted and described herein. Moreover not all illustrated blocks may be required to implement the methodology in accordance with the present invention.

Additionally it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media.

Turning to a method of interacting with key performance indicators is depicted in accordance with an aspect of the subject invention. At available KPIs are determined or discovered. Unlike conventional techniques where a KPI application is a specific stand alone application the subject invention stores KPI data and definitions as data in a data source such as a database. Accordingly if a generic application wishes to interact with or display KPI data it must first determine the KPIs that are available. This can be accomplished by querying or interrogating the data source. More specifically a command or query can be issued to discover and provide information about the available KPIs. For instance an XML document can be generated and provided describing available KPIs and their attributes. Once the available KPIs are discovered or identified then they can be accessed and utilized. At a request can be issued for data concerning one or more KPI attributes or elements. For example an entity may like to know the value of a KPI the status the trend and the like. In such a scenario a request for such data can be issued. According to one specific aspect of the invention this request can be in the form of an MDX or multidimensional expression for a multidimensional database. This request can then be transmitted via an interface from a requesting entity such as a generic application to a data source or a data provider. The query can then be executed on the data source and data returned. At the requested data can be received by the requesting entity.

Turning to a method for extending KPI components is illustrated in accordance with an aspect of the invention. For purposes of efficiency and optimization KPI components will not contain every possible attribute that may be useful and desired for a particular application. Accordingly method is provided to describe a method or process for extending KPI components. At new attributes are specified for a KPI. This can be done manually be specify for example an XML document describing the new attributes. Alternatively a design system or environment may be employed to facilitate such development. Once an extension component is created specifying new attributes at it can be linked to a current KPI component or definition at . According to one aspect of the invention default KPI components can include a specific attribute to enable extensibility such as the annotation attribute. To link a KPI component to an extension component a designated attribute can be altered to act as a pointer to the extension component. Once this is done the KPI will contain all the properties or attributes in the original KPI definition as well as those in the extension component.

In order to provide a context for the various aspects of the invention as well as the following discussion are intended to provide a brief general description of a suitable computing environment in which the various aspects of the present invention may be implemented. While the invention has been described above in the general context of computer executable instructions of a computer program that runs on a computer and or computers those skilled in the art will recognize that the invention also may be implemented in combination with other program modules. Generally program modules include routines programs components data structures etc. that perform particular tasks and or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations including single processor or multiprocessor computer systems mini computing devices mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics and the like. The illustrated aspects of the invention may also be practiced in distributed computing environments where task are performed by remote processing devices that are linked through a communications network. However some if not all aspects of the invention can be practiced on stand alone computers. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to an exemplary environment for implementing various aspects of the invention includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 11 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that the present invention can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like displays e.g. flat panel and CRT speakers and printers among other output devices that require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems power modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above includes examples of the present invention. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the present invention but one of ordinary skill in the art may recognize that many further combinations and permutations of the present invention are possible. Accordingly the present invention is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the terms includes has and having are used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

