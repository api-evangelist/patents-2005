---

title: Creating, storing and viewing process models
abstract: The location of a drawing of an activity, a property of an element in the drawing and the structural relationship of elements in the drawing are stored in a database. The database is accessed to form a user interface that provides a hierarchical representation of activities and the elements within activities.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07917555&OS=07917555&RS=07917555
owner: Microsoft Corporation
number: 07917555
owner_city: Redmond
owner_country: US
publication_date: 20051123
---
The present application claims priority benefit of U.S. Provisional Application 60 658 130 filed on Mar. 3 2005.

Business applications are computer programs that are designed to assist in performing one or more business tasks that form part of an overall business process. Before such applications can be written a business analyst typically studies the business and creates a model of the processes used in the business.

Currently the processes are documented using a technical drawing program such as Visio produced by Microsoft Corporation. In particular the technical drawing program is used to place shapes representing tasks events or decision points and arrows that connect these shapes into a document to produce a flow diagram representing the process. While defining a business process in a technical drawing program is intuitive it is difficult to access the information contained in the drawing without opening the technical drawing document. In addition the amount of information about the elements in the process is quite limited.

The discussion above is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

The location of a drawing of an activity a property of an element in the drawing and the structural relationship of elements in the drawing are stored in a database. The database is accessed to form a user interface that provides a hierarchical representation of activities and the elements within activities.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter

Embodiments are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with various embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers telephony systems distributed computing environments that include any of the above systems or devices and the like.

Embodiments may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Some embodiments are designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules are located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing some embodiments includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer is operated in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one preferred embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device .

A process modeling system is provided that allows business analysts to define business processes using a technical drawing program to draw the structures of the processes and to define metadata for elements in the processes. The structure drawings and metadata are stored in a database that may be explored to produce a hierarchical view of the elements in the processes.

An activity diagram can be for a process task or a step. Steps are the smallest measure of an activity and can be combined using events gateways and flows to form a task. An event can trigger the processing of one or more steps or return a result after a series of steps. Gateways can either be used to direct the process down one of two flow paths or can be used to join two flow paths into a single path. Flows are connections between elements that indicate the flow of the process from one element to the next. Tasks are generally sequences of steps that are performed by a single persona or model user in a business. Sequences of tasks are joined together by events gateways and flows to form a process. One process may be embedded in another process as a sub process.

Tasks are generally sequences of steps that are performed by a single persona or model user in a business. Sequences of tasks are joined together along with events and gateways by flows to form a process . One process may be embedded in another process as a sub process.

As shown in processes do not link directly to tasks events or gateways . Similarly tasks do not link directly to steps events or gateways . Instead processes link to task references event references and gateway references . Task references event references and gateway references in turn link to task event and gateway respectively. Similarly tasks such as business task link to step reference event reference and gateway reference which in turn link to step event and gateway respectively.

Task reference step reference event reference and gateway reference allow multiple activities to reference the same elements without repeating the properties of the elements in the database. It also allows an activity to be defined before the underlying elements have been fully defined. Thus the process may be defined by placing a task reference an event reference or a gate reference in the process and then later defining a task event or gateway to satisfy that reference.

At step of technical drawing application of is used to produce activity documents with properties . provides an example user interface in a technical drawing application that can be used to form the process documents and properties. In a drawing pane a stencil and a properties pane are shown. In some embodiments templates are provided for drawing pane with a separate template for processes tasks and steps.

Elements are added to drawing pane from stencil which includes selectable examples of elements that may be placed into drawing pane . For example by placing the cursor on one of the elements in stencil pressing a button on the mouse and moving the mouse the element in the stencil will be selected and dragged into a position on pane . When the mouse button is released the element will be fixed in position in pane . Stencil can include elements such as a sub process box a task box a step box a start event an intermediate event an end event a decision gateway and a sequence flow . Other elements may be provided in stencil including multiple versions of the same type of element with different properties.

Properties pane provides a list of metadata for a selected element in drawing pane . If no element within drawing pane is selected properties pane includes metadata for the process task or step represented by the drawing document in pane . The element represented by the document as well as each of the elements in the template has a model ID. The model ID for an element uniquely identifies the element and the collection of metadata defined in the properties pane for the element.

Sub processes tasks and steps that are found within another process or task are separately defined in another drawing document. The model ID for that drawing document corresponds to the model ID of the process task or step element in the parent document.

Elements that have been defined by setting certain metadata properties in properties pane may be copied into other documents by selecting the element from a current document copying the element using a copy command and pasting the element into another document. If the model ID of the element is not changed when it is placed in the new document both documents will reference the same element with the same collection of properties.

Flow extends from start event and is defined by metadata . Metadata indicates that flow has a model ID of FLOW that it extends from the START and that it extends to a PROCESSA element. The metadata also indicates that this flow is a SEQUENCE flow.

Flow extends to sub process . Sub process has metadata that indicates that the model ID for the sub process is PROCESSA and that it is part of the BILLING process group. The metadata also indicates that process is not a root process and as such is a sub process. The metadata also indicates that process is not an end to end process.

A flow extends from process and has metadata . Metadata indicates that flow has a model ID of FLOW that it extends from an element with a model ID of PROCESSA and that it extends to an element with a model ID of GATEWAY. Metadata further indicates that flow is a sequence flow.

Flow extends to gateway which has metadata . Metadata indicates that gateway has a model ID of GATEWAY and is a DECISION type gateway. Metadata also identifies an expression that is evaluated when the process reaches gateway . In particular the expression is the combination of two Boolean values REQUIRES MGR and APPROVED BELOW. These two Boolean values are ANDed together in the expression. Two flows and extend from gateway . Flow has metadata and flow has metadata .

Metadata indicates that flow has a model ID of FLOW that it extends from an element with model ID GATEWAY to an element with model ID PROCESSB and that it is a SEQUENCE flow. The EXPRESSION VALUE parameter of metadata that flow is followed when the expression in GATEWAY has a value of TRUE.

Flow extends to sub process which has metadata . Metadata indicates that sub process has a model ID of PROCESSB is a member of the BILLING process group and is not a root process. Metadata further indicates that process is not an end to end process.

Flow extends from process and has metadata . Metadata indicates that flow has a model ID of FLOW that it extends from an element with a model ID of PROCESSB and extends to an element with a model ID END. Metadata further indicates that flow is a SEQUENCE flow.

Metadata for flow which extends from gateway indicates that flow has a model ID of FLOW that it extends from an element with a model ID of GATEWAY and extends to an element with a model ID of END and that it is a SEQUENCE flow. Further metadata indicates that flow is followed in the process when the expression in metadata for gateway is false.

Flows and end at end event which has metadata . Metadata indicates that end event has a model ID of END and is an end type event. In addition it indicates that end event produces a MESSAGE result type that is called APPROVALSTATE.

As can be seen from the example above the properties metadata includes properties of the elements such as Gateway Type and Trigger Type as well as structural relationship information that describes how the elements of the process are structurally related to each other in the drawing.

When the user wishes to save an activities document they invoke the save command at step of . Based on this save command a document saving method is invoked. At step document saving method determines if a database is accessible. If the database is not accessible the activity document and the associated properties of the elements are stored to a local storage device at step . This allows users to save changes to activity documents when working offline and allows analysts and developers to make changes to documents even when they do not have access to the database.

If the database is accessible at step the document saving method instantiates objects for each element in the process document at step . These objects contain properties that correspond to the properties found in properties pane . Saving methods set the properties of objects based on the property values found in property pane .

At step objects are used to store the metadata which includes structural relationships between elements and other properties of the elements and the location of the activity document in a database using a data access layer . In particular methods within objects are used to store the metadata of the objects in database .

Database includes a security layer that verifies whether the current user has write access to the activity documents that are being saved at step . If the user does not have write access a security error will be generated. In response to this security error saving methods will produce a dialog box at step informing the user that they do not have permission to change the activity document.

If database determines that the user has write access to the activity document database then determines if changes to the activity document have been locked out at step . Changes to an activity document may be locked out if another user has checked out the activity document from the database. This prevents users from making conflicting changes to the activity document and allows managers to capture a final version of the activity document. If the activity document is locked out the user is notified at step and the changes are not saved to the database.

If database determines that the activity document is not locked out at step the activity document and the metadata for the elements in the document are stored at step . Storing the activity document involves storing the document to a storage device and recording the location of the document in database .

As shown above programming objects are used to store the metadata of the activity documents. In particular the properties of programming objects are set to the properties of the metadata of the elements in the activity document before being stored to database . The elements in an activity document share many common properties including the model ID property. In addition the objects that represent these elements support many of the same methods including to the methods used to store the elements in the database.

Business task object and work item object inherit from task . Business operation object and web service object inherit from step object . Sequence flow object and message flow object inherit from flow object .

Process table includes a row entry for every process defined in the system. Each entry includes properties for the process such as model ID an indication of whether the process is a root process the process group for the process and a location for the corresponding drawing document. For example the process in the first entry of process table has a model ID of TOPPROCESS it is indicated as being a root process and as being part of the BILLING process group. Further the drawing document for the process is found at topproc.vsd.

Events table includes an entry for each event defined in any activity document. Each entry in events table includes properties for the event such as the model ID an event type which indicates what type of event is represented by the entry and a trigger for the event. For example the first entry in events table is for an event with a model ID of START that is a START type event that is triggered by the BUSINESSRULE trigger.

Gateway table provides an entry for each gateway in the system. Each entry in gateway table includes information such as a model ID for the gateway an expression that indicates the expressions to be evaluated at the gateway and the gateway type.

Task table provides a separate entry for each task defined in the activity documents. Each entry in the task table includes properties of the task such as model ID and the persona responsible for the task.

Step table provides a separate entry for each step found in the activity documents. Each entry in the step table includes a properties of the step such as model ID and a document used during the step.

Although certain properties are shown in process table events table gateway table task table and step table those skilled in the art will recognize that a separate field is provided in each of these tables for each property defined for the respective element in the object model.

Flow table provides an entry for every flow in the system. Flow table includes fields such as process ID to indicate which process the flow is found in model ID which indicates the model ID of the flow FROMOBJECT which indicates the model ID of the object the flow extends from and TOOBJECT which indicates the model ID of the object that the flow extends to.

Process relationship table provides an entry for each occurrence of a sub process in the activity documents. Each entry includes the model ID of the parent process and the sub process and thus provides an association between the parent process and the sub process.

Gateway Ref table Event Ref table Task Ref table and Step Ref table each provide an indirect link between a process or task and an element. Each table provides a field for the model ID of an activity in which the element is found and a field for the model ID of the element. For example Gateway Ref table shows an entry that associates a gateway with model ID GATEWAY with an activity with a model ID of TOPPROCESS. This association is constructed based on the fact that the GATEWAY element was found within the drawing document of the TOPPROCESS process.

As shown in Event Ref table the indirect link provided by the Ref tables allow two separate activities to reference a same entry in an element table. In Event Ref table there are two entries for the START event. One entry has TOPPROCESS listed as the model ID of a process that contains the START event. A second entry has SECONDPR listed as a process that contains the START event. Thus both entries refer to the same element which is defined in a single entry in events table .

Once the data is stored in database it may be used to generate a hierarchical display such as the one shown in user interface of . In a work model explorer user interface is shown in which the root processes of the system are grouped together in process groups such as purchasing HR and pay . In each process group a set of processes are defined such as TOPPROCESS SECONDPR and NEW HIRE process . If a sub process is defined in the database but has not been associated with a root process or a root process has not been associated with a group the sub process or process is grouped under an EXCEPTIONS heading .

At step the groups identified in query and the exceptions header if identified at step are displayed.

At step the method determines if a command to expand a node has been received. A node will be expanded when the user selects the plus icon next to the node or double clicks on the node. If a command to expand a node has not been received at step the process remains in step .

If a command to expand a node is received at step the process continues at step to determine if the command is to expand a group node. If the command is to expand a group node work model explorer queries database for all root processes of the selected group at step . At step the database does a security check to determine if the current user has the rights to view the contents of the selected node. If the user does not have rights to view the contents of the selected node a security error is generated and the user is informed that they do not have rights to view the contents of the node at step . If the user does have rights to view the contents of the node the contents returned by the query are displayed at step and the process returns to step .

If the instruction to expand a node is not applied to a group node at step the method determines if the command relates to a process or task at step . If the command to expand a node relates to a process or task work model explorer queries database to identify all item types of the current process or task at step . Database then performs a security check at step and either tells the user they do not have rights to view the items under the selected process or task at step or displays the item types of the process or task at step .

If the node selected for expansion is not a process or task at step it is an item type heading and work model explorer queries all items of that type associated with the current process or task at step . Database performs a security check at step and tells the user if they do not have rights to view the items under the item type heading at step . If the user does have rights to view the items under the item type heading the items are displayed at step and the process returns to step .

Users are able to view elements shown in work model explorer by right clicking on the elements and requesting that they be opened. shows a flow diagram for viewing an element displayed in the work model explorer. At step a command to view an element is received. At step a query is performed on database by work model explorer to determine what document the element is found in and to find the location of that document. At step database does a security check to determine if the user has the rights to view the document containing the element. If the user does not have rights a security error is generated and the user is informed that they do not have rights to view the element at step . If the user does have rights to view the element at step technical drawing application is started at step if it is not currently running. The document that contains the element is then opened within the technical drawing application at step . At this point the user may make changes to the document including changing the metadata of any element in the document. The user can then save the document and the changes to the document as discussed above in .

In certain embodiments the process documents may be viewed in a static format across a network such as the Internet. shows a flow diagram for viewing process documents over a network. At step a web server receives a request from a web viewer through a network such as the Internet. At step web server uses data access layer to access database to obtain data to construct a web based view of the process document. This web based view of the process document includes links that are associated with sub processes and tasks so that when a sub process or task shown in the web based view is selected a request to view the document associated with the sub process or task is sent to web server . At step the web based document is passed to web viewer through network . At step if the user of the web viewer selects a process or task a request to view the document associated with the process or task is passed to web server at step . The process then returns to step to process the request for the new process document.

Web based process documents for sub processes include a link that allows the web viewer to request the document for the parent process of the current sub process. If the user has not selected a process or task at step the method determines if the user has selected the link to the parent process at step . The user has selected the link to the parent process a request to view the parent process is sent to the web server at step . The process then returns to step . If the user has not selected a link to the parent process the method of returns to step .

Although steps and are shown as sequential steps they actually occur in parallel with the method waiting for the selection of either a link to the parent process or a link to a sub process or task.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

