---

title: Communication system hierarchical testing systems and methodsâ€”entity dependent automatic selection of tests
abstract: Hierarchical testing systems and methods for testing communication systems are disclosed. Testing functions which test entities such as equipment or services of a communication system are classified into testing function groups. The testing function groups have an order which is based on an order of operational dependencies in the communication system. Testing functions to be performed for a particular entity to be tested are selected from testing functions for testing the entity itself and testing functions for testing other entities that have an operational dependency with the entity to be tested. Related data structures and user interfaces are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08411579&OS=08411579&RS=08411579
owner: Alcatel Lucent
number: 08411579
owner_city: Paris
owner_country: FR
publication_date: 20051004
---
This application is related to U.S. patent application Ser. No. 11 243 388 entitled MANAGEMENT OF TIERED COMMUNICATION SERVICES IN A COMPOSITE COMMUNICATION SERVICE and Ser. No. 11 243 005 entitled COMPOSITE COMMUNICATION SERVICE MANAGEMENT both filed of even date herewith and assigned to the Assignee of the present application. The entire contents of each of these related applications are incorporated herein by reference.

This invention relates generally to communications and in particular to testing of a communication system for diagnostic and or monitoring purposes.

According to current communication system management systems and techniques a network operator or other personnel manually selects and executes communication system tests to determine the root cause of service performance degradations or other observed conditions affecting a service which is running in the communication system.

This process tends to be time consuming and also requires a high level of skill particular in larger scale or complex communication systems. For example a communication service may rely on many underlying technologies any of which might be responsible for an observed problem. In order to properly test such a service an operator would be required to first investigate exactly how the service is configured the technologies on which the service relies and the appropriate tests for those technologies. Any tests would then have to be executed in the correct order. All of these operations are performed manually in conventional systems.

Thus there remains a need for improved techniques for testing communication systems for troubleshooting service level problems or monitoring services for example.

Some embodiments of the invention are directed to organizing and managing testing functions for a communication system. A hierarchical communication service assurance system may be provided for instance in which testing functions are arranged into groups and specific testing functions for a communication service to be tested are automatically selected based on a topology of the service. Test selection may also take into account the capabilities of communication equipment which supports a communication service. It possible for example that some communication network elements are not capable of performing certain tests. These capabilities can also be used to control the selection of tests.

Testing functions such as OAM Operations Administration and Maintenance tests may be divided into different test levels which are based on the structure of communication services in a communication system. If there are performance issues with a higher level such as a communication service level then lower level tests may be invoked to find the root cause of the higher level issues. Within a level there may be several related testing functions possibly of different types.

In some embodiments a set of tests for components of an entity of a communication system illustratively a communication service protocol layer or communication equipment can be automatically generated. All of the generated tests or only selected ones of the generated tests may be executed in the communication system.

According to an aspect of the invention there is provided a system which includes a testing function classifier and a testing function manager. The testing function classifier is configured to assign testing functions for testing entities of a communication system to a testing function group of a plurality of testing function groups. The testing function manager is operatively coupled to the testing function classifier and configured to associate an entity of a communication system with a group of testing functions for testing another entity of the communication system based on an operational dependency if any between the entity and the other entity.

The entities may include one or more of communication services supported in the communication system layers of a communication protocol stack used in the communication system and equipment comprising the communication system.

The testing function manager may be further configured to select from each testing function group associated with an entity to be tested a testing function to be performed in the communication system.

In some embodiments the system also includes a communication system interface operatively coupled to the testing function manager for transmitting information to the communication system. The testing function manager may cause one or more testing functions to be performed in the communication system by transmitting information to the communication system.

In some embodiments the testing function manager is further configured to determine a sequence in which each selected testing function is to be performed in the communication system.

The system may also include an interface for receiving one or more of inputs to define one or more testing function groups of the plurality of testing function groups inputs to control which testing functions are to be performed in the communication system inputs to control a sequence in which testing functions are to be performed in the communication system inputs to specify an entity to be tested and inputs to specify other entities having an operational dependency with an entity to be tested for which testing functions are to be selected.

The testing function groups may include a testing function group having a plurality of testing function sub groups for including testing functions that test entities of respective different types.

The entities tested by testing functions in one or more sub groups of a testing function group may have the same or different operational dependencies than entities tested by testing functions in other sub groups of the testing function group.

The testing function manager may be further configured to select a testing function from each of one or more testing function groups respectively associated with the entity and each other entity having an operational dependency with the entity based on testing capabilities of one or more of the entity and each other entity.

A method is also provided and includes defining a plurality of testing function groups for arranging testing functions the testing functions being for testing entities of a communication system and defining a relative order of the plurality of testing function groups based on an order of operational dependency between the entities.

The method may include operations of assigning testing functions to a testing group of the plurality of testing groups and associating an entity of a communication system with a group of testing functions for testing another entity of the communication system based on an operational dependency if any between the entity and the other entity.

In some embodiments the method further includes selecting from each testing function group associated with an entity to be tested a testing function to be performed in the communication system. A sequence in which each selected testing function is to be performed in the communication system may also be determined.

The sequence may include a sequence condition which causes one or more of halting of the sequence of testing functions where a testing function confirms normal operation of an entity execution of a next testing function in the sequence where a current testing function indicates an error in operation of an entity and selection of a next testing function from a plurality of testing functions based on a result of a current testing function.

In some embodiments the method includes selecting a testing function from each of one or more testing function groups respectively associated with the entity and each other entity having an operational dependency with the entity based on testing capabilities of one or more of the entity and each other entity. A sequence in which each selected testing function is to be performed may be determined based on one or more of operational dependencies between the entity and each other entity and inputs specifying a testing function sequence.

The method may also include one or more of analyzing results of one or more selected testing function and providing a representation of results of one or more selected testing function.

A data structure according to another aspect of the invention includes information identifying a testing function for testing an entity of a communication system and information indicating a testing function group of a plurality of testing function groups to which the testing function has been assigned the plurality of testing function groups having a relative order based on an order of operational dependency between the entity and other entities of the communication system.

Yet another aspect of the invention provides a user interface which includes respective visual elements representing testing functions for testing entities of a communication system the testing functions comprising testing functions assigned to a plurality of testing function groups each testing function group including a respective set of one or more testing functions for testing an entity of the communication system. The testing functions represented by the visual elements include testing functions for testing entities related by an operational dependency in the communication system.

Other aspects and features of embodiments of the present invention will become apparent to those ordinarily skilled in the art upon review of the following description.

Communication systems may have many different topologies including more or fewer communication networks having similar or different equipment than shown in . For example different communication networks may use different access schemes. As shown end users access the communication network through multiple access devices whereas more direct end user access is provided to the communication network through the network element . It should therefore be appreciated that the system of as well as the contents of the other drawings are intended solely for illustrative purposes and that the present invention is in no way limited to the particular example embodiments explicitly shown in the drawings and described herein.

Switches and routers are illustrative of the types of communication equipment represented by the network elements . The communication networks in addition to the border or edge network elements explicitly shown in may also include intermediate network elements which route communication traffic through the communication networks . Any or all of the communication networks may thus include edge core and or other types of communication equipment. In other embodiments the techniques disclosed herein are used in conjunction with communication equipment which might not necessarily be connected in a network. References to communication equipment and connections should thus be interpreted accordingly.

Functions for managing the communication networks to configure connections and services control communication equipment and or monitor network operations for instance may be provided by the management system . Although shown as a single component in multiple management systems may be implemented where communication equipment is operated by different entities. An example of a management system is described in detail below with reference to . Other management or control equipment such as local operator terminals may also be provided in any or all of the communication networks .

The multiple access devices distribute communication traffic to and or receive communication traffic from end user equipment such as computer systems by which communication traffic is generated and transmitted and or received and terminated. Where connections to end users are DSL Digital Subscriber Line connections for example the multiple access devices may be DSLAMs DSL Access Multiplexers . Customer edge routers and other customer premises equipment are further examples of the multiple access devices .

Many different types of network access and end user communication equipment as well as the operation thereof will be apparent to those skilled in the art. In general communication traffic is transferred between sources and destinations possibly through one or more of the communication networks . Traffic may be translated between different protocols or formats during its transfer. As discussed in further detail herein the transfer of communication traffic may involve multiple communication services supported in the communication system and illustratively communication services supported in the different communication networks which have been configured to cooperate to provide a composite communication service.

In one particular example embodiment traffic is routed in the communication network using IP Internet Protocol or MPLS Multi Protocol Label Switching the communication networks are Ethernet networks and the multiple access devices are DSLAMS.

However it should be appreciated that embodiments of the invention are not limited to any particular types of communication equipment transfer mechanisms or protocols. Those skilled in the art will be familiar with various communication system implementations and services in conjunction with which embodiments of the invention may be used. It is also contemplated that embodiments of the invention may be applicable to communication systems and services which are subsequently developed.

Communication services are also shown in in the form of service sites and interconnections therebetween. The communication services are supported by communication equipment in the communication networks in that these services transfer data through the communication equipment and physical connections between that equipment. However the communication networks and their elements might not have any type of service awareness . For example a network element would not normally know the complete topology of a communication service which has been set up by provisioning service sites at that network element. Moreover communication equipment generally cannot distinguish a connection between service sites of the same communication service from a connection between service sites of different communication services. Clearly communication equipment would normally be completely unaware when an SAP Service Access Point of one of its service sites through which a communication service is accessible is actually hooked up to an SAP of another service site for a different communication service via a cable for example.

Consider an example scenario in which the whole system under the management of the management system illustratively an NSM Network and Service Management system through which both communication equipment and services can be configured and managed. The management system can be used to provision service sites in any of its managed network elements which includes all of the network elements in this example.

As shown in the service sites are provisioned in the network elements and interconnected to set up a communication service in the communication network the service sites are provisioned in the network elements and interconnected to provide a communication service in the communication network and the service sites are provisioned in the network elements and interconnected to provide another communication service in the communication network . Some of these service sites specifically the service sites are connected between different services to establish a composite communication service which uses all of the individual communication services . Of course other types of service site and communication service arrangements are also possible.

In the context of a composite communication service which encompasses all of the communication services the network elements in the communication networks may be considered a portion of an overall service provider network.

The relationship between actual equipment and communication services will be apparent to those skilled in the art from . Communication services effectively overlay the communication equipment. For example connections between the network elements may be physical links whereas logical connections between the service sites shown in dashed lines in allow data transfer between service sites over the physical links.

A composite communication service is one example of an entity to which the techniques disclosed herein may be applied. The specific example of composite communication services is considered in further detail below. However it should be appreciated that embodiments of the present invention may also or instead be used in conjunction with other types of entity.

The transfer of communication traffic by a communication service or more generally any entity of a communication system may involve multiple underlying entities. For example a communication service provided in the communication network may involve transfer of communication traffic through a logical connection established over a transport protocol all of which runs over physical communication equipment. The communication service may be considered one entity of the communication system which is operationally dependent upon other entities of the system. The communication service cannot operate properly unless its logical connection is operating properly which in turn is affected by operation of the transport protocol and the physical equipment.

It will thus be appreciated that there is an order of operational dependency of all of these entities namely the communication service the connection the transport and the physical equipment.

This type of layering technique is used in data networks to implement such features as efficient diagnostics and bandwidth management. A typical service provider data network might start with a physical layer using a combination of Ethernet and SONET SDH Synchronous Optical Network Synchronous Digital Hierarchy technologies. There are multiple layering methods to carry data over service provider networks including among others TCP Transmission Control Protocol IP Ethernet MPLS IP PPP Point to Point Protocol SONET and UDP User Datagram Protocol IP Ethernet ATM Asynchronous Transfer Mode MPLS IP Ethernet. As noted above the root cause of problems observed at higher layers might very well come from a lower layer. Thus a good diagnostic mechanism should have built in hierarchical layer awareness.

The groups testing functions testable entities and order shown in represent examples only and do not limit the scope of the invention. Specific operational dependencies may vary for example for different communication network and or protocol stack implementations. Those skilled in the art will be familiar with various types of communication system in conjunction with which embodiments of the invention may be used. It is also contemplated that embodiments of the invention may be applicable to communication systems and services which are subsequently developed. The table shown in also does not always imply a top down relationship between testing levels. For example an entity tested by testing functions in the group may be operationally dependent on another technology in the same group or at a higher group. LDP Label Distribution Protocol over RSVP Resource reSerVation Protocol for instance could have an item in group dependent on another item in group .

The highest group in the structure includes testing functions for testing application entities of a communication system. The testing functions in the group are further arranged into sub groups for testing different types of application entity including a DHCP Dynamic Host Configuration Protocol application entity a UDP TCP application entity and a DNS Domain Name System application entity respectively. The testing functions in the group include a DHCP lookup function in the DHCP sub group a UDP TCP probe function in the UDP TCP sub group and a DNS lookup function in the DNS sub group .

The next testing function group in the example structure includes testing functions for testing service entities upon which the application entities at the next higher level are dependent. This concept is referred to herein as operational dependency. A service entity may be considered as providing a transport for an application entity for example. More generally operational dependencies may exist between entities associated with testing functions and testing function groups at the same or different levels.

Like the testing functions in the testing function group the testing functions in the group are arranged into sub groups which correspond to different types of services namely VLL Virtual Leased Line services VPLSs Virtual Private Local area network Services IESs Internet Enhanced Services MPLS BGP VPN Multi Protocol Label Switching Border Gateway Protocol Virtual Private Network also sometimes referred to Layer 3 VPN or VPRN Virtual Private Routed Network and VLAN Virtual Local Area Network services all of which will be familiar to those skilled in the art. Each sub group includes testing functions for testing the respective types of service entities.

The VLL sub group includes MAC Media Access Control populate MAC purge MAC ping and MAC trace testing functions as shown at . The VPLS sub group also includes MAC ping MAC trace MAC populate and MAC purge testing functions as well as CPE Customer Premises Equipment ping and MFIB Multicast Forwarding Information Base ping testing functions as shown at . IES testing functions if any would be included in the sub group . The testing functions in the MPLS BGP VPN sub group include ping and trace functions. The VLAN sub group includes MAC ping and MAC trace testing functions .

Any or all of the testing functions in a sub group may be performed in a communication system when the corresponding entity is to be tested. The testing functions to be performed may be selected automatically or manually by a user. In some embodiments all testing functions in a testing function group or sub group are automatically selected and a user then selects which of those testing functions will actually be performed. Also in some embodiments a sub set of the testing function group or sub group is automatically selected based on information associated with the entity to be tested.

It should also be noted from the group that group and or sub group assignments are not exclusive. Although each testing function group includes testing functions for testing entities at a particular protocol or architectural level in a communication system the same testing function may be used to test more than one type of entity at that level. For example the testing function sub groups all include MAC ping and MAC trace testing functions.

Entities tested by testing functions of different sub groups of the same testing function groups might not have the same operational dependencies. This will be evident from a comparison of the VLAN sub group and the MPLS BGP VPN sub group for example. Whereas the MPLS BGP VPN sub group is ordered in the structure above the groups and the sub group is ordered above only the group .

In one implementation communication traffic for a communication service is carried over a communication path which is logically associated with the communication service by a unidirectional binding. The testing function groups and include respective testing functions for testing the binding and the communication path. A binding entity also referred to herein as a circuit is testable using an svc service ping testing function . A communication path which might also be referred to as pipe or tunnel is testable using ping functions . The specific nature of a path entity testing function will be dependent upon the type of path being tested.

In the sub groups of the groups have been shown separately for illustrative purposes. A testing function group such as which includes tests for only one type of entity need not necessarily include sub groups. However arrangement of testing functions into sub groups may facilitate future expansion of the testing group to include testing functions for other types of entity at the same level. For example the single sub group could be defined in the structure so that the testing function has already been assigned to a sub group in the event that another sub group is subsequently defined.

As will be evident from the sub group testing functions for different types of an entity may be included in the same group sub group. Thus sub group sorting is optional and might not be implemented in all embodiments.

The testing function group for entities of a transport level in the example structure in include sub groups for including testing functions which test LSP Label Switched Path entities LDP entities RSVP entities and GRE Generic Routing Encapsulation entities. The LSP sub group includes LSP ping and LSP trace functions and the LDP sub group includes LDP trace and LDP ping functions . Testing functions for testing RSVP entities and GRE entities would be included the sub groups respectively.

The testing function group also illustrates that a testing function group may include sub groups at different sub levels in the structure . For example LSPs are set up using an LDP or RSVP session. If an LDP RSVP session fails then the LSP could go down. On some network elements many LSPs may share the same LDP or RSVP session.

At the next lower level in the structure is a routed network level at which the testing function group includes sub groups for IP Unicast and IP Multicast entity testing functions . The IP Unicast testing functions include ICMP Internet Control Message Protocol ping and ICMP trace functions and the IP Multicast testing functions include state info trace and mgmt management functions. The trace function may use extensions of IGMP Internet Group Management Protocol for example to trace multicast traffic in the network. The state function may be supported in a similar manner as the trace function but provide a different output. The info function is used to retrieve router information relating to multicast from a neighboring router service and the management function is used to monitor multicast router operation.

The lowest level group in the structure is associated with OSI Layer 1 and Layer 2 L1 L2 entities including ATM entities Frame Relay entities POS Packet Over SONET entities and Ethernet entities each of which has a corresponding sub group . ATM ping is shown at as an example of an ATM entity testing function and MAC ping and MAC trace are shown at as examples of Ethernet entity testing functions. Testing functions for Frame Relay and POS entities would be included in the sub groups .

Not all of the sub groups in the structure of include testing functions. Thus a testing function group structure and order could be defined based on expected operational dependencies of service entities to be provided in the communication system for example and later used to classify testing functions as services and or testing functions are actually configured in the communication system.

Those skilled in the art will be familiar with the various testing functions explicitly shown in . Although these testing functions might be available in conventional systems these tests are not arranged in any particular manner as shown in . Testing functions for a particular entity could be identified and executed manually. Conventional systems do not take any sort of operational dependency between entities into account for sorting testing functions or developing a testing plan or suite for a testable entity.

An example of a complete testing procedure based on the testing function structure will be described below with reference to which is a block diagram of a pair of connected communication services.

The example multi service system of includes two services which are operatively coupled by a connection illustratively a pair of unidirectional communication paths . The paths may be established by binding each service to the same tunnel for example.

Each of the services includes multiple service sites which are connected to each other through mesh connections . The service sites are connected via the connection and the other service sites might be operatively coupled to other SAPs through which the services are accessible.

Suppose for example that the services and in are VPLS services and that an operator is informed that communication traffic via a particular VPLS illustratively service seems to be slower than expected. This type of performance issue could be automatically detected in some embodiments.

It might not be immediately apparent to from between which service sites communication traffic is actually affected where all of the sites still have their normal connectivity for example. Instead of having to manually trace the VPLS service and its operational dependencies in the communication system embodiments of the invention allow an operator or other personnel to select the VPLS entity itself for testing. This selection could also be an automatic function which is performed when an error or degradation affecting a testable entity is detected and or based on service modification create service add new service site change tunnel etc. in order to verify the service s connectivity and performance.

Testing in this example might begin with CPE ping functions which test the connections between each SAP connected to the VPLS service sites and its corresponding CPE. Based on the CPE ping functions it might be determined that traffic in the direction from site to site has been degraded. Packet loss high average round trip time between sites and or outbound site to site and inbound site to site traffic characteristics could be indicative of a problem in this direction on the connection .

With reference now to both this problem might be due to a binding between the service and the communication path on which it transmits communication traffic or on a lower level. If a service ping function indicates normal operation of the binding then the tunnel used by the service in the direction from site to site could very well be the source of the problem. Again testing functions for that level could be performed. The testing functions could just cover the service transport level or also include LSP level testing functions and so on.

In this manner an entity of a communication system may be associated with multiple testing function groups according to its operational dependency on other entities of the communication system. In conventional systems such operational dependencies must be manually discovered to identify and execute the appropriate tests. Embodiments of the invention simplify this process by automatically determining testing functions for not only an entity to be tested but also other entities which have an operational dependency with the entity to be tested. Operational dependencies may be used to move across up or down between entities.

Considering the above example a VPLS would normally be associated only with the VPLS testing functions shown at . According to embodiments of the invention however a VPLS is associated not only with VPLS specific testing functions but also with testing functions for testing other entities having an operational dependency with the VPLS.

These and other testing function related features will become apparent from the following description of which is a block diagram of a management system for a communication system.

A management system implementing an embodiment of the invention may be provided as part of an overall management solution for a communication system and may thus operate in conjunction with other components and functions not explicitly shown in . Accordingly embodiments of the invention may include further fewer and or different components which are operatively coupled in a similar or different manner than shown. In addition the particular division of functions shown in is also intended only for illustrative purposes. The functions of the classifier and the manager may be provided in more than two components or modules or in a single component or module in other embodiments.

The types of the interconnections between components of will be at least to some extent implementation dependent. Where the components of the system are implemented in hardware the interconnections may be provided through physical connectors such as a computer system bus. In some embodiments at least the classifier and the manager are implemented in software for execution by the processor . In this case the operative coupling between these components may instead be logical. For example the classifier and the manager may access the same data structures in the memory whereby the data structures represent a logical operative connection between the classifier and the manager .

The configuration management interface may include one or more devices for receiving inputs from and or providing outputs to a user. For example a user may perform testing control management tasks by entering or selecting information using a keyboard and mouse and these tasks may be simplified by information presented to the user on a display. The configuration management interface may support any or all of an OSSI Operation Support System Interface for receiving commands and or other inputs from another system and a GUI Graphical User Interface for instance. Support for an OSSI may be provided using an interface such as an Application Programming Interface for example to allow external systems to interact with the management system .

In perhaps most implementations of embodiments of the invention the management system will communicate with a communication system. The communication system interface includes a transmitter a receiver or both in the form of a transceiver for instance to enable such communications. As described in further detail below the management system may send testing and or control signals to communication equipment in the communication system when testing functions are to be performed. The management system may also receive information such as test signal responses and or testing function results from the communication system.

Those skilled in the art will appreciate that the specific structure and operation of the communication system interface is dependent upon the particular communication system and equipment with which the management system is to communicate the media and protocols used between the management system and the communication system and whether the management system is to transmit receive or both transmit information to and receive information from the communication system.

The testing function classifier and the testing function manager may be implemented in hardware in software for execution by a processor such as a microprocessor an ASIC Application Specific Integrated Circuit an FPGA Field Programmable Gate Array or other type of processing element or in some combination of hardware and software. Although a single processor is shown in multi processor implementations are also contemplated in which the classifier and the manager are implemented using more than one processing element. The other components of the management system may similarly be implemented partially or entirely using hardware or software.

The memory may include one or more memory devices of the same or different types. Solid state memory devices and devices for use with movable and or removable storage media are illustrative of types of memory device which the memory may include. It should also be appreciated that the memory may be local to the management system as shown or a remote store at a server for example which is accessible by a management system. In one embodiment the memory is used to implement a database system.

In operation the testing function classifier assigns testing functions for testing entities of a communication system to one of a number of testing function groups. The testing function manager associates an entity of a communication system with a group of testing functions for testing a different entity of the communication system. The association of a testable entity with a testing function group corresponding to a different entity is based on an operational dependency if any between the two entities and possibly also the testing capabilities and or other characteristics of the communication equipment which supports the testable entity. One entity may be operationally dependent on the other entity for example as described above.

It will also be apparent from the description of for instance that an entity to be tested may be associated with testing function groups for more than one other entity where the entity to be tested has multiple operational dependencies. An application entity may have dependencies through a service entity a service transport binding entity a service transport entity a transport entity a routed network entity and an L1 L2 entity. Thus if an application entity is to be tested such as when a user invokes a testing function by selecting a representation of the application entity in a UI an application testing function group as well as other testing function groups may be associated with the application entity to be tested. Any or all of the associated testing function groups may be used to generate a testing plan for an entity.

Testable entities of a communication system may include among others communication services supported in the communication system layers of a communication protocol stack used in the communication system and equipment comprising the communication system.

The testing function manager may select one or more testing functions from each testing function group which is associated with an entity to be tested. Through the communication system interface the testing function manager may transmit information to the communication system to cause each selected testing function to be performed. The transmitted information may include test signals or other information involved in actually performing tests and or control signals which instruct other components of the communication system to carry out the selected testing functions.

A sequence in which the selected testing functions are to be performed may also be determined by the testing function manager . The testing function sequence could be determined on the basis of an order of testing function groups in a hierarchy such as shown in . External control of testing function sequence is also contemplated. A user might enter sequence information through an OSSI for example with the information then being received at the system via the configuration management interface .

Inputs may also or instead define or modify any or all of the testing function groups and or select specific testing functions to be performed for a testable entity. For example an initially defined set of testing function groups might not apply to subsequently configured testable entities such as a new communication service. In this case a structure of the set of testing function groups could be modified to include new sub groups for instance or the existing set may be replaced with a new set of testing function groups. Selection of testing functions to be performed may be useful where the testing function manager is configured to automatically select all testing functions from all associated testing function groups. A user may then have final control over the testing functions to limit the number of testing functions performed by removing unnecessary or unwanted testing functions from a generated test suite.

A testing group structure may be defined at by a user or predefined by a manufacturer of a management system or management software for example. Embodiments in which both types of testing group structure definition are also contemplated. As noted above for instance a user might modify or replace an existing testing group structure for consistency with new communication services as those services are configured in a communication system. Although in many embodiments the operations at would be performed only once the present invention in no way precludes definition of new testing group structures or modification of an existing testing group structure.

At testing functions are classified that is assigned to the testing groups. A testing function may be classified manually by a user or automatically by a management system based on the particular entity it is intended to test. Some testing functions may be capable of testing different entities at different architectural or protocol levels of a communication system and therefore may be assigned to multiple groups. Referring to for example a MAC ping function may be used to test VLL VPLS VLAN and Ethernet entities and thus is assigned to multiple testing function groups and sub groups . Although a MAC ping function would be configured somewhat differently to test these different entities with different source and destination addresses for example the testing function itself operates in substantially the same way for testing all these entities.

The method proceeds at with an operation of associating an entity of a communication system with a group of testing functions for testing another entity of the communication system. This is based on an operational dependency if one exists between the entity and the other entity. Operational dependencies may be detected from configuration information stored in a database in the memory for example. Analysis of configuration information can reveal whether and how an entity illustratively a communication service is dependent upon connections between its own service sites and or other entities whether and how those connections are dependent on any underlying technologies and so on down to the lowest physical components upon which transfer of communication traffic is dependent. Operational dependencies may also or instead be traced in the opposite upward direction to build associations between entities and testing function groups.

Testing functions are then selected at from each testing function group associated with an entity to be tested and any or all of the selected testing functions may also be performed in the communication system. The final selection of testing functions to be performed may be dependent upon inputs such as inputs received from a user. Testing functions may be removed from or added to a list of automatically selected testing functions for example. The sequence in which selected testing functions are to be performed may similarly be determined automatically and or based on inputs.

It should be appreciated that the method of is intended solely for illustrative purposes and does not limit the scope of the present invention. Embodiments of the invention may involve further fewer or different operations which may be performed in a similar or different order than shown. Various ways of performing the operations shown in and further operations which may be performed in some embodiments will be apparent to those skilled in the art from the foregoing description of and . Other variations are also contemplated.

For example a sequence of testing functions for an entity might be invoked automatically in accordance with a predetermined schedule. A service provider may wish to periodically test a communication service to ensure that SLAs Service Level Agreements are being met. Manually invoked testing function sequences are also possible wherein a user could select a testable entity from a displayed representation of a communication system for instance.

Another possible feature which may be provided in some embodiments is variable testing function sequences. Testing function sequences might not necessarily specify only an order in which testing functions are to be performed. A sequence may include one or more sequence conditions such as to cause the sequence of testing functions to be halted if a testing function confirms normal operation of an entity. In this case normal testing function results might indicate that the root cause of a problem lies in a previously tested entity where a testing function sequence moves down through the architectural levels of a communication system. An analogous testing function sequence condition may cause a testing function sequence to proceed with execution of a next testing function in the sequence if a current testing function indicates an error in operation of an entity. A branch condition could also or instead be included in a testing function sequence. This type of condition would cause selection of a next testing function from several possible testing functions based on a result of a current testing function.

Subsequent actions which may be performed when results of testing functions become available include analyzing the results of any or all testing functions and providing a representation of results of one or more testing functions. These actions could be specified for example in a set of predetermined or user defined rules. Result processing rules may be established for each architectural testing level for each entity type or for particular testable entities. Combinations of these rule types may also be possible to establish a default set of rules for communication service entities and a set of specific rules for VPLS entities for example.

User control of these rules is also contemplated. In some embodiments rule set modification may be provided in a similar manner to user testing function selection and or sequence control whereby a user might remove or add rules to a rule set for instance.

It should be appreciated that the present invention is in no way restricted to the particular UI shown in or other UIs shown in subsequent Figures. Different layouts information and or functions may be displayed to a user to facilitate configuration and management of testing functions for a communication system. It should also be appreciated that these tasks could be enabled through other types of interface than graphical user interfaces such as XML extensible Markup Language configuration OSSIs etc.

Testing functions for a policy can be defined individually by the policy creator or using testing function templates which include information relating to particular types of testing function such as MAC ping. Any undefined parameters in the templates may be defined during policy configuration.

Processing rules may specify such testing function control parameters as an order of testing function execution how testing functions results are to be processed and or how the results are to be presented. More complex processing rules could specify sequence conditions and actions such as those noted above. These rules like testing functions could be based on predefined templates to simplify configuration of rules for a testing policy.

The UI shown in could be displayed to a user upon selection of a create policy edit policy delete policy or other policy related function at a management system. From a list of existing testing policies for example a user might select a policy to edit.

As shown the UI presents general policy information. A user may switch between a display of general information rule information and bound entities information for a policy by selecting the tabs . The processing rules tab would cause processing rules for a policy to be displayed and the bound entities tab would display an indication of each testable entity with which the policy has been associated. Testing functions for a testable entity may be generated based on a policy to which the entity has been bound. Functions may also be provided through the tabs to modify the set of rules and or bound entities for a testing policy.

The general policy information includes a policy name . The policy name may be entered when a policy is first configured and or modified when a policy is edited. The policy identifier however is preferably a unique identifier which is automatically assigned.

A description of a test policy may be entered at such as to provide a summary of the purpose of the policy.

The entity type may be automatically populated when a policy creation function is invoked for a specific testable entity such as by selecting the entity in a representation of a communication system or selecting a create policy or analogous function in a UI which presents information related to the entity. Otherwise the entity type may be entered by a user or selected from a pulldown menu for example. Valid values for the entity type include any values which indicate a testable entity. Referring back to the entity type may include specific service types VLL VPLS IES MPLS BGP VPN VLAN service transport binding types circuit service transport type tunnel transport type LSP LDP RSVP GRE routed network type IP Unicast IP Multicast or L1 L2 type ATM Frame Relay POS Ethernet .

From the general information shown at a user would know that the presently displayed policy is named VPLS Policy 3 has an ID of and has been defined for a VPLS service entity type.

Information for the specific testing functions of the policy is displayed at . The headings at allow a user to determine which parameters for each testing function are displayed at . The list of testing functions at includes testing functions from multiple testing function groups. In the example testing function group structure of the MAC ping and LSP ping functions belong to different testing function groups but are displayed to a user at the same time in the UI .

From the entity type and the operational dependencies of such entities in a communication system a set of testing functions may be automatically selected and displayed at .

The UI also includes functional visual elements for invoking various actions for testing functions and or the testing policy as a whole. In respect of testing functions for example the element allows a user to add a new testing function to the testing policy. A testing function could be added to a policy by creating a new testing function manually or from a template or by selecting from a list of testing functions which are applicable for the entity type . The element allows a user to edit a testing function in the testing policy. A testing function may be removed from the testing policy by selecting the testing function and then selecting the element for instance. In the example UI an order in which testing functions are to be performed may be changed by moving testing functions up or down in the list using the elements respectively.

The tasks which may be accomplished by selecting the elements need not necessarily be mutually exclusive. For example a testing function might be temporarily removed from a policy by editing the testing function to change a flag or other parameter. In this case the testing function is effectively removed from the testing policy albeit for different durations i.e. permanently or temporarily using either the edit or remove element .

The Update Test Suites element causes a test suite which is a collection of testing functions for a specific testable entity to be generated using the testing policy. Selection of the element may cause respective test suites to be generated for any or all of the entities bound to the policy. Generation of a test suite may involve such operations as determining a specific entity to be tested and a testing function source and destination.

Selection of the reset element resets at least user entered information in the UI . An OK function invoked by selecting the element accepts user inputs and may close the UI whereas an apply function invoked by selecting the element may accept user inputs without closing the UI . A cancel function invoked by selecting the element ignores any information currently entered or changed by a user and may also close the UI .

The UI relates to a testing policy for a specific type of testable entity which in the example of a VPLS entity and the testing function group structure of FIG. corresponds to a sub group of a testing function group. Policies may also or instead be defined on a per level basis with appropriate testing functions for each entity type at a level being identified during test suite generation. An Application type testing policy might include testing functions for all application entity types and then the appropriate testing functions for a specific application entity could be selected when a test suite is generated for that entity.

The UI could be displayed to a user upon selection of a test suite management function from a general communication system management screen or a screen such as a configuration form associated with a testable entity in the communication system for example.

General information for a test suite is accessible through the general tab and shown in the UI . The general information for a test suite includes a user defined test suite name a description a name and ID of a testing policy from which the test suite was created if applicable and a name and ID of the entity for which testing functions in the test suite are to be performed.

Not all test suites are necessarily generated from a testing policy. Test suites may also or instead be manually configured by a user or automatically configured by determining the entity to be tested and the applicable testing functions for that entity. A testing policy is one but not the only mechanism through which an entity may be associated with testing function groups and testing functions. Information indicating entity types for example may be stored with both testing function definitions and entity data records to thereby allow testing functions to be associated with entities.

Details of an entity and a testing policy if one was used to generate the test suite may be viewed by selecting the view elements of the UI .

Selection of the execute element causes the test suite to be executed in the communication system. The element generates the actual testing functions which are to be performed based on testing function definitions and parameters of the entity to be tested if this has not already been done through the testing policy UI of described above. The stop element stops execution of the test suite if it is currently executing.

The tasks supported by the elements have been described above with reference to the elements of the UI . In the UI of however these tasks would be performed for a test suite.

The schedule tab is used to view and configure the schedule for a test suite. A test suite schedule may include sequence information and or time information. Testing function sequences have been described above. Test suite time information may include one or more dates and times at which the test suite is to be executed. A time interval between two consecutive testing functions in the test suite and or between repeat executions of the test suite may also be specified. An option of selecting a test count the number of times the test suite is repeated and or the duration of the test suite execution i.e. test count Integer duration interval may also or instead be provided.

A listing of testing functions of a test suite is accessible through the tests tab . In some embodiments the listing is similar to the listing shown at and similar testing function related tasks as shown in are provided.

The results tab allows a user to view results of testing functions of a test suite and possibly an overall result of the test suite. A summary state of the test suite for example may indicate a state of the test suite based on the last execution of all testing functions of the test suite as Success or Failure for example. A success state might be indicative of a normal result for each testing function of a test suite whereas a failure state might indicate that one or more of the testing functions of the test suite did not return a normal result. The success or failure of a ping test for example may be determined on the basis of whether or not a response signal is received from all destinations the timing of response signals etc. Success failure criteria may be different for different testing functions and are generally dependent on testing function type.

User configurable criteria such as thresholds may also or instead determine testing function and or test suite failure or success. A user might specify that jitter greater than a configured value for instance should be deemed a testing function failure. A test suite threshold could be similarly configured where a user wishes to specify how many testing functions if any may fail without also declaring failure of the test suite. This type of test suite threshold could be specified as a number of testing functions or some fraction or percentage of the number of testing functions in the test suite.

Other information for an entity is also accessible through the tabs . Although the information accessible through these tabs might not be directly involved in testing function related aspects of the present invention these other tabs are illustrative of the types of information which may be stored in a database and accessed by various components of a management system presented to a user specified by a user and or modified by a user.

The data structure represents an illustrative example of the manner in which information relating to a testing function might be stored in a memory. A data structure implemented in an embodiment of the invention may include further fewer or different information fields than those explicitly shown. The definition of a testing function or a pointer or other link to the definition for instance might also be stored with a data record having the general format shown in . When a testing function is configured for a specific testable entity information associated with that entity and or other configuration information may also be stored with testing function related information in a single data structure or a different data structure.

In general some indication is provided regarding to which testing function group s a testing function belongs. This information may take the form of a group identifier in a testing function data record such as . Group assignment may also or instead be indicated in a representation of the testing function group structure in a table formatted as shown in for instance. In this case testing functions of a testing group are identified in appropriate portions of a table or other data structure.

One possible application of aspects of the present invention is to test component communication services which have been configured to operate together to provide a composite communication service. The number of entities possibly of different types and hence the number of different test types and differences in testing capabilities of different communication equipment types involved in providing a composite communication service make testing function provisioning a very challenging and time consuming task. The techniques disclosed herein can be applied to simplify the testing of composite communication services such as where the connectivity of various points in a communication system and or the quality of service of various tunnels should be regularly verified. Multiple testing functions suites for entities involved in a composite communication service can be combined to be run under one schedule. Composite communication service testing aspects of the present invention are described in further detail below.

A component communication service also referred to herein as a communication service or component communication service may be configured to provide a composite communication service. In some embodiments a component communication service is configured to operate with other component communication service to provide a composite communication service. Illustrative examples of component communication services include the services shown in with which those skilled in the art will be familiar.

The blocks shown in provide a service level view as opposed to the combined equipment and service level view of of a composite communication service. In terms of implementation a VPLS for example might consist of one or more VPLS service sites operatively coupled to each other. A service site represents a service object in a network element such as a VLL Virtual Leased Line service site or a VRF Virtual Routing and Forwarding service site of an MPLS BGP VPN or a VLAN object for instance. A service may include multiple service sites. A VLL service site or a VPLS service site of a VPLS service can be operatively coupled or connected to one or more service sites of another VPLS service.

Those skilled in the art will be familiar with MPLS BGP VPN VPLS H VPLS and VLAN services as shown in .

Considering a video TV broadcast application for example the MPLS BGP VPN may use PIM Protocol Independent Multicast and IGMP to distribute TV channels to various metro Ethernets shown in as the VPLSs . Traffic is further broadcast to different areas of each city using H VPLSs . Low cost L2 switches or DSLAMs could be used at the last mile to implement the VLAN services in different ring groups or in different DSLAMs for delivery of TV content to subscribers of the composite TV service.

The component communication services of the composite communication service are operatively coupled to each other using service connectors represented in at . Each service connector shown in represents a logical link between two component communication services.

Different types of service connector may be employed to operatively couple the services together to provide the composite TV service. For example interface to interface service connectors may be used between the VLAN services and the H VPLS and also between the MPLS BGP VPN service and the VPLSs . PW connectors may be used both to interconnect satellite H VPLSs and the VPLSs . Another type of service connector referred to herein as a cross connect may be used between services having service sites located in the same communication equipment such as the VPLS and the IES .

As will be apparent from the foregoing a composite communication service is basically a set of communication services supported in a communication system some of which may have been configured to operate together. Service connectors are used in some embodiments to configure the communication services to operate together so as to provide the composite communication service.

The composite communication service represented in for instance involves MPLS BGP VPN VPLS H VPLS and VLAN technologies and interconnections between those technologies. Management of these interconnections using conventional management systems is difficult in that network operators or other management personnel could not easily identify relationships between communication services. A management system may provide a representation of a composite communication service in which relationships between a communication service a composite communication service and any other communication services configured as part of the composite communication service are clearly indicated.

As noted above although a composite communication service and its component communication service s are supported by equipment in a communication system the concept of a composite communication service itself may be unknown to the communication system outside of a management system used to manage equipment and services of the communication system. Thus the ability to manage composite communication services need not be disrupted by changes in the communication system. For instance rules may be established for composite communication service creation deletion modification and or presentation. These rules can be enforced at the management system to prevent improper service connections from being added or to alert service management personnel to changes that have been made to the communication system in the field and affect a composite communication service for instance. In the latter case management personnel may then take appropriate action to modify component communication services and or connectors of the affected communication service. An improper connector may reflect incorrect configuration of component communication services for example which can be remedied by changing how the component communication services have been configured to operate with each other.

Despite the challenges of managing composite communication services it may in many instances be desirable to configure multiple communication services within or beyond the scope of a managed communication network or portion of a communication system to provide a composite communication service. The component communication services may be of similar or different types.

Multiple VLAN services on different bridged networks for example could be connected to an H VPLS. The VLAN service and the H VPLS can be configured for operation with each other by creating an SCP Service Connection Point to SCP service connector using a management system. An SCP to SCP service connector is one type of service connector according to an embodiment of the invention which may be used to configure component communication services to provide a composite communication service. SCP to SCP service connectors may also be used to configure other types of communication service than VLAN and H VPLS such as to connect VPLSs to a MPLS BGP VPN service as shown in or vice versa.

An SCP to SCP connector specifies a logical link between two SCPs. An SCP is a service interface through which a communication service is accessible at a service provider side of a service as opposed to a user or subscriber side of the service which is accessible through an SAP. In relation to the physical communication system the SCP to SCP logical link could run over a cable such as an Ethernet cable or over a network using FR Frame Relay or ATM Asynchronous Transfer Mode for instance.

As another example it may be desired to provide a private data service with high speed Internet access. Such a private data service could be provided by bridging multiple L2 service sites which provide L2 data services via a VPLS instance. This could be achieved by SCP to SCP connectors described above or through other types of service connector including PW spoke connectors or where the services which are to provide the composite private data service are supported on the same communication equipment configurable cross connectors.

PW spoke connections in a communication system may be used to create H VPLS services or to connect an IES and a VPLS. In one embodiment a PW spoke is established by logically binding a communication service to a communication path. Where traffic in a binding is unidirectional from the service to a communication tunnel for instance a binding may be created at each endpoint service site to support bidirectional communications between services.

In some cases multiple communication services may be may be supported on the same piece of equipment. For example a single service router may incorporate multiple SAPs. Physical connections between such services could be made through a local cable connection or a configurable connection device for instance. Whereas a cable would generally be installed between communication equipment ports or interfaces after deployment of communication equipment when inter SAP connections are to be established a configurable connection device could be pre installed on an equipment backplane for example and subsequently configured from a management system at a remote location for instance to connect equipment ports interfaces.

It is expected that physical connections between communication equipment in the communication system through which logical connections between communication services are established will be either installed or already in place before communication services are configured to operate together to provide a composite communication service. If necessary new physical connections may be installed to support inter operation between services. Once any required physical connections have been installed or configured as in the case of a configurable connection device for instance composite communication service configuration may proceed.

Configuration of communication services and configuration of service connectors may be performed separately or effectively as part of the same process. A management system for example may provide multiple interfaces for managing communication services. The same communication equipment and services may be controlled through a CLI Command Line Interface an OSSI and also through a GUI for instance. A composite communication service could be set up by entering a name for the composite communication service specifying component communication services related to the composite communication service and configuring service connectors to create logical associations or relationships between the component communication services. Actual configuration of the communication system to implement the logical associations specified in the service connectors may then be performed either manually such as through the CLI OSSI or GUI or automatically by the management system. The latter approach may generally be preferred in that the entire composite communication service is then manageable as a single entity. Separate tasks for configuring each of the component communication services are then avoided.

Regardless of the configuration method manual or automatic a composite service may thereafter be managed as a single entity.

In one embodiment the actual configuration of a composite communication service in the communication system involves causing equipment at the endpoints of a communication tunnel to exchange control signalling to set up unidirectional service to tunnel bindings in opposite directions so as to enable bidirectional communication between services through the tunnel.

Accordingly although the communication system itself might not be aware of the concept of a composite communication service management of a composite communication service through its component communication services and or service connectors may have an effect on configuration of equipment and services in the network.

In a similar manner communication system configurations which affect a composite communication service may be automatically detected and reflected at a management system. Configuration of two communication services to operate together may be detected and reflected in a composite communication service management GUI for example.

Further details of composite communication services are disclosed in the above referenced related patent applications.

In terms of testing a composite communication service composite communication services provided in a communication system may also be testable entities.

For a composite communication service each component communication service is identified by accessing a composite communication service data structure stored in memory for instance. Testing functions for each component communication service are then selected possibly from multiple testing function groups and or sub groups based on operational dependencies of the component communication services. Other entities of a communication system may involve similar operations to identify entities with which an entity to be tested has operational dependencies for example.

The sequence in which selected testing functions are to be performed may be based on one or more of relationships between the component communication services operational dependencies between the component communication services and other entities of the communication system and user inputs specifying a testing function sequence.

As noted above for the other drawings present example data structures solely for the purposes of illustration.

The composite communication service data structure includes information such as a name and or ID which identifies a composite communication service information respectively identifying n component communication services of the composite communication service such as a composite communication service name and or ID and other information associated with the composite communication service illustratively any or all of a description aggregate operational state number of composite communication services and number of connectors. The component communication services of a composite communication service may thus be determined by accessing the information in fields when a composite communication service is to be tested.

The service connector data structure includes information such as name and or ID identifying the service connector information indicating a type of the service connector examples of which have been described above information such as name and or ID identifying the composite communication service to which the service connector belongs information such as name ID service site and or interface identifying the m endpoints connected by the service connector and other service connector information such as a state of the service connector. Although it is expected that service connectors will connect two communication services one contemplated variation of the service connector concept is to define interconnections between more than two services.

The endpoint information provided at may include for each communication service connected by the service connector information identifying the communication service a particular service site of the communication service and connection information. A service connector which connects two services services and for example might include in the fields the data Service ID Service Site ID SCP bindingID connection device ID and Service ID Service Site ID SCP bindingID connection device ID respectively.

The service connector data structure may also be useful to determine which component communication services are to be tested where testing of only a portion of a composite communication service is required for example. Interconnections between component services can be detected through service connectors represented by data structures having the format shown in .

A component communication service is specified in the data structure by a service identifier which is information such as a name and or ID identifying the communication service a composite communication service identifier which includes information identifying the composite communication service to which the service belongs a composite communication service tier indicating the tier or hierarchical level of the composite communication service to which the service has been assigned and other information such as service state which may be determined from testing functions executed for the communication service.

The composite communication service tier represents a level of the component communication service in a structure of the composite communication service and not necessarily a level in a testing function structure. Comparing MPLS BGP VPN and VPLS services appear in the service level of the testing function group structure of but at different levels in the composite communication service of . However it should be appreciated that communication system architecture or testing function level of a communication service may be indicated in a similar manner using a testing level identifier or an entity type identifier for example.

Data records stored at a management system may include more than one of the data structures shown in . A management system database may include one or more composite communication service data records embodying the data structure one or more service connector data records embodying the data structure and one or more communication service data records embodying the data structure .

In short embodiments of the invention may implement more intelligence in testing function pre and post processing stages to simplify such complicated tasks as communication system testing and SLA management. The problem of determining the root cause of service performance issues is also addressed by embodiments of the invention.

The techniques disclosed herein may be of assistance to an operator and other personnel in performing tedious tasks of setting up specific testing functions for various components. The available tests can be classified into different groups and levels in a testing function group structure. Testing functions at a higher level could be performed first followed by lower level testing functions if necessary. Criteria can be defined to instruct a policy or testing engine to run a next testing function or set of testing functions based on the outcome of previous testing functions. Testing functions at the same or different levels can be packaged together with rules in some embodiments to form testing policies.

Embodiments of the invention may also help service providers to be more proactive with service assurance by allowing test suites to be scheduled. MAC ping tests for example could be run to verify connectivity among all L2 SAPs also to check if delay and jitter parameters of a service are within acceptable thresholds. A testing function sequence could be configured such that testing functions at lower testing levels are not run if the QoS targets of a current level are met. Similar arrangements could be implemented for a transport level and or other levels for instance.

Testing functions created from a test suite may be persisted or created on the fly at execution time. As a complete set of testing functions derived from a test suite may be more extensive than the needs of a system operator embodiments of the invention may provide for user control over the specific testing functions which will be performed. A test suite could be used to generate all possible testing functions for an entity to be tested and then unnecessary or unwanted testing functions could be deleted either permanently or temporarily as described above. Where the testing functions in a test suite have been modified it may be desirable to have the testing functions persist to avoid having to remove testing functions when the same entity is to be tested again. On the fly test creation on the other hand may help reduce the size of a testing database and ensure that newly added entities which are related to an entity to be tested are also tested.

What has been described is merely illustrative of the application of principles of embodiments of the invention. Other arrangements and methods can be implemented by those skilled in the art without departing from the scope of the present invention.

For example some of the testing scenarios described above refer to traversing a system testing group structure from higher to lower levels. The invention is not in any way limited to this or any other specific traversal order.

Embodiments of the invention may also provide further composite communication service related features than those described herein including features disclosed in the above referenced related patent applications.

It should also be appreciated that variations in the manner of implementing embodiments of the invention are contemplated. Although described primarily in the context of methods and systems the techniques disclosed herein may also or instead be implemented as instructions stored on a machine readable medium for example.

