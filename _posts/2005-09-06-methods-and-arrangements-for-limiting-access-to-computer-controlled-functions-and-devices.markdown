---

title: Methods and arrangements for limiting access to computer controlled functions and devices
abstract: Methods and arrangements are provided to verify if a requesting computer application is authorized to change a controlled parameter associated with a computer controlled device and/or function. To accomplish this, one or verification functions are employed to analyze a security code or absence thereof, as identified by a requesting application. If the security code, which may be encrypted, matches a known or calculated valid security code, then the requesting application is deemed to be authorized to change the controlled parameter and/or modify certain limitations associated with an acceptable range for the controlled parameter. If the security code does not match a known or calculated valid security code, then the requesting application is deemed to be unauthorized to change the controlled parameter outside of a previously established acceptable range for the controlled parameter. The verification function can be implemented in a ROM to increase the security and to thwart attempts to circumvent the authorization scheme. Several independent verification functions can be arranged to support the verification of a plurality of authorized applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07950048&OS=07950048&RS=07950048
owner: Microsoft Corporation
number: 07950048
owner_city: Redmond
owner_country: US
publication_date: 20050906
---
This is a continuation of and claims priority to U.S. patent application Ser. No. 9 538 621 filed Mar. 29 2000 entitled Methods And Arrangements For Limiting Access To Computer Controlled Functions And Devices Session State Manager by inventors Stephen Russell Falcon and Clement Chun Pong Yip.

As more functions and devices are being controlled by computer systems and over computer networks there is a potential for unauthorized users applications to attempt to control these functions and devices. For example as homes or automobiles become more computerized it may be possible for unauthorized computer applications to access and change certain operational parameters associated with various devices that are computer controlled. While actions of the unauthorized computer application may be completely unintentional the results can be serious.

One example can be found in controlling the volume of an audio system within a vehicle. Here the computer applications are arranged to set and maintain the volume level of the audio system or a select portion thereof. If an unauthorized computer application unintentionally or worse intentionally attempts to change the volume level the occupants and more particularly the driver may become irritated. For example certain high quality auto PCs output well over 100 Watts of sound. If the volume level were to unexpectedly change from a low or moderate level to a high or maximum level the occupants will not be amused.

Other examples include controlling devices or appliances in a home or business. Here various computer applications can communicate controlling information to the devices appliances. Consequently an unintended situation might arise if an unauthorized computer application attempts to control the device appliance.

Thus there is a need for methods and arrangements for controlling access to computer controlled functions and devices. Preferably the methods and arrangements will significantly reduce the possibility of unauthorized computer applications from unintentionally or intentionally changing the operation of the functions devices without overly burdening the user or the underlying computer systems and networks. Furthermore it would be desirable for the methods and arrangements to be secure and modular in design to allow for wide dissemination without compromising certain security features.

The present invention provides methods and arrangements for controlling access to computer controlled functions and devices. The various methods and arrangements significantly reduce the possibility of unauthorized computer applications from changing the operation of the functions devices by employing a security code authorization scheme that identifies trusted computer applications. The methods and arrangements can be implemented in a secure and or modular fashion that promotes wide dissemination without compromising certain security features and without overly burdening existing computer systems and networks.

Thus for example in accordance with certain aspects of the present invention a verification process is provided for use with one or more device parameter controlling functions. When an application or other software program attempts to modify a controlled parameter associated with the device the device parameter controlling function accesses the services of the verification process to determine if the requesting application is authorized to make the requested change.

The verification process utilizes information received from or otherwise made available by the requesting application. For example the information can include a security code or a pointer to a security code or like information that identifies the application in some manner. For example the security code may be associated with a software provider.

The verification process analyzes this security code to determine if it is valid. For example a software developer entity can provide both the application and the verification process software with a secret perhaps encrypted security code. The verification process can then compare the received decrypted security code with an existing decrypted security code to determine if the requesting application was intended by the software developer entity to change the controlled parameter as requested.

The device parameter controlling function can also be configured to allow other authorized and or unauthorized applications to change the controlled parameter within certain defined limitations as previously set for example by an authorized trusted application. Thus a range of acceptable values can be established by a trusted application and or upon system initialization.

If a requesting application seeks to change the controlled parameter beyond the range of acceptable values then the device parameter controlling function can utilize the services of the verification process to determine if the requesting application is so authorized to change or reset the range. If the requesting application is not so authorized then the device parameter controlling function can only change the current setting of the controlled parameter to the next closest value as defined within the limitations of the range.

Several verification processes can be employed for example in a series to determine if the security code matches various security codes associated with different authorized applications.

Security can be enhanced by configuring the device parameter controlling function to determine when the verification process has been tampered with. For example the device parameter controlling function can be configured to determine that the verification process accessed is associated with a predefined memory location within the computer system. Thus a verification process may be considered to be trusted so long as it remains associated with a memory address located in a read only portion of the memory.

These and other aspects of the present invention are applicable to different combinations of software and or hardware and can be used to limit access to a variety of computer controlled devices and or functions.

In this example processor is coupled to primary memory through a bus . Bus is therefore configured to interface processor and primary memory and carry data and control signals there between. As shown processor is also coupled to a secondary memory through bus . Secondary memory can include additional solid state memory magnetic data storage devices optical data storage devices and or the like. For example secondary memory can include a drive that provides access to data stored on a hard magnetic disk a removable magnetic disk a removable optical disc a magnetic tape a flash memory or the like.

Bus further couples processor to an input output interface I F . Input output I F is configured to operatively couple various devices to processor via bus . In this example a user input output I O device a controlled device and a communication device are each depicted as being coupled to processor by input output I F and bus .

User I O device can include a variety of devices related to the user. For example to provide for user inputs to processor user I O device may include a manual keyboard keypad device a mouse or pointer device an audio signal receiver device and or other like input devices. Similarly to provide for outputs to the user user I O device may include a visual display device an audio output device a force feedback device a printing device etc.

Controlled device can be any type of device that can be configured to be controlled in some manner by processor through bus and input output I F . Thus for example controlled device can be a peripheral computer device another computer system and or software application an appliance a machine or other like arrangement that operatively responds to outputs associated with processor . As described in certain exemplary implementations of the present invention that follow controlled device can include an audio system that operatively responds to volume control outputs generated by processor and provided to controlled device through bus and input output I F .

Communication device is configured to provide processor with additional data communications capabilities. Thus for example communication device may include a network interface device that can be operatively coupled to one or more external computer networks. In this manner communication device can be configured to provide computer system with access to additional computing resources.

For purposes of this detailed description it is assumed that application is configured to request changes to one or more controlled parameters associated with controlled device . For example application may request that the volume of an audio system e.g. controlled device be increased deceased. To accomplish such a request application will need to utilize shell API OS function to cause a corresponding output to be provided to driver . Here it is assumed that device driver is operatively configured to selectively alter parameters associated with controlled device .

As mentioned above there is often a need to limit access to computer controlled functions and or devices such as controlled device . Limiting access requires that only trusted applications be allowed to change the parameters associated with controlled device . Thus in accordance with certain aspects of the present invention authorization techniques are implemented within software suite to determine if application is trusted and selectively allow application to change the parameters associated with controlled device .

With this in mind the block diagram of depicts a functional arrangement of software and hardware that selectively limits access to computer controlled functions and or devices in accordance with certain aspects of the present invention.

As shown in OS and a plurality of applications A through C are each configured to provide or otherwise communicate a device parameter change request to a device parameter manager . Manager is configured to selectively pass an authorized device parameter adjustment to device driver . Device driver upon receipt of an authorized device parameter adjustment outputs or otherwise communicates a corresponding parameter setting to controlled device . Consequently the operation of controlled device is changed in some manner. For example the volume of an audio system can be increased deceased as indicated by parameter setting .

To determine if the calling OS and or application A C is trusted manager is configured to call upon the services of an authenticator . Thus for example upon receipt of a device parameter change request manager extracts and provides as necessary a security code contained therein to authenticator . Authenticator examines the security code and returns an authorization indicator that identifies if the requesting OS application is authorized to make the requested change to the parameter. If the requesting OS application is authorized to make the requested change to the parameter then manager passes an authorized device parameter adjustment to device driver . Conversely if the requesting OS application is not authorized to make the requested change to the parameter then manager does not pass an authorized device parameter adjustment to device driver .

In certain implementations manager can be configured to pass an authorized device parameter adjustment to device driver without calling authenticator and or without regard to the authorization indicator received there from. For example when manager is initialized a range can be defined for the controlled parameter. Range indicates the acceptable values for the controlled parameter. Thus for example a minimum parameter value and or a maximum parameter value may be defined in range . As such manager can pass an authorized device parameter adjustment to device driver without calling authenticator and or without regard to the authorization indicator received there from when the received device parameter change request does not attempt to exceed the limitations of range .

Authenticator includes at least one verifier function that is configured to receive security code and return an authorization indicator based on an analysis of security code . In this example two verifier functions namely verifierA and verifierB are provided within authenticator and arranged in a serial chain lock manner.

Each verifier function provided within authenticator is preferably configured to determine if the received security code is associated with a known trusted software developer entity. Thus for example a first trusted software developer entity may provide both OS and application APP A. The security code associated with a device parameter change request from either OS or APPA may therefore be the same or in some manner related.

Let us further assume in this example that a device parameter change request has been received from APPA and that the request exceeds range . In this case manager passes the security code to verifierA. VerifierA compares the security code to a known or determined corresponding value as originally provided by the first trusted software developer if there is a match then the authorization indicator will so indicate. An exemplary implementation of verifierA is depicted in and described in greater detail below.

Continuing with the example above let us further assume that verifierB is provided by a second trusted software developer along with application APP B. APPB will therefore have a different security code than OS and APPB.

When APPB outputs a device parameter change request that exceeds range then manager passes the security code to verifierA. Since the received security code does not result in a match from the function in verifierA it is passed on to verifierB.

VerifierB compares the received security code to a known or determined corresponding value as originally provided by the second trusted software developer. Since there is a match the authorization indicator from verifierB will indicate that the requested parameter change is authorized. Subsequently the authorization indicator from verifierB is passed through verifierA to manager .

Now let us assume that application APPC is not provided by either the first or second trusted software developer. If APPC outputs a device parameter change request that exceeds range then manager passes the security code to verifierA. Here the security code may be empty . Since the received security code does not result in a match from the function in verifierA it is passed on to verifierB. The received security code does not result in a match from the function in verifierB either. Thus the authorization indicator from both verifierA and verifierB will indicate that the is requested parameter change is not authorized.

If the authorization indicator indicates that the requested parameter change is not authorized then manager can either deny the requested parameter change or can make a partial parameter change based on the requested parameter change and the current applicable limitations defined within range .

Thus for example consider a computer controlled audio system. If APPC outputs a volume change request that exceeds a maximum volume as defined within range then manager may increase the current volume setting to be equal to the next closest authorized volume setting here the maximum volume as defined within range . Since APPC is not authorized to exceed or otherwise change the defined maximum volume within range manager is so limited.

To the contrary being so authorized should either OS APPA and or APPB output a volume change request that exceeds a maximum volume as defined within range then manager will increase the current volume setting as requested and change the maximum volume defined within range accordingly.

In this manner range and consequently the controlled device parameter is established and changed by trusted software developer entities. Unauthorized requests to exceed the limitations defined by range are denied.

This provides for increased security because device driver can call or otherwise invoke the services of the authenticator using the security code and in doing so determine that the verifying function s within authenticator have not been disabled replaced and or otherwise altered.

For example verifierA and verifierB can be included in ROM see as part of a DLL. Device driver can be configured to determine that the called verification function is within the address range of ROM . Therefore if device driver calls verifierA and determines that the address associated therewith is not an acceptable ROM address then the authenticator is not to be trusted. In which case device driver can disregard the enhanced authorized device parameter adjustment entirely and or notify other programs or the user about the potential integrity problem.

In accordance with certain aspects of the present invention the first trusted software developer is the developer of OS . For example Microsoft Corporation located in Redmond Wash. produces operating systems for use with personal computers PCs servers handheld computing devices etc. Accordingly Microsoft can provide OS APPA manager or and verifierA to an original equipment manufacture OEM for use in a particular computer system. By way of example as is described in more detail below an automobile or other like vehicle can include a computer system that controls several devices subsystems associated with the vehicle. An OEM would manufacture the computer system and load or otherwise provide OS APPA manager or and verifierA into primary memory and or secondary memory . The OEM would also provide APPB verifierB and device driver or within primary memory and or secondary memory . Preferably the OEM stores verifierA and verifierB in ROM for added security as described herein. Moreover this type of modular configuration allows Microsoft and the OEM to each establish and maintain separate and secret security codes for their respective software products.

In step a device parameter change request is received. For example a request to change the current volume from 25 to 45 i.e. an increase of 20 may be received from an application.

Next in step if the device parameter change request would not require exceeding range then the requested change is completed. Thus for example a request to change the volume to 45 would be completed since 45 falls within the range of 15 to 65.

As shown in step if the device parameter change request would require exceeding range then a determination is made as to whether the requesting application is authorized to change the limitations in range . By way of example in the preceding audio system example if the requested volume change would result in a volume setting of 75 then step would determine if the requesting application is authorized to change the volume range to 15 minimum through 75 maximum .

According to step if the requesting application is determined by step to be unauthorized to change range then the current value of the parameter is limited by range and the current value of the parameter is set to the next closest value within range . Thus for example if the requesting application is unauthorized to change the volume range to include a maximum volume of 75 then the current volume setting will equal the next closest value in the range which would be the maximum currently approved volume level of 65. The authorized volume range would remain 15 minimum through 65 maximum .

According to step if the requesting application as determined by step to authorized to change range then the current value of the parameter is changed as requested and the range is changed to include this new value. Thus for example if the requesting application is authorized to change the volume range to include a maximum volume of 75 then the current volume setting will set at 75 and the authorized volume range thereafter will be 15 minimum through 75 maximum .

With process in mind is an example of a flow chart depicting a verification process in accordance with step above. In step a security code is received from the requesting application. In step if necessary the security code is decoded for example using conventional decryption techniques. Next in step the resulting security code data from step is compared to known or otherwise calculated data. If the resulting security code data matches the known or otherwise calculated data then according to step the requesting application is authorized to change range . To the contrary if the resulting security code data fails to match the known or otherwise calculated data then according to step the requesting application is not authorized to change range .

In accordance with certain further aspects of the present invention certain enhanced security features can be included within a verification process step as depicted in . In step a received security code is provided to a verifying function. According to step if the verifying function is determined to be properly associated with a predefined or otherwise expected memory location e.g. address then the verifying function is allowed to determine if the requesting application is authorized to change range . To the contrary according to step if the verifying function is determined to be improperly associated with a predefined or otherwise expected memory location then the requesting application is deemed unauthorized to change range regardless of any decision made by the verifying function.

As shown computer system has a plurality of processors including a master control unit MCU and one or more secondary control unit SCU and . A dual bus structure having a primary data communications bus and a secondary support bus provide an infrastructure for data communications in the computer system . The primary bus may be implemented using any vehicle bus design currently employed or contemplated by automobile manufactures such as CAN ABUS VAN J1850 K BUS P BUS I BUS USB P1394 and so forth. The master control unit can be configured as master of the primary bus . The support bus may be implemented as any standard computer data bus such as PCI USB P1394 and the like. One or both secondary control units and can be configured as master of the support bus and as controller of one or more components coupled to the support bus .

The master control unit and the secondary control unit s are interconnected through the primary vehicle bus . In addition various electronic automobile components are connected to the master control unit via the primary bus . In this illustration the electronic components include an antilock braking system ABS an electronic steering system and an engine control system . However other components may likewise be connected to the primary vehicle bus such as a security alarm system a diagnostic system a lighting control system a fuel injection system an automatic transmission system and so forth.

In addition the electronic components shown in are intelligent components in that they each have their own local controller typically embodied as a microprocessor. The automobile might further include non intelligent electronic components that do not have local processing capabilities.

The control units and can be arranged in two different architectures 1 master slave architecture and 2 cluster architecture. In a master slave architecture the master control unit acts as the master of the primary vehicle bus and all electronic components as well as the secondary control unit s act as slaves to master control unit . The master control unit manages data flow among the electronic components and facilitates resource and information sharing. In addition the master control unit provides backup for the intelligent electronic components in the event that any of them fail and also performs data processing and control functions for non intelligent electronic components.

In this example if an application running on MCU and or a SCU request a volume change in audio system then a manager program running for example on MCU would be called. Manager would then selectively access the services of authenticator to determine if the calling application is authorized to change the current volume setting in accordance with the various techniques and examples presented herein. In this manner a variety of computer controlled parameters can be safeguarded against unauthorized changes.

Although the invention has been described in language specific to structural features and or methodological steps it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather the specific features and steps are disclosed as preferred forms of implementing the claimed invention.

