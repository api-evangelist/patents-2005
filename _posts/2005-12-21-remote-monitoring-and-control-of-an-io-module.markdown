---

title: Remote monitoring and control of an I/O module
abstract: An industrial automation monitoring and/or control system comprises a receiver component that receives a request for a web page associated with a network adaptor. An execution component executes instantiated objects within the web page to effectuate at least one of monitoring and control of an input/output module that is communicatively coupled to the network adaptor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07587251&OS=07587251&RS=07587251
owner: Rockwell Automation Technologies, Inc.
number: 07587251
owner_city: Mayfield Heights
owner_country: US
publication_date: 20051221
---
The subject invention relates generally to industrial control systems and more particularly to remote monitoring and or control of a process.

Due to advances in computing technology businesses today are able to operate more efficiently when compared to substantially similar businesses only a few years ago. For example networking enables employees of a company to communicate instantaneously by email quickly transfer data files to disparate employees manipulate data files share data relevant to a project to reduce duplications in work product etc. Furthermore advancements in technology have enabled factory applications to become partially or completely automated. For instance operations that once required workers to put themselves proximate to heavy machinery and other various hazardous conditions can now be completed at a safe distance therefrom.

Further imperfections associated with human action have been minimized through employment of highly precise machines. Many of these factory devices supply data related to manufacturing to databases that are accessible by system process project managers on a factory floor. For instance sensors and associated software can detect a number of instances that a particular machine has completed an operation given a defined amount of time. Further data from sensors can be delivered to a processing unit relating to system alarms. Thus a factory automation system can review collected data and automatically and or semi automatically schedule maintenance of a device replacement of a device drive actuators respond to data in real time and other various procedures that relate to automating a process.

To effectuate suitable industrial automation many enterprises utilize a plurality of disparate networks designed for industrial automation to communicate data between components within an industrial setting. In more detail networking protocols conventionally employed for personal computers in an office or home environment are often insufficient for an industrial setting as real time receipt and processing of data is typically required in such settings. Accordingly various protocols for industrial environments have been designed for utilization in industrial environments and application layer protocols have also been designed thereon to enable communication of data across disparate industrial protocols.

Remotely monitoring inputs and or outputs of sensors and or actuators has conventionally been an expensive and complicated task. More particularly to effectuate remote monitoring and or control of a process an individual or company must purchase a proprietary software application that enables communications to occur between a remote device such as a personal computer and an actuator sensor. Typically such software is quite expensive and must be modified by the creator of the software for a particular application. Often on site visits by a provider of the software application are required prior to implementing such software even further raising such expense. Thereafter proprietary message formats must be employed to setup and receive information from a remote location. For instance a controller can gather input messages and evaluate control elements associated with such messages and package such data as a particular message to proprietary software. The software can then forward such data to a remote location.

The following presents a simplified summary of the claimed subject matter in order to provide a basic understanding of some aspects described herein. This summary is not an extensive overview and is not intended to identify key critical elements or to delineate the scope of the claimed subject matter. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

Described herein are systems methodologies apparatuses and or articles of manufacture that enable remote monitoring and control of an I O module without the expense and complexity associated with previous monitoring and control systems. In more detail a web page can be built that includes a plurality of instantiated objects wherein execution of such objects results in monitoring or control of an I O module. For example a network adaptor such as a network interface card can be associated with its own homepage. Such homepage can include an editor applet wherein graphical function objects that are later instantiated as applets can be arranged and interconnected according to user desires within a project. Later the project file can be saved on a local or network drive. Once arranged and defined a Netlist can be generated that describes identity and relationships amongst the function objects. The Netlist for example can be in the form of an HTML file that can be reviewed through employment of a browser. Upon launch the applets within the HTML file can execute according to relationships described in an original project file and the I O module s associated with the network adaptor can be monitored and or controlled.

After the HTML file has been built as a Netlist of applets it can be archived upon a local or network drive and saved to the network adaptor whereby it can be accessed from any suitable location by any suitable device that has browser capabilities. Accordingly a laptop a personal computer a personal digital assistant a portable telephone and the like can be employed to open the HTML page and execute the instantiated objects therein. Furthermore any suitable device can be utilized to create the HTML page. Therefore it can be discerned that monitoring and or controlling an I O module from a remote location is inexpensive and portable.

A mechanism for converting data between web based data and data that conforms to an industrial automation protocol is also described herein. For instance typical I O modules receive interpret and output data in accordance with an industrial automation protocol. These industrial automation protocols may be nested within other protocols e.g. Ethernet or other web based protocols . A conversion component can be used to accept web based messages containing control data and deliver XML formatted input data. An XSL style sheet or any other suitable conversion mechanism can be employed to display the XML data obtained from the network adaptor collected via an industrial automation protocol format.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the claimed subject matter are described herein in connection with the following description and the annexed drawings. These aspects are indicative however of but a few of the various ways in which the principles of the claimed subject matter can be employed and such subject matter is intended to include all such aspects and their equivalents. Other advantages and novel features will become apparent from the following detailed description of the invention when considered in conjunction with the drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that such matter can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate describing the invention.

As used in this application the terms component and system are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to a process running on a processor a processor an object an executable a thread of execution a program and a computer. By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. The word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs.

Furthermore aspects of the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement various aspects of the subject invention. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips etc. optical disks e.g. compact disk CD digital versatile disk DVD etc. smart cards and flash memory devices e.g. card stick key drive etc. . Additionally it should be appreciated that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN . Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of what is described herein.

Now referring to the drawings illustrates a system that enables remote monitoring and or control of a process or application. The system includes a receiver component that receives a request for a homepage that is associated with a network adaptor . For example the homepage of the network adaptor can be accessed over an Ethernet connection by way of directing a browser to a location of the homepage. Such homepage can include and or be associated with one or more applets that enable editing and configuring of a control process that is remote from an initiator of the request. In one particular example the homepage can include an editor applet that can be initiated upon selection of a graphical icon or button thereby enabling an initiator of the request to create edit a web page e.g. an HTML page that can be employed for monitoring and or control of a process. Upon enabling the editor applet within the homepage the initiator of the request can have access to one or more graphical function blocks that can be manipulated and arranged in a manner desired by a user. For instance function blocks can include counter function blocks mathematical function blocks Boolean comparison function blocks and any other suitable function blocks that can be utilized for monitoring or controlling a process.

Upon certain function blocks being graphically associated with one another by the initiator of the request such initiator can request a build resulting in creation of the web page which is associated with one or more I O module s . The I O module can be for example a sensor an actuator a temperature monitor a local controller or any other suitable I O module. In more detail an HTML Netlist can be automatically built which includes relationships between applets represented by the function blocks placed in a file associated with a particular project e.g. a project file . Thus dependencies of the applets which can be Java applets direction of data between applets and the like can be automatically generated in the form of a Netlist. The web page can then be archived to a local drive or a network server stored within the network adaptor or placed in any other suitable storage location. Upon building the web page such web page can be automatically launched from the network adaptor to enable monitoring and or control of the I O module .

Thus the initiator of the request can cause the web page to be built and then utilize such web page or the web page can be pre existent wherein the user requests the web page through employment of a browser. The web page after the build includes one or more instantiated objects that result from the build of the web page which can be an HTML web page . The objects can be Java applets wherein relationships of such applets can be defined within the Netlist. An execution component can cause the instantiated objects to execute within the web page and control the I O module or monitor data associated with the I O module . In one specific example the I O module can be a sensor that senses completion of a product. The web page can be built to enable counting of a number of complete products and generating an alarm upon completion of a threshold number of products. Thus the instantiated objects can include a counting function block and a comparison function block. Upon an individual accessing the web page and the execution component executing the instantiated objects the above described functionality can be enabled.

Turning now to a system for monitoring and or controlling an industrial process from a remote location is illustrated. The system includes a security component that receives a request to access a homepage of the network adaptor or the web page that can be utilized to control monitor the remote I O module . To ensure that the initiator of the request is authorized to access and or execute the homepage or the web page the security component can receive and analyze one or more of a user identification password personal identification number and or biometric indicia such as a fingerprint voice analysis . . . associated with the initiator of the request. Furthermore the security component can utilize a virtual private network VPN a firewall or any other suitable manner for only enabling authorized individuals to access and or execute the network adaptor the homepage and or the web page .

After the initiator of the request has been authorized such request can be analyzed and serviced accordingly. For instance if the request is for the homepage of the network adaptor the receiver component can enable the initiator of the request to access such homepage. Thereafter the web page for the I O module which is communicatively coupled to the network adaptor can be built. More specifically function blocks can be selected and arranged by the initiator of the request and a compiler component which can be included within an editor applet can build the web page by way of creating a Netlist that includes the function objects and relationships therebetween. An exemplary portion of a Netlist that can be created by the compiler component is provided in Appendix A for illustrative purposes.

A file that includes this Netlist can be built by the compiler component by way of an editor running in the browser launched from the homepage of the network adaptor saved on the network adaptor and launched from such adaptor . Similarly after creation of the web page a requesting entity can directly access such web page by directing a browser to the page. Additionally the web page can be accessed by way of the homepage of the network adaptor . Once the web page is launched the execution component can execute the instantiated objects within the web page . In more detail the execution component can be associated with a requestor component that retrieves a Java plug in for utilization by the execution component . The execution component can then employ the Java plug in to execute the instantiated objects within the web page . The I O module can thereafter be controlled and or monitored based upon the execution of the instantiated objects which operate in accordance with the Netlist . For instance data can be relayed between the I O module and the network adaptor according to the executing instantiated objects .

Referring now to a system that facilitates control and or monitoring of the I O module from a remote location is illustrated. The system includes the receiver component that receives a request for the web page either directly indirectly through a homepage of the network adaptor or after creation of the web page . The request can then be provided to the execution component which executes instantiated objects within such web page . Execution of these instantiated objects in a manner described by a Netlist can enable monitoring and or control of the I O module . While the web page can be accessed by way of Ethernet the I O module may only be able to comprehend data that is formatted in accordance with an industrial automation protocol such as the Common Industrial Protocol or the Control and Information Protocol CIP ProfiBus FieldBus EtherNetIP DeviceNet ControlNet or other suitable protocol. Accordingly the system can include a converter component that converts data from a web server s http format to a format that conforms to an industrial automation protocol. More particularly the converter component can define a message format employed by the instantiated objects which can be applets to request data from the adaptor wherein the data associated with the adaptor conforms to the industrial automation protocol.

In one example the converter component can be accessed by a dynamic link library DLL to provide an interface between the web server and an industrial automation protocol. For instance employing the Internet Server Application Programming Interface ISAPI an extended Internet address can be formed by a requestor e.g. an applet text box and button . . . that causes a DLL to be executed on the network adaptor. This DLL can act as an interface between the web server and the converter component . The DLL forwards the data within the extended Internet address to the converter component and receives a response from same. The DLL then transmits an XML formatted response to the original requestor. An associated XSL style sheet can be called to transform the XML data stream into a displayable format. In another example an applet can generate the extended internet address with associated DLL reference and data send it to the network adaptor which can then display the XML response.

Referring now to a remote monitoring control system is illustrated. The system includes the receiver component that receives a request to access a homepage of the network adaptor . Such homepage can be associated with an editor applet e.g. an editor component . In one example the editor component can cause provision of a graphical user interface within a browser wherein at least one field of such interface enables a user to organize function blocks to effectuate a control or monitoring process with respect to the I O module . The editor component can be associated with a library of objects that can be accessed by a user and positioned within the field in a manner desired by such user. While shown as being resident upon the network adaptor it is understood that the library of objects can be associated with any suitable data storage device that is communicatively coupled to the network adaptor . For instance the library of objects can be existent upon a server that is associated with the network adaptor .

In a detailed example the library of objects can be resident within a particular file e.g. a jar file that is delivered to a browser that is accessing the network adaptor . A Java plug in for instance can then be employed to unzip the file to access executable object class files. Therefore sets of objects can be zipped in appropriate files and correctly referenced regardless of their location. It is to be understood however if the file that includes the library of objects is not resident upon the network adaptor a client would need appropriate client software have knowledge of how to retrieve the library of objects and be appropriately coupled to a server that includes the library of objects .

As stated above a user can select and arrange function objects in a manner of their choosing to effectuate a desired monitoring control outcome with respect to the I O module . Some objects within the library of objects however may not have been purchased at the time the system was purchased. Due to changing needs of a user however function objects within the library of objects not initially needed by a user may later be desired. Thus the user can purchase additional objects through a transaction component which can be resident upon the network adaptor . For instance the user can select a desired object and be provided with an option to purchase the selected object. Moreover the user can be provided with several payment options including paper billing instant payment by way of credit card charge to an existing account and the like. Upon purchasing one or more desired objects form the library of objects by way of the transaction component the user can arrange the purchased object s through the editor component . The user can then request that an HTML page be built given the arrangement of function blocks. The built HTML page can then be launched and or accessed at a later time by the user. The instantiated objects within the web page can be executed which performs monitoring and or control actions with respect to the I O module .

Referring now to a system that enables a project to be selected and utilized in connection with monitoring controlling the I O module is illustrated. The system includes the receiver component that receives a request for a homepage of the network adaptor through use of a browser . Upon being provided the homepage the initiator of the request can select one or more projects associated with the I O module by way of a selection component running as part of an editor applet. For instance a plurality of existing projects can be resident within a project store upon a local drive or network server that is communicatively coupled to the network adaptor . The user can select a desired project from the project store by way of the selection component . In another example the selection component can be employed to create a new project.

Upon the selected project or a new project being loaded into the homepage of the network adaptor the editing applet can graphically arrange and interconnect function blocks in a desired manner. This graphical arrangement of function blocks can be saved as a project for retrieval at a later time on the local drive or a network server . In addition the project can be built into an HTML page including a netlisted collection of applets. A save component can then be employed to archive the web page in a desired project folder on the local drive or the network server within the project store . The web page is also saved at the network adaptor thereby enabling an initiator of a request to directly access the web page at the network adaptor . In still another example the initiator of the request can access shortcuts on the user s desktop to various HTML Netlists resident on the network adaptor . Such web page can be executed by the execution component and the executing instantiated objects can be employed to monitor and or control the I O module .

Turning now to a system that facilitates web based control of the I O module from a remote location is illustrated. The system includes a remote device such as a laptop computer a desktop computer a personal digital assistant a cellular telephone or any other suitable device that can be communicatively coupled to the network adaptor . The system further includes a server which can be a file server a server associated with a particular company etc. In a particular example a web browser can be initiated at the remote device and directed to a homepage associated with the network adaptor which may be an Ethernet interface card . The network adaptor can then provide the remote device with an editor applet that enables a user of the remote device to create open edit save a project that can be used to build an HTML Netlist that is then employed to monitor and or control aspects associated with the I O module . The editor applet can appear in a frame of the homepage of the network adaptor . The homepage can further include one or more depressible graphical buttons that enables a project resident upon the server to be opened. Thus the remote device can access any project that is saved on one or more file servers throughout the world if security requirements are met .

Function blocks can be edited arranged and the like through employment of the editor applet and once editing is complete the project can be saved upon the server this file server may be on the local drive hard drive flash drive etc. or other suitable network drive . Once the project is saved an HTML file with instantiated function blocks therein can be built e.g. an HTML Netlist . The HTML file can be saved in the server and or within the network adaptor . Thereafter the HTML file can be launched as an HTML web page from the network adaptor and the function objects applets instantiated within such web page can be executed. The applets within the HTML web page can be executed individually and separately. In other words the applets are not forced to execute in a particular sequence. Rather they execute according to relationships between inputs and outputs of the function blocks. The web page can then be employed to exchange data between the network adaptor and the I O module . Thus as described above a conversion mechanism can be employed for a web to industrial automation protocol e.g. CIP conversion. If function blocks instantiated within the web page are directed to read write data residing within that web page such data can be retrieved saved from to the project directory upon the server . Upon creation of the web page such web page can be launched by directing a browser to the web page on the network adaptor indirectly via the homepage associated with the network adaptor e.g. the editor or directly using a shortcut on the user s desktop.

Referring to methodologies in accordance with various aspects of the claimed subject matter are illustrated. While for purposes of simplicity of explanation the methodologies are shown and described as a series of acts it is to be understood and appreciated that the claimed subject matter is not limited by the order of acts as some acts may occur in different orders and or concurrently with other acts from that shown and described herein. For example those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events such as in a state diagram. Moreover not all illustrated acts may be required to implement a methodology in accordance with the claimed subject matter. Additionally it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media.

Turning specifically to a methodology for remotely monitoring an I O module and or remotely controlling an I O module is illustrated. The methodology initiates at and at a request for a web page associated with a network adaptor is received. For instance the request can be generated through a VPN and directed towards the network adaptor that includes the web page. In still another example the requested web page can be automatically launched after completion of editing a project. At the request for the web page is serviced e.g. the browser is populated with the requested web page . At instantiated applets within the web page are executed to effectuate a control function which can be data monitoring controlling a process . . . . The instantiated applets can then run and if desired write data to a network drive. The applets can be associated with one or more conversion functionalities thereby enabling the web page to exchange data with the I O module. The methodology completes at .

Referring now to a methodology for creating and saving a project file for use in connection with controlling monitoring an I O module is illustrated. The methodology initiates at and at a request is received for a homepage associated with a network adaptor. For example a browser can be directed to the homepage of the network adaptor. The device that includes the browser can be located at any suitable location where a network connection to the network adaptor can be created and maintained. For instance the device that initiates the request can be on a first continent while the network adaptor and or the I O module can be resident upon a second continent. At the requested homepage is provided to the initiator of the request. The homepage for example can include various selectable icons that facilitate access to one or more projects and the like. At a request for an editor applet within the homepage is received. For example a pointing and clicking mechanism a series of keystrokes or the like can be employed to request the editor applet.

Once the editor applet is received at a request for a particular project is received. The project can be requested from a local or network drive or a new project can be requested. At the requested project is edited through employment of one or more function blocks. For instance a frame can be provided that enables selection editing wiring and placement of one or more function objects. At the requested project is saved on the local or network drive. The project can then be retrieved at a later time for editing and subsequent rebuild and execution. The methodology then completes at .

Referring now to a methodology for automatically creating an HTML Netlist that can be employed to control or monitor an I O module is illustrated. The methodology starts at and at edits to a project are received through employment of function blocks. For example content of the function blocks can be edited and or function blocks can be arranged in a manner desired by a user. The editor that enables the editing of function blocks can be existent on a network adaptor and an initiator of the request can be resident remotely from the network adaptor. At a request to build an HTML file Netlist is received wherein the built file can include instantiations of the function objects as applets. At the HTML file Netlist is generated according to the request. Such file can then be employed to monitor and or control at least one I O module. The methodology completes at .

Turning now to a methodology for monitoring data associated with an I O module and or controlling an I O module is illustrated. The methodology begins at and at a request is received to launch an HTML page that includes instantiated control objects. For example a browser can be directed towards the HTML page for example by way of a shortcut on a user s desktop . Similarly a homepage associated with a network adaptor can be accessed by way of a browser and the HTML file can be opened from such homepage. Any suitable manner of receiving the request is contemplated by the inventor and intended to fall within the scope of the hereto appended claims. At the instantiated objects within the HTML page are executed. Such objects can operate individually and according to a manner in which function blocks were graphically arranged. At result of execution is converted into data that conforms to an industrial automation protocol such as CIP. At the converted data is provided to an I O module such that the I O module can receive and interpret the data. The conversion can also occur in reverse. In other words data form the I O module can be converted to a web based format to enable monitoring of such data upon the HTML page. The methodology then completes at .

Now referring collectively to screenshots that illustrate one or more aspects described herein are provided. It is understood that such screen shots are exemplary in nature and are not intended to limit the claimed subject matter to embodiments shown in the screen shots. Turning specifically to a screenshot illustrating a homepage for a network adaptor is illustrated. The homepage can include multiple frames and wherein selection of a link in the frame can cause disparate information to appear in the frame . In the screenshot a link relating to diagnostics has been selected in the frame thus causing diagnostic information relating to the network adaptor to be displayed in the frame .

Turning now to a screenshot of the homepage populated with an editor applet is illustrated. The editor applet can be enabled by selecting a particular link within the frame . The editor applet can be provided in the frame and can include several buttons that can be depressed by a user. For instance at least one of such buttons can relate to opening a project starting a new project saving a project placing function blocks and various other functionalities. Referring now to a screenshot illustrating selecting of a button within the editor that enables opening of a particular project is illustrated. In more detail an open button can be selected by a user through a pointing and clicking mechanism for example. The screenshot illustrates a frame that is provided after the button is selected wherein a list of available projects are available for selection.

With reference to a screenshot illustrating use of an editor to select place and wire one or more function blocks is illustrated. Selection of a particular button enables one of a plurality of function blocks to be selected. Upon selection of a desirable function block such block can be placed and organized according to a user s desires. As described above these function blocks can be applets that will run independent of one another. Turning briefly to a screenshot illustrating building of a Netlist from the arrangement of function blocks is illustrated. For example a button can be depressed by a user that initiates a build of the Netlist. A frame can be provided that enables a user to select a name for the built Netlist. Similarly while not shown within the screenshot the project associated with the to be built Netlist can also be saved at a server .

Referring now to a screenshot of an HTML page resulting from the build is illustrated. The screenshot includes graphical entities selected by a user and is designed to monitor data according to the arrangement of function blocks described above. Upon selection of a button the instantiated objects can begin executing. Turning now to a screenshot of the HTML page during execution of the instantiated objects is illustrated. In the example shown below the I O module monitored through the HTML page produces a continuous series of incremental count values. The function blocks were arranged to monitor the counts and graphically display as much to the user. Furthermore various comparisons can be made through use of the function blocks and data can be directed to one or more particular files.

With reference to an exemplary environment for implementing various aspects of the invention includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 8 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example a disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage devices to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer system . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that the subject invention can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices like monitors speakers and printers among other output devices which require special adapters. The output adapters include by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 1102.3 Token Ring IEEE 1102.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above includes examples of the invention. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the subject invention but one of ordinary skill in the art may recognize that many further combinations and permutations of the invention are possible. Accordingly the invention is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

