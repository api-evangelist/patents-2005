---

title: Music replacement in a gaming system
abstract: A user of a game system can replace background music from a game with the user's selected background music, while still hearing any other audio streams (e.g. sound effects related to gameplay). A music engine and system audio mixer allow the playback of the user's requested replacement music. The game tags background music streams with an identifier indicating that they are background music, and such streams are muted at the music engine and system audio mixer (if the game is using the provided music engine in order to play the game's audio streams) or by the game if the game is using a game music engine and has received information indicating that a mute request has been issued.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07663045&OS=07663045&RS=07663045
owner: Microsoft Corporation
number: 07663045
owner_city: Redmond
owner_country: US
publication_date: 20050920
---
This application relates generally to gaming console systems and more particularly to the replacement of audio data from a gaming console device.

When a user is playing a video game on a video game system generally the video game controls the sounds which are being played by the video game system either directly through speakers on the video game system or through a connection to a monitor or television incorporating speakers another device incorporating speakers or separate speakers. Game music can be repetitive and therefore annoying to the game player.

One solution that some users employ is to mute the sound from the video game via a control provided by the video game e.g. a volume or mute function . In some cases the control allows the user to have only video game sound effects and not the music play.

Another solution that some users employ is lowering the volume or muting completely the device through which the video game system is playing sounds. However this is not selective and dialogue and or sound effects provided by the video game are muted as well as music provided by the video game.

In order to provide a user with flexibility in choosing background music for a video game some video games provide a number of choices for background music. These choices of background music however are limited and may also grow repetitive for a user.

A few video game consoles e.g. Microsoft s Xbox video game console allow a user of a video game to request that the video game play user selected music. For example using such systems a user could download a music file and request that the video game play that music file as background music for the video game. However this was only possible when implemented by the video game being played and a video game developer had the entire complex task of implementing the functionality which allowed a user to provide and select music.

Thus there is a need for a way to provide a user of a video game with the capability to replace certain audio elements e.g. background music of a video game used with a video game system without requiring extensive effort by the video game developer.

The invention provides techniques by which a video game system and associated video games provide users with the ability to customize the audio portion of their gameplay experience. The techniques allow for this customizability to occur without extensive effort by the video game developer. A video game system uses a tagging system by which video game designers tag the audio portions of the gameplay experience presented to the user via the video game console. The tags indicate which audio portions include background music. The video game system uses the tags to present to the user the option of replacing background music provided by the video game designer with alternate music. In one embodiment a game will play its originally authored music unless action is taken by the gamer. In an alternate embodiment a game will remember the gamer s previous choice for music and that choice is used to provide music the next time the game is played.

A video game system provides an audio engine. This audio engine allows playback of audio data. For example a music engine may provide decoding streaming and rendering for various formats of audio file such as WMA and mp3. The audio engine is used to support the user s request via a music console user interface UI to play user specified music.

The audio engine can also be used by the video game to play audio files. The audio engine exposes application program interfaces APIs which can be used to enumerate playlists of stored music files select music files and play them. APIs which can be used by a video game to detect when a user has requested the replacement of background music are also included.

Only some embodiments of the invention have been described in this summary. Other embodiments advantages and novel features of the invention may become apparent from the following detailed description of the invention when considered in conjunction with the drawings.

The method and apparatus described herein allow the user of a gaming system the ability to replace background music in a game or a multimedia application running on the game console with their selected music.

The game console has four slots on its front face to support up to four controllers although the number and arrangement of slots may be modified. A power button and an eject button are also positioned on the front face of the game console . The power button switches power to the game console and the eject button alternately opens and closes a tray of the portable media drive to allow insertion and extraction of the optical storage disc .

Game console connects to a television or other display not shown via A V interfacing cables . A power cable provides power to the game console. The game console may further be configured with broadband capabilities as represented by the cable or modem connector to facilitate access to a network such as the Internet.

Each controller is coupled to the game console via a wire or wireless interface. In the illustrated implementation the controllers are USB Universal Serial Bus compatible and are connected to the console via serial cables . The controller may be equipped with any of a wide variety of user interaction mechanisms. As illustrated in each controller is equipped with two thumbsticks and a D pad buttons and two triggers . These mechanisms are merely representative and other known gaming mechanisms may be substituted for or added to those shown in .

A memory unit MU may be inserted into the controller to provide additional and portable storage. Portable memory units enable users to store game parameters and port them for play on other consoles. In the described implementation each controller is configured to accommodate two memory units although more or less than two units may be employed in other implementations.

The gaming system is capable of playing for example games music and videos. With the different storage offerings titles can be played from the hard disk drive or the portable medium in drive from an online source or from a memory unit . A sample of what the gaming system is capable of playing back include 

The CPU memory controller and various memory devices are interconnected via one or more buses including serial and parallel buses a memory bus a peripheral bus and a processor or local bus using any of a variety of bus architectures. By way of example such architectures can include an Industry Standard Architecture ISA bus a Micro Channel Architecture MCA bus an Enhanced ISA EISA bus a Video Electronics Standards Association VESA local bus and a Peripheral Component Interconnects PCI bus also known as a Mezzanine bus.

As one suitable implementation the CPU memory controller ROM and RAM are integrated onto a common module . In this implementation ROM is configured as a flash ROM that is connected to the memory controller via a PCI Peripheral Component Interconnect bus and a ROM bus neither of which are shown . RAM is configured as multiple DDR it SDRAM Double Data Rate Synchronous Dynamic RAM that are independently controlled by the memory controller via separate buses not shown . The hard disk drive and portable media drive are connected to the memory controller via the PCI bus and an ATA AT Attachment bus .

A 3D graphics processing unit and a video encoder form a video processing pipeline for high speed and high resolution graphics processing. Data is carried from the graphics processing unit to the video encoder via a digital video bus not shown . An audio processing unit and an audio codec coder decoder form a corresponding audio processing pipeline with high fidelity and stereo processing. Audio data is carried between the audio processing unit and the audio codec via a communication link not shown . The video and audio processing pipelines output data to an ANV audio video port for transmission to the television or other display. In the illustrated implementation the video and audio processing components are mounted on the module .

Also implemented on the module are a USB host controller and a network interface . The USB host controller is coupled to the CPU and the memory controller via a bus e.g. PCI bus and serves as host for the peripheral controllers . The network interface provides access to a network e.g. Internet home network etc. and may be any of a wide variety of various wired or wireless interface components including an Ethernet card a modem a Bluetooth module a cable modem and the like.

The game console has two dual controller support subassemblies and with each subassembly supporting two game controllers . A front panel I O subassembly supports the functionality of the power button and the eject button as well as any LEDs light emitting diodes or other indicators exposed on the outer surface of the game console. The subassemblies and are coupled to the module via one or more cable assemblies .

Eight memory units are illustrated as being connectable to the four controllers i.e. two memory units for each controller. Each memory unit offers additional storage on which games game parameters and other data may be stored. When inserted into a controller the memory unit can be accessed by the memory controller .

A system power supply module provides power to the components of the gaming system . A fan cools the circuitry within the game console .

The game console implements a uniform media portal model that provides a consistent user interface and navigation hierarchy to move users through various entertainment areas. The portal model offers a convenient way to access content from multiple different media types game data audio data and video data regardless of the media type inserted into the portable media drive .

To implement the uniform media portal model a console user interface UI application is stored on the hard disk drive . When the game console is powered on various portions of the console application are loaded into RAM and or caches and executed on the CPU . The console application presents a graphical user interface that provides a consistent user experience when navigating to different media types available on the game console.

The gaming system may be operated as a standalone system by simply connecting the system to a television or other display. In this standalone mode the gaming system allows one or more players to play games watch movies or listen to music. However with the integration of broadband connectivity made available through the network interface the gaming system may further be operated as a participant in a larger network gaming community. The network interface may connect to a network. Such a network may be public e.g. the Internet private e.g. a residential local area network LAN or some combination of public and private. Such a network may introduce another memory source available to individual gaming systems online storage. In addition to the portable storage medium the hard disk drive and the memory unit s the gaming system can also access data files available at remote storage locations via the network.

While many games have highly integrated interactive music a sizable number of other types of games simply play tunes for their background music. For example many action sports games simply include background music not highly integrated into the action e.g. a snowboarding game which plays music unrelated to the action as the user virtually heads down the slopes. In some embodiments the gaming system allows the user to replace the background music of a game or other application being run on the gaming system with other music of their own selection. While it is contemplated that in general both the audio data which a game is playing as background and the audio data the user selects to be played replacing that data are music the use of the term music is not intended to be limiting in any way and both the background to be replaced and the user selection may be any audio data. 

In a gaming system audio data may be played from different sources. Audio data may be stored in memory within the gaming system such as a hard disk drive or memory unit stored on media e.g. portable medium in a media reader e.g. drive in or directly attached to gaming system or may be available via a network. A locally connected personal computer may be a source of music as can a connected portable personal music player device.

The user of a gaming system uses a game controller or other user input device to the gaming system to view a music player user interface UI . This music player UI may be a separate UI or may be part of a UI with broader utility. The music player UI allows the user to browse music stored in or accessible to the gaming system. Playlists organizing music files may be supported in the music player UI. The user uses the music player UI to start playback of one or more selected music files. When this occurs if a game or other application with background music is running or begins the background music is muted.

In some embodiments the game console includes a music player engine in order to play the music files selected by the user via the music player UI. is a block diagram of the interaction between the music player engine and other parts of the game console . As seen in the music player UI utilizes the music engine . In addition music engine can be used by game or other applications running on game console via music engine library which contains a set of application program interfaces APIs used to request services from the music engine such as enumeration of playlists selection of audio files and playing of audio files. Thus information can be obtained by a game about the currently playing music and this information can be integrated into the game. For example if a game simulates the experience of driving a car a car stereo can be simulated which allows the user to pick stations correlated with existing playlists or can include a display of the current title playing.

In some embodiments music engine library also contains APIs used by applications running on the game console in order to allow an application to have information regarding whether the user has decided to replace the application s background music. Music engine provides audio data to a system audio mixer . The system audio mixer acts as the gateway between all parts of the game console and the audio output. While other components may act on the audio signal after it leaves the system audio mixer for example Dolby encoding the system audio mixer functions as the audio mixer for the entire game console and determines what audio will be output from the game console e.g. via audio codec from and A V cables from . With reference again to in one embodiment the system audio mixer is audio processing unit and in another audio processing unit includes all or part of the functionality of the system audio mixer . In another embodiment no audio processing unit is present but the functionality of the audio processing unit is performed by system audio mixer .

The music engine is implemented as a set of concurrent services that perform decoding and playback from various music formats playlist enumeration data streaming and any necessary digital rights management support. As a concurrent system service the CPU memory and bandwidth for the music engine is allocated from the system application budget. Access to the music engine is provided in the form of a set of APIs application program interfaces that form music engine library . The music engine serves both the music player UI and any games or other software running on the gaming system which requests music engine service.

Some games do not use the music engine in order to provide audio background music and other audio output to the user. is a block diagram of the relationship between system software in the game console and game software separately providing a game music engine. As shown in while music engine still provides audio output to the system audio mixer the game software has a game music engine instead of utilizing the music engine . Game background music and all other game sounds are played through the game music engine which provides audio playback information to the system audio mixer . In order for replacement of background music by a user utilizing music player UI a mute control signal is provided by the music engine to the game music engine . If the mute control signal indicates that the user has requested replacement of the background music the game music engine does not request that system audio mixer play game background music but only that it play other game sounds .

As previously mentioned in many cases the game designer will include game specific UI for music selection. The specific UI in the case of the game simulating the experience of driving a car should have the look of an in dash music player e.g. car stereo console as part of the car interior dashboard art. The user can then use the game specific UI to change or otherwise affect the music or can call up the music player UI to make such changes. Any updates made in playlist song volume etc are updated in the game s own artwork. As another example a game providing a user with a virtual reality experience may also provide a personal music player UI which allows the user to select a playlist from game provided music tracks as well as local and net connected playlists. Any changes made in the game UI are reflected in the music player UI and vice versa. In one embodiment when a game is being played the music player UI which is presented to the user contains a limited subset of the music player UI which might otherwise be available. This allows the user to have easy access to features a user would want during game play without the complexity of displaying other features.

In this way when a game is run by a user on the game console the user can decide whether to hear the game as authored with the background music provided by the game or to replace background music. In order to replace the background music in one embodiment the user activates the music player UI and requests music to play. The music player UI along with other components of the gaming system replaces the background music provided by the game with their own background music.

In some embodiments the user s choice is persisted by the game console so that when in the future the user again plays the game the user s selected replacement music is played in place of the game background music. If the selected replacement music is unavailable the background music is played. In alternate embodiments if the selected replacement music is unavailable an informational message is shown to the user to alert the user that the replacement music is unavailable. The informational message in one embodiment allows the user to request music player UI .

In one embodiment if the user is playing music via music player UI and has not previously requested replacement of the background music for a game when the game is started the game s background music is automatically replaced by the music being played. In another embodiment the user is asked to decide whether to automatically replace the background music of the game in favor of the music being played.

Many games play a soundtrack consisting of complex interactive music and audio for a user. Such soundtracks include multiple elements such as background streams and sound effects. Games may either use the music engine or their own game music engine in order to play their soundtracks. In order to mute only the background music and not game sounds according to one embodiment the game must tag background music as background music when using the music engine or mute background music when using a game music engine in order to allow the background music to be replaced. Where the music engine is used to play the background music in order to provide replacement of game music the music engine communicates with a game s audio via private or public methods which allow the game to tag an audio stream as background music and allow the music engine to determine if an audio stream has been tagged as background music.

Any audio stream tagged as background music can be selectively muted when the user has selected to play other music in place of the games background music. In one embodiment the game does not receive information that this muting is happening. In another embodiment an API allows the game to determine whether muting is occurring. If the game does not know that muting is occurring the game will continue to use the same system resources and render its own background music but it is not played by the music engine or depending on the implementation of music engine it is played with a zero volume . If the game is allowed to know that muting is occurring the game may be created in such a way that when muting is occurring the rendering of background music does not occur to save system resources. In one embodiment when transitioning from the game supplied background music to the user supplied background music a smooth quick crossfade is performed.

In one embodiment when the replacement music becomes unavailable the games background music is again played for the user. For example if the user chooses to substitute the game music with music available via a network and a network outage occurs or the music otherwise becomes unavailable the game music will be substituted.

In one embodiment the user s preference for replacing game background music with the user s selected music is persisted. This persistence is depending on embodiment or user selection a preference which is persisted on a per session per game or continuous basis. The game system can persist both the user s preference and the selection of music being played. Thus in one example a game system which had previously been used to play a game with the background music replaced by the user with specified playlists these playlists will again be used when the game is next used. Alternately the state of play is also persisted. The game system begins playing the playlist replacing the background music from the track which was playing when the game exited or from the point in the track which was playing.

Many games play complex interactive music and audio for a user. Such soundtracks include multiple elements such as background streams and sound effects. As described above games may either use the music engine or their own game music engine in order to play their soundtracks. In order to mute only the background music and not game sounds according to one embodiment the game must tag background music as background music when using the music engine or mute background music when using a game music engine in order to allow the background music to be replaced.

However in one embodiment even when a user has requested that the game s supplied music be swapped out in favor of other music the user selects at certain times the replacement is not made. One example is a cut scene video in a game. Cut scenes are presentations intended to be shown in their entirety including audio. For example if a game is based on a movie a cut scene may be a scene from the movie. Such cut scenes may be rewards for reaching a certain level. If it is determined that a majority of users want to hear the cut scene without any additional music forcing users to manually request via UI music that replacement of audio be halted may be problematic for user satisfaction. In order to allow the user to enjoy the full presentation of the cut scene without requiring the user to manually change the replacement options during a cut scene music replacement is automatically halted.

Another practical reason may be present for halting music replacement during cut scenes. While a game can include multiple audio streams including background and sound effects a cut scene from a movie will generally have only one audio stream associated with it the entire soundtrack is pre mixed into a single stereo or multichannel file that is interleaved with the video. Since the music sound effects and dialog are pre mixed it is not possible to swap out only the background music.

Other examples of when music replacement may be halted include during title screens and other informational or advertising screens which may have associated music which is intended to be presented without alteration.

For these reasons among others in one embodiment a mechanism is provided which allows the game selectively override the user s music replacement request. In one embodiment this is done via an override API which is called by the game when the user s music replacement selection is to be overridden.

In one embodiment the user can choose whether the game has the ability to override the user s music replacement choice in one game for example where the user does not care about cut scenes the user can decide that the game should not be able to override the user s selection of other music to play. In another game the same user may be more interested in the cut scene audio track and may allow the game to decide whether the music replacement choice is to be overridden.

In order to ensure that the game does not use the override API improperly in one embodiment of the invention the game is subject to technical certification. A game only passes technical certification if it will correctly allow music replacement. The situations in which an override request may be issued is detailed in a requirements document.

APIs can be included in the music engine library . Control APIs can be used by the game in order to control the playing of music via music engine . Content and enumeration APIs allow information about user playlists and songs and creation of temporary playlists. Certain event notifications are also sent to the game when music engine library APIs are being used.

In one embodiment the following content and enumeration APIs are provided in the music engine library 

Additionally an API may be made available which allows a request to be made that muting of background music from the game be temporarily halted. Such an API allows the game to request that all music streams originating from the game be played. Depending on the embodiment this request is granted in all cases or it is granted only in cases where the user has decided to allow such temporary halting of music replacement.

It is noted that the foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to various embodiments it is understood that the words which have been used herein are words of description and illustration rather than words of limitations. Further although the invention has been described herein with reference to particular means materials and embodiments the invention is not intended to be limited to the particulars disclosed herein rather the invention extends to all functionally equivalent structures methods and uses such as are within the scope of the appended claims. Those skilled in the art having the benefit of the teachings of this specification may effect numerous modifications thereto and changes may be made without departing from the scope and spirit of the invention in its aspects.

