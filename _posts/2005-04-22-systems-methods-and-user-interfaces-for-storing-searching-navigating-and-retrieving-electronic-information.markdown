---

title: Systems, methods, and user interfaces for storing, searching, navigating, and retrieving electronic information
abstract: Computer system navigation tools provide “links” to various different files, lists, folders, and/or other storage elements and allow users to organize files, e.g., by hierarchical properties, lists, auto lists, folders, and the like. Such systems and methods allow users to assign properties to a file (optionally in a hierarchical manner), to change assigned properties, to search, view, and retrieve information based on the assigned properties, and the like.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08195646&OS=08195646&RS=08195646
owner: Microsoft Corporation
number: 08195646
owner_city: Redmond
owner_country: US
publication_date: 20050422
---
The present invention generally relates to systems methods and computer readable media with computer executable instructions stored thereon for storing searching navigating and retrieving electronic data and other information on a computer system or network as well as to aspects of user interfaces associated with these functions and available for performing these functions.

Tremendous volumes of information are stored on and or available through computer systems and networks and this information can be made available to computer users for a variety of different purposes. Although computers can provide this wealth of information to users the information is only valuable and useful to users if users can reliably locate and retrieve the desired information from the system or network. The stored information is of little or no value to users if it cannot be readily located and or retrieved without substantial searching time effort and or frustration.

Aspects of the present invention relate to systems methods and user interfaces that provide navigational tools for storage systems of computers their operating systems networks and the like. In accordance with at least some examples of this invention navigation tools and or their corresponding user interfaces and displays may be provided in multiple different windows application programs and the like. In at least some examples of this invention navigation tools or and or their corresponding user interfaces and display panel s may include windows or panes that include links to various different files lists folders pages and or other storage elements. If desired navigational tools in accordance with at least some aspects of this invention may be customized for different application programs for portions of applications programs for portions of operating systems by different users and the like e.g. by independent software providers from those providing the computer operating system to be better suited or targeted for navigating information relating to that set of files etc. and or to that user. The navigational tools in accordance with at least some examples of this invention also may provide useful ways of organizing and or displaying information regarding the user s files e.g. by hierarchical properties lists auto lists folders etc. Systems and methods according to at least some examples of the invention also may make it easy for users to assign properties to files change assigned properties associated with files and the like optionally with the use of hierarchical properties. Additionally in accordance with at least some examples of the invention navigational tools may be provided for searching locating and viewing information relating to stored or accessible files e.g. in a query based file and or retrieval system.

Additional aspects of the invention relate to computer readable media including computer executable instructions stored thereon for performing various methods and or operating various systems including systems and methods having navigational tools for organizing searching locating and or displaying information relating to files located in a computer storage system and or accessible through a computer system as described above and as will be described in more detail below .

As described above aspects of the present invention relate to systems methods and computer readable media for storing searching navigating and or retrieving electronic information in and available through computing systems and or networks. The following description is divided into sub sections to assist the reader. The sub sections include Terms General Description of Various Aspects of the Invention Example Hardware Example Systems Methods and Computer Readable Media According to the Invention and Conclusion.

The following terms may be used in this specification and unless otherwise specified or clear from the context the terms have the meanings provided below 

 Hierarchical Property A type of property whose value may include an ordered collection of categorizing unique strings. Each string may be made unique for example by the path through which it is specified and this path also may be used to define the categories to which each property value belongs.

 Auto lists Lists of files or other data resulting from queries for information over a fixed scope matching a pre selected set of filter conditions. Examples of auto lists include but are not limited to file creation dates file creation time last edit date last edit time file rating data file author list last use yesterday last use last week etc. A navigation panel as described below may include one or more auto lists. 

 Lists Shortcuts or links to auto lists files file collections folders and the like. A navigation panel as described below may include one or more Lists. 

 Page A specific folder list auto list or the like. A page may constitute a node in a hierarchical table to which users can navigate e.g. by selecting items from a menu from the navigational tool according to aspects of the invention etc. Individual pages or listings of pages at various levels in a storage system and or available through a computer system or network may appear in a navigation panel and or a display panel as described in more detail below.

 Computer Readable Medium any available media that can be accessed by a user on a computer system. By way of example and not limitation computer readable media may include storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other optical storage devices magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information and that can be accessed by a computer. Computer storage media does not include non statutory forms of energy such as carrier waves. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media. 

Aspects of the present invention relate to computer readable media having data structures stored thereon. The data structure in accordance with at least some examples of this invention may include a a first data set containing at least some of content of an electronic file and b a second data set containing property data associated with the electronic file. This second data set may include a first flat path string indicating a first property associated with the electronic file wherein the first flat path string indicates a hierarchical structure of the property data. Optionally if desired the second data set may include multiple flat path strings of data indicating multiple properties associated with the electronic file e.g. in a hierarchical structure. The second data set may be provided in any desired manner for example as metadata included in and or associated with the first data set. Of course if desired a third data set or even more data sets containing additional property data may be included in and or associated with the electronic file wherein the third data set or additional data sets includes another flat path string indicating another property associated with the electronic file and wherein the additional flat path string indicates a hierarchical structure of the property data in the third or additional data set.

Additional example aspects of this invention relate to systems and methods for storing electronic data including hierarchical property information. Such systems and methods may include a creating an electronic file including electronic data for storage on a computer readable medium e.g. using one or more computer processing systems b receiving input data indicating a first property value to be included as part of the electronic file or associated with the electronic file e.g. via a mouse pen digitizer keyboard network connection disk drive etc. wherein the first property value includes a first data set including a first flat path string indicating the first property value and wherein the first flat path string indicates a hierarchical structure of the first property value and c storing the electronic file with the first flat path string included therein or associated therewith e.g. in an electronic memory device wherein the first flat path string is stored or associated with the electronic file in any desired manner e.g. through linking information as part of the file as metadata etc. Optionally systems and methods in accordance with at least some examples of this invention further may receive input data indicating a second property value to be included as part of the electronic file or associated with the electronic file wherein the second property value includes a second data set including a second flat path string indicating the second property value wherein the second flat path string indicates a hierarchical structure of the second property value and wherein the storing of the electronic file includes storing the electronic file with the second flat path string included therein or associated therewith. Any number of property values may be stored in and or associated with an electronic file in this manner in accordance with the invention.

Still additional example aspects of this invention relate to systems and method for processing electronic data that includes hierarchical property information associated with it. Systems and methods according to at least some examples of this invention may include a receiving data on a computer system or network e.g. into the computer system s or network s memory indicating a hierarchical structure of plural defined property values wherein each defined property value has an unique flat path data string associated with it as compared with all other defined property values in the hierarchical structure b receiving user input indicating a new property value to be included at a user desired location in the hierarchical structure e.g. via a mouse pen digitizer keyboard network connection disk drive etc. and c based on the user desired location in the hierarchical structure determining whether the new property value would have a flat path data string that differs from all other flat path data strings existing in the hierarchical structure. The flat path data string for the new property value may include for example at least a first parent property portion and a first child property portion optionally at least one of the first parent property portion or the first child property portion may be identical to a portion of at least one other defined property value in the hierarchical structure . The method further may include adding the new property value to the hierarchical structure at the user desired location when the flat path data string for the new property value is determined to differ from all other flat path data strings for properties existing in the hierarchical structure.

In use of various systems and methods in accordance with examples of the invention a user may enter input into the system indicating a search query wherein the search query includes selection of a search property that includes a property value in the hierarchical property structure. Once the search query is entered systems and methods in accordance with at least some examples of the invention may determine which electronic files stored on or available through a computer system or network optionally with a search scope that limits the scope of files to be searched meet the search query wherein the electronic files determined to meet the search query include the first search property stored therein or associated therewith. As another example the search query may include user selection of multiple properties in the hierarchical structure and determination of which electronic files stored on or available through the computer system or network optionally within a limited search scope meet the search query may include identification of electronic files that include at least one of the selected properties.

The property data included in the computer readable media systems and methods according to examples of this invention may be stored in any suitable or desired manner without departing from the invention e.g. in a manner so as to indicate a hierarchical structure of the property data in the property data set. As examples the property data structure may take on one of the following formats parent property value delimiter child property value parent property value delimiter child property value delimiter grandchild property value child property value delimiter parent property value and or child property value delimiter parent property value delimiter grandparent property value. Of course any number of levels in the property hierarchical structure and the data structure in the flat path data string may be provided without departing from this invention.

Additional aspects of the invention relate to computer readable media including computer executable instructions stored thereon for providing hierarchical property data and or using hierarchical property data e.g. for storing searching navigating and or retrieving electronic files and related information including computer readable media for performing the various methods and or operating the various systems described above.

Other aspects of the present invention relate to methods and systems for processing input data that include multiple user selections including multiple selections of electronic file property data. Such systems and methods may include for example a selecting a first search parameter from a hierarchical structure including plural search elements e.g. through a user input device such as a mouse pen digitizer keyboard network connection disk drive etc. b selecting a second search parameter from the hierarchical structure e.g. through a user input device such as a mouse pen digitizer keyboard network connection disk drive etc. and c determining whether the first search parameter is located within the same element set in the hierarchical structure as the second search parameter e.g. using a computer processing system . Various displays may be generated e.g. on a computer display device by the computer processing system depending on whether the first search parameter is determined to be located within the same element set as the second search parameter. In accordance with at least some examples of the invention search results indicating a union of electronic files meeting the first search parameter or the second search parameter may be displayed when the first search parameter is determined to be located within the same element set in the hierarchical structure as the second search parameter. Additionally or alternatively search results indicating an intersection of electronic files meeting both the first search parameter and the second search parameter may be displayed when the first search parameter is determined to be located outside the element set in the hierarchical structure of the second search parameter.

In accordance with at least some examples of this invention the hierarchical structure s of the various search elements may include plural properties arranged in a hierarchical manner. At least one of the search parameters may include one of these defined property values. Optionally in at least some examples at least one of the search elements will constitute a folder element a list element an auto list element or any other desired element in the hierarchical structure. Still additional features of at least some examples of the invention may include determining or defining a scope for the search activities optionally based at least in part on the hierarchical structure of the search elements and or user input selecting portions of the hierarchical structure for the search scope.

Additional aspects of the invention relate to computer readable media including computer executable instructions stored thereon for performing various search methods and or operating various searching systems including systems and methods like those described above.

Still additional example aspects of the present invention relate to computer displays providing user interfaces for searching electronic files stored on or available through a computer system or network. User interfaces in accordance with at least some examples of this invention may include a a navigation panel displaying a hierarchical structure of search elements wherein at least some individual search elements in the hierarchical structure may be expanded optionally in response to user input to display one or more child search elements in the hierarchical structure and wherein the navigation panel receives user input directed to one or more search elements and b a display panel displaying information relating at least in part to search results obtained from searching the electronic files wherein the search results are determined at least in part based on the user input received through the navigation panel. Once expanded the individual search elements in the hierarchical structure of the navigation panel may remain expanded to display the child elements in the hierarchical structure irrespective of the manner in which the search results are displayed in the display panel e.g. in a stacked manner in a grouped manner in a combined grouped and stacked manner etc. . The various search elements in the hierarchical structure may include for example property values list elements auto list elements folder elements etc. and the hierarchical structure may be at least in part defined by individual user input.

In accordance with at least some examples of the user interfaces in accordance with the invention user input selecting child search elements or otherwise changing search elements in the hierarchical structure of the navigation panel will produce and or drive corresponding changes in the search results displayed in the display panel of the user interface.

Additional example aspects of the invention relate to systems and methods for navigating electronic data stored on or available through a computer system or network. Such systems and methods may include a providing a navigation panel e.g. using a computer processing system displaying a hierarchical structure of navigation elements wherein at least some individual navigation elements in the hierarchical structure may be expanded optionally in response to user input to display child navigation elements in the hierarchical structure b receiving user input through the navigation panel selecting one or more of the navigation elements e.g. through a user input device such as a mouse pen digitizer keyboard network connection disk drive etc. and c displaying information relating at least in part to search results obtained from searching the electronic data e.g. on a display device wherein the search results are determined at least in part based on the user input received through the navigation panel e.g. using the computer processing system and wherein the information is displayed on a display device simultaneous with display of the navigation panel. Additionally systems and methods in accordance with at least some examples of this invention further may include receiving new user input through the navigation panel selecting one or more new navigation elements from the hierarchical structure e.g. via an input system as described above and changing the information displayed e.g. using a computer processing system at least in part based on the new navigation element or elements selected wherein the changed information is displayed on the display device simultaneous with the navigation panel. The new user input may constitute in at least some examples a child navigation element in the hierarchical structure from the navigation element initially selected to thereby filter down the information displayed. Again the various search elements in the hierarchical structure may include for example property values list elements auto list elements folder elements etc. and the hierarchical structure may be at least in part defined by individual user input.

Still additional systems and methods in accordance with at least some examples of this invention may include systems and methods for displaying information regarding electronic data stored on or available through a computer system or network. Such systems and methods may include for example a providing a navigation panel displaying a hierarchical structure of navigation elements e.g. on a display device generated using a computer processing system wherein at least some of the individual navigation elements in the hierarchical structure include folder elements b receiving user input through the navigation panel selecting at least one folder element e.g. using a user input device as described above and c displaying information on the display device relating at least in part to search results obtained from searching the electronic data wherein the search results are determined e.g. using a computer processing system at least in part based on the user input received through the navigation panel wherein the information is displayed simultaneous with display of the navigation panel and wherein the information is displayed such that any sub folders provided under the selected folder element are displayed as stacks. Additional features of at least some systems and methods in accordance with examples of this invention may include receiving new user input e.g. via a user input device through the navigation panel selecting one or more new navigation elements from the hierarchical structure and changing the information displayed at least in part based on the new navigation element or elements selected using a computer processing system to generate the display . The new user input may be used to select a property value in the hierarchical structure and the information displayed at least in part may correspond to electronic data having the selected property value associated with it.

Still additional aspects of the invention relate to computer readable media including computer executable instructions stored thereon providing user interfaces performing various searching and or displaying methods and or operating various searching and or displaying systems including use of the hierarchical searching and navigation elements including providing the user interfaces performing the various methods and or operating the various systems like those described above.

A basic input output system BIOS contains the basic routines that help to transfer information between elements within the computer such as during start up is stored in the ROM . The computer also may include a hard disk drive for reading from and writing to a hard disk not shown a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive magnetic disk drive and optical disk drive are connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical disk drive interface respectively. These drives and their associated computer readable media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the personal computer . It will be appreciated by those skilled in the art that other types of computer readable media that can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks Bernoulli cartridges random access memories RAMs read only memories ROMs and the like may also be used in the example operating environment.

A number of program modules can be stored on the hard disk drive magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user can enter commands and information into the computer through input devices such as a keyboard and pointing device such as a mouse . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but they also may be connected by other interfaces such as a parallel port game port or a universal serial bus USB and the like. Further still these devices may be coupled directly to the system bus via an appropriate interface not shown .

A monitor or other type of display device also may be connected to the system bus via an interface such as a video adapter . In addition to the monitor personal computers typically include other peripheral output devices not shown such as speakers and printers. In one example a pen digitizer and accompanying pen or stylus are provided in order to digitally capture freehand input. Although a connection between the pen digitizer and the serial port interface is shown in in practice the pen digitizer may be directly coupled to the processing unit or it may be coupled to the processing unit in any suitable manner such as via a parallel port or another interface and the system bus as is known in the art. Furthermore although the digitizer is shown apart from the monitor in the usable input area of the digitizer may be co extensive with the display area of the monitor . Further still the digitizer may be integrated in the monitor or it may exist as a separate device overlaying or otherwise appended to the monitor .

The computer can operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer can be a server a router a network PC a peer device or other common network node and it typically includes many or all of the elements described above relative to the computer although for simplicity only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet using both wired and wireless connections.

When used in a LAN networking environment the computer is connected to the local area network through a network interface or adapter . When used in a WAN networking environment the personal computer typically includes a modem or other means for establishing a communications link over the wide area network such as the Internet. The modem which may be internal or external to the computer may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the personal computer or portions thereof may be stored in the remote memory storage device.

It will be appreciated that the network connections shown are examples and other techniques for establishing a communications link between the computers can be used. The existence of any of various well known protocols such as TCP IP Ethernet FTP HTTP UDP and the like is presumed and the system can be operated in a user server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

Although the environment shows an exemplary environment it will be understood that other computing environments also may be used. For example one or more examples of the present invention may use an environment having fewer than all of the various aspects shown in and described above and these aspects may appear in various combinations and subcombinations that will be apparent to one of ordinary skill.

The invention now will be described in conjunction with the remaining figures which help illustrate various example features and aspects of the invention and which help explain the invention. The specific figures and information contained in this detailed description should not be construed as limiting the invention.

In modem computer operating systems and application programs useful on them many file navigation searching listing and or retrieval operations occur via query operations as the systems attempt to locate items such as stored electronic files or other data that meet the various query parameters. Aspects of the present invention provide navigational tools that in at least some instances also can be used for item placement and file storage which assists the user in these file navigation searching listing and or retrieval efforts.

In accordance with example aspects of this invention users may use navigational tools in accordance with this invention to navigate to and or locate information relating to any page in a navigational control menu to add pages to the navigational control menu or listing to add items to any set such as a property set an auto list set a list set a folder set etc. to see the content of existing and or system folders e.g. a My Documents folder etc. to see expanded sub folders within folders to add properties or other data to files or other items e.g. optionally in a hierarchical manner even to files or items stored in an auto list or a system generated list and the like. Additionally in accordance with at least some example aspects of this invention users and or independent software vendors will be able to customize the system navigational tools for use in different application programs in different views in different modes of operation and or the like. If desired users also can be given various tools to restore the navigational panel to a previous state or to its original state.

As more specific examples if desired navigational tools in accordance with examples of the invention may be designed or customized with lists and or auto lists that allow users to quickly locate and view information relating to pages of interest. For example if desired systems may have lists or auto lists named Documents Stacked by Author or the like to allow users to quickly jump to a view showing stacks of files collected together based on the underlying authors named for the various documents the user can further drill down into the stacks if desired e.g. to locate specific documents by specific authors and or based on properties associated with the files when they are created stored edited downloaded modified or the like. Other potential groupings or listing of stacks may include listings such as important documents recent documents good music recently used recently obtained etc.

More detailed descriptions of various aspects of the invention follow. Those skilled in the art will appreciate that this description merely includes examples of various aspects of the invention and does not limit the invention.

As described above certain example aspects of the present invention relate generally to systems and methods for storing and using properties in conjunction with individual stored files or data on and or available through a computer system or network. In general when saving new files to a computer system or network such as a PC a network of PCs a server or the like users typically can assign properties to the files. Examples of such properties include Comments AuthorID Keywords and the like. While this capability is useful and may be adequate in some instances for example when only a small set of properties is involved this conventionally available flat property structure can become difficult to manage and or use over time e.g. as the overall number of available properties increases . Also with this flat property data structure users must separately enter and or associate each desired property with an individual file. This can be a time consuming task. Additionally the failure to accurately and or completely associate properties with respective files may limit a user s ability to search for locate and or retrieve the desired data at later times. For example as the number of different individual available properties increases it becomes more difficult for users to reliably retrieve items when they must correctly name in a search query one or more of the individual properties associated with the file.

At least some example aspects in accordance with this invention provide users the ability to assign and store at least some file property data along with an electronic file e.g. as metadata wherein the assigned property data is part of a hierarchical structure. As more and more properties become available to users e.g. through user designation and or user definition of new properties providing the properties in a hierarchical structure in accordance with examples of this invention will allow users to quickly assign multiple properties to a file through a simple one property assignment action. The availability and use of hierarchical properties in accordance with examples of this invention also will allow users to have more control over ordering their property values e.g. in a display of the hierarchy to provide the most common or important elements high in the hierarchy etc. and it will allow users to express relationships between the values of a property and have these relationships reflected when retrieving items or assigning values to items. The availability and use of hierarchical properties in accordance with examples of this invention also will give users compelling ways to organize the values generated in a property and to browse through and retrieve their items using this organization. The use of hierarchical properties in accordance with examples of this invention as will be explained in more detail below may allow users to more easily navigate through files across different properties locate desired files and or retrieve files using a single property even at least in some instances when the property searched with was not explicitly assigned to the file by the user but was simply part of the hierarchy of a property assigned by the user .

Additional aspects of the present invention relate to systems and methods for entering or capturing a hierarchy that may exist between properties e.g. a user defined hierarchy an automatically generated hierarchy etc. . If desired this hierarchical property information may be stored e.g. as metadata contained in and or associated with the electronic file itself as a flat path similar to the manner in which hierarchical folders are stored in various commercially available systems and methods such as systems and methods with folders available in various operating systems and application programs available from Microsoft Corporation . More specifically systems and methods according to at least some examples of this invention will store one or more hierarchical properties for an electronic file as a flat path string akin to a known flat folder path string which allows the shell operating system to correctly stack filter group and or otherwise navigate or process information relating to the stored files using the hierarchical properties in the same or a similar manner to which a folder hierarchy may be navigated and or processed today in various conventional systems and methods that utilize folder structures. Similarly providing a hierarchical data structure for properties gives users the ability to drill into a sub property to get to lower child property levels in the hierarchy in a manner similar to the manner in which users can drill into sub folders in the known and conventional folder systems.

In the data structure e.g. in data sets or fields such as in metadata associated with a file the various property values may be differentiated by paths such as the flat path strings described above. In this manner an individual value e.g. an individual node name can appear multiple times in a hierarchy provided the paths to the identical node names or values are different at each place the name appears. illustrates an example. Specifically as shown in the value Jim appears under both the Family node and the Co Workers node. Because the paths to these two Jim values differ from one another i.e. People Family Jim v. People Co Workers Jim these two values including the same ultimate end name optionally on the same hierarchical level as shown in can co exist in the hierarchy without causing difficulties. A specific node name or value can appear any number of times in a hierarchy provided that the path to it in each instance is different from all other paths to the same name or value.

Additional example aspects of the invention relate to processes to disambiguate between properties in different branches of a hierarchical structure that utilize the same name or node value. In the example described above in conjunction with the name Jim is associated with both a family member and a co worker. To distinguish between these two cases systems and methods according to at least some examples of the invention need only compare the values in higher levels of the hierarchy for the two cases in question to determine whether the values in question have an uncommon parent property node or path. Using the example above systems and methods according to at least some examples of this invention can differentiate between the two common node names in the hierarchy by looking at each Jim node s parent node. This investigation shows that one Jim node has Family as a parent node while the other Jim node has Co Workers as its parent node. Because their immediate parent nodes are different and distinguishable these two Jim nodes can co exist in the property hierarchical structure . Of course the different parent node names need not be located at the immediate parent node of the node s under consideration e.g. the differently named parent nodes could be located at a grandparent node level at an even higher node level and or at different node levels in the hierarchical structure .

The hierarchical structure illustrated in however typically would not be permitted in at least some example systems and methods in accordance with this invention. More specifically as shown the hierarchical structure in is similar to the hierarchical structure in except with respect to certain nodes at the lowest level. In the Family node contains two child nodes on the same hierarchical level having the same name namely the two Jim nodes . Because the flat path string to each of these Jim nodes is the same i.e. People Family Jim it would not be possible for the operating systems and or application programs to distinguish one node from the other and therefore an ambiguity would exist any time the flat path string People Family Jim were used. If a user attempts to set up two identical property paths as shown in the example of systems and methods according to at least some examples of this invention will display an error message present a dialog box request entry of a new name and or otherwise indicate to the user that this name or value is not permitted in the hierarchical structure at this location.

Property values may be assigned to and or associated with an individual file in any desired manner and or at any desired time without departing from this invention. For example users may be given an opportunity to assign property values to a file when a new file is downloaded to and or saved onto a user s computer system or network. illustrates an example user interface through which a user may save a file to his her computer system or network and if desired through which he she may assign one or more properties to the file. As shown the user interface includes a navigation panel which displays at least some of the properties or other information that may be associated with and or assigned to a file e.g. when information relating to a new file is entered in an input panel in an edit profile procedure and or at any other desired time . Notably the properties in navigation panel are arranged in a hierarchical manner. The various properties can be assigned to and or associated with the file in any desired manner e.g. by typing or writing the node name in at the appropriate location in the input panel e.g. in a keyword input box by dragging and dropping a property name from the navigation panel to an appropriate location in the input panel etc. As another example if desired properties may be assigned by dragging an icon or other representation of a file e.g. from a file list onto the desired value or node name in the navigation panel and dropping the icon or other representation at that location if desired the hierarchy in the navigation panel may exhibit an auto expand behavior in which dragging an icon or other file representation onto a parent property value and holding it over that property value without dropping will expand the parent property value if possible to at least its next level of hierarchy e.g. in the same manner that some folders will auto expand in currently available systems and programs . In addition to assigning property values to files through a navigation panel like that shown in users of hierarchical property systems in accordance with at least some examples of this invention may navigate or search through their hierarchies manage and or edit their hierarchies and or take other actions as will be described in more detail below.

In accordance with at least some examples of this invention when a file or other item is assigned a property value that is a child of another property value e.g. the value Playoffs in the file or other item also will automatically inherit any and all parent property values associated with the assigned property value e.g. Sports Pics Basketball in this specific example . Moreover if desired a parent property value can be assigned to a file or item even if that property value has one or more child property values under it e.g. one can assign a Basketball property to a file . In such an instance in at least some example systems and methods in accordance with the invention while the parent property will be assigned to the file neither of its children property values i.e. Practice or Playoffs in this example will be automatically assigned to the file or item although its parent property would be assigned . Of course if desired systems and methods also could be set up to automatically assign or associate the children properties with the file in this situation without departing from the invention.

As will be described in more detail below in accordance with at least some examples of this invention a list files search or other query including a parent property value as a search element or parameter will return all items tagged with both the designated parent property value and any of its children property values. In this manner storage systems and methods in accordance with examples of this invention allow users to easily tag items with a relatively few highly specific descriptive properties e.g. at lower levels in the hierarchy but by arranging the properties under increasingly broader parent nodes in the hierarchical structure the tagged items may be made to readily appear even in response to relatively broad search queries. If desired in accordance with at least some examples of the invention when the search results list files results or file preview results are displayed in response to a search query the primary value assigned to the file e.g. the actual value assigned by the user will be highlighted and or made known or available to the user in some manner.

The available e.g. previously defined by the user system or another and or stored hierarchical properties may be displayed by systems and methods in accordance with examples of this invention at any desired time and or at any desired location without departing from the invention. For example as shown in the properties may be displayed during a Save or Save As operation e.g. in the navigation panel . They also may be displayed during file search list or viewing operations e.g. in the same hierarchical tree layout illustrated in navigation panel of . Also if desired hierarchical properties in accordance with examples of this invention may be displayed in any and or all places where conventional properties are shown by application programs and or operating systems today e.g. as properties shown in a list view display as properties shown in an item details display as properties shown in a file preview display etc. . Also if desired hierarchical properties in accordance with examples of this invention may be displayed in any controls used to navigate properties such as in a tree control supporting properties.

The property information may be entered and or associated with individual files at any desired time and in any desired manner without departing from the invention. In addition to including the property information with the files at the time they initially are saved onto the computer system or network properties associated with individual files may be added to deleted from and or modified at other desired times such as whenever a file is opened edited or used in response to an edit profile or edit properties command and the like. The properties may be entered via typing optionally with auto completion of matching strings optionally from any level in the hierarchy through drag and drop operations through right click operations through pen press and hold operations etc. Any tools useful for setting editing and or deleting properties associated with a particular file also may be accessed and used in the preview screen without departing from the invention.

Additionally the actual content of the properties in the hierarchical arrangement may be changed by the user at any desired time and or in any desired manner without departing from the invention including for example in the manner that conventional folder structures are added to deleted from and or otherwise edited in conventional application programs and operating systems. As examples new properties may be added under an existing property and or existing properties may be deleted via right click mouse button actions which may display an appropriate user interface e.g. a menu including insert new property delete existing property change node level or position cut copy paste or other appropriate actions or in any other desired manner. As another example if desired the locations of existing properties in a hierarchical structure may be changed e.g. moved via drag and drop operations as illustrated in . More specifically illustrates the navigation panel displaying a hierarchical property listing e.g. for an application program for storing and editing digital photographs. The left hand side of illustrates the user moving the icon for the keyword Ocean through a drag and drop operation illustrated by arrow from beneath the Camping parent node to the hierarchical level immediately beneath the Keyword node. Once positioned at the desired location e.g. immediately over the Keyword node in this example via the dragging operation e.g. with the left mouse button held down the Ocean node may be repositioned in the hierarchy by dropping it in that place e.g. by releasing the mouse s left button . This action will reposition the node Ocean as shown in the right hand side of . If desired the user can move the former children nodes Pacific and Atlantic to accompany the Ocean node through additional drag and drop operations. Alternatively if desired systems and methods according to at least some examples of this invention may operate such that repositioning a node also will result in automatically repositioning of its children nodes if any . If desired in accordance with at least some examples of this invention a user can press the Control button while dragging a property value in this manner or take other pre determined action to make another copy of the property value and optionally its children property values appear under a different property value e.g. using a paste command . Of course other ways and protocols for cutting copying and or repositioning nodes and or their respective children nodes may be used without departing from the invention e.g. repositioning a node with collapsed children may be used to reposition the node and all of its children in one action but repositioning a node with its children fully expanded and displayed may be used to only reposition the parent node without its children etc. . Other default methods and ways of moving nodes may be used in systems and methods without departing from this invention.

In at least some instances depending on the specific characteristics of systems and methods in accordance with the invention errors may be generated during this repositioning action for example if the same property name appears more than once in the new path or position for the moved property. Systems and methods according to examples of this invention may handle such situations in any desired manner e.g. by not completing the desired move by providing an interface to enable the user to change a name within the path by displaying a dialog box to advise the user of the problem with various options for rectifying the problem etc. As another example if desired systems and methods may be developed that will allow multiple uses of a single name within a path e.g. Location New York New York such that this error would not appear unless an attempt is made to produce multiple nodes having the same overall flat path string names.

Users that take advantage of the hierarchical property characteristics in accordance with examples of this invention may develop a relatively large hierarchical structure for properties such that the overall hierarchical structure when fully expanded spans longer than the available space in the navigation panel and or the height of their display screen. This situation can be handled in any desired manner without departing from the invention for example by providing scroll bars within the navigation panel by allowing children nodes to collapse under their parent nodes and to be fully expanded or collapsed based on user input e.g. in a manner similar to the way that hierarchical folder structures expand and collapse in conventionally available systems and methods etc. When opened navigation panels of the type illustrated in may open at any desired location within the hierarchical structure and or in any desired expansion contraction condition such as always at the top of the hierarchical structure location at the most frequently used location in the hierarchical structure at the most recently used location in the hierarchical structure at a location in the hierarchical structure that includes the open document if any in a fully expanded condition in a fully collapsed condition in the most recently used condition etc. Also the navigation panel may appear at any desired location on the display screen such as at the left or right side e.g. based on user preference default etc.

If desired systems and methods in accordance with at least some examples of this invention may include a basic hierarchical structure when shipped and this basic structure may be used by users as a starting point to build a more complete richer hierarchy e.g. one that is more targeted and customized to their own uses. Examples of such a pre determined basic hierarchical structure e.g. for storing digital picture audio video or other user data may include base nodes such as Keywords Events Places People e.g. potentially with child nodes such as Author Photographer Subject People etc Dates My Pictures My Music My Documents My Videos etc. Any desired information may be included in this basic hierarchy without departing from the invention.

Any desired form or format may be used for storing or representing the hierarchical properties with individual files without departing from this invention. For example if a child property value is assigned to a file the path to that property value through the hierarchical structure may be stored as part of and or associated with the actual file e.g. as metadata included in and or associated with the file . As an example the representation or data structure of the hierarchical structure may include at least Parent property value delimiter child property 1 delimiter child property 2 . . . . Returning to the more specific example illustrated in a file saved with the individual properties Football and Games Attended associated with it may have metadata associated with the file that would be displayed along with information about the file in at least some instances e.g. as shown in for example in the form of Keyword Sports Pics Football and Keyword Sports Pics Games Attended. In these examples the parent property value is Keyword the first child property value in each instance is Sports Pics the second property values are Football and Games Attended respectively and the delimiter is the slash the delimiter may be a special character used to separate property names and this delimiter may not be included in property names to avoid confusion in the system . Of course any number of children property levels may be included in the flat path data string without departing from the invention.

Properties listed in a navigation panel e.g. panel at least in part may behave in a manner similar to the way conventional folders behave in various known operating systems and application programs. For example the manner of expanding and or collapsing hierarchical properties in the navigation panel may be similar to expanding and or collapsing folders in similar folder navigation panels or controls. As more specific examples in order to view and display child property values under a parent property a user can click on a widget provided to the left of the property note for example the widget with the sign therein for the Summer keyword in the sign in the widget indicates the presence of one or more additional undisplayed child properties and a sign in the widget indicates that the specific property already has been expanded in this example system . In at least some examples if a property or node has no children the widget to its left may be omitted it may include no additional indicator e.g. a or sign etc. it may include another indicator or the lack of children nodes may be indicated in another desired manner. An indentation scheme e.g. as shown in also may be used to help better illustrate the hierarchical structure. Notably because an individual file may have multiple properties associated with it the same file or item may appear in multiple groupings in the display panel note for example that Pictures and appear in both the Sports Pic grouping and the Summer grouping in .

Systems and methods in accordance with at least some examples of this invention may support still other ways for users to change modify and or use the hierarchical property structure. As one example in situations when a property value in the navigation panel is selected via a right click action when no items in the display panel are selected the user then may be given an option e.g. via an interface to add a new hierarchical property as a child under the right click selected node e.g. a new node with an editable textbox may appear at the location of the new property value in the hierarchical structure to enable the user to type in or otherwise enter the new property value . A delete function or option may be provided e.g. via a right mouse button click to enable the user to delete any desired portion of the hierarchy such as an individual node a node and all of its child nodes etc. Promote and demote functions may be provided e.g. to allow a user to select a property value and move it optionally along with all of its own child values up or down a level in the hierarchy respectively e.g. promotion makes the selected node move to a level so that it now appears as a peer to its former immediate parent node . As still another example a rename function may be provided e.g. via a right mouse button click that will enable users to give any property value or node a different name optionally with limitations if the same name is used twice in a path and or if two identical flat path names are presented as described above . Potential functions that may be provided in accordance with examples of this invention e.g. via a right mouse button click when a file is selected in the display panel include a remove property function and an add property function which may be used to remove and or add one or more properties from to the metadata or other data stored with and or associated with the file. Of course other functions and or other ways of performing the above functions may be provided without departing from the invention. Where necessary all files or items tagged with a given property and or path that is changed via the various functions described above may have their corresponding property data and or path information updated to reflect the user made changes to the paths and or properties.

Additional features in accordance with at least some examples of the invention relate to sharing hierarchical properties e.g. when existing files including hierarchical property data are sent to another user having a system or network that supports hierarchical property data but does not necessarily have the same available hierarchical property structure corresponding to the newly received file s . Systems and methods in accordance with at least some examples of this invention may be constructed to allow sharing of files or other items with hierarchical property values in a manner similar to the manner in which files or other items having flat property values are shared. In accordance with at least some examples of systems and methods according to this invention the default behavior for when a file or other item comes into a system with hierarchical property values will be as follows a the hierarchy of the new file will be displayed in all areas where hierarchical keywords typically are displayed by the system or network e.g. in the same manner as if the newly received file originally had been created on the target system or network b if the same hierarchy as that required for the new file already exists on the new recipient s system or network the new file item will associate itself with the hierarchy already on the system or network c if only part of the path necessary for the new file exists on the recipient s system or network the remaining parts of the hierarchy to accommodate the new file will be created on the recipient s system or network and or d if none of the path necessary for the new file exists on the recipient s system or network the new hierarchy to accommodate the new file will be added to the recipient s system or network.

The following provides a more detailed example of property hierarchy sharing in situations where a file is received and saved to a new user s system or network. In this example the recipient user has an existing property hierarchy with the path property values Family Brothers Toby. A new file is received by a recipient user e.g. as an email attachment and this new file which is saved to the recipient s system includes metadata from the file sender s hierarchical configuration. Both the file sender and the file recipient operate programs systems and or methods with hierarchical data structures in accordance with an example of this invention. The following table describes the manner in which the recipient user s system may handle receipt of the new file in various different scenarios 

The various property values associated with a file may be displayed at any appropriate time and in any appropriate fashion without departing from the invention. For example as described above in conjunction with property information may be displayed in a preview panel associated with a file. As additional examples if desired the properties associated with a given file may be included with a property page or a display properties command associated with a file. Existing properties also may be displayed for example during save save as edit profile open file or other similar operations. If desired the stored properties associated with a file also may be displayed while the file is opening and or open e.g. in a toolbar and the user may have an interface available for editing the properties e.g. while actively working with the file after it is saved before it is opened etc. Many other options are available for displaying the saved property data associated with a given file without departing from this invention. Of course any number of properties may also be associated with a given file without departing from this invention.

Also any desired amount of the property data associated with a file may be displayed in the various locations without departing from the invention. For example if desired the entire hierarchical path may be shown for each property or at least some properties at any location where one or more of the properties associated with a file are displayed e.g. in preview or property panels like that shown in . As another example if desired only the assigned property value itself may be shown at the various locations and the remainder of the hierarchy can be seen for example via the navigational panel during a cursor hover action etc. as well as via the file information stacking and grouping features to be described in more detail below . As a more specific example if an individual file such as a digital picture has the following hierarchical keywords assigned to it Sports Pics Baseball Practices Cardio Drills this lengthy flat path string may be represented in at least some locations simply by providing the lowest child node in the path namely Cardio Drills. This truncated format of property listing however runs the risk of having name collisions and or being somewhat unclear to the user e.g. if the node Cardio Drills exists at multiple locations in the hierarchy . In such situations if desired additional hierarchical information may be displayed along with the lowest level keyword to distinguish the conflicting information. For example as described above in conjunction with each hierarchical node in systems and methods according to at least some examples of this invention has a different and unique path. This information may be used to resolve conflicts described above. Specifically for example when there is a conflict of the type described above defined as two hierarchical property values being visually represented in the same way systems and methods according to at least some examples of the invention will traverse the conflicting paths until a different parent property value is found and that value will be displayed optionally along with the conflicting lowest level node information . For example if a hierarchy contained and or an individual file was tagged with both Sports Pics Baseball Practices Cardio Drills and Sports Pics Basketball Practices Cardio Drills the displayed property information e.g. in a preview or property display may be represented for example as Cardio Drills . . . Baseball and or Cardio Drills. Basketball and or in some other appropriate manner to distinctly show the correct hierarchy.

As another example of practical use of hierarchical property information many businesses are arranged with at least some degree of hierarchical structure e.g. departments divisions locations etc. . More targeted operating systems methods and or application programs according to examples of the invention may be developed for such businesses that take advantage of the hierarchical nature of the individual corporation s structure. For example pre determined hierarchies may be provided for the computer systems networks and or application programs used by corporate employees that include a predefined hierarchical structure for properties in data stored for the corporation. Such systems and methods can enable at least some overall sensible hierarchical structure in the corporation s systems and networks in which its data may be organized and stored.

Aspects of the present invention also relate to computer readable media including hierarchical property data stored thereon and computer readable media including computer executable instructions stored thereon for allowing entry and or use of hierarchical property data in various operating systems application program environments and or various other systems and methods including the systems and methods described above. The computer readable media may constitute computer executable instructions stored on the various specific examples of computer readable media described above.

As described above additional aspects of the present invention relate generally to systems and methods for searching information contained on a computer system or network optionally taking advantage of the hierarchical property structures described above.

With its Windows computer operating systems Microsoft Corporation of Redmond Wash. introduced a real world analogy for saving organizing and retrieving electronic information from computer systems or networks namely folders. This folder system was strictly an end user concept introduced to give a real world feel to the electronic data and information stored on or available through the computer. Computer users typically think of their computer s hard drive as a big filing cabinet in which their files are organized. However to the computer system itself an electronic file is simply a series of bits that are encoded magnetically to a hard drive or in some other manner and a folder is simply a way for the computer system to reference those sets of files.

With Microsoft Corporation s NT File System NTFS the ability to support hard links was introduced. This feature enabled users to place electronic files in multiple folders. Of course physically this feature does not require that the bits representing those electronic files are duplicated multiple times on the computer s hard drive or other storage system e.g. once for each folder in which the file is placed. Rather the different folders reference back to the same file. However when initially released this ability was not exposed to end users because putting a single file into multiple folders did not match the user s real physical world concept i.e. the same physical piece of paper cannot be located in two separate physical folders at the same time .

In at least some operating systems in which at least some aspects of this invention may be practiced a new end user concept called a list is being introduced. As a physical analogy one may think of a list as a container that references sets of items e.g. electronic files . To better understand lists a more detailed explanation of a folder is described. A folder may be considered as a set or group of items that are considered as related to one another in some manner e.g. being present in the same folder may be one way that items in a set may be considered as related . Each item or file in a set or folder may include a property called PARENTFOLDER e.g. in the form of a path such as c users usera documents . Notably this path also is an end user metaphor and does not necessarily reflect the physical structure of the computer. In fact the concept of a drive itself also may be considered a metaphor as a single physical hard drive may be partitioned into multiple drives such as a c drive a d drive etc.

Another way users can define a set is through a list. Lists may be considered as related to folders because each may be thought of as defining a set of items. Unlike folders however lists in accordance with at least some examples of this invention do not define this relationship using a PARENTFOLDER property as described above. Rather lists will allow the same item e.g. an electronic file to exist in multiple locations e.g. in multiple independent lists . Like folders lists are an end user concept. Putting electronic files or other items in multiple lists does not cause the actual physical bits representing the underlying data to be duplicated but rather the underlying electronic files or items are referenced by or linked in some manner to that list. To tie this discussion back to a real world example a person may have a Shopping List and an Urgent To Do List in which they keep track of items they need to purchase and things that they need to do. Both of these lists may include an item such as birthday present for wife. The user understands that buying a gift is both something that must be done while shopping and something that must be done rather urgently. The user further understands however that just because this item is entered in two of his her lists this does not mean that they need to purchase two gifts. Rather the single act of buying the gift allows the user to remove each item from its respective list.

Operating systems in which at least some aspects of the present invention may be practiced further may include Auto Lists. Auto Lists like lists and folders define sets of items. These sets of items may be generated automatically based on common property values associated with items stored on or available through the computer system. For example if desired users can have an Auto List based on the property value rating 5 star. Using this Auto List feature users can easily locate and see information relating to all of their files that are rated 5 stars regardless of which specific folder or list they may appear in. As long as the file or item has a 5 star rating associated with it systems and methods according to at least some examples of this invention will automatically include this file or item as a member of this dynamically and automatically generated set e.g. any time a user s query asks to see the 5 star Auto List. Other examples of Auto Lists may include for example recently created files recently edited files frequently used files Author ID creation time date edit time date file type application name etc.

One aspect relating to the content of an Auto List relates to the list s scope i.e. the set of files and or locations that will be searched to generate the Auto List . Various limits on the scope of an Auto List may be set depending for example on the environment in which the computer is located user preferences the manner in which the computer or network is used and the like. For example the scope of an Auto List may be limited to a particular machine to a particular user s files on a machine or a network of machines and or in any other desired manner without departing from aspects of this invention. As a more specific example the scope of a 5 star Auto List may be limited to a set of specific files or folders to search across such as the files or folders on a given physical computer and or files or folders created by a given user. If desired however users can set an Auto List scope or other search scope to search across everything on the computer and or the network containing the computer such as to locate all 5 star files stored on either of the user s desktop or laptop computers.

With the increasing number of files users are saving on their PCs e.g. documents music video and picture files etc. and the increasing use of networked computer systems the ability for users to select smaller search scopes e.g. for Auto Lists or other searches may become important e.g. to avoid location and display of excessive irrelevant data e.g. data from other users or other locations to avoid search delays etc. . As a more specific example a graphics designer may want to scope an Auto List search to limit its search and returned content to a hard drive portion e.g. a directory or the like that contains only Photos or optionally only a specific user s photos . This user would not necessarily want to search everything on the PC and or everything on the network to which the PC may be connected. Such users may not wish to see other user s files that also may meet the search parameters set for the Auto List. 

Accordingly in systems and methods in accordance with at least some examples of this invention users may select and define sub item domains as part of search scopes. A sub item domain is a set of folders defining a smaller scope for the computer system to search across. This sub item domain may include a set of folders and or sub folders where users store their data items marked with certain properties etc.

The content of this settable sub item domain need not be limited to a single folder or even a single common branch of the folder hierarchy. Rather if desired in accordance with at least some examples of systems and methods in accordance with this invention a user may set a search scope such as an Auto List generation search scope to consider files located in multiple folders optionally in multiple branches of the network or computer memory. illustrates the example individual computer or network of but in this example the search sub item domain is set to search through data included only in folders available from two independent users as represented by sub item domain triangles and photo data from Users B and C in the illustrated example of . Again using this sub item domain scope the results of the Auto List or other searching activities may be much more relevant because the searching is more targeted to only the desired users data in this example and performance speed may be increased because the set of items to inspect is smaller.

Additional aspects of the present invention further extend from the aspects described above. In at least some example systems and methods in accordance with this invention multiple folders and or properties may be selected by users as the scope for searches and or displays of information stored on the computer. Such systems and methods may utilize navigation panels that display properties and or folders in a hierarchical manner as described above for example in conjunction with .

In conventional and currently available folder trees that display folders of items stored on a computer users cannot select more than one folder at a time. If a user wants to view the contents of multiple folders he or she has to open multiple windows e.g. one for each folder desired and or consecutively open and inspect the desired folders. Therefore the user cannot view all information from multiple folders in a common screen making it difficult to get an accurate overview of the available information stored on the computer system or network.

The availability of lists and Auto Lists further exacerbates this problem. As noted above lists and Auto Lists may comprise sets of property values that help define or categorize files and or other items stored on the computer system or network. Often users would like to further narrow down information presented via a list or Auto List procedure i.e. the relevant files identified as meeting a search criteria based on the requirement that the displayed information include multiple properties associated with it. For example users may wish to see all stored pictures from a specific trip locale that also include a specific person e.g. spouse . Without the ability to use multiple property selection techniques users may not be able to easily find the sub set of files that meet these two independent property criteria.

Aspects of this invention relate to systems and methods that allow for conducting searches interpreting search results and or displaying search results when multiple properties are selected as part of the search criteria e.g. from a hierarchical listing of properties provided in a navigation panel or otherwise made available to a user. Such systems and methods may be used for example when navigating searching displaying and or otherwise interacting with various lists Auto Lists and or folders.

One feature relating to this aspect of the invention relates to the manner in which information or files are determined to satisfy the search which includes multiple properties and or other search parameters. More specifically in some instances users would prefer to see the combined union of all information that satisfies either feature of a multiple property search query i.e. display information that satisfied either property A OR property B and in other instances users would prefer to see the intersection of only the information that satisfies both features of a multiple property search query i.e. display information that satisfied property A AND property B . As some more specific examples when users request retrieval of information identifying all files that contain Maui pictures taken with a member of the family contained therein they expect the searching systems and methods just to retrieve those pictures that contain both a family member AND were taken in Maui. With such a query users typically do not wish to see all Maui pictures including all pictures without family members contained therein and all family pictures including pictures not from Maui . On the other hand when users request retrieval of information identifying files that are rated either three stars or four stars they expect the searching systems and methods to retrieve files with either of these ratings because at least most files would not be simultaneously rated three stars and four stars by the user .

Accordingly at least some aspects of this invention relate to algorithms that automatically determine whether users likely wish to receive set union or set intersection information based on the information or multiple search parameters selected e.g. from a navigation panel of properties and or folders e.g. arranged in a hierarchical manner. In general as will be explained in more detail below systems and methods in accordance with at least some examples of this invention will return information e.g. during a search list files or other navigation task regarding files based on a union of the multiple parameters selected a logical OR operation when the searched multiple properties lists folders items and or other parameters belong to the same property in the hierarchy. On the other hand systems and methods in accordance with at least some examples of this invention will return information e.g. during a search list files or other navigation task regarding files based on an intersection of the multiple parameters selected a logical AND operation when the searched multiple properties lists folders items and or other parameters belong to or lie across different properties. More detailed examples of operation of this algorithm are described below in connection with . Of course if desired a user may be given an option and or opportunity e.g. via an interface screen right mouse button click etc. to override the automatically selected AND or OR operation for a given search query to customize and target the results for that specific query.

As shown in in this example the user has indicated that they wish the system to retrieve information identifying files that include pictures showing Person A and Person D as shown by highlighting in the figure . As a more general description in this example a user has selected multiple values within a single multi value property from the hierarchy i.e. selection of the hierarchical icon representing Person A and selection of the icon representing Person D from a single property People . The People property is called a multi valued property because the files under the People property may have multiple individual property entries e.g. a given picture may contain more than one identified person and thus may have multiple People child properties associated with it . In response to this query search or list files command systems and methods according to this example of the invention retrieve any pictures that contain either Person A or Person D to be retrieved the system automatically or some person must have at some time associated the Person A or Person D properties or keywords with the various picture files e.g. as metadata as discussed above thereby indicating the person s included in the picture . Notably in this example search query systems and methods in accordance with this example of the invention automatically retrieve union information i.e. information identifying files that contain either Person A OR Person D represented by the letters A and D respectively in the names included in the icons in including any pictures that contain both Person A and Person D i.e. pictures ABD ABD ACD AD and ABD in this example . In essence systems and methods in accordance with this example of the invention performed a logical OR operation based on the input parameters specified by the user in the navigation panel .

Accordingly from this example a first rule of a selection algorithm in accordance with at least some example systems and methods according to the invention may be derived. By this rule information returned from user selection of multiple sets within a single multi value property set automatically will be returned in a unioned or logical OR query language manner. Of course if desired systems and methods in accordance with at least some examples of the invention may provide a user with the ability to override this rule and or this automatic selection action and thereby run an AND operation .

Notably in the illustrated display panel the two selected data sets are shown or are available in their entirety and maintained separate from one another i.e. one sub panel for the Person A pictures and one sub panel for the Person D pictures in this example . Notably a single list item may appear in each sub panel and or in others if appropriate i.e. the icons representing pictures ABD ABD ACD AD and ABD appear in each sub panel and in this example . Of course many other ways of displaying the retrieved information e.g. in display panel may be used without departing from the invention including for example displaying a compiled listing of files or items without an indication of the source property and or without providing repeated representations of the same file or item. As another example if desired the display portion could also include a display sub panel or the like that includes the results of the logical AND operation i.e. pictures including both Person A and Person D in this example to make this information readily available to the user in the event the logical AND operation was desired.

As described above in the example of the People property is a multi valued property meaning that an item of information e.g. a file stored under that property may have more than one of the underlying child properties associated with it . Some properties however may be considered single valued properties which means that each item of information e.g. a file stored under that property contains only a single instance of an underlying child of this property. Examples of single valued properties may include but are not limited to size rating and the like. illustrates an example display screen in which a user has selected multiple properties e.g. in a list files search query or other action from a navigation panel including a hierarchical arrangement of properties or folders etc. wherein the selected properties lie under a single valued property Rating i.e. a user typically can and or will give only one rating to a file . Notably in this example the user has requested retrieval of all pictures having a 3 or 4 star rating as evident from the highlighting in the navigation panel .

In response to this query search or list files command systems and methods according to this example of the invention retrieve any pictures rated either as 3 stars OR 4 stars to be retrieved the system automatically or some person must have at some time associated a rating property with the various files e.g. as metadata as discussed above . Notably in this example search systems and methods in accordance with this example of the invention automatically retrieve union information i.e. information identifying files rated either 3 stars OR 4 stars. In essence systems and methods in accordance with this example of the invention performed a logical OR operation based on the input parameters specified by the user in the navigation panel . In fact in this example because the Rating property is a single valued property it would not make sense to perform a logical AND operation because the AND operation would return an empty set in each instance i.e. because each file contains one and only one rating no files will be located during the search that contain both a 3 star AND a 4 star rating 

Accordingly from this example another rule of a selection algorithm in accordance with at least some example systems and methods according to the invention may be derived. By this rule information returned from user selection of multiple sets within a single valued property set automatically will be returned in a unioned manner or in a logical OR query language manner. Of course if desired systems and methods in accordance with at least some examples of this invention may provide a user with the ability to override this rule and or this automatic selection action.

Notably in the illustrated display panel the two selected data sets are shown or are available in their entirety and maintained separate from one another i.e. one sub panel for the 3 star rated pictures and one sub panel for the 4 star rated pictures in this example . Notably in this instance no single list item appears in both sub panels and or in others because each file by definition in this example contains a single rating value. Of course many other ways of displaying the retrieved information e.g. in display panel may be used without departing from the invention including for example displaying a compiled listing of files or items without an indication of the source property.

As noted above the above rules may apply to items in folder structures and or in a hierarchical property structures. illustrate some additional examples when user selection is applied to hierarchical properties in a navigation panel.

As shown in the display screen of a user has selected two independent entries in a hierarchical property table present in a navigation panel namely a Cars Import German property and a Cars American property. Because the selected properties still are located under a common multi valued parent property Cars in this example the above rule applies and the display panel will display the union of the two selected properties in response to this query search or list files operation. More specifically as shown in the display panel includes information identifying all stored files corresponding to the logical OR operation i.e. information that satisfies either search criterion namely stored digital pictures corresponding to German import cars OR stored digital pictures corresponding to American cars. A logical AND operation makes less sense or is less likely in this specific factual situation because typical cars would not be considered both imports AND American an AND operation could return a hit however for example if multiple cars were included in a given picture and properties were associated with the file for both cars in the picture .

Notably in this example the two selected items i.e. properties in the hierarchical structure were not located in the same hierarchical level. Nonetheless the logical OR operation was conducted in this instance because as noted above the algorithm s rule requires the OR operation to be performed when the selected properties are located under a common parent property this common parent property however need not be an immediate parent of both or either selected node .

Notably in the illustrated display panel the two selected data sets are shown or are available in their entirety and maintained separate from one another i.e. one sub panel for the German car pictures and one sub panel for the American car pictures in this example . Again in this instance no single list item appears in both sub panels and or in others but because a single picture may include more than one automobile overlapping pictures may be possible in the sub panels and . Of course many other ways of displaying the retrieved information e.g. in display panel may be used without departing from the invention including for example displaying a compiled listing of files or items without an indication of the source property with no duplicated photo listings etc. Also if desired the results of a logical AND operation also may be displayed in display panel optionally along with the results of the logical OR operation.

As with the various display panels described above display panel makes the two selected data sets available in their entirety and maintained separate from one another i.e. one sub panel for all the car pictures and one sub panel for the UK imported car pictures in this example . In this example system and method all of the UK car pictures in sub panel also are included within the more generic Cars sub panel because all UK car pictures must fall within the Cars parent node e.g. as described above with regard to the hierarchical properties when a child property is assigned to a file that file also automatically is assigned all parent properties to the assigned child property . Of course many other ways of displaying the retrieved information e.g. in display panel may be used without departing from the invention including for example displaying a compiled listing of files or items without an indication of the source property with no overlapping photos displayed etc.

The above examples for relate to multiple user selections within a given hierarchical grouping such as a folder a hierarchical property or the like. Another rule of the example algorithm for determining what data to display in response to multiple user selections in a hierarchical folder or property structure is illustrated with respect to .

In general this rule of the algorithm requires that when the multiple user selections are made across different parent property sets the intersection of the search results will be displayed or a logical AND operation will be performed and the results displayed . In the example illustrated in the display screen shows a navigation panel in which multi value hierarchical properties are displayed. The user has selected two properties that span across two of the highest level parent property sets namely Locations Toronto and People Person D. In situations of this type users typically expect a logical AND operation to be performed such that the displayed results include only pictures taken in Toronto that also include Person D e.g. typically with a search query of this type a user would not wish to see all Toronto pictures or all pictures including Person D . Therefore as shown in display panel in this example the resulting displayed results include only those pictures from the Toronto trip that include Person D therein. Because the intersection of both selected sets is displayed there is no reason to separately show the results from each user selected set as was shown above in i.e. each item in display panel would be present in the Locations Toronto listing and in the People Person D listing although these individual selected sets also may be shown if desired e.g. to cover the possibility that the user wanted to see both individual sets .

Of course any way of displaying the search results e.g. in display panel may be used without departing from this invention. Additionally if desired users may be provided with the ability to override the automatic AND operation produced by systems and methods in accordance with this example of the invention.

Application of the logical AND operation is not limited to use with multi valued hierarchical properties. For example if one or both of the user selections in had constituted a single valued property such as one of the star Rating properties shown in the navigation panel and the other selection had been located in a different parent property set such as in the People or Locations property sets the intersection of the selected star Rating property and the selected People or Locations property would have been displayed i.e. a logical AND operation still would have been performed and the results displayed because the selections spanned across different property sets .

The algorithm s rule for applying a logical AND operation also applies when selections are made across different hierarchical properties even when these selections are located at different depths within the hierarchical structure. illustrates an example. As shown in the display screen of the user has selected the properties Keyword Cars Import and Date 2004 in the navigation panel . Because the top level parent properties differ a logical AND operation is conducted and display panel displays the intersection of these two properties i.e. it displays files having both selected properties namely pictures of Import cars from the year 2004 . This AND operation is conducted despite the fact that one of the selected nodes has a different number of parent nodes as compared to the other selected node and therefore exists at an overall different level in the hierarchy .

This same algorithm rule may apply and similar intersection results may be obtained irrespective of whether one or both of the user selected properties is a single value property or a multi valued property.

Additionally the algorithm s rule for applying a logical AND operation also applies when selections are made across different hierarchical properties even when at least one of these selections does not include a low level item in the hierarchy. illustrates an example. As shown in the display screen of the user in this example has selected the properties Rating 4 Star and People in the navigation panel no particular person under the People node was selected . Because the top level parent properties differ a logical AND operation is conducted and display panel displays the intersection of these two properties i.e. it displays information relating to files having a People property e.g. any person included therein that is rated 4 stars .

As noted above aspects of the use of multiple user selections in hierarchies also may be applied to hierarchies that include conventional folders e.g. performance of the OR AND functions may be determined using the rules above even if one or both user selected elements includes a folder structure . Conceptually in accordance with at least some example aspects of this invention a folder may be treated as a single valued property. More specifically because an individual file will reside only in a single conventional folder as described above a folder may be treated as a single valued property in accordance with these aspects of the invention. Optionally if desired the multiple user selections may include a mixture of selections of folder elements and property elements in the hierarchical structure. Various examples follow.

As described above user files exist in a conventional folder hierarchy at a single location i.e. a single file or other item cannot exist in two independent and separate folders at the same time . Therefore a logical OR operation makes the most sense in the situation illustrated in because a logical AND operation would return an empty set as the results.

The same OR AND logical operation selection features may be applied to list elements in a hierarchical structure in accordance with at least some examples of this invention. Lists may be conceptually considered as simply constituting sets of items such as files or the like. shows an example display screen in which various list elements are included in the hierarchical structure shown in the navigation panel . Multiple elements under the All Lists node are user selected namely the Top Issues node and the Project Y node. In the display panel the generated display provides information regarding list items that satisfied either of these search criterions namely list elements designated as being Top Issues OR list elements designated as corresponding to Project Y. Notably some of the list items may be included under the groupings for both nodes e.g. items and . While the content of these selected sets may be displayed in display panel in any desired manner in this illustrated example the displayed list elements are identified in separate and distinct sub panels as generally described above for example in . Also if desired display panel could be designed to additionally show the results from a logical AND operation to cover the possibility that this AND result was desired by the user. Also as noted above if desired the user may be given the ability to override the automatic OR operation selection.

The above described OR AND logical operation selection determination algorithms and rules also may be applied in situations in which a user selects more than two hierarchical elements e.g. three or more folders list elements properties etc. . In general in such situations a logical OR operation i.e. the union is performed with respect to any selections made under the same hierarchical parent element set and a logical AND operation i.e. the intersection is performed with respect to selections made across different hierarchical parent element sets. Optionally operations within a given hierarchical parent element set i.e. the OR operations if any may be performed first. illustrates an example of this type of operation.

Specifically as shown in the display screen of a user has selected three elements from the hierarchical navigation panel namely a Dates 2004 property a Keyword Cars Import property and a Keyword Cars American property. In response systems and methods according to at least some examples of this invention will first perform an OR operation with respect to the selected Keyword properties to locate all saved files including stored keyword properties meeting either of these criterion. Then from those identified files meeting either of the Keyword criterion a determination is made as to which files also satisfy the date criterion by applying a logical AND operation . The displayed results in display panel then will show the imported car pictures and the American Car pictures from . While the content of these selected sets may be displayed in display panel in any desired manner in this illustrated example the displayed information regarding the files is provided in separate and distinct sub panels directed to the different OR selections as generally described above for example in .

The above noted rules and application of these rules in determining whether to conduct a logical OR operation or a logical AND operation to multiple user selections are advantageous because they produce predictable and logical results when users use the hierarchical properties folders lists or other structures for storing searching and retrieving information from a computer system or network. Of course if desired and as noted above users may be provided an interface to allow them to override these automatic retrieval rules at any time e.g. if the rules produce the undesired results in any individual instances. As new information is introduced into the computer system or network the above rules can continue to be applied including to the newly added information regardless of whether the new information may be incorporated into the existing hierarchy or requires new additional hierarchy. Once placed in the hierarchical structure in some manner the above OR AND logical operation selection procedures can be carried out by determining whether the various selections are located within a given property or other hierarchy element level and or whether they span across different top level parent property or other hierarchy element levels.

Additional aspects of the present invention also relate to computer readable media including computer executable instructions stored thereon for performing the various multiple property or other value selection methods and or for use in various systems that include multiple property or other value selection methods including the systems and methods described above. The computer readable media may constitute computer executable instructions stored on the various specific examples of computer readable media described above.

Today in Windows based computer operating systems e.g. available from Microsoft Corporation of Redmond Wash. it is possible to organize sets of files e.g. from a search query or a list files command into groups. For example grouping by file type may be used to place all PowerPoint presentations presentation software available from Microsoft Corporation within the search domain into one grouping and or all digital pictures into another grouping. It can be difficult however for users to efficiently and effectively deal with large sets of items because they still have to locate the correct grouping to ultimately locate the file that they wish to further consider. For example if a user has a folder with 100 000 files contained in it grouping those files may help sort through things somewhat but it still may be difficult for users to locate the specific file desired e.g. particularly if keyword searches or other search techniques are not effective to narrow down the grouped files .

In application programs and or operating systems in accordance with at least some examples of this invention users may take advantage of the ability to stack as a new additional way for visually organizing files into sets. For example if systems and methods were to stack by file type users would be able to see all of their files stacked into individual sets e.g. a set for PowerPoint presentation files a set for spreadsheets a set for digital pictures etc. Each of these sets may be represented e.g. in a computer generated display by a stack icon that conceptually acts as a virtual container for that set of items. Stacking is a very useful way to help users narrow down on a set of items they care about because stacking clearly enumerates and identifies to the user the various available stack options.

Applied to a more concrete real world example stacking can be conceptually thought of as going to a car rental location and asking them to tell you what color cars are on the lot. They may advise you that they have blue and red cars available today. Conceptually this is what happens when users stack their files by a property i.e. they may obtain stacks for each unique value of that property.

This stacking feature as well as other display features may be applied for example to user interfaces like those described above in conjunction with FIGS. and . In such user interfaces systems and methods in accordance with at least some examples of this invention may show information including things such as Lists Auto Lists Folders and properties including for example user defined properties. Each Auto List may be designed to provide a way for users to view information identifying their files in various ways for example by a certain property. As a more specific example a music Auto List may be stacked for example by the performing artist and searching by this performing artist property will allow the user to see stacks identified with all the artists included in the music collection e.g. Bjork Madonna etc. One issue however with simply showing a shortcut to this Auto List is that if the computer system has music from many different artists stored on it and available in the view it still may be difficult for the user to locate the desired individual artist and or the desired individual album CD or song s .

One aspect of systems and methods in accordance with examples of this invention relates to exposing the stacking structure of the available Auto Lists as sub nodes in the navigation panel and or the display panel associated with it. As one more specific example for the Artists Auto List situation described above systems and methods in accordance with at least some examples of this invention may enable users to expand the Artists or other nodes in the navigation panel and or the display panel to thereby enable them to control and or see all the unique Artists or other nodes saved on the computer network or system.

Other aspects of this invention relate to the manner in which information relating to groups and stacks of information is processed and or manipulated e.g. in a navigation panel and or a display portion of a user interface presenting such information. More specifically aspects of the present invention will treat grouped and stacked information in the same way and allow Auto Lists that are grouped to represent hierarchy in the navigation panel. In other words if a user has a view of music files grouped by Artist in the display panel systems and methods in accordance with examples of this invention may be used to generate sub nodes for the various artists in the navigation panel. In at least some instances the sub nodes may in fact constitute another stack and therefore when users click on one of these sub nodes the set of items in the view would filter down to only those results. This gives users a quick index of the items present in the view and allows them to actually narrow down to a set of files instead of just visually or mentally organizing them.

Still another example aspect in accordance with this invention relates to the ability of users of systems and methods according to at least some examples of this invention to stack in a parent folder and flatten its folder hierarchy. For example when a user stacks by file type in a hard drive directory or other collection of data e.g. a D Data grouping systems and methods in accordance with at least some examples of this invention will search through all sub folders and take those items and place them into stacks. This gives users the ability to navigate to any folder and view its contents organized by a desired property value instead of by its folder hierarchy.

In general aspects of this invention are useful because in systems and methods according to at least some examples of this invention grouping and stacking can be used to create a dynamic organizational structure in the navigation panel and it provides the ability to select a group in the navigation panel or the display panel and narrow down the items in the view to display only that set. Still additional general aspects of the invention relate to treating grouping and stacking as sub nodes to an Auto List and the ability to select a group in the navigation panel and or the display panel and through this selection thereby further narrowing down the displayed view. More specific examples of these aspects of the invention will be described below.

As noted above grouping and stacking are two different ways to visualize a set of items. illustrates a display screen that includes a navigation panel and a display panel which illustrates information relating to various stored files or items based on input received in the navigation panel . Notably in the navigation panel indicates that the property or keyword Carnivora has been selected and the corresponding display panel shows stacks for the individual child nodes in the hierarchy at the level immediately under the Carnivora parent node. More specifically as shown in the example of the display panel includes a stack of pictures for dogs Candiae and a stack of pictures for cats Felidae . Notably in the navigation panel the child nodes under the Candiae and Felidae nodes are fully displayed down to their lowest level despite the fact that these sets are shown as stacked in the display panel .

In at least some instances stacks may not constitute the most preferable way of displaying information in the display panel . For example as shown in stacking may be undesirable at least in some instances because the user is not able to easily see any information regarding the content within the stack e.g. the user cannot see thumbnail icons or much other displayed information regarding the content of the stack as shown in . Without displaying information in the display panel in an unstacked manner users may have to drill down to the deepest levels of the hierarchy at least in some instances to finally see the pictures or other more specific information relating to specific files . This requirement can be inconvenient particularly if the hierarchy has many levels if many files are included in the hierarchy and or if the user is not certain where the desired files are located within the hierarchy.

Notably in the example shown in information relating to all of the items contained under the specific node e.g. the Candiae node is provided in the respective sub panel e.g. in sub panel irrespective of the level in the hierarchy at which that information is located e.g. irrespective of whether the specific picture is stored with the Candiae property the property the property or the property associated with it . This feature allows quicker and easier user access to and recognition of the desired information. Notably this same display panel may appear as a result of other search or list files commands e.g. if the user highlighted both the Candiae and Felidae nodes in the navigation panel .

Users also can quickly navigate in the hierarchical structure of the navigation panel to see different groupings of information. An example of potential changes may be seen by a comparison of with . Notably in as described above the Carnivora property was selected by the user in the navigation panel which provided a display of information stored with that property grouped based on the child nodes of the selected property i.e. grouped based on the Candiae and Felidae child nodes in this example . In the display screen of the user has changed the highlighted selection in the navigation panel to the more specific Panthera property a grandchild node under the Carnivora property . As shown in this change causes the display panel to provide groupings for the children under the Panthera property node namely groups of pictures labeled with the Leo and Tigris properties see sub panels and respectively . As evident from the navigation panels and and the display panels and along with the hierarchical properties used in conjunction with these panels allow users to store search and navigate their stored data in a meaningful way and get useful thumbnail or other preview information of the available data throughout the hierarchy. Notably the content and user input in the navigation panels drive the content provided in the display panels although user input also may be allowed through the display panels if desired.

A comparison of the display screens and of respectively illustrate additional features that may be present in accordance with at least some examples of this invention. When changing between various different auto lists in the navigation panel e.g. from Keyword Mammalia Carnivora Felidae Panthera in to Date Taken in the hierarchical structure in the navigation panel does not collapse but rather it remains as the user left it e.g. in the illustrated example the full hierarchy for the Mammalia property and its children remains exposed . In general in accordance with at least some examples of the invention the navigation panel does not reflect or change to reflect what is shown in the display panel e.g. in sub panels and but rather the navigation panel drives what is being presented in the display panel .

This non collapsing feature of the navigation panel may be useful for various reasons. For example in general users expect this hierarchy to remain exposed in this manner e.g. from their interactions with conventional electronic file and or folder systems. As another example keeping the hierarchy open expanded and available in this manner e.g. until closed by the user can be more convenient e.g. if the user decides to return to the hierarchy for example for additional searching navigation or previewing purposes for property assignment to file purposes and the like. Moreover by leaving the navigation panel in an unchanged state as the user navigates and potentially manually changes it the past locations visited by the user will remain readily available so that they can quickly return to where they have been if desired.

If desired in accordance with at least some examples of this invention combinations of grouping and stacking may be used in the display panel. An example of this combined use of grouping and stacking may be seen for example in the display panel of the user interface display screen shown in . More specifically illustrates a display screen having a navigation panel including information relating to a collection of stored digital music wherein at least some of the information relating to the stored music includes hierarchical properties. In this example display the user has highlighted an auto list entitled SuperMusicView in which the contained music data has been stored with properties including various different genre of music e.g. one child node for Classical music one for Jazz one for Pop one for Rap etc. . Of course any number of genres may be included in the hierarchical structure without departing from the invention.

By selecting the parent SuperMusicView node the systems and methods in accordance with this example of the invention display information in the display panel relating to stored music on the system grouped by the various genres e.g. sub panels and for the genres Classical Jazz and Pop respectively . Within each individual genre grouping in this example the information is stacked e.g. by the decades in which the albums or musical selections were released. If desired a user can further drill down into the hierarchical structure e.g. in the display panel or the navigation panel to see more detailed information relating to the information stored within the stacks e.g. individual CD or album titles in this illustrated example information stacked by performing groups or artists with the stack including individual albums etc. . Further drilling into the individual CD or album titles may be used if desired in at least some examples of systems and methods of the invention to display information regarding the titles of the individual songs or tracks included on the album or CD. Of course any number of stacks groupings and or any desired types of information may be included in the hierarchical property structures without departing from this invention.

Notably in the example navigation panel and display panel shown in at least some portion of the hierarchy of the Auto List is shown in the navigation panel regardless of whether grouping or stacking appears in the display panel . In fact in this example structure the display panel includes both grouped information and stacked information. In general grouped information is present as a transparent container meaning that the content in the grouping is readily available and visible to the user in the view. Information contained in stacks on the other hand may be considered as being in an opaque container meaning that at least some of the individual content may be hidden from the user due to the stacking display but the hidden content may be displayed or made available if desired by further highlighting or drilling down into the individual stacks via the navigation panel and or the display panel .

As with any of the windows display panels sub panels and the like contained in systems and methods in accordance with examples of this invention when the available information more than fills the available display area user access to undisplayed information may be gained in any desired manner for example through the use of scroll bars as shown in display panel through next page previous page buttons or icons and or in any other desired manner.

The hierarchical properties and other elements navigation panels and displays of groups and or stacks of information in accordance with examples of this invention may be used in combination with conventional folder structures without departing from this invention. In general stacking folders e.g. in a display panel is not useful to users because individual folders within a hierarchical structure may have vastly different and independent subjects and because users that organize information in folders often do not store many files on any given level of their folder hierarchy. Therefore in accordance with at least some examples of this invention stacking in a folder will flatten the folder hierarchy and re organize the items contained within the folder into sets based on that property. illustrates a display screen that includes a navigation panel with a folder hierarchical structure contained therein. When the Vacation folder is selected by the user in the navigation panel the display panel displays the underlying folder structure i.e. the Lunar Eclipse and Aurora folders under the Vacation folder in this example as well as the individual files contained within those folders thereby flattening out the folder structure to make the underlying information readily visible and available to users . This may be accomplished for example by creating an Auto List element or node scoped to look at the selected folder and all of its sub folders.

Of course other ways of presenting information from the folders in the display panel are possible without departing from this invention. For example if desired rather than flattening the hierarchical structure shown in the folder structure may be maintained in the display panel particularly in the situation where the highlighted folder itself includes several levels of hierarchy. For example if desired when a folder is selected in the navigation panel the information may be displayed in the display panel by removing the individual items from the sub folders and showing these items in stacks named after the sub folders. Of course other display techniques are possible without departing from this invention.

Various manipulations also may occur to data once highlighted or selected in a navigation panel and or information relating thereto is displayed in a display panel. illustrates an example display screen that may be used and or appear in accordance with at least some examples of this invention. In this example the user interface display screen includes a navigation panel in which a hierarchical folder structure appears and a display panel . Because of a deeper hierarchy in the folder structure in this example when a folder is highlighted e.g. the Vacations folder in this example in the navigation panel the information in the display panel is removed from the underlying sub folder structure i.e. the folders under the Vacations folder and placed in individual stacks. If the user then were to re organize the information e.g. by clicking on the Location icon or other property icon in the navigation panel selecting a property from a right click or drop down menu etc. the data could reorganize and stack by locations as shown in . Because this revised stacking of the data in stacked by Vacations and Location does not correspond to the contents of the Vacations folder in the manner provided in that folder no highlighting is shown in the navigation panel in . In effect this action is akin to a flattening out of all information contained in the selected folder i.e. the Vacations folder in this example and then a reorganization of this information into stacks based on the children properties contained under a selected property.

Of course many options for grouping and or stacking in response to user commands e.g. in a navigation panel of the type described above and other system actions in response to user commands may be provided in systems and methods without departing from this invention. The following includes at least some additional examples of options that may be included in at least some examples of this invention.

As one example when grouping or stacking by a property that is multi valued systems and methods in accordance with at least some examples of this invention may provide one group or stack for each top level value under the property and further children property values may not be exposed in the display panel although if desired the underlying information in those lower children property values may be displayed and or made available for display . In such systems if desired the user can expose the children property values by navigating into the various hierarchical level groups e.g. using the hierarchical navigation panel drilling down into stacks provided in the display panel etc.

If desired in accordance with at least some examples of this invention no way need be provided to view all keywords grouped or stacked as a flat list and the information highlighted in the navigation panel will control what is displayed in the display panel. If desired systems and methods according to at least some examples of this invention may allow users to unstack at any level e.g. by providing a menu item e.g. a button a right click menu a tool bar menu etc. that allows the user to expand all stacks expand this stack and or the like.

Other actions also may occur while information is grouped and or stacked e.g. operations relating to the hierarchical properties contained in the groups and or stacks. One example relates to dragging and or dropping operations. In at least some examples of this invention when dragging an item from one group to another group the item may be changed to have the property value s of the newly applied group and or stack applied to it i.e. changed to also include the property value s of the destination groups and or stacks from the drag and or drop operation and optionally at least to remove the property value s of the original source groups and or stacks if necessary and desired . Another example operation relates to paste operations. When an item is placed in a new group and or stack by a paste operation the destination property and its parent property value s may be applied to the newly placed item.

Also many different types of displays or display contents may be provided in response to navigating into a group and or a stack. As described above however in accordance with at least some examples of this invention all items with the group title property value may be shown in an initial display as well as all items tagged with children property values of this group parent property value if any . If desired an indicator of some type may be provided in the navigation panel and or the display panel to indicate that the item in the hierarchy can be further expanded to display children property values e.g. a sign is used with the icons or widgets in several of the illustrated examples shown in the figures of this specification . This same convention may be used in filtering menus without departing from this invention. illustrates an example display screen in which an example menu has been pulled up e.g. via a right click action or in any other appropriate manner that will allow further user filtering of information contained in the display panel of the display screen . More specifically in this example by clicking on the desired menu items to be used for the filtering changes in the information present on the display panel may be made. In this example a caret structure at the far right side of each menu item is used to indicate that further lower hierarchical levels are available for filtering if desired.

Additional aspects of the present invention also relate to computer readable media including computer executable instructions stored thereon for performing the various grouping and or stacking methods and or for use in various systems that display information such as properties folders lists and the like in grouped and or stacked manners including the systems and methods described above. The computer readable media may constitute computer executable instructions stored on the various specific examples of computer readable media described above.

While the invention has been described above in terms of specific examples e.g. with many examples relating to navigation storage and retrieval of information relating to pictures music electronic documents and the like those skilled in the art will recognize of course that aspects of this invention may be used in conjunction with any types of data without limitation. Additionally while various examples of the present invention have been described in detail above and it will be understood by those of ordinary skill that the present invention includes within its scope all combinations and subcombinations of these examples. Those skilled in the art also will recognize that the above examples simply exemplify various aspects of the invention. Various changes and modifications may be made without departing from the spirit and scope of the invention as defined in the appended claims.

